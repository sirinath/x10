/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
import harness.x10Test;;

/**
 * Purpose: Nullable constraint must be taken into account while performing casting.
 * @author vcave
 **/
public class CastConstrainedNullableToConstrainedNonNullable extends x10Test {

	public def run(): boolean = {
		var nullObject1: nullable<X10DepTypeClassTwo{p==0&&q==1})> = (X10DepTypeClassTwo{p==0&&q==1})) new X10DepTypeClassTwo(0,1);
			
		// from non-null nullable to non-nullable (inlined)
		var nonNull1: X10DepTypeClassTwo{p==0&&q==1} = (X10DepTypeClassTwo{p==0&&q==1})) nullObject1;
		
		// from non-null nullable to non-nullable
		var nonNull2: X10DepTypeClassTwo{p==0&&q==1} = (X10DepTypeClassTwo{p==0&&q==1})) this.getNullable();

		return true;
	}
	
	private def getNullable(): nullable<X10DepTypeClassTwo{p==0&&q==1})> = {
		return (X10DepTypeClassTwo{p==0&&q==1})) new X10DepTypeClassTwo(0,1);
	}

	public static def main(var args: Array[String](1)): void = {
		new CastConstrainedNullableToConstrainedNonNullable().execute();
	}

}
