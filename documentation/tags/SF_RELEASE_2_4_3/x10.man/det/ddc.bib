@STRING{ecoop =  {Proceedings of the European Conference on Object-Oriented
		 Programming (ECOOP)}},
@STRING{lfp =    {Proceedings of the ACM Symposium on LISP and Functional
		 Programming (LFP)}},
@STRING{ipl =    {Information Processing Letters}}
@STRING{isc =    {Proceedings of the Information Security Conference (ISC)}},
@STRING{isss =   {Proceedings of the International Symposium on System
		 Synthesis (ISSS)}},
@STRING{fpt = {Proceedings of the International Conference on
                  Field-Programmable Technology (FPT)}},
@STRING{ancs = {Proceedings of the Symposium on Architecture for
                  Networking and Communication Systems (ANCS)}},
@STRING{sigcomm = {Proceedings of the Conference on Applications,
		 technologies, architectures, and protocols for computer
		 communication (SIGCOMM)}},
@STRING{infocom = {Proceedings of the International Conference on
                  Computer Communications (INFOCOM)}}
@STRING{charme =  {Proceedings of Correct Hardware Design and Verification
 		   Methods (CHARME)}}
@STRING{jfp  =    {Journal of Functional Programming}}
@STRING{icfp =    {Proceedings of the International Conference on
                  Functional Programming (ICFP)}},
@STRING{pact =    {Proceedings of the International Conference on
                  Parallel Architectures and Compilation Techniques (PACT)}},
@STRING{tvt =     {IEEE Transactions on Vehicular Technology}},
@STRING{trr =     {Transportation Research Record: Journal of the
                  Transportation Research Board}}
@STRING{acm =	  {Association for Computing Machinery} }
@STRING{acsd =	  {Proceedings of the International Conference on Application
		  of Concurrency to System Design (ACSD)} }
@STRING{ap =	  {Academic Press} }
@STRING{asp-dac = {Proceedings of the Asia South Pacific Design Automation
		  Conference (ASP-DAC)} }
@STRING{asplos =  {Proceedings of the International Conference on
		  Architectural Support for Programming Languages and
		  Operating Systems (ASPLOS)} }
@STRING{async =	  {Proceedings of the International Symposium on Advanced
		  Research in Asynchronous Circuits and Systems (ASYNC)} }
@STRING{aw =	  {Addison-Wesley} }
@STRING{aw_a =	  {Reading, Massachusetts} }
@STRING{bc =	  {Benjamin/Cummings} }
@STRING{bc_a =	  {Redwood City, California} }
@STRING{cacm =	  {Communications of the ACM} }
@STRING{cases =	  {Proceedings of the International Conference on Compilers,
		  Architecture, and Synthesis for Embedded Systems (CASES)} }
@STRING{cases2000a={San Jose, California} }
@STRING{cases2001a={Atlanta, Georgia} }
@STRING{cav =	  {Proceedings of the International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1990 = {Proceedings of the 2nd International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1990_a ={New Brunswick, New Jersey} }
@STRING{cav1993 = {Proceedings of the 5th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1993_a ={Elounda, Greece} }
@STRING{cav1995 = {Proceedings of the 7th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1995_a ={Li\`ege, Belgium} }
@STRING{cav1996 = {Proceedings of the 8th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1996_a ={New Brunswick, New Jersey} }
@STRING{cav1997 = {Proceedings of the 9th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1997_a ={Haifa, Isreal} }
@STRING{cav1999 = {Proceedings of the 11th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav1999_a ={Trento, Italy} }
@STRING{cav2000 = {Proceedings of the 12th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav2000_a ={Chicago, Illinois} }
@STRING{cav2001 = {Proceedings of the 13th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav2001_a ={Paris, France} }
@STRING{cav2003 = {Proceedings of the 15th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav2003_a ={Boulder, Colorado} }
@STRING{cav2005 = {Proceedings of the 17th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav2005_a ={Edinburgh, Scotland} }
@STRING{cav2008 = {Proceedings of the 20th International Conference on
		  Computer-Aided Verification (CAV)} }
@STRING{cav2008_a ={Princeton, New Jersey} }
@STRING{cc =	  {Proceedings of Compiler Construction (CC)} }
@STRING{cmp =	  {CMP Books} }
@STRING{cmp_a =	  {Lawrence, Kansas} }
@STRING{cmu =	  {Carnegie Mellon University} }
@STRING{codesisss ={Proceedings of the International Conference on
		  Hardware/Software Codesign and System Synthesis
		  (CODES+ISSS)} }
@STRING{computer ={IEEE Computer} }
@STRING{cucs =	  {Columbia University, Department of Computer Science} }
@STRING{cup =	  {Cambridge University Press} }
@STRING{dac =	  {Proceedings of the Design Automation Conference} }
@STRING{dac00 =	  {Proceedings of the 37th Design Automation Conference} }
@STRING{dac00a =  {Los Angeles, California} }
@STRING{dac01 =	  {Proceedings of the 38th Design Automation Conference} }
@STRING{dac01a =  {Las Vegas, Nevada} }
@STRING{dac02 =	  {Proceedings of the 39th Design Automation Conference} }
@STRING{dac02a =  {New Orleans, Louisiana} }
@STRING{dac03 =	  {Proceedings of the 40th Design Automation Conference} }
@STRING{dac03a =  {Anaheim, California} }
@STRING{dac04 =	  {Proceedings of the 41th Design Automation Conference} }
@STRING{dac04a =  {San Diego, California} }
@STRING{dac05 =	  {Proceedings of the 42nd Design Automation Conference} }
@STRING{dac05a =  {Anaheim, California} }
@STRING{dac06 =	  {Proceedings of the 43rd Design Automation Conference} }
@STRING{dac06a =  {San Francisco, California} }
@STRING{dac07 =	  {Proceedings of the 44th Design Automation Conference} }
@STRING{dac07a =  {San Diego, California} }
@STRING{dac64 =	  {Proceedings of the 1st Design Automation Conference} }
@STRING{dac65 =	  {Proceedings of the 2nd Design Automation Conference} }
@STRING{dac66 =	  {Proceedings of the 3rd Design Automation Conference} }
@STRING{dac67 =	  {Proceedings of the 4th Design Automation Conference} }
@STRING{dac68 =	  {Proceedings of the 5th Design Automation Conference} }
@STRING{dac69 =	  {Proceedings of the 6th Design Automation Conference} }
@STRING{dac70 =	  {Proceedings of the 7th Design Automation Conference} }
@STRING{dac71 =	  {Proceedings of the 8th Design Automation Conference} }
@STRING{dac71a =  {Atlantic City, New Jersey} }
@STRING{dac72 =	  {Proceedings of the 9th Design Automation Conference} }
@STRING{dac73 =	  {Proceedings of the 10th Design Automation Conference} }
@STRING{dac74 =	  {Proceedings of the 11th Design Automation Conference} }
@STRING{dac75 =	  {Proceedings of the 12th Design Automation Conference} }
@STRING{dac76 =	  {Proceedings of the 13th Design Automation Conference} }
@STRING{dac77 =	  {Proceedings of the 14th Design Automation Conference} }
@STRING{dac78 =	  {Proceedings of the 15th Design Automation Conference} }
@STRING{dac79 =	  {Proceedings of the 16th Design Automation Conference} }
@STRING{dac79a =  {San Diego, California} }
@STRING{dac80 =	  {Proceedings of the 17th Design Automation Conference} }
@STRING{dac81 =	  {Proceedings of the 18th Design Automation Conference} }
@STRING{dac82 =	  {Proceedings of the 19th Design Automation Conference} }
@STRING{dac83 =	  {Proceedings of the 20th Design Automation Conference} }
@STRING{dac83a =  {Miami Beach, Florida} }
@STRING{dac84 =	  {Proceedings of the 21st Design Automation Conference} }
@STRING{dac85 =	  {Proceedings of the 22nd Design Automation Conference} }
@STRING{dac86 =	  {Proceedings of the 23rd Design Automation Conference} }
@STRING{dac86a =  {Las Vegas, Nevada} }
@STRING{dac87 =	  {Proceedings of the 24th Design Automation Conference} }
@STRING{dac87a =  {} }
@STRING{dac88 =	  {Proceedings of the 25th Design Automation Conference} }
@STRING{dac88a =  {Anaheim, California} }
@STRING{dac89 =	  {Proceedings of the 26th Design Automation Conference} }
@STRING{dac89a =  {Las Vegas, Nevada} }
@STRING{dac90 =	  {Proceedings of the 27th Design Automation Conference} }
@STRING{dac90a =  {Orlando, Florida} }
@STRING{dac91 =	  {Proceedings of the 28th Design Automation Conference} }
@STRING{dac91a =  {San Francisco, California} }
@STRING{dac92 =	  {Proceedings of the 29th Design Automation Conference} }
@STRING{dac92a =  {Anaheim, California} }
@STRING{dac93 =	  {Proceedings of the 30th Design Automation Conference} }
@STRING{dac93a =  {Dallas, Texas} }
@STRING{dac94 =	  {Proceedings of the 31st Design Automation Conference} }
@STRING{dac94a =  {San Diego, California} }
@STRING{dac95 =	  {Proceedings of the 32nd Design Automation Conference} }
@STRING{dac95a =  {San Francisco, California} }
@STRING{dac96 =	  {Proceedings of the 33rd Design Automation Conference} }
@STRING{dac96a =  {Las Vegas, Nevada} }
@STRING{dac97 =	  {Proceedings of the 34th Design Automation Conference} }
@STRING{dac97a =  {Anaheim, California} }
@STRING{dac98 =	  {Proceedings of the 35th Design Automation Conference} }
@STRING{dac98a =  {San Francisco, California} }
@STRING{dac99 =	  {Proceedings of the 36th Design Automation Conference} }
@STRING{dac99a =  {New Orleans, Louisiana} }
@STRING{daes =	  {Design Automation for Embedded Systems} }
@STRING{date =	  {Proceedings of Design, Automation, and Test in Europe
		  (DATE)} }
@STRING{dm =	  {Discrete Mathematics} }
@STRING{els =	  {Elsevier Science} }
@STRING{emsoft =  {Proceedings of the International Conference on Embedded
		  Software (Emsoft)} }
@STRING{entcs =	  {Electronic Notes in Theoretical Computer Science} }
@STRING{esop =	  {Proceedings of the European Symposium on Programming
		  (ESOP)} }
@STRING{euromicro-dsd={Proceedings of the Euromicro Conference on Digital
		  System Design (DSD)} }
@STRING{fccm =	  {Proceedings of the Symposium on FPGAs for Custom Computing
		  Machines (FCCM)} }
@STRING{fmcad =	  {Formal Methods in Computer-Aided Design (FMCAD)} }
@STRING{fpga =	  {Proceedings of the International Symposium on
		  Field-Programmable Gate Arrays (FPGA)} }
@STRING{fpl =	  {Proceedings of the Conference on Field-Programmable Logic
		  and Applications (FPL)} }
@STRING{fse =	  {Proceedings of Foundations of Software Engineering (FSE)} }
@STRING{hpca =	  {Proceedings of the Symposium on High Performance Computer
		  Architecture} }
@STRING{hpcn =	  {International Journal of High Performance Computing and
		  Networking} }
@STRING{icassp =  {Proceedings of the IEEE International Conference on
		  Acoustics, Speech, \& Signal Processing (ICASSP)} }
@STRING{iccad =	  {Proceedings of the IEEE/ACM International Conference on
		  Computer Aided Design (ICCAD)} }
@STRING{iccad_a = {San Jose, California} }
@STRING{iccd =	  {Proceedings of the IEEE International Conference on
		  Computer Design (ICCD)} }
@STRING{icse =	  {Proceedings of the International Conference on Software
		  Engineering (ICSE)} }
@STRING{iedm =	  {IEEE International Electron Devices Meeting} }
@STRING{ieee =	  {The Institute of Electrical and Electronics Engineers
		  (IEEE)} }
@STRING{ieee_a =  {345 East 47th Street, New York, New York} }
@STRING{ieeecs =  {IEEE Computer Society Press} }
@STRING{ieeecs_a ={New York, New York} }
@STRING{ieeecsm = {IEEE Circuits and Systems Magazine} }
@STRING{ieeedtc = {IEEE Design \& Test of Computers} }
@STRING{ieeemicro ={IEEE Micro} }
@STRING{ipdps =	  {Proceedings of the International Parallel and Distributed
		  Processing Symposium (IPDPS)} }
@STRING{isca =	  {Proceedings of the International Symposium on Computer
		  Architecture} }
@STRING{iscas =	  {Proceedings of the International Symposium on Circuits and
		  Systems} }
@STRING{islped =  {Proc. of the Intl. Symposium on Low Power Electronics and
		  Design} }
@STRING{ispd =	  {Proc. of the Intl. Symposium on Physical Design} }
@STRING{isscc =	  {Proceedings of the International Solid-State Circuits
		  Conference (ISSCC)} }
@STRING{iwls =	  {Proceedings of the International Workshop on Logic
		  Synthesis (IWLS)} }
@STRING{iwls_a =  {Tahoe City, California} }
@STRING{jacm =	  {Journal of the Association for Computing Machinery} }
@STRING{jaes =	  {Journal of the Audio Engineering Society} }
@STRING{jfmsd =	  {Journal of Formal Methods in System Design} }
@STRING{joop =	  {Journal of Object-Oriented Programming} }
@STRING{jsa =	  {Journal of Systems Architecture} }
@STRING{jssc =	  {IEEE Journal of Solid-State Circuits} }
@STRING{jw =	  {John Wiley \& Sons} }
@STRING{jw_a =	  {New York} }
@STRING{kl =	  {Kluwer} }
@STRING{kl_a =	  {Boston, Massachusetts} }
@STRING{lctes =	  {Proceedings of Languages, Compilers, and Tools for
		  Embedded Systems (LCTES)} }
@STRING{lncs =	  {Lecture Notes in Computer Science} }
@STRING{memocode ={Proceedings of the International Conference on Formal
		  Methods and Models for Codesign (MEMOCODE)} }
@STRING{mgh =	  {McGraw-Hill} }
@STRING{mgh_a =	  {New York} }
@STRING{micro =	  {Proceedings of the Annual International Symposium on
		  Microarchitecture (MICRO)} }
@STRING{mit =	  {MIT Press} }
@STRING{mit_a =	  {Cambridge, Massachusetts} }
@STRING{mk =	  {Morgan Kaufmann} }
@STRING{mk_a =	  {San Francisco, California} }
@STRING{nh =	  {North-Holland} }
@STRING{nyny =	  {New York, New York, USA} }
@STRING{oopsla =  {Proceedings of the Conference on Object-Oriented
		  Programming, Systems, Languages, and Applications
		  (OOPSLA)} }
@STRING{ora =	  {O'Reilly \& Associates, Inc.} }
@STRING{ora_a =	  {Sebastopol, California} }
@STRING{osdi =	  {Proceedings of Operating System Design and Implemetation
		  (OSDI)} }
@STRING{pepm =	  {Proceedings of the Workshop on Partial Evaluation and
		  Program Manipulation (PEPM)} }
@STRING{ph =	  {Prentice Hall} }
@STRING{ph_a =	  {Upper Saddle River, New Jersey} }
@STRING{pldi =	  {Proceedings of Program Language Design and Implementation
		  (PLDI)} }
@STRING{popl =	  {Proceedings of Principles of Programming Languages
		  (POPL)} }
@STRING{ppopp =	  {Proceedings of Principles and Practice of Parallel
		  Programming (PPoPP)} }
@STRING{procieee ={Proceedings of the IEEE} }
@STRING{rtss =	  {Proceedings of the IEEE Real-Time Systems Symposium
		  (RTSS)} }
@STRING{sac =	  {Proceedings of the Symposium on Applied Computing (SAC)} }
@STRING{sas =	  {Proceedings of the Static Analysis Symposium (SAS)} }
@STRING{scicompprog={Science of Computer Programming} }
@STRING{slap =	  {Proceedings of Synchronous Languages, Applications, and
		  Programming (SLAP)} }
@STRING{software ={IEEE Software} }
@STRING{sosp =	  {Symposium on Operating Systems Principles (SOSP)} }
@STRING{sp =	  {Springer} }
@STRING{spe =	  {Software: Practice and Experience} }
@STRING{surveys = {ACM Computing Surveys} }
@STRING{sv =	  {Springer} }
@STRING{sv_a =	  {Heidelberg, Germany} }
@STRING{tacas =	  {Proceedings of Tools and Algorithms for the Construction
		  and Analysis of Systems (TACAS)} }
@STRING{tau =	  {ACM Intl. Workshop on Timing Issues in the Specification
		  and Synthesis of Digital Systems} }
@STRING{tcs =	  {Theoretical Computer Science} }
@STRING{tecs =	  {ACM Transactions on Embedded Computing Systems} }
@STRING{todaes =  {ACM Transactions on Design Automation of Electronic
		  Systems} }
@STRING{toplas =  {ACM Transactions on Programming Languages and Systems} }
@STRING{tosem =	  {ACM Transactions on Software Engineering and Methodology} }
@STRING{transassp ={IEEE Transactions on Acoustics, Speech, and Signal
		  Processing} }
@STRING{transcad ={IEEE Transactions on Computer-Aided Design of Integrated
		  Circuits and Systems} }
@STRING{transcomp ={IEEE Transactions on Computers} }
@STRING{transedu ={IEEE Transactions on Education} }
@STRING{transnet ={IEEE/ACM Transactions on Networking} }
@STRING{transpds ={IEEE Transactions on Parallel and Distributed Systems} }
@STRING{transse = {IEEE Transactions on Software Engineering} }
@STRING{transvlsi ={IEEE Transactions on Very Large Scale Integration (VLSI)
		  Systems} }
@STRING{ucb =	  {University of California, Berkeley} }
@STRING{usenix =  {Proceedings of the USENIX Annual Technical Conference} }
@STRING{vlsicircuits={Symposium on VLSI Circuits} }
@STRING{vmcai =	  {Proceedings of Verification, Model Checking and Abstract
		  Interpretation (VMCAI)} }
@STRING{vnr =	  {Van Nostrand Reinhold} }
@STRING{vnr_a =	  {New York, New York} }

@InProceedings{abadi1999core,
  author =	 {Mart\'in Abadi and Anindya Banerjee and Nevin Heintze and
		 Jon G. Riecke},
  title =	 {A Core Calculus of Dependency},
  booktitle =	 popl,
  year =	 1999,
  pages =	 {147--160},
  address =	 {San Antonio, Texas},
  month =	 jan,
  annote =	 {Widely-cited.}
}

@Book{abbott1905telephony,
  author =	 {Arthur Vaughan Abbott},
  title =	 {Telephony: A Manual of the Design, Construction, and
		 Operation of Telephone Exchanges},
  publisher =	 mgh,
  year =	 {1903--1905},
  volume =	 {1--6},
  annote =	 {Found at random. Six-volume set. Columbia has it offsite.
		 Google books has a review of it in an old transactions. The
		 New York Times reviewed it on December 3, 1904.
		 
		 Part 1: The Location of Central Offices, 1903 Part 2:
		 Construction of Underground Conduits, 1903 Part 3: The
		 Construction of Cable Plant, 1903 Part 4: The Construction
		 of Aerial Lines, 1903 Part 5: The Substation, 1904 Part 6:
		 Switchboards and the Central Office, 1905
		 
		 Part 1 begins by saying the first public demonstration of
		 the telephone was the Philadelphia Centennial Exposition
		 (1876).
		 
		 To reduce the number of wires, they started using the Earth
		 as the return path, but this quickly became too noisy to
		 become practical because of electric railways and lights.
		 
		 Part 1 talks about manual switchboard operators, that they
		 use little incadescent lamps to indicate when a call is
		 being requested.
		 
		 A chapter talks about the "telephonic center," i.e., where
		 to put the central office to minimize the amount of wire in
		 a Manhattan geometry, then considers things like mountains
		 and diagonal streets. Finally talks about trunk lines
		 between offices.
		 
		 Part 2 is literally about how to dig holes in the ground and
		 bury cables, along with manholes, telephone wires, etc.
		 
		 Part 3 is about cabling, how to string telephone poles, how
		 to terminate cables, etc.
		 
		 Part 4 is about telephone poles. Even has a picture along
		 Amsterdam Avenue, just about outside my office.
		 
		 Part 5 is finally hardcore electronics about telephones.
		 Starts with materials science, discussing the permeability
		 of various kind of iron (for the magnets in the receiver).
		 Transmitters, battery construction, and ringers.
		 
		 Part 6 talks about the central office, mostly about
		 switchboard design. The fanciest "digital logic" with relays
		 appears to handle the "common battery" configuration where a
		 single battery (bank) is used to power all the on-hook
		 telephones, but disconnects when a call starts. No mention
		 of the Strowger switch or any sort of automatic switching
		 system, although they did have clever mechanisms for
		 indicating when calls started (and stopped?). }
}

@Article{abbott1993increasing,
  author =	 {Mark B. Abbott and Larry L. Peterson},
  title =	 {Increasing Network Throughput by Integrating Protocol
		 Layers},
  journal =	 transnet,
  year =	 1993,
  volume =	 1,
  number =	 5,
  pages =	 {600--610},
  month =	 oct,
  annote =	 {Cited by braun1995protocol.
		 
		 Implementing the Integrated Layer Processing of
		 clark1990architectural. Notes that it looks like the loop
		 fusion compiler optimization.
		 
		 Lists a number of challenges in implementing ILP: awkward
		 data manipulation, different views of data, ordering
		 constraints, and preserving modularity.
		 
		 Proposes a "word filter" implementation style.
		 
		 Implemented an integration tool using the m4 macro
		 preprocessor so that the system can be specified as
		 fragments of C code.
		 
		 Looks like a good first start. Nice experimental results.
		 This group would be a good one to mimic. }
}

@Article{abbott1993language-based,
  author =	 {Mark B. Abbott and Larry L. Peterson},
  title =	 {A Language-based Approach to Protocol Implementation},
  journal =	 transnet,
  year =	 1993,
  volume =	 1,
  number =	 1,
  pages =	 {4--19},
  month =	 feb,
  annote =	 {Cited by basu1998promela.
		 
		 Proposes the special-purpose programming language Morpheus
		 for implementing protocols. Looks a bit like a very
		 simplified C++: Imperative, with method definitions and
		 calls.
		 
		 Idea is like my own: propose a language that constrains the
		 user to simplify the task.
		 
		 Object-oriented approach: you inherit and refine objects
		 they supply. Inspired by noticing new protocols were usually
		 written by taking an existing implementation and changing it.
		 
		 They wanted to provide x-kernel-like facilities
		 (hutchinson1991x-kernel). Second author worked on the
		 x-kernel.
		 
		 Didn't build a compiler (in this paper). Propose a host of
		 optimizations, mostly at the machine-code level (e.g.,
		 knowing which registers to save and restore when calling
		 procedures). Cleaning up tail recursion. They did this for
		 the MIPS R3000.
		 
		 Unimplemented idea: Domain-specific language debugger.
		 
		 Peterson was at University of Arizona; moved to Princeton.
		 
		 Upper- and lower-layer-connections.
		 
		 Transparent byte-order fixing. Word alignment automatic.
		 
		 Three types of protocol pieces ("shapes"): Multiplexor,
		 Router, and Worker. Multiplexor perform
		 many-interface-to-one conversions. Router does one-to-many
		 conversions (less dynamic). Workers do error detection and
		 handling, buffering: any manipulation of message data.
		 
		 Flow-control issues (vertical flow-control: between adjacent
		 layers).
		 
		 Some good ideas, but rather weak overall. The language
		 design looks like a pared-down object-oriented language, and
		 the optimizations look like ad hoc assembly-level ones. No
		 compelling results.
		 
		 Peterson is really an OS guy. }
}

@Article{abbott1993model-based,
  author =	 {Ben Abbott and Ted Bapty and Csaba Biegl and Gabor Karsai
		 and Janos Sztipanovits},
  title =	 {Model-Based Software Synthesis},
  journal =	 software,
  year =	 1993,
  volume =	 10,
  number =	 3,
  pages =	 {42--52},
  month =	 may,
  annote =	 {Part of a special issue. They're from Vanderbilt.
		 
		 Did a big distributed signal-processing system. Very
		 domain-specific, and not surprising that it works.}
}

@TechReport{abdi2003system-on-chip,
  author =	 {Samar Abdi and Junyu Peng and Haobo Yu and Dongwan Shin and
		 Andreas Gerstlauer and Rainer Doemer and Daniel Gajski},
  title =	 {System-on-Chip Enviroment, SCE Version 2.2.0 Beta,
		 Tutorial},
  institution =	 {Center for Embedded Computer Systems, University of
		 California},
  year =	 2003,
  number =	 {CECS \#03-41},
  address =	 {Irvine, California},
  month =	 jul,
  annote =	 {Extensive description of a rather fancy (if
		 straightforward) GUI for system-level design exploration,
		 binding, etc.
		 
		 Hardware synthesis insists that the system be boiled down to
		 an FSMD model.}
}

@Book{abelson1985structure,
  author =	 {Harold Abelson and Gerald Jay Sussman and Julie Sussman},
  title =	 {Structure and Interpretation of Computer Programs},
  publisher =	 {MIT Press/McGraw-Hill},
  year =	 {1985}
}

@Manual{accel_dsp_manual,
  title =	 {Matlab for Synthesis -- Style Guide},
  organization = {Xilinx Inc.},
  address =	 {2100 Logic Drive, San Jose, CA 95124-3400, USA},
  month =	 {March},
  year =	 {2008},
  note =	 {Release 10.1},
  key =		 {AccelDSPManual}
}

@Manual{accelera2004systemverilog,
  title =	 {SystemVerilog 3.1a Language Reference Manual: Accellera's
		 Extensions to Verilog},
  organization = {Accelera},
  address =	 {1370 Trancas Street \#163, Napa, CA 94558},
  month =	 may,
  year =	 2004,
  annote =	 {Lots of extensions, mostly the things added by Superlog.}
}

@InProceedings{ackad1998software,
  author =	 {Claude Ackad},
  title =	 {Software Synthesis from {Statechart} Models for Real Time
		 Systems},
  booktitle =	 {International Workshop on Distributed and Parallel Embedded
		 Systems (DIPES)},
  year =	 1998,
  series =	 {IFIP Conference Proceedings},
  volume =	 155,
  pages =	 {73--84},
  address =	 {Paderborn University, Germany},
  month =	 oct,
  publisher =	 kl,
  annote =	 {From Nico Kasprzyk. The Statechart semantics are that
		 variable results are only visible in the next cycle, and
		 must be buffered if multiple threads read them. The overall
		 structure is similar: tranform into a concurrent
		 control-flow graph (he calls it a Parallel Execution Graph
		 or PEG) then into a sequential control-flow graph (SEG). He
		 looks for slow paths and optimizes them, trying to minimize
		 worse-case execution time. Scheduling objective is to
		 minimize the need to buffer variables. Also has a way to
		 group and reset events, rather than simply clearing them in
		 each cycle.},
  url =		 {http://www.cs.tu-bs.de/eis/english/research/index.html},
  bdsk-url-1 =	 {http://www.cs.tu-bs.de/eis/english/research/index.html}
}

@Book{ackenhusen1999real-time,
  author =	 {John G. Ackenhusen},
  title =	 {Real-Time Signal Processing: Design and Implementation of
		 Signal Processing Systems},
  publisher =	 ph,
  year =	 1999,
  address =	 ph_a,
  annote =	 {Recommended by Brian Evans}
}

@Book{acm198825,
  author =	 {{ACM}},
  title =	 {25 Years of Electronic Design Automation: {A} Compendium of
		 Papers from the Design Automation Conference},
  publisher =	 jacm,
  year =	 {1988}
}

@Article{adam1980laura,
  author =	 {Anne Adam and Jean-Pierre Laurent},
  title =	 {Laura, {A} System to Debug Student Programs},
  journal =	 {Aritifical Intelligence},
  year =	 {1980},
  volume =	 {15},
  number =	 {1--2},
  pages =	 {75--122},
  month =	 nov,
  annote =	 {I haven't actually seen this! It's from
		 \cite{SED:shahmehri:93}}
}

@InCollection{adamson1994occam,
  author =	 {K. Adamson and R. J. Miller},
  title =	 {Occam: An Introductory Course},
  booktitle =	 {Parallel Processing: The Transputer and its Applications},
  publisher =	 aw,
  year =	 1994,
  pages =	 {11--81},
  annote =	 {Nice little description of Occam, and probably more easily
		 obtained than the INMOS manual.}
}

@Book{adobe-systems-incorporated1993portable,
  author =	 {{Adobe Systems Incorporated}},
  title =	 {Portable Document Format Reference Manual},
  publisher =	 aw,
  year =	 {1993},
  address =	 aw_a
}

@InProceedings{adomat1996real-time,
  author =	 {Joakim Adomat and Johan Furun\"as and Lennart Lindh and
		 Johan St\"arner},
  title =	 {Real-Time Kernel in Hardware RTU: A step towards
		 deterministic and high performance real-time systems},
  booktitle =	 {Proceedings of the 8th Euromicro Workshop on Real-Time
		 Systems},
  year =	 1996,
  address =	 {L'Aquila, Italy},
  month =	 jun,
  annote =	 {Cited by kohout2003hardware. Rather awfully written. Talks
		 about a hardware scheduler for controlling multiple
		 processors.},
  doi =		 {http://www.mrtc.mdh.se/index.phtml?choice=publications&id=0026}
		 ,
  optpages =	 {FIXME},
  bdsk-url-1 =	 {http://www.mrtc.mdh.se/index.phtml?choice=publications&id=0026}
		 
}

@Article{adve1996shared,
  author =	 {Sarita V. Adve and Kourosh Gharachorloo},
  title =	 {Shared Memory Consistency Models: A Tutorial},
  journal =	 {Computer},
  year =	 1996,
  volume =	 29,
  number =	 12,
  pages =	 {66--76},
  annote =	 {Referenced by burckhardt2007checkfence: the problem with
		 out-of-order write buffers.}
}

@Article{adve1997changing,
  author =	 {Sarita V. Adve and Doug Burger and Rudolf Eigenmann and
		 Alasdair and Michael D. Smith and Catherine H. Gebotys and
		 Mahmut T. Kandemir and David J. Lilja and Alok N. Choudhary
		 and Jesse Z. Fang and Pen-Chung Yew},
  title =	 {Changing Interaction of Compiler and Architecture},
  journal =	 computer,
  year =	 1997,
  volume =	 30,
  number =	 12,
  pages =	 {51--58},
  month =	 dec,
  abstract =	 {Program optimizations that have been exclusively done by
		 either the architecture or the compiler are now being done
		 by both. This blurred distinction offers opportunities to
		 optimize perfomance and redefine the compiler-architecture
		 interface.},
  annote =	 {Cited in Sean Gibb's thesis.}
}

@TechReport{afsarmanesh1989eve,
  author =	 {H. Afsarmanesh and E. Brotoatmodjo and K. J. Byeon and A.
		 Parker},
  title =	 {The {EVE} {VLSI} Management Environment},
  institution =	 {University of Southern California},
  year =	 {1989},
  number =	 {{CENG} 89--06},
  annote =	 {Terrible attempt to use a relational database system to
		 model object semantics.}
}

@Article{agarwal1999raw,
  author =	 {Anant Agarwal},
  title =	 {Raw Computation},
  journal =	 {Scientific American},
  year =	 1999,
  volume =	 281,
  number =	 2,
  pages =	 {60--63},
  month =	 aug,
  annote =	 {Part of an issue on the Oxygen project. Main point is that
		 existing architectures don't scale: although everything's
		 getting smaller, communication is getting more expensive.
		 
		 Thinks the software compiler will handle many of the things
		 currently done in hardware. Assumes that the architecture
		 will be configured for the application. Looks a lot like the
		 idea I had for the DSRC presentation: A grid of sequential
		 processors connected by a network, all designed to be
		 FPGA-like and configurable. Focuses a lot on the
		 communication aspects.
		 
		 Went after an FM radio application to begin with.
		 
		 A fluffy article, but readable and gets the vision across.
		 
		 Their publications are grouped into Raw architecture stuff,
		 compiler-managed memory system stuff, reconfigurable
		 compilation stuff, and some others.},
  url =		 {http://cag.csail.mit.edu/raw/documents/index.html},
  bdsk-url-1 =	 {http://cag.csail.mit.edu/raw/documents/index.html}
}

@InProceedings{agarwal2000clock,
  author =	 {V. Agarwal and M. S. Hrishikesh and S. W. Keckler and D.
		 Burger},
  title =	 {Clock Rate versus {IPC}: The End of the Road for
		 Conventional Microarchitectures},
  booktitle =	 isca,
  year =	 2000,
  pages =	 {248-259},
  month =	 jun,
  abstract =	 { The doubling of microprocessor performance every three
		 years has been the result of two factors: more transistors
		 per chip and superlinear scaling of the processor clock with
		 technology generation. Our results show that, due to both
		 diminishing improvements in clock rates and poor wire
		 scaling as semiconductor devices shrink, the achievable
		 performance growth of conventional microarchitectures will
		 slow substantially. In this paper, we describe
		 technology-driven models for wire capacitance, wire delay,
		 and microarchitectural component delay. Using the results of
		 these models, we measure the simulated
		 performance---estimating both clock rate and IPC---of an
		 aggressive out-of-order microarchitecture as it is scaled
		 from a 250nm technology to a 35nm technology. We perform
		 this analysis for three clock scaling targets and two
		 microarchitecture scaling strategies: {\bf pipeline scaling}
		 and {\bf capacity scaling}. We find that no scaling strategy
		 permits annual performance improvements of better than
		 12.5\%, which is far worse than the annual 50-60\% to which
		 we have grown accustomed.
		 
		 From Rebecca.},
  url =		 {http://www.cs.utexas.edu/users/cart/publications/isca00.ps}
		 ,
  bdsk-url-1 =	 {http://www.cs.utexas.edu/users/cart/publications/isca00.ps}
		 
}

@InProceedings{agarwal2007may,
  author =	 {Shivali Agarwal and Rajkishore Barik and Vivek Sarkar and
		 Rudrapatna K. Shyamasundar},
  title =	 {May-happen-in-parallel analysis of X10 programs},
  booktitle =	 ppopp,
  year =	 {2007},
  pages =	 {183--193},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/1229428.1229471},
  isbn =	 {978-1-59593-602-8},
  location =	 {San Jose, California, USA},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1229428.1229471}
}

@InProceedings{agiwal2005architecture,
  author =	 {A. Agiwal and M. Singh},
  title =	 {An architecture and a wrapper synthesis approach for
		 multi-clock latency-insensitive systems},
  booktitle =	 iccad,
  year =	 {2005},
  pages =	 {1006--1013},
  oldkey =	 {agiwal05},
  sedtransform = {s/agiwal05/agiwal2005architecture/}
}

@Book{agnew1993computer,
  editor =	 {David Agnew and Luc Claesen and Raul Camposano},
  title =	 {Computer Hardware Description Languages and their
		 Applications},
  publisher =	 nh,
  year =	 {1993},
  volume =	 {A-32},
  series =	 {IFIP Transactions},
  annote =	 {Good collection.}
}

@Article{agrawal1991execution-backtracking,
  author =	 {Hiralal Agrawal and Richard A. DeMillo and Eugene H.
		 Spafford},
  title =	 {An Execution-Backtracking Approach to Debugging},
  journal =	 {{IEEE} Software},
  year =	 {1991},
  volume =	 {8},
  number =	 {3},
  pages =	 {21--26},
  month =	 may,
  url =		 {http://www.cs.purdue.edu/homes/spaf/deb/TR22P.ps.Z},
  bdsk-url-1 =	 {http://www.cs.purdue.edu/homes/spaf/deb/TR22P.ps.Z}
}

@PhDThesis{agrawal1991towards,
  author =	 {Hiralal Agrawal},
  title =	 {Towards Automatic Debugging of Computer Programs},
  school =	 {Purdue University},
  year =	 {1991},
  url =		 {http://www.cs.purdue.edu/homes/spaf/spyder/TR103P.ps},
  bdsk-url-1 =	 {http://www.cs.purdue.edu/homes/spaf/spyder/TR103P.ps}
}

@InProceedings{agrawal2005optimizing,
  author =	 {S. Agrawal and W. Thies and S. Amarasinghe},
  title =	 {Optimizing stream programs using linear state space
		 analysis},
  booktitle =	 cases,
  year =	 2005,
  pages =	 {126--136},
  annote =	 {From Rebecca},
  isbn =	 {1-59593-149-X}
}

@Book{aho1974design,
  author =	 {Alfred V. Aho and John E. Hopcroft and Jeffrey D. Ullman},
  title =	 {The Design and Analysis of Computer Algorithms},
  publisher =	 aw,
  year =	 {1974},
  series =	 {Addison-Wesley series in Computer Science and Information
		 Processing},
  address =	 aw_a,
  annote =	 {The ancient classic.}
}

@Book{aho1988awk,
  author =	 {Alfred V. Aho and Brian W. Kernighan and Peter J.
		 Weinberger},
  title =	 {The {AWK} Programming Language},
  publisher =	 aw,
  year =	 1988,
  annote =	 {The definitive book on Awk.}
}

@Book{aho1988compilers,
  author =	 {Alfred V. Aho and Ravi Sethi and Jeffrey D. Ullman},
  title =	 {Compilers, Principles, Techniques, and Tools},
  publisher =	 aw,
  year =	 {1988},
  address =	 aw_a,
  annote =	 {The definitive compiler book -- the dragon book.}
}

@InCollection{aho1990algorithms,
  author =	 {Alfred V. Aho},
  title =	 {Algorithms for Finding Patterns in Strings},
  editor =	 {Jan {van Leeuwen}},
  booktitle =	 {Handbook of Theoretical Computer Science},
  publisher =	 {Elsevier and MIT Press},
  year =	 1990,
  volume =	 {A},
  pages =	 {255--300},
  annote =	 {Al's discussion of string matching algorithms.}
}

@Book{aho2006compilers,
  author =	 {Alfred V. Aho and Monica Lam and Ravi Sethi and Jeffrey D.
		 Ullman},
  title =	 {Compilers, Principles, Techniques, and Tools},
  publisher =	 aw,
  year =	 {2006},
  address =	 aw_a,
  edition =	 {Second},
  annote =	 {Another dragon}
}

@InProceedings{aiken1998toolkit,
  author =	 {Alexander Aiken and Manuel F\"ahndrich and Jeffrey S.
		 Foster and Zhendong Su},
  title =	 {A Toolkit for Constructing Type- and Constraint-Based
		 Program Analyses},
  booktitle =	 {Proceedings of the 2nd International Workshop on Types in
		 Compilation},
  year =	 1998,
  series =	 lncs,
  volume =	 1473,
  pages =	 {76--96},
  address =	 {Kyoto, Japan},
  month =	 mar,
  annote =	 {Cited by foster1999theory as the basis for their type
		 qualifier work.}
}

@Article{ainsworth2007characterizing,
  author =	 {Thomas William Ainsworth and Timothy Mark Pinkston},
  title =	 {Characterizing the {Cell} {EIB} On-Chip Network},
  journal =	 ieeemicro,
  year =	 2007,
  volume =	 27,
  number =	 5,
  pages =	 {6--14},
  month =	 sep,
  annote =	 {From Rebecca},
  doi =		 {10.1109/MM.2007.4378779},
  issn =	 {0272-1732},
  keywords =	 {computer architecture, network-on-chip, system
		 busescommercial on-chip network, computer architecture,
		 element interconnect bus, end-to-end transaction control,
		 on-chip network design},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/MM.2007.4378779}
}

@InProceedings{akella1991synthesizing,
  author =	 {Janaki Akella and Kenneth McMillan},
  title =	 {Synthesizing Converters Between Finite State Protocols},
  booktitle =	 iccd,
  year =	 1991,
  pages =	 {410--413},
  address =	 {Cambridge, Massachusetts},
  month =	 oct,
  abstract =	 {A general approach for synthesizing inter-process
		 communication devices by adapting labeled transition systems
		 is proposed. An approach is also proposed to generate the
		 finite state machine representing the protocol converter. It
		 is assumed that the data path of the protocol converter is
		 already given. The approach is illustrated by generating the
		 communication process between a four phase master and a two
		 phase slave.},
  annote =	 {A student pointed me to this}
}

@Article{akers1978binary,
  author =	 {S. B. Akers},
  title =	 {Binary Decision Deiagrams},
  journal =	 transcomp,
  year =	 1978,
  volume =	 {C-27},
  number =	 6,
  pages =	 {509--516},
  month =	 jun,
  annote =	 {A source of many of the ideas for BDDs later refined by
		 Bryant.}
}

@Book{aksenov1962starry,
  author =	 {Vasili Aksenov},
  title =	 {A Starry Ticket},
  publisher =	 {Putnam},
  year =	 {1962},
  note =	 {Translated from the Russian by Alec Brown},
  annote =	 {I read this in George Roberts' AP English class at North
		 Community High School.}
}

@Book{albert1943fundamentals,
  author =	 {Arthur Lemuel Albert},
  title =	 {Fundamentals of Telephony},
  publisher =	 mgh,
  year =	 1943,
  annote =	 {Cited in miller1965switching. Obviously pre-transistor, but
		 does include information about vacuum tubes, especially for
		 amplifiers (repeaters).
		 
		 Great note on frontspiece: "The quality of the materials
		 used in the manufacture of this book is governed by
		 continued postwar shortages."
		 
		 Begins with very basic physical and electrical theory (model
		 of a helium atom, linear networks).
		 
		 One chapter is on "manual telephone systems," i.e., using
		 switchboard operators.
		 
		 Cites miller1930telephone
		 
		 Doesn't really talk much about the use of relays for
		 anything more than fairly basic circuits, but the Strowger
		 switch and similar technology is mentioned.
		 
		 Last chapter talks about repeaters and mentions the
		 "thermionic vacuum tube," which seems fairly mature by this
		 time. }
}

@Book{alexander1977pattern,
  author =	 {Christopher Alexander},
  title =	 {A Pattern Language: Towns, Buildings, Construction},
  publisher =	 {Oxford University Press},
  year =	 1977,
  annote =	 {A rather dry list of patterns about how to design things
		 better.}
}

@Book{alexander1979timeless,
  author =	 {Christopher Alexander},
  title =	 {The Timeless Way of Building},
  publisher =	 {Oxford University Press},
  year =	 1979,
  annote =	 {Discussing some of the motivation behind A Pattern
		 Langauge.}
}

@Book{alexandrescu2001modern,
  author =	 {Andrei Alexandrescu},
  title =	 {Modern {C++} Design: Generic Programming and Design
		 Patterns Applied},
  publisher =	 aw,
  year =	 2001,
  annote =	 {Cited in Russel Yanofsky's final report for 4995.
		 Describes, among other things, how to use templates and
		 partial specialization techniques.}
}

@Article{allen1997formal,
  author =	 {Robert Allen and David Garlan},
  title =	 {A Formal Basis for Architectural Connection},
  journal =	 tosem,
  year =	 1997,
  volume =	 6,
  number =	 3,
  pages =	 {213--249},
  month =	 jul,
  annote =	 {Cited by dashofy2001highly-extensible as a reference for
		 the Wright ADL. They're from CMU.
		 
		 Rather a formal model based on CSP. Draws a distinction
		 between connectors and components.}
}

@PhDThesis{allen1997formal2,
  author =	 {Robert J. Allen},
  title =	 {A Formal Approach to Software Architecture},
  school =	 {Carnegie Mellon},
  year =	 1997,
  month =	 may,
  note =	 {CMU technical Report CMS-CS-97-144},
  annote =	 {Cited by one of the little papers.
		 
		 Actually, about an architectural description language that
		 is based on a formal, abstract model of system behavior. His
		 ADL is "WRIGHT" David Garlan was his advisor. Talks about
		 communication using a CSP-like style. Connectors are his
		 thing.}
}

@Book{allison1986practical,
  author =	 {Lloyd Allison},
  title =	 {A Practical Introduction to Denotational Semantics},
  publisher =	 cup,
  year =	 {1986}
}

@InProceedings{alt1996cache,
  author =	 {Martin Alt and Christian Ferdinand and Florian Martin and
		 Reinhard Wilhelm},
  title =	 {Cache Behavior Prediction by Abstract Interpretation},
  booktitle =	 {Proceedings of the Third International Symposium on Static
		 Analysis},
  year =	 1996,
  pages =	 {52--66},
  address =	 {Aachen, Germany},
  month =	 sep,
  annote =	 {WCET paper. Abstract interpretation for static analysis of
		 cache/pipeline behavior.}
}

@Misc{ambabus,
  author =	 {{ARM}},
  title =	 {{AMBA Bus} Specification},
  howpublished = {Available at www.arm.com},
  oldkey =	 {ambabus}
}

@InProceedings{amdahl1967validity,
  author =	 {Gene M. Amdahl},
  title =	 {Validity of the Single Processor Approach to Achieving
		 Large-Scale Computing Capabilities},
  booktitle =	 {Proceedings of the AFIPS Joint Computer Conferences},
  year =	 1967,
  pages =	 {483--485},
  address =	 {Atlantic City, New Jersey},
  month =	 apr,
  annote =	 {The source of Amdahl's law, although it doesn't even
		 contain any mathematics.}
}

@InProceedings{amon1993algorithm,
  author =	 {Tod Amon and Henrik Hulgaard and Steven M. Burns and
		 Gaetano Borriello},
  title =	 {An algorithm for exact bounds on the time separation of
		 events in concurrent systems},
  booktitle =	 iccd,
  year =	 1993,
  pages =	 {166--173},
  address =	 {Cambridge, Massachussets},
  month =	 oct,
  annote =	 {Relevant to the SHIM-to-hardware stuff. Very relevant:
		 looks and at what times various things synchronize.
		 Definitely worth reading.
		 
		 Basic idea seems to be unrolling and analyzing the expanded
		 product. Potentially very costly, it would seem.}
}

@InProceedings{anantaraman2003virtual,
  author =	 {Aravindh Anantaraman and Kiran Seth and Eric Rotenberg and
		 Frank Mueller},
  title =	 {Virtual Simple Architecture ({VISA}): Exceeding the
		 Complexity Limit in Safe Real-Time Systems},
  booktitle =	 {Proceedings of the International Symposium on Computer
		 Architecture (ISCA)},
  year =	 2003,
  pages =	 {350--361},
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {Similar to their other paper? Same basic idea.
		 
		 Excellent bibliography.}
}

@InProceedings{anantaraman2004enforcing,
  author =	 {Aravindh Anantaraman and Kiran Seth and Eric Rotenberg and
		 Frank Mueller},
  title =	 {Enforcing Safety of Real-Time Schedules on Contemporary
		 Processors using a Virtual Simple Architecture ({VISA})},
  booktitle =	 rtss,
  year =	 2004,
  pages =	 {114--125},
  address =	 {Lisbon, Portugal},
  month =	 dec,
  annote =	 {Processor architecture idea: slow predictable processor,
		 fast processor. Wait until slow overtakes fast.}
}

@PhDThesis{andersen1994program,
  author =	 {L. O. Andersen},
  title =	 {Program Analysis and Specialization for the {C} Programming
		 Language},
  school =	 {DIKU, University of Copenhagen},
  year =	 1994,
  annote =	 {Flow-insensitive analysis}
}

@Article{andersson1989movie-an,
  author =	 {P. Andersson and L. Philipson},
  title =	 {Movie---An Interactive Environment for Silicon Compilation
		 Tools},
  journal =	 transcad,
  year =	 {1989},
  volume =	 {8},
  number =	 {6},
  pages =	 {693--701},
  month =	 jun
}

@Article{andersson1991design,
  author =	 {P. Andersson},
  title =	 {Design Representation in Movie},
  journal =	 transcad,
  year =	 {1991},
  volume =	 {10},
  number =	 {3},
  pages =	 {335--345},
  month =	 mar
}

@TechReport{andre1995synccharts,
  author =	 {C. Andr\'e},
  title =	 {{SyncCharts}: A Visual Representation of Reactive
		 Behaviors},
  institution =	 {I3S},
  year =	 1995,
  type =	 {RR},
  number =	 {95--52},
  url =		 {http://www.i3s.unice.fr/sports/SyncCharts/TR95-52.ps.gz},
  bdsk-url-1 =	 {http://www.i3s.unice.fr/sports/SyncCharts/TR95-52.ps.gz}
}

@InProceedings{andre1996representation,
  author =	 {Charles Andr\'e},
  title =	 {Representation and Analysis of Reactive Behaviors: {A}
		 Synchronous Approach},
  booktitle =	 {Proceedings of Computational Engineering in Systems
		 Applications (CESA)},
  year =	 1996,
  pages =	 {19--29},
  address =	 {Lille, France},
  month =	 jul,
  annote =	 {The main SyncCharts paper}
}

@Article{andrei2006modern,
  author =	 {Neculai Andrei},
  title =	 {Modern Control Theory: A Historical Perspective},
  journal =	 {Studies in Informatics and Control},
  year =	 2006,
  volume =	 15,
  number =	 1,
  pages =	 {51--62},
  annote =	 {Found initially on Wikipedia. Romanian journal.
		 
		 Starts as early as Aristotle (!). Feedback at Bell Labs.
		 
		 Interesting bibliography:
		 
		 Mayr, O., (1970) The origins of feedback control. MIT Press,
		 Cambridge, MA, 1970
		 
		 http://www.theorem.net/theorem/lewis1.html from Chapter 1:
		 Introduction to Modern Control Theory, in: F.L. Lewis,
		 Applied Optimal Control and Estimation, Prentice-Hall, 1992.
		 
		 }
}

@Article{andrews1983concepts,
  author =	 {Gregory R. Andrews and Fred B. Schneider},
  title =	 {Concepts and Notations for Concurrent Programming},
  journal =	 surveys,
  year =	 1983,
  volume =	 15,
  number =	 1,
  pages =	 {3--43},
  month =	 mar,
  annote =	 {Cited in Robert Sebasta, Concepts of Programming Langauges.
		 
		 Really nice survey of things like coroutines, fork/join,
		 cobegin, synchronization, critial regions, monitors, message
		 passing, remote procedure calls,
		 
		 }
}

@Article{anguita2003digital,
  author =	 {Davide Anguita and Andrea Boni and Sandro Ridella},
  title =	 {A digital architecture for support vector machines: theory,
		 algorithm, and {FPGA} implementation},
  journal =	 {IEEE Transactions on Neural Networks},
  year =	 2003,
  volume =	 14,
  number =	 3,
  pages =	 {993--1009},
  month =	 sep,
  annote =	 {Referenced by irick2008hardware}
}

@Book{antoniou1994cities,
  author =	 {Jim Antoniou},
  title =	 {Cities Then \& Now},
  publisher =	 {Macmillan},
  year =	 {1994},
  annote =	 {Chrismas present from parents, Christmas 1994}
}

@TechReport{appel1992unrollling,
  author =	 {Andrew Appel},
  title =	 {Unrolling recursions saves space},
  institution =	 {Princeton University},
  year =	 1992,
  number =	 {CS-TR-363-92},
  month =	 mar,
  annote =	 {Cited by rugina2000recursion. Argues that unrolling
		 recursion like this is helpful because it reduces the amount
		 of stack space required and the management thereof in
		 functional languages, which often hold activation records on
		 the heap.
		 
		 Interesting results, but nobody worries about memory
		 consumption any more. Doesn't provide an algorithm, just ran
		 some hand experiments. Few references.}
}

@Book{appel1998modern,
  author =	 {Andrew W. Appel},
  title =	 {Modern Compiler Implementation in {C}},
  publisher =	 cup,
  year =	 1998,
  annote =	 {A pretty good book on compilers. I especially like the
		 chapter on static single assignment form and dominator
		 computation.}
}

@Book{appel1998modern-ml,
  author =	 {Andrew W. Appel},
  title =	 {Modern Compiler Implementation in {ML}},
  publisher =	 cup,
  year =	 1998,
  annote =	 {Nice chapters on more advanced dataflow stuff.}
}

@Book{apple-computer1993inside,
  author =	 {{Apple Computer, Inc.}},
  title =	 {Inside Macintosh: Interapplication Communication},
  publisher =	 aw,
  year =	 {1993},
  address =	 aw_a,
  annote =	 {Purchased 941211, Cody's in Berkeley}
}

@Book{apple1988macintosh,
  author =	 {{Apple Computer}},
  title =	 {Macintosh Family Hardware Reference},
  publisher =	 aw,
  year =	 1988,
  annote =	 {Already calls the first the "Classic Macintosh"}
}

@Article{araki1991general,
  author =	 {Keijiro Araki and Zengo Furukawa and Jingde Cheng},
  title =	 {A General Framework for Debugging},
  journal =	 {{IEEE} Software},
  year =	 {1991},
  volume =	 {8},
  number =	 {3},
  pages =	 {14--20},
  month =	 may,
  annote =	 {Poor.}
}

@InProceedings{arditi1999using,
  author =	 {Laurent Arditi and Amar Bouali and Hedi Boufaied and Gael
		 Clave and Mourad Hadj-Chaib and Laure Leblanc and Robert {de
		 Simone}},
  title =	 {Using {Esterel} and Formal Methods to Increase the
		 Confidence in the Functional Validation of a Commercial
		 {DSP}},
  booktitle =	 {Proceedings of the ERCIM Workshop on Formal Methods for
		 Industrial Critical Systems (FMICS)},
  year =	 1999,
  address =	 {Trento, Italy},
  month =	 jun,
  annote =	 {Describes how they use Esterel's formal verification tools
		 to discover gaps in their test suite.}
}

@InProceedings{armstrong1992ficom,
  author =	 {R. C. Armstrong and J. Allen},
  title =	 {{FICOM}: {A} Framework for Incremental Consistency
		 Maintenance in Multi-Representation, Structural {VLSI}
		 Databases},
  booktitle =	 iccad,
  year =	 {1992},
  pages =	 {336--343},
  address =	 iccad_a,
  month =	 nov,
  publisher =	 {{IEEE} Computer Society Press},
  annote =	 {Close to what I'm trying to do. Straightforward linear
		 model of transformations.}
}

@Book{arnold2000java,
  author =	 {Ken Arnold and James Gosling and David Holmes},
  title =	 {The Java Programming Language},
  publisher =	 aw,
  year =	 2000,
  address =	 aw_a,
  edition =	 {Third},
  annote =	 {Main Java reference.}
}

@InProceedings{arnout1999c,
  author =	 {Guido Arnout},
  title =	 {C for System Level Design},
  booktitle =	 date,
  year =	 1999,
  pages =	 {384--386},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Part of a hot topic session. }
}

@InProceedings{arnout2000systemc,
  author =	 {Guido Arnout},
  title =	 {{SystemC} Standard},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {573--578},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Luc Semeria pointed me to this. Good summary of the current
		 state of the system design language world c. 2000.}
}

@Book{arteaga1967building,
  author =	 {Robert F. Arteaga},
  title =	 {Building of the Arch},
  publisher =	 {Jefferson National Expansion Historical Association},
  year =	 {1967},
  address =	 {St. Louis, Missouri},
  annote =	 {Bought at the Saint Louis Arch, Christmas 1994}
}

@InProceedings{artho2003high-level,
  author =	 {Cyrille Artho and Klaus Havelund and Armin Biere},
  title =	 {High-Level Data Races},
  booktitle =	 {Proceedings of the Workshop on Verification and Validation
		 of Enterprise Information Systems (VVEIS)},
  year =	 2003,
  pages =	 {82--93},
  address =	 {Angers, France},
  month =	 apr
}

@TechReport{artist2003guidelines,
  author =	 {{The ARTIST consortium}},
  title =	 {Guidelines for a Graduate Curriculum on Embedded Software
		 and Systems},
  institution =	 {ARTIST},
  year =	 2003,
  number =	 {W2.All.Y1},
  address =	 {http://www.artist-embedded.org/},
  month =	 may,
  annote =	 {Cites my Languages book. P. Caspi, Stifakis, et al.}
}

@InProceedings{arvind2004high,
  author =	 {Arvind and R.S. Nikhil and D.L. Rosenband and N. Dave},
  title =	 {High-level synthesis: an essential ingredient for designing
		 complex {ASICs}},
  booktitle =	 iccad,
  address =      iccad_a,
  month =        nov,
  year =	 2004,
  pages =	 {775--782}
}

@TechReport{asanovic2006landscape,
  author =	 {Asanovic, K. and Bodik, R. and Catanzaro, B. C. and Gebis,
		 J. J. and Husbands, P. and Keutzer, K. and Patterson, D. A.
		 and Plishker, W. L. and Shalf, J. and Williams, S. W. and
		 Yelick, K. A.},
  title =	 {The landscape of parallel computing research: a view from
		 {Berkeley}},
  institution =	 {Electrical Engineering and Computer Sciences, University of
		 California at Berkeley},
  year =	 2006,
  number =	 {UCB/EECS-2006-183},
  month =	 dec,
  keywords =	 {parallel, work}
}

@Article{asenov2001increase,
  author =	 {A. Asenov and G. Slavcheva and A.R. Brown and J.H. Davies
		 and S. Saini},
  title =	 {Increase in the random dopant induced threshold
		 fluctuations and lowering in sub-100 nm {MOSFET}s due to
		 quantum effects},
  journal =	 {IEEE Transactions on Electron Devices},
  year =	 2001,
  volume =	 48,
  number =	 4,
  pages =	 {722-729},
  month =	 apr,
  oldkey =	 {asenov01},
  sedtransform = {s/asenov01/asenov2001increase/}
}

@InProceedings{ashar1995fast,
  author =	 {Pranav Ashar and Sharad Malik},
  title =	 {Fast Functional Simulation Using Branching Programs},
  booktitle =	 iccad,
  year =	 {1995},
  pages =	 {408--412},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {BDDs as a series of gotos.}
}

@Book{ashenden1996designers,
  author =	 {Peter J. Ashenden},
  title =	 {The Designer's Guide to {VHDL}},
  publisher =	 mk,
  year =	 1996,
  address =	 mk_a,
  annote =	 {Randy also suggests this.}
}

@Book{ashenden1998students,
  author =	 {Peter J. Ashenden},
  title =	 {The Student's Guide to {VHDL}},
  publisher =	 mk,
  year =	 1998,
  address =	 mk_a,
  annote =	 {Randy also suggests this. Shorter version of the Student's
		 guide.}
}

@Manual{association1984midi,
  title =	 {{MIDI} 1.0 Detailed Specification},
  organization = {MIDI Manufacturers Association},
  address =	 {Los Angeles, California},
  year =	 {1984},
  url =		 {http://home.earthlink.net/~mma/},
  bdsk-url-1 =	 {http://home.earthlink.net/~mma/}
}

@Article{atkins1999mawl,
  author =	 {David L. Atkins and Thomas Ball and Glenn Bruns and Kenneth
		 Cox},
  title =	 {Mawl: a domain-specific language for form-based services},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {334--346},
  month =	 may,
  annote =	 {Part of a special issue. UNREAD}
}

@Book{atkinson1989introduction,
  author =	 {Kendall E. Atkinson},
  title =	 {An Introduction to Numerical Analysis},
  publisher =	 jw,
  year =	 {1989},
  address =	 jw_a,
  edition =	 {Second},
  annote =	 {Used as a textbook in Math 128b, Berkeley.}
}

@InProceedings{atkinson1998effective,
  author =	 {D. C. Atkinson and W. G. Griswold},
  title =	 {Effective whole-program analysis in the presence of
		 pointers},
  booktitle =	 fse,
  year =	 {1998},
  pages =	 {46--55},
  oldkey =	 {atkinson98},
  sedtransform = {s/atkinson98/atkinson1998effective/}
}

@InProceedings{attig2006systematic,
  author =	 {Michael Attig and Gordon J. Brebner},
  title =	 {Systematic Characterization of Programmable Packet
		 Processing Pipelines},
  booktitle =	 fccm,
  year =	 2006,
  pages =	 {195--204},
  address =	 {Napa, California},
  month =	 apr,
  annote =	 {Relevant to the TCAD packets paper.
		 
		 Focuses on design-space exploration. Looks at estimating
		 area as well as throughput. Starts from "atomic operations,"
		 build a dependency graph, then looks at how to pipeline it.
		 Looking at resource usage. Interesting stuff, but doesn't
		 seem to address our queue size issues.},
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/FCCM.2006.6},
  bdsk-url-1 =	 {http://doi.ieeecomputersociety.org/10.1109/FCCM.2006.6}
}

@Article{auerbach2009low-latency,
  author =	 {Joshua Auerbach and David F. Bacon and Daniel Iercan and
		 Christoph M. Kirsch and V. T. Rajan and Harald R\"ock and
		 Rainer Trummer},
  title =	 {Low-latency time-portable real-time programming with
		 {Exotasks}},
  journal =	 tecs,
  year =	 2009,
  volume =	 8,
  number =	 2,
  pages =	 {article 15},
  doi =		 {http://doi.acm.org/10.1145/1457255.1457262},
  annote =	 {More PRET-related stuff}
}

@InProceedings{austin1994efficient,
  author =	 {Todd M. Austin and Scott E. Breach and Gurindar S. Sohi},
  title =	 {Efficient Detection of All Pointer and Array Access
		 Errors},
  booktitle =	 pldi,
  year =	 1994,
  pages =	 {290--301},
  address =	 {Orlando, Florida},
  month =	 jun,
  annote =	 {Cited by the PREfix paper; does source-to-source
		 transformations to insert code that checks the correctness
		 of pointer accesses.}
}

@Article{avissar2002optimal,
  author =	 {Oren Avissar and Rajeev Barua and Dave Stewart},
  title =	 {An optimal memory allocation scheme for scratch-pad-based
		 embedded systems},
  journal =	 tecs,
  year =	 2002,
  volume =	 1,
  number =	 1,
  pages =	 {6--26},
  annote =	 {Cited in our DAC PRET paper}
}

@InProceedings{ayad2003system,
  author =	 {Nadia Ayad and Alexander Verbraeck},
  title =	 {System architecture for cross border payment: a case study
		 for the financial services industry},
  booktitle =	 {Proceedings of System Sciences},
  year =	 2003,
  address =	 {Big Island, Hawaii},
  month =	 jan,
  annote =	 {Suggested by Gitanjali. Bizarre -- no technical
		 information.},
  doi =		 {10.1109/HICSS.2003.1174450},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/HICSS.2003.1174450}
}

@InProceedings{babb1999pallelizing,
  author =	 {Johnathan Babb and Martin Rinard and Csaba Andras Moritz
		 and Walter Lee and Matthew Frank and Rajeev Barua and Saman
		 Amarasinghe},
  title =	 {Pallelizing Applications into Silicon},
  booktitle =	 {Proceedings of the IEEE Workshop on FPGAs for Custom
		 Computing Machines},
  year =	 1999,
  address =	 {Napa Valley, California},
  month =	 apr,
  annote =	 {Darin gave me this. "cc -silicon"
		 
		 Does analysis to use small memories rather than one big one.
		 This they do for efficiency: parallelism and latency.
		 Computation is done within the memory array. Uses SUIF and
		 generates Verilog. Proposes "Virtual wires": pipelined
		 connections between regions. Uses pointer analysis to divide
		 up memory into regions. Build a state machine (a switch
		 statement) that describes the operation of the software:
		 this is a synthesizable RTL construct. Floating-point
		 operations are transformed into multiple integer operations
		 (technique from Daly},
  url =		 {ftp://ftp.cag.lcs.mit.edu/pub/raw/documents/babb-fccm99.ps.Z}
		 ,
  bdsk-url-1 =	 {ftp://ftp.cag.lcs.mit.edu/pub/raw/documents/babb-fccm99.ps.Z}
		 
}

@InProceedings{bacon2000guava,
  author =	 {David F. Bacon and Robert E. Strom and Ashis Tarafdar},
  title =	 {Guava: A Dialect of {Java} without Data Races},
  booktitle =	 oopsla,
  year =	 2000,
  pages =	 {382--400},
  address =	 {Minneapolis, Minnesota},
  month =	 oct,
  annote =	 {Starts with a discussion of relaxed memory models.}
}

@InProceedings{bacon2003metronome,
  author =	 {David F. Bacon and Perry Cheng and V. T. Rajan},
  title =	 {The {Metronome}: A Simpler Approach to Garbage Collection
		 in Real-time Systems},
  booktitle =	 {Proceedings of the Workshop on Java Technologies for
		 Real-Time and Embedded Systems (JTRES)},
  year =	 2003,
  series =	 lncs,
  volume =	 2899,
  pages =	 {466--478},
  address =	 {Catania, Sicily},
  month =	 nov,
  doi =		 {10.1007/b94345},
  annote =	 {Cited in the 2007 PRET paper}
}

@Article{bahlke1986psg,
  author =	 {Rolf Bahlke and Gregor Snelting},
  title =	 {The {PSG} System: From Formal Language Definitions to
		 Interactive Programming Environments},
  journal =	 toplas,
  year =	 {1986},
  volume =	 {8},
  number =	 {4},
  pages =	 {547--576},
  month =	 oct
}

@InProceedings{bahlke1987generator,
  author =	 {Rolf Bahlke and Bernhard Moritz and Gregor Snelting},
  title =	 {A Generator for Language-Specific Debugging Systems},
  booktitle =	 {{SIGPLAN} '87 Symposium on Interpreters and Interpretive
		 Techniques, St. Paul, {MN}, {USA}, 24--26 June 1987},
  year =	 {1987},
  series =	 {{SIGPLAN} Notices, 22(7):92--101},
  annote =	 {Interactive source-level debugger generator for the PSG
		 system}
}

@Article{baker1977algorithm,
  author =	 {Brenda S. Baker},
  title =	 {An Algorithm for Structuring Flowgraphs},
  journal =	 {Journal of the ACM},
  year =	 {1977},
  volume =	 {24},
  number =	 {1},
  pages =	 {98--120},
  month =	 jan,
  annote =	 {Algorithm for turning a control-flow graph into a nicely
		 structured program. Starts by constructing a goto-free
		 skeleton, then adds gotos as necessary.}
}

@TechReport{baker1993application,
  author =	 {Wendell Craig Baker},
  title =	 {An Application of a Synchronous Reactive Semantics to the
		 {VHDL} Language},
  institution =	 ucb,
  year =	 {1993},
  number =	 {UCB/ERL M93/10}
}

@Unpublished{baker1993on,
  author =	 {Wendell Baker},
  title =	 {On Interfacing Existing Hardware Description Languages to
		 State-Space Exploration-Based Verification},
  year =	 {1993},
  month =	 jun,
  note =	 {unpublished}
}

@PhDThesis{baker1996interfacing,
  author =	 {Wendell Craig Baker},
  title =	 {Interfacing System Description Languages to Formal
		 Verification},
  school =	 ucb,
  year =	 {1996},
  note =	 {Available as UCB/ERL M96/26}
}

@InProceedings{baker2002maya,
  author =	 {Jason Baker and Wilson C. Hsieh},
  title =	 {Maya: Multiple-Dispatch Syntax Extension in {Java}},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {270--281},
  address =	 {Berlin, Germany},
  month =	 jun,
  annote =	 {Flexible syntax in Java. Complex mechanism for building
		 macro-like expansions (they use a foreach "method" as an
		 example). Good ideas: how to handle a combination of type
		 checking, variable parsing, and so forth. Not really clear
		 what problem they're trying to solve, although they show how
		 to implement MultiJava, a multiple-dispatch facility (theirs
		 was 2500 lines; the original was 20K).
		 
		 Language design stuff from PLDI 2002
		 
		 Areas:
		 
		 Type Systems Register Allocation and Value Numbering Program
		 Correctness Profiling and Specuclation Garbage Collection
		 Hardware-Conscious Optmizations Dynamic Prefetching & Cache
		 Optimizations Analysis of Object-Oriented Programs Language
		 Design & Implementation Issues High Performance & Real-Time
		 Issues
		 
		 }
}

@InProceedings{bala1994software,
  author =	 {Kavita Bala and M. Frans Kaashoek and William E. Weihl},
  title =	 {Software Prefetching and Caching for Translation Lookaside
		 Buffers},
  booktitle =	 {Proceedings of the First Sympsium on Operating System
		 Design and Implementation},
  year =	 1994,
  pages =	 {243--254},
  address =	 {Monterey, California},
  month =	 nov,
  annote =	 {Recommended by Jose Brunheroto. TLB simulation related.
		 
		 Presents an interesting study on the effect of prefetching
		 and caching the TLB entries on unmapped memory, prefetching
		 done when we have for instance context switch, it shows some
		 significant improvements. The caveat is that not every
		 process supports the unmapped access to memory (e.g.,
		 PowerPC440 only support virtual memory access via TLB).}
}

@InProceedings{bala2000dynamo,
  author =	 {Vasanth Bala and Evelyn Duesterwald and Sanjeev Banerjia},
  title =	 {Dynamo: A Transparent Dynamic Optimization System},
  booktitle =	 pldi,
  year =	 2000,
  pages =	 {1--12},
  address =	 {Vancouver, British Columbia, Canada},
  month =	 jun,
  annote =	 {Monica loved this one: Dynamo is a very good just-in-time
		 compiler that does binary-to-binary translations.}
}

@InProceedings{balarin1995formal,
  author =	 {Felice Balarin and Massimiliano Chiodo and Luciano Lavagno
		 and Harry Hsieh and Alberto Sangiovanni-Vincentelli and
		 Paolo Giusto and Attila Jurecska},
  title =	 {Formal Verification of Embedded Systems based on {CFSM}
		 Networks},
  booktitle =	 {CODES 96},
  year =	 {1995},
  annote =	 {Beginnings of the Polis work}
}

@PhDThesis{balarin1995iterative,
  author =	 {Felice Balarin},
  title =	 {Iterative Methods for Formal Verification of Digital
		 Systems},
  school =	 ucb,
  year =	 {1995},
  note =	 {Available as UCB/ERL M95/1}
}

@Book{balarin1997hardware-software,
  author =	 {Felice Balarin and Paolo Giusto and Attila Jurecska and
		 Claudio Passerone and Ellen Sentovich and Bassam Tabbara and
		 Massimiliano Chiodo and Harry Hsieh and Luciano Lavagno and
		 Alberto Sangiovanni-Vincentelli and Kei Suzuki},
  title =	 {Hardware-Software Co-Design of Embedded Systems: The POLIS
		 Approach},
  publisher =	 kl,
  year =	 1997,
  address =	 kl_a,
  annote =	 {A complete reference on POLIS.}
}

@InProceedings{balarin1999software,
  author =	 {Felice Balarin and Massimiliano Chiodo},
  title =	 {Software Synthesis for Complex Reactive Embedded Systems},
  booktitle =	 iccd,
  year =	 1999,
  pages =	 {634--639},
  address =	 {Austin, Texas},
  month =	 oct,
  annote =	 {jiang1999logic referred to this. Something about merging
		 the s-graphs for each CFSM in an attempt to avoid needless
		 computation.}
}

@Article{balarin1999synthesis,
  author =	 {Felice Balarin and Massimiliano Chiodo and Paolo Giusto and
		 Harry Hsieh and Attila Jurecska and Luciano Lavagno and
		 Alberto Sangiovanni-Vincentelli and Ellen M. Sentovich and
		 Kei Suzuki},
  title =	 {Synthesis of Software Programs for Embedded Control
		 Applications},
  journal =	 transcad,
  year =	 1999,
  volume =	 18,
  number =	 6,
  pages =	 {834--849},
  month =	 jun,
  annote =	 {Journal version of SED:chiodo:95a.}
}

@InProceedings{balarin2002concurrent,
  author =	 {Felice Balarin and Luciano Lavagno and Claudio Passerone
		 and Alberto Sangiovanni-Vincentelli and Yosinori Watanabe
		 and Guang Yang},
  title =	 {Concurrent execution semantics and sequential simulation
		 algorithms for the {Metropolis} meta-model},
  booktitle =	 {Proceedings of the Tenth International Workshop on
		 Hardware/Software Codesign (CODES)},
  year =	 2002,
  pages =	 {13--18},
  address =	 {Estes Park, Colorado},
  month =	 may,
  annote =	 {Cited by balarin2003metropolis. Perhaps relevant to the
		 SHIM model.}
}

@Article{balarin2003metropolis,
  author =	 {Felice Balarin and Yosinori Watanabe and Harry Hsieh and
		 Luciano Lavagno and Claudio Passerone and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Metropolis: An Integrated Electronic System Design
		 Environment},
  journal =	 computer,
  year =	 2003,
  volume =	 36,
  number =	 4,
  pages =	 {45--52},
  month =	 apr,
  annote =	 {Survey of the Metropolis project. Interesting citations of
		 other work they've done.}
}

@TechReport{ball1990correctness,
  author =	 {Thomas Ball and Susan Horwitz and Thomas Reps},
  title =	 {Correctness of an Algorithm for Reconstituting a Program
		 from a Dependence Graph},
  institution =	 {University of Wisconsin, Madison},
  year =	 {1990},
  number =	 {CS-TR-90-947},
  month =	 jul,
  annote =	 {Got this from Madison in the mail. Only concerns itself
		 with programs that don't need guards inserted or code
		 duplicated. Runs into an interesting problem with
		 topologically sorting variable dependencies: because a
		 variable's value can be redefined, there's a danger that a
		 simple topological sort will reorder definitions and uses,
		 leading to incorrect control flow graphs.},
  keywords =	 {program dependence graph},
  url =		 {http://www.cs.wisc.edu/Dienst/UI/2.0/Describe/ncstrl.uwmadison/CS-TR-90-947}
		 ,
  bdsk-url-1 =	 {http://www.cs.wisc.edu/Dienst/UI/2.0/Describe/ncstrl.uwmadison/CS-TR-90-947}
		 
}

@TechReport{ball1992constructing,
  author =	 {Thomas Ball and Susan Horwitz},
  title =	 {Constructing Control Flow from Control Dependence},
  institution =	 {University of Wisconsin, Madison},
  year =	 {1992},
  number =	 {CS-TR-92-1091},
  month =	 jun,
  annote =	 {Sequential code generation. From Johnson's thesis.},
  keywords =	 {program dependence graph},
  url =		 {http://www.cs.wisc.edu/Dienst/UI/2.0/Describe/ncstrl.uwmadison/CS-TR-92-1091}
		 ,
  bdsk-url-1 =	 {http://www.cs.wisc.edu/Dienst/UI/2.0/Describe/ncstrl.uwmadison/CS-TR-92-1091}
		 
}

@InProceedings{ball1993slicing,
  author =	 {Thomas Ball and Susan Horwitz},
  title =	 {Slicing Programs with Arbitrary Control-flow},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 1993,
  series =	 lncs,
  volume =	 749,
  pages =	 {206--222},
  publisher =	 sv,
  annote =	 {Extension of \cite{SED:ottenstein:84}.},
  keywords =	 {program dependence graph}
}

@PhDThesis{ball1994use,
  author =	 {Thomas Jaudon Ball},
  title =	 {The Use of Control-Flow and Control Dependence in Software
		 Tools},
  school =	 {University of Wisconsin---Madison},
  year =	 {1994},
  annote =	 {Applied to profiling, tracing, slicing, differencing, and
		 integrating.},
  keywords =	 {program dependence graph},
  url =		 {http://www.cs.wisc.edu:80/TR/UWMADISONCS:CS-TR-93-1169?abstract=}
		 ,
  bdsk-url-1 =	 {http://www.cs.wisc.edu:80/TR/UWMADISONCS:CS-TR-93-1169?abstract=}
		 
}

@InProceedings{ball2000bebop,
  author =	 {Thomas Ball and Sriram K. Rajamani},
  title =	 {Bebop: A Symbolic Model Checker for {Boolean} Programs},
  booktitle =	 {SPIN Model Checking and Software Verification (Proceedings
		 of the 7th International SPIN Workshop)},
  year =	 2000,
  series =	 lncs,
  volume =	 1885,
  pages =	 {113--130},
  address =	 {Stanford, California},
  month =	 aug,
  publisher =	 sv,
  annote =	 {Boolean programs are an abstraction of a true C program.
		 The variables are intended to represent predicates.
		 "explicitly captures correlations between data and control"
		 Uses the interprocedural dataflow analysis of Reps, Horwitz
		 and Sagiv (SED:reps:95a, SED:reps:96a), but represents the
		 summaries with BDDs. These summaries are like cached
		 analyses of functions, used when an already-observed input
		 condition arises again. The summary is simply a mapping from
		 inputs to outputs at a function interface. Leaves the
		 control flow graph of the system explicit, but uses BDDs to
		 compute the set of states reachable at each control flow
		 graph node. Uses compiler techniques to check which
		 variables are live at each control-flow step, allowing them
		 to reduce the state stored at each node.},
  url =		 {http://www.research.microsoft.com/slam},
  bdsk-url-1 =	 {http://www.research.microsoft.com/slam}
}

@TechReport{ball2000boolean,
  author =	 {Thomas Ball and Sriram K. Rajamani},
  title =	 {Boolean Programs: A Model and Process for Software
		 Analysis},
  institution =	 {Microsoft},
  year =	 2000,
  number =	 {MSR-TR-2000-14},
  annote =	 {Jim Kukula pointed me to this. Verifying software using
		 model-checking.},
  url =		 {http://research.microsoft.com/slam/},
  bdsk-url-1 =	 {http://research.microsoft.com/slam/}
}

@InProceedings{ball2000checking,
  author =	 {Thomas Ball and Sriram K. Rajamani},
  title =	 {Checking Temporal Properties of Software with {Boolean}
		 Programs},
  booktitle =	 {Proceedings of the Workshop on Advances in Verification},
  year =	 2000,
  address =	 {Chicago, USA},
  month =	 jul,
  annote =	 {Their TR presented at a workshop.},
  url =		 {http://www.research.microsoft.com/slam},
  bdsk-url-1 =	 {http://www.research.microsoft.com/slam}
}

@InProceedings{ball2002slam,
  author =	 {Thomas Ball and Sriram K. Rajamani},
  title =	 {The {SLAM} Project: Debugging System Software via Static
		 Analysis},
  booktitle =	 popl,
  year =	 2002,
  pages =	 {1--3},
  address =	 {Portland, Oregon},
  month =	 jan,
  annote =	 {Three-page high-level overview.}
}

@InProceedings{ballance1990program,
  author =	 {Robert A. Ballance and Arthur B. Maccabe and Karl J.
		 Ottenstein},
  title =	 {The Program Dependence Web: {A} Representation Supporting
		 Control-, Data-, and Demand-Driven Interpretation of
		 Imperative Languages},
  booktitle =	 pldi,
  year =	 {1990},
  series =	 {SIGPLAN Notices, 25(6):257-271},
  address =	 {White Plains, NY},
  month =	 jun,
  keywords =	 {program dependence graph}
}

@TechReport{ballance1992program,
  author =	 {Robert A. Ballance and Ksheerabdhi Krishna and Arthur B.
		 Maccabe},
  title =	 {Program Dependence Graphs for the Rest of Us},
  institution =	 {Department of Computer Science, University of New Mexico},
  year =	 {1992},
  number =	 {TR 92-10},
  address =	 {Albuquerque, NM},
  month =	 aug,
  annote =	 {Talks about how to build the control-dependence graph
		 cheaply for programs with simpler control flow. Also has a
		 study of how gotos are used in practical C programs.},
  keywords =	 {program dependence graph},
  url =		 {ftp://ftp.cs.unm.edu/pub/krishna/CS92-10Revised.ps.Z},
  bdsk-url-1 =	 {ftp://ftp.cs.unm.edu/pub/krishna/CS92-10Revised.ps.Z}
}

@Book{banerjee1994parallel,
  author =	 {Prithviraj Banerjee},
  title =	 {Parallel Algorithms for {VLSI} Computer-Aided Design
		 Applications},
  publisher =	 {Prentice-Hall},
  year =	 {1994},
  annote =	 {Property of a coworker at Simplex}
}

@Article{banerjee2004overview,
  author =	 {Prithviraj Banerjee and Malay Haldar and Anshuman Nayak and
		 Victor Kim and Vikram Saxena and Steven Parkes and Debabrata
		 Bagchi and Satrajit Pal and Nikhil Tripathi and David
		 Zaretsky and Robert Anderson and Juan Ramon Uribe},
  title =	 {Overview of a compiler for synthesizing {MATLAB} programs
		 onto {FPGAs}},
  journal =	 transvlsi,
  year =	 2004,
  volume =	 12,
  number =	 3,
  pages =	 {312--324},
  month =	 mar,
  annote =	 {Paper on AccelFPGA, the commercial version of the MATCH
		 compiler project.}
}

@Book{banks2000discrete,
  author =	 {Jerry Banks and John S. Carson and Barry L. Nelson and
		 David M. Nicol},
  title =	 {Discrete-Event System Simulation},
  publisher =	 ph,
  year =	 2000,
  address =	 ph_a,
  edition =	 {Third},
  annote =	 {Haven't seen. A suggested text for an IEOR simulation class
		 at Wisconsin}
}

@InProceedings{banning1979efficient,
  author =	 {J. Banning},
  title =	 {An efficient way to find the side-effects of procedure
		 calls and the aliases of variables},
  booktitle =	 popl,
  year =	 1979,
  pages =	 {29--41}
}

@InProceedings{baray1971digital,
  author =	 {Mehmet B. Baray and Stephen Y. H. Su},
  title =	 {A Digital System Modeling Philosophy and Design Language},
  booktitle =	 dac71,
  year =	 1971,
  pages =	 {1--22},
  address =	 dac71a,
  month =	 jun,
  annote =	 {Very early. Nice little bibliography.
		 
		 Cites schorr1964computer-aided.}
}

@MastersThesis{bardsley1998balsa,
  author =	 {Andrew Bardsley},
  title =	 {Balsa: An Asynchronous Circuit Synthesis System},
  school =	 {University of Manchester},
  year =	 1998,
  address =	 {England},
  annote =	 {Part of the Balsa work. Really describes the language, its
		 differences from Tangram (nothing substantial) and its
		 translation. Doesn't really speak too much about semantic
		 details, but does describe the translation and how they used
		 the LARD asynchronous simulator to check it out.}
}

@Book{barnes1992electronic,
  author =	 {T. J. Barnes and D. Harrison and A. R. Newton and R. L.
		 Spickelmier},
  title =	 {Electronic {CAD} Frameworks},
  publisher =	 kl,
  year =	 {1992},
  address =	 kl_a,
  annote =	 {General discussion of CAD frameworks.}
}

@Book{barr1990category,
  author =	 {Michael Barr and Charles Wells},
  title =	 {Category Theory for Computing Science},
  publisher =	 ph,
  year =	 {1990}
}

@Book{barr1999programming,
  author =	 {Michael Barr},
  title =	 {Programming Embedded Systems in C and C++},
  publisher =	 ora,
  year =	 1999,
  address =	 ora_a,
  annote =	 {A good introduction to the world, which seems to be fixated
		 on coaxing the compiler to do the right thing, downloading,
		 debugging, etc.}
}

@Article{barr2000flawed,
  author =	 {Michael Barr},
  title =	 {Flawed Training Impedes Embedded-Systems Work},
  journal =	 {EE Times},
  year =	 2000,
  pages =	 99,
  month =	 {December 11},
  annote =	 {Advocates a bridge between hardware and software types, and
		 observes a need for people who can straddle the line.},
  url =		 {http://www.eetimes.com/story/speakout/OEG20001211S0016},
  bdsk-url-1 =	 {http://www.eetimes.com/story/speakout/OEG20001211S0016}
}

@Book{barrett2005embedded,
  author =	 {Steven F. Barrett and Daniel J. Pack},
  title =	 {Embedded Systems Design and Applications with the 68HC12
		 and HCS12},
  publisher =	 ph,
  year =	 2005,
  annote =	 {A very microcontroller-centric embedded systems book.}
}

@InProceedings{barringer2003proof,
  author =	 {Howard Barringer and Dimitra Giannakopoulou and and Corina
		 S. P\u{a}s\u{a}reanu},
  title =	 {Proof Rules for Automated Compositional Verification
		 through Learning},
  booktitle =	 {Proceedings of the 2nd International Workshop on
		 Specification and Verification of Component-Based Systems
		 (SAVCBS)},
  year =	 {2003},
  pages =	 {14--21},
  address =	 {Helsinki, Finland},
  note =	 {Iowa State University Technical Report \#03--11},
  date =	 sep
}

@Book{barron1981pascal,
  editor =	 {D. W. Barron},
  title =	 {Pascal: The Language and its Implementation},
  publisher =	 jw,
  year =	 1981,
  annote =	 {About P-code, etc.}
}

@Article{barzilai1987hss,
  author =	 {Zeev Barzilai and J. Lawrence Carter and Berry K. Rosen and
		 Joseph D. Rutledge},
  title =	 {{HSS}---A High-Speed Simulator},
  journal =	 transcad,
  year =	 1987,
  volume =	 {CAD-6},
  number =	 4,
  pages =	 {601--617},
  month =	 jul,
  annote =	 {Referenced by lewis1991hierarchical. Identifies oblivious
		 vs. event-driven and compiled vs. interpretative
		 simulators.}
}

@InProceedings{basu1998promela,
  author =	 {Anindya Basu and Greg Morrisett and Thorsten {von Eicken}},
  title =	 {Promela++: A Language for Correct and Efficient Protocol
		 Construction},
  booktitle =	 infocom,
  year =	 1998,
  address =	 {San Francisco, California},
  month =	 mar,
  annote =	 {kumar2001esp cited this. Fellow from Cornell, now at Bell
		 Labs.
		 
		 The proposed language has compilation paths into Promela for
		 verification and C for implementation. They claim their C
		 path is efficient.
		 
		 Collection of coroutines communicating events (SDL-like?)},
  optpages =	 {FIXME},
  url =		 {http://cm.bell-labs.com/who/basu/papers.html},
  bdsk-url-1 =	 {http://cm.bell-labs.com/who/basu/papers.html}
}

@Book{bates1995cuture,
  author =	 {Chris Bates and Ling-li Bates},
  title =	 {Cuture Shock! Taiwan},
  publisher =	 {Graphics Arts Center Pub. Co.},
  year =	 {1995},
  address =	 {Portland, OR}
}

@InProceedings{batra1992hcompare,
  author =	 {Pradeep Batra and David Cooke},
  title =	 {{Hcompare:} A Hirearchical Netlist Comparison Program},
  booktitle =	 dac92,
  year =	 1992,
  pages =	 {299-304},
  address =	 dac92a,
  month =	 jun,
  annote =	 {Referenced by kim1998hierarchical. Compares two
		 hierarchical netlists (not flat to hierarchical). Looks a
		 little like my algorithm: flatten as necessary. Rather
		 vague.}
}

@Book{batten1988programmable,
  author =	 {George L. {Batten Jr.}},
  title =	 {Programmable Controllers: Hardware, Software, and
		 Applications},
  publisher =	 {Tab Books},
  year =	 1988,
  address =	 {Blue Ridge Summit, Pennsylvania},
  annote =	 {Starts with a nice history of PLCs, which also starts in
		 1968 with the Modicon 085 unit, although the stress is more
		 on GM. Has a very basic chapter on relays.}
}

@Article{baudet1978asynchronous,
  author =	 {G\'erard M. Baudet},
  title =	 {Asynchronous Iterative Methods for Multiprocessors},
  journal =	 jacm,
  year =	 {1978},
  volume =	 {25},
  number =	 {2},
  pages =	 {226--244},
  month =	 apr,
  abstract =	 {A class of asynchronous iterative methods is presented for
		 solving a system of equations. Existing iterative methods
		 are identified in terms of asynchronous iterations, and new
		 schemes are introduced corresponding to a parallel
		 implementation on a multiprocessor system with no
		 synchronization between cooperating processes. A sufficient
		 condition is given to guarantee the convergence of any
		 asynchronous iterations, and results are extended to include
		 iterative methods with memory. Asynchronous iterative
		 methods are then evaluated from a computational point of
		 view, and bounds are derived for the efficiency. The bounds
		 are compared with actual measurements obtained by running
		 various asynchronous iterations on a multiprocessor, and the
		 experimental results show clearly the advantage of purely
		 asynchronous iterative methods.}
}

@InProceedings{baxter2004dms,
  author =	 {Ira Baxter and Christopher Pidgeon and Michael Mehlich},
  title =	 {{DMS}: Program Transformations for Practical Scalable
		 Software Evolution},
  booktitle =	 icse,
  year =	 2004,
  pages =	 {FIXME},
  address =	 {Edinburgh, Scotland},
  month =	 may,
  annote =	 {Found at random. Source-to-source transformations.
		 
		 Describes the very ambitious commercial DMS system sold by
		 Semantic Designs, Inc. Baxter seems to be the principal.
		 Very comprehensive multi-language design based on very
		 flexible compiler technology, including a GLR parser driven
		 by a grammar. Facilitates nicely-structured source-to-source
		 transformations such as a=a+1 -> a++. Amazing technology,
		 although the paper has little more than an overview of the
		 technology with few details about the algorithms, etc.
		 
		 Baxter is from UCI, graduated in 1990. His thesis is UCI TR
		 90-36.
		 
		 Software reengineering, software synthesis, etc.
		 
		 See also ocallahan1997lackwit
		 
		 },
  url =		 {http://www.cs.clemson.edu/~johnmc/courses/cpsc957/baxter.pdf}
		 ,
  bdsk-url-1 =	 {http://www.cs.clemson.edu/~johnmc/courses/cpsc957/baxter.pdf}
		 
}

@InProceedings{beattie1994tkperl-,
  author =	 {Malcom Beattie},
  title =	 {TkPerl--- {A} Port of the Tk Toolkit to Perl5},
  booktitle =	 {Proceedings of the USENIX Symposium on Very High Level
		 Languages (VHLL)},
  year =	 {1994},
  pages =	 {71--82},
  address =	 {Sante Fe, NM},
  month =	 oct,
  organization = {USENIX Association, Berkeley, CA}
}

@InProceedings{beaumont1998visualizing,
  author =	 {Mark Beaumont and Dave Jackson},
  title =	 {Visualising Complex Control Flow},
  booktitle =	 {Proceedings of the IEEE Symposium on Visual Languages},
  year =	 1998,
  address =	 {Nova Scotia, Canada},
  month =	 {sep},
  annote =	 {Describing strange control flow visually.
		 
		 Seems to be concerned largely with fairly unstructured
		 control-flow in assembly code.
		 
		 They have a nice notation that distinguishes conditional
		 jumps from unconditional jumps from nautural sequencing in
		 control-flow graphs. They also have a new idea for a basic
		 block: Linear Code Sequence and Jump (LCSAJ). Consists of
		 code that might be executed sequentially but may have
		 branches in in. In particular, control does not
		 automatically flow from one to the next.
		 
		 A nice idea, but not breathtaking.},
  optpages =	 {FIXME}
}

@InProceedings{becker1992engineering,
  author =	 {David Becker and Raj K. Singh and Stephen G. Tell},
  title =	 {An Engineering Environment for Hardware/Software
		 Cosimulation},
  booktitle =	 dac92,
  year =	 1992,
  pages =	 {129--134},
  address =	 dac92a,
  month =	 jun,
  annote =	 {Describes a hardware/software cosimulation environment
		 where they run a Verilog-XL simulator concurrently with some
		 C code. This all communicates using Unix sockets.
		 
		 They make no attempt to synchronize the software and
		 hardware. They do, however, use a fairly high-level
		 communication protocol between the various components for
		 efficiency. In particular, the hardware does not report its
		 state to the software in every cycle. }
}

@Article{beckman1976partial,
  author =	 {Lennart Beckman and Anders Haraldsson and \"{O}sten
		 Oskarsson and Erik Sandewall},
  title =	 {A partial evaluator, and its use as a programming tool},
  journal =	 {Artificial Intelligence},
  year =	 1976,
  volume =	 7,
  pages =	 {319-357},
  publisher =	 {Elsevier}
}

@InProceedings{beeck1994comparison,
  author =	 {Michael von der Beeck},
  title =	 {A Comparison of {Statecharts} Variants},
  booktitle =	 {Formal Techniques in Real-Time and Fault-Tolerant Systems:
		 Third International Symposium Proceedings},
  year =	 {1994},
  series =	 lncs,
  volume =	 {863},
  publisher =	 sv,
  annote =	 {Also published in an expanded report.}
}

@InProceedings{beer2001temporal,
  author =	 {Ilan Beer and Shoham Ben-David and Cindy Eisner and Dana
		 Fisman and Anna Gringauze and Yoav Rodeh},
  title =	 {The Temporal Logic {Sugar}},
  booktitle =	 cav2001,
  year =	 2001,
  series =	 lncs,
  volume =	 2102,
  pages =	 {363--367},
  address =	 cav2001_a,
  publisher =	 sv,
  annote =	 {Description of the Sugar language from IBM Haifa.
		 
		 Credits Pnueli (1977) with introducing the use of temporal
		 logics for computer programs.
		 
		 "Sugar evolved slowly over the course of many years from the
		 temporal logic CTL." [Clarke and Emerson, 1981, which
		 appears in LNCS 131, which I can't find.]
		 
		 CTL plus regular expressions and lots of syntactic sugar.
		 Used in RuleBase formal verifier since 1994.}
}

@InProceedings{beerel2006slack,
  author =	 {Peter A. Beerel and Andrew Lines and Mike Davies and
		 Nam-Hoon Kim},
  title =	 {Slack matching asynchronous designs},
  booktitle =	 async,
  year =	 2006,
  pages =	 11,
  address =	 {Grenoble, France},
  month =	 mar,
  annote =	 {Mentioned by an ICCAD reviewer of our "pipelines" paper.
		 
		 Also seems to talk about decision-free pipelines.
		 
		 Reminiscent of prakash2006slack. Turns it into a MILP
		 problem.
		 
		 Based on Petri nets.
		 
		 Very similar to our pipelines work, but only applicable to a
		 specific class of marked graphs, which have no choice.
		 Explicitly mentions "handling systems with choice" as future
		 work.},
  doi =		 {http://dx.doi.org/10.1109/ASYNC.2006.26},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/ASYNC.2006.26}
}

@Proceedings{beeri1988proceedings,
  title =	 {Proceedings of the Third International Conference on Data
		 and Knowledge Bases: Improving Usability and
		 Responsiveness},
  year =	 {1988},
  editor =	 {C. Beeri and J. W. Schmidt and U. Dayal},
  address =	 {Jerusalem, Isreal},
  month =	 jun,
  publisher =	 mk,
  booktitle =	 {Proceedings of the Third International Conference on Data
		 and Knowledge Bases: Improving Usability and
		 Responsiveness}
}

@InCollection{bekic1984definable,
  author =	 {H. Beki\'c},
  title =	 {Definable Operations in General Algebras, and the Theory of
		 Automata and Flowcharts},
  editor =	 {C. B. Jones},
  booktitle =	 {Programming Languages and Their Definition},
  publisher =	 sv,
  year =	 {1984},
  volume =	 {177},
  series =	 lncs,
  pages =	 {30--55}
}

@InProceedings{belhumeur2008searching,
  author =	 {Peter Belhumeur and Daozheng Chen and Steven Feiner and
		 David Jacobs and W. Kress and Haibin Ling and Ida Lopez and
		 Ravi Ramamoorthi and Sameer Sheorey and Sean White and Ling
		 Zhang},
  title =	 {Searching the World's Herbaria: A System for Visual
		 Identification of Plant Species},
  booktitle =	 {European Conference on Computer Vision},
  year =	 {2008},
  pages =	 {116--129}
}

@Book{bell1971computer,
  author =	 {C. Gordon Bell and Allen Newell},
  title =	 {Computer Structures: Readings and Examples},
  publisher =	 mgh,
  year =	 1971,
  annote =	 {John Sanguinetti at www.vol.webnexus.com cites this as
		 containing the first hardware description language, "ISP,"
		 and the source of the term register-transfer level.
		 
		 In Chapter 2, describes "PMS" and "ISP" as two languages for
		 describing "the top computer-system level" and "program
		 level" respectively. There's an ISP description for the
		 PDP-8 and it contains, among other things, a collection of
		 guarded commands, e.g.,
		 
		 and -> (AC <- AC ^ H[x])
		 
		 It also has sequencing, registers, an so forth.
		 
		 He calls ISP a "register-transfer language" (early in
		 Chapter 2). And later uses the term "register-transfer
		 level."
		 
		 Amazing early work: already using the AC[0:31] notation to
		 represent 32-bit registers. },
  url =		 {http://research.microsoft.com/~gbell/Computer_Structures__Readings_and_Examples/index.html}
		 ,
  bdsk-url-1 =	 {http://research.microsoft.com/~gbell/Computer_Structures__Readings_and_Examples/index.html}
		 
}

@Article{bell1973threaded,
  author =	 {James R. Bell},
  title =	 {Threaded Code},
  journal =	 cacm,
  year =	 1973,
  volume =	 16,
  number =	 3,
  pages =	 {370--372},
  month =	 jun,
  annote =	 {ritchie1993development mentioned this. Basic idea is to
		 compile into a sequence of addresses of "service routines"
		 that implement, say, add instructions.}
}

@Book{ben-ari1990principles,
  author =	 {M. Ben-Ari},
  title =	 {Principles of Concurrent and Distributed Programming},
  publisher =	 ph,
  year =	 1990,
  annote =	 {Steve Nowick showed me this: it's a good introduction to
		 semaphores, monitors, locks, etc.}
}

@InProceedings{ben-asher2003heuristics,
  author =	 {Yosi Ben-Asher and Eitan Farchi and Yaniv Eytani},
  title =	 {Heuristics for Finding Concurrent Bugs},
  booktitle =	 ipdps,
  year =	 2003,
  pages =	 288,
  address =	 {Nice, France},
  month =	 apr
}

@InProceedings{bender2000scheduling,
  author =	 {Michael A. Bender and M. O. Rabin},
  title =	 {Scheduling {Cilk} Multithreaded Parallel Programs on
		 Processors of Different Speeds},
  booktitle =	 {Proceedings of the 12th Annual ACM Symposium on Parallel
		 Algorithms and Architectures (SPAA)},
  year =	 2000,
  pages =	 {13--21}
}

@InProceedings{bender2001finding,
  author =	 {Michael A. Bender and Giridhar Pemmasani and Steven Skiena
		 and Pavel Sumazin},
  title =	 {Finding least common ancestors in directed acyclic graphs},
  booktitle =	 {Symposium on Discrete Algorithms},
  year =	 2001,
  pages =	 {845--854},
  address =	 {Washington, DC},
  month =	 jan,
  url =		 {citeseer.nj.nec.com/bender01finding.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/bender01finding.html}
}

@Article{benini2000increasing,
  author =	 {Luca Benini and Alberto Macii and Enrico Macii and Massimo
		 Poncino},
  title =	 {Increasing Energy Efficiency of Embedded systems by
		 Application-Specific Memory Hierarchy Generation},
  journal =	 ieeedtc,
  year =	 2000,
  volume =	 17,
  number =	 2,
  pages =	 {74--85},
  month =	 {April-June},
  annote =	 {Scratchpad memory synthesis}
}

@Article{benini2000survey,
  author =	 {Luca Benini and A. Bogliolo and G. De Micheli},
  title =	 {A survey of design techniques for system-level dynamic
		 power management},
  journal =	 transvlsi,
  year =	 2000,
  volume =	 8,
  number =	 3,
  pages =	 {299-316},
  month =	 jun,
  annote =	 {299-316},
  entered =	 {Luca Carloni,2/3/04},
  oldkey =	 {benini00},
  sedtransform = {s/benini00/benini2000survey/}
}

@Article{benini2000system-level,
  author =	 {Luca Benin and Giovanni {de Micheli}},
  title =	 {System-level Power Optimization: Techniques and Tools},
  journal =	 todaes,
  year =	 2000,
  volume =	 5,
  number =	 2,
  pages =	 {115--192},
  month =	 apr,
  annote =	 {A TODAES survey paper.}
}

@Article{benini2002networks,
  author =	 {Luca Benini and G. De Micheli},
  title =	 {Networks on Chip: A New {SoC} paradigm},
  journal =	 computer,
  year =	 2002,
  volume =	 35,
  number =	 1,
  pages =	 {70-78},
  entered =	 {Luca Carloni,04/13/04},
  oldkey =	 {beninicomputer02},
  sedtransform = {s/beninicomputer02/benini2002networks/}
}

@InProceedings{bensalem1993property,
  author =	 {S. Bensalem and A. Bouajjani and C. Loiseaux and J.
		 Sifakis},
  title =	 {Property Preserving Simulations},
  booktitle =	 {Computer Aided Verification: Fourth International Workshop,
		 CAV '92: Montreal, Canada, June 29--July 1, 1992:
		 Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {663},
  publisher =	 sv,
  annote =	 {Didn't actually see the book -- from Gitanjali}
}

@InProceedings{bensalem2006confirmation,
  author =	 {Saddek Bensalem and Jean-Claude Fernandez and Klaus
		 Havelund and Laurent Mounier},
  title =	 {Confirmation of deadlock potentials detected by runtime
		 analysis},
  booktitle =	 {Proceedings of the Workshop on Parallel and Distributed
		 Systems: Testing and Debugging (PADTAD)},
  year =	 2006,
  pages =	 {41--50},
  address =	 {Portland, Maine},
  month =	 jul,
  annote =	 {Mentioned by a Memocode reviewer for the deadlock detection
		 stuff.
		 
		 Captures a trace from a running program, then analyzes it
		 for potential deadlock situations. Looks specifically at
		 mutex-like locking events, so probably not that related to
		 the SHIM deadlock problem. Definitely interesting work,
		 though.},
  doi =		 {http://doi.acm.org/10.1145/1147403.1147412},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1147403.1147412}
}

@InProceedings{bensalem2008compositional,
  author =	 {Saddek Bensalem and Marius Bozga and Joseph Sifakis and
		 Thanh-Hung Nguyen},
  title =	 {Compositional Verification for Component-Based Systems and
		 Application},
  booktitle =	 {Proceedings of the 6th International Symposium on Automated
		 Technology for Verification and Analysis (ATVA)},
  year =	 {2008},
  series =	 lncs,
  volume =	 5311,
  pages =	 {64--79},
  address =	 {Berlin, Heidelberg},
  publisher =	 {Springer-Verlag},
  date-modified ={2009-07-31 21:52:27 -0400},
  doi =		 {http://dx.doi.org/10.1007/978-3-540-88387-6_7},
  isbn =	 {978-3-540-88386-9},
  location =	 {Seoul, Korea},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/978-3-540-88387-6_7}
}

@Book{benson1992television,
  editor =	 {K. Blair Benson and Jerry Whitaker},
  title =	 {Television Engineering Handbook},
  publisher =	 mgh,
  year =	 1992,
  edition =	 {Revised},
  annote =	 {Really starts from the basics: this is color vision, these
		 are color models, this is optics, etc. I looked it up when I
		 was trying to get the colors right for the Apple II hires
		 display by understanding NTSC/RS-170A/SMPTE 0170
		 
		 NTSC colors, YIQ encoding:
		 
		 $E_M = E_Y + E_q sin(wt + 33 deg) + E_i cos(wt + 33 deg)$
		 
		 $E_Q = 0.41 (E_B - E_Y) + 0.48 (E_R - E_Y)$
		 
		 $E_I = -0.27 ( E_B - E_Y ) + 0.74 (E_R - E_Y)$
		 
		 $E_Y = 0.3 E_R + 0.59 E_G + 0.11 E_B$
		 
		 Q channel bandwidth: @ 400 kHz less than 2 dB, @ 500 kHz,
		 less than 6 dB, @ 600 kHz, more than 6 dB
		 
		 I channel bandwidth: @ 1.3 MHz, less than 2 dB, @ 3.6 MHz,
		 at least 20 dB down
		 
		 Y channel is everything: to 4.2 MHz
		 
		 So Q is about 550 kHz, I is about 1.5 MHz
		 
		 3.579545 MHz is the master
		 
		 horizontal frequency is 455/2 the colorburst frequency
		 
		 }
}

@InProceedings{benson1994libscheme,
  author =	 {Jr. Brent W. Benson},
  title =	 {{libscheme}: Scheme as a {C} Library},
  booktitle =	 {Proceedings of the USENIX Symposium on Very High Level
		 Languages (VHLL)},
  year =	 {1994},
  pages =	 {7--19},
  address =	 {Sante Fe, NM},
  month =	 oct,
  organization = {USENIX Association, Berkeley, CA}
}

@Book{bentham2000tcp-ip,
  author =	 {Jeremy Bentham},
  title =	 {{TCP/IP} Lean: Web Servers for Embedded Systems},
  publisher =	 cmp,
  year =	 2000,
  address =	 cmp_a,
  annote =	 {Bought at the 2001 Embedded Systems Conference in San
		 Francisco. Good, concrete example of TCP/IP code and web
		 server stuff. Actually a good introduction to communication
		 protocols.}
}

@Article{bentley1986little,
  author =	 {Jon Bentley},
  title =	 {Little Languages},
  journal =	 cacm,
  year =	 1986,
  volume =	 29,
  number =	 8,
  pages =	 {711-721},
  month =	 aug,
  annote =	 {Fun: talks mostly about PIC, but also other Unix tools such
		 as Lex, YACC, Make, troff, chem, grap, and a host of others.
		 
		 Mostly aimed at systems-like batch programming where
		 correctness is the main goal, and not efficiency.
		 
		 Advocates the idea that a domain-specific language is the
		 most concise way to describe a particular operation. Gives
		 the example of an Automated Teller Machine that could be
		 implemented in far less space and be easier to maintain if
		 done with an interpreter.
		 
		 This is one of his "programming pearls" columns. Bentley has
		 a book of the same name.}
}

@TechReport{benveniste1987denotational,
  author =	 {Albert Benveniste and Paul Le Guernic},
  title =	 {A Denotational Theory of Synchronous Communicating
		 Systems},
  institution =	 {Institut National de Recherche en Informatique et en
		 Automatique},
  year =	 {1987},
  number =	 {685},
  address =	 {Domaine de Voluceau, Rocquencourt B.P. 105, 78153 Le
		 Chesnay Cedex, France},
  month =	 jun,
  annote =	 {From Wendell Baker}
}

@InProceedings{benveniste1989signal,
  author =	 {Albert Benveniste and Paul Le Guernic and Christian
		 Jacquemot},
  title =	 {The {SIGNAL} software environment for real-time system
		 specification, design, and implementation},
  booktitle =	 {IEEE Control Systems Society Workshop on Computer-Aided
		 Control System Design},
  year =	 1989,
  pages =	 {41--49},
  annote =	 {Describes SIGNAL}
}

@Article{benveniste1990hybrid,
  author =	 {Albert Benveniste and Paul {Le Guernic}},
  title =	 {Hybrid Dynamical Systems Theory and the {SIGNAL} Language},
  journal =	 {IEEE Transactions on Automatic Control},
  year =	 {1990},
  volume =	 {35},
  number =	 {5},
  pages =	 {535--546},
  month =	 may,
  annote =	 {Odd, interesting treatment of boolean functions as
		 polynomials and polynomial constraints.}
}

@Article{benveniste1991synchronous,
  author =	 {Albert Benveniste and G\'erard Berry},
  title =	 {The Synchronous Approach to Reactive Real-Time Systems},
  journal =	 procieee,
  year =	 {1991},
  volume =	 {79},
  number =	 {9},
  pages =	 {1270--1282},
  month =	 sep,
  annote =	 {Part of a special issue on synchronous real time systems}
}

@InProceedings{benveniste1993data-flow,
  author =	 {Albert Benveniste and Paul Caspi and Paul Le Guernic and
		 Nicolas Halbwachs},
  title =	 {Data-flow Synchronous Languages},
  booktitle =	 {A Decade of Concurrency: Reflections and Perspectives: REX
		 School/Symposium proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {803},
  pages =	 {1--45},
  address =	 {Noordwijkerhout, the Netherlands},
  month =	 jun,
  publisher =	 sv
}

@InProceedings{benveniste1997compositionality,
  author =	 {Albert Benveniste and Paul {Le Guernic} and Pascal Aubry},
  title =	 {Compositionality in Dataflow Synchronous Languages:
		 Specification \& Distributed Code Generation},
  editor =	 {W.-P. de Roever and H. Langmaack and A. Pnueli},
  booktitle =	 {Proceedings of the International Symposium on
		 Compositionality: The Significant Difference (COMPOS)},
  year =	 1997,
  series =	 lncs,
  volume =	 1536,
  pages =	 {61--80},
  address =	 {Malente/Holstein, Germany},
  month =	 sep,
  publisher =	 sv,
  annote =	 {Same as benveniste2000compositionality? Copied while at
		 Dagstuhl.}
}

@Article{benveniste2000compositionality,
  author =	 {Albert Benveniste and Beno\^\i{}t Caillaud and Paul {Le
		 Guernic}},
  title =	 {Compositionality in Dataflow Synchronous Languages:
		 Specification \& Distributed Code Generation},
  journal =	 {Information and Computation},
  year =	 2000,
  volume =	 163,
  number =	 2,
  pages =	 {125--171},
  month =	 dec,
  annote =	 {Interesting. Something about characterizing dependencies
		 between inputs and outputs on blocks so that the system can
		 be scheduled.}
}

@InProceedings{benveniste2003heterogeneous,
  author =	 {A. Benveniste and L. P. Carloni and P. Caspi and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Heterogeneous Reactive Systems Modeling and
		 Correct-by-Construction Deployment},
  editor =	 {R. Alur and I. Lee},
  booktitle =	 emsoft,
  year =	 2003,
  series =	 lncs,
  volume =	 {2855},
  pages =	 {35-50},
  address =	 {Philadelphia, PA},
  month =	 oct,
  publisher =	 {Springer Verlag},
  affiliation =	 {Irisa, Inria, UC Berkeley, Verimag},
  entered =	 {Luca Carloni, 6/11/03},
  keywords =	 {synchrony, asynchrony, synchronous languages, GALS, LTTA},
  oldkey =	 {benveniste_emsoft03},
  sedtransform = {s/benveniste_emsoft03/benveniste2003heterogeneous/}
}

@Article{benveniste2003synchronous,
  author =	 {Albert Benveniste and Paul Caspi and Stephen A. Edwards and
		 Nicolas Halbwachs and Paul Le Guernic and Robert de Simone},
  title =	 {The Synchronous Languages 12 Years Later},
  journal =	 procieee,
  year =	 2003,
  volume =	 91,
  number =	 1,
  pages =	 {64--83},
  month =	 jan,
  annote =	 {Summary of the synchronous languages. Five Frenchmen and
		 me.},
  selectivity =	 {Invited. 174 citations on Google Scholar},
  url =		 {http://dx.doi.org/10.1109/JPROC.2002.805826},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/JPROC.2002.805826}
}

@InProceedings{benveniste2004causality,
  author =	 {A. Benveniste and B. Caillaud and L. P. Carloni and P.
		 Caspi and A. L. Sangiovanni-Vincentelli},
  title =	 {Causality and Scheduling Constraints in Heterogeneous
		 Reactive Systems Modeling},
  editor =	 {F.S.d. Boer and M.M. Bonsangue and S. Graf and W.P. de
		 Roever},
  booktitle =	 {Proceedings of the 2nd International Symposium on Formal
		 Methods for Components and Objects, Nov. 4-7, 2003},
  year =	 2004,
  series =	 lncs,
  volume =	 {3188},
  pages =	 {1-16},
  address =	 {Leiden, The Netherlands},
  month =	 aug,
  publisher =	 {Springer Verlag},
  affiliation =	 {Irisa, Inria, UC Berkeley, Verimag},
  entered =	 {Luca Carloni, 6/11/03},
  keywords =	 {synchrony, asynchrony, synchronous languages, GALS, LTTA},
  oldkey =	 {benveniste_fmco03},
  sedtransform = {s/benveniste_fmco03/benveniste2004causality/}
}

@InProceedings{benveniste2004heterogeneous,
  author =	 {A. Benveniste and B. Caillaud and L. P. Carloni and P.
		 Caspi and A. L. Sangiovanni-Vincentelli},
  title =	 {Heterogeneous Reactive Systems Modeling: Capturing
		 Causality and the Correctness of Loosely Time-Triggered
		 Architectures ({\sc Ltta})},
  editor =	 {G. Buttazzo and S. Edwards},
  booktitle =	 emsoft,
  year =	 2004,
  pages =	 {220-229},
  address =	 {Pisa, Italy},
  month =	 sep,
  publisher =	 {ACM},
  affiliation =	 {Irisa, Inria, UC Berkeley, Verimag},
  entered =	 {Luca Carloni, 6/11/04},
  keywords =	 {synchrony, asynchrony, synchronous languages, GALS, LTTA},
  oldkey =	 {benveniste_emsoft04},
  sedtransform = {s/benveniste_emsoft04/benveniste2004heterogeneous/}
}

@InProceedings{berezin1998compositional,
  author =	 {Sergey Berezin and S\'ergio Campos and Edmund M. Clarke},
  title =	 {Compositional Reasoning in Model Checking},
  booktitle =	 {Compositionality: The Significant Difference (COMPOS)},
  year =	 1998,
  series =	 lncs,
  volume =	 1536,
  pages =	 {81--102},
  address =	 {Bad Malente, Germany},
  month =	 sep,
  annote =	 {For the Emsoft SHIM compositional model checking paper.}
}

@Book{berg1982formal,
  author =	 {H. K. Berg and W. E. Boebert and W. R. Franta and T. G.
		 Moher},
  title =	 {Formal Methods of Program Verification and Specification},
  publisher =	 ph,
  year =	 {1982}
}

@InProceedings{bergamaschi1991data-path,
  author =	 {Reinaldo A. Bergamaschi and Raul Camposano and Michael
		 Payer},
  title =	 {Data-path synthesis using path analysis},
  booktitle =	 dac91,
  year =	 1991,
  pages =	 {591--596},
  address =	 dac91a,
  month =	 jun,
  annote =	 {FIXME}
}

@InProceedings{bergamaschi1991scheduling,
  author =	 {Reinaldo A. Bergamaschi and Raul Camposano and Michael
		 Payer},
  title =	 {Scheduling and allocation: Area and performance
		 optimizations in path-based scheduling},
  booktitle =	 {Proceedings of European Design Automation (EDAC)},
  year =	 1991,
  pages =	 {304--310},
  address =	 {Amsterdam, The Netherlands},
  month =	 feb,
  annote =	 {FIXME}
}

@Article{bergamaschi1992allocation,
  author =	 {Reinaldo A. Bergamaschi and Raul Camposano and Michael
		 Payer},
  title =	 {Allocation algorithms based on path analysis},
  journal =	 {Integration, the VLSI Journal},
  year =	 1992,
  volume =	 13,
  number =	 3,
  pages =	 {283--299},
  month =	 sep,
  annote =	 {FIXME}
}

@InProceedings{bergamaschi1992control,
  author =	 {Reinaldo A. Bergamaschi and Donald Lobo and Andreas
		 Kuehlmann},
  title =	 {Control optimization in high-level synthesis using
		 behavioral don't cares},
  booktitle =	 dac92,
  year =	 1992,
  pages =	 {657--661},
  address =	 dac92a,
  month =	 jun,
  annote =	 {Using their own flavor of don't-cares in high-level
		 synthesis. Used the IBM high-level synthesis tool to perform
		 scheduling and allocation. Generate state table from this.
		 Add their own behavioral don't-cares. Run Stamina on the
		 state table. Run Mustang to encode the machine, and then
		 pass to a logic synthesizer.
		 
		 Assumes that the system being analyzed is small enough and
		 its state space simple enough to allow it to be enumerated
		 easily. An interesting idea, but very local in its focus.}
}

@InProceedings{bergamaschi1995efficient,
  author =	 {Reinaldo A. Bergamaschi and Daniel Brand and Leon Stok and
		 Michel Berkelaar and S. Prakash},
  title =	 {Efficient use of large don't cares in high-level and logic
		 synthesis},
  booktitle =	 iccad,
  year =	 1995,
  pages =	 {272--278},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {FIXME}
}

@Article{bergamaschi1997control-flow,
  author =	 {Reinaldo A. Bergamaschi and Salil Raje and Indira Nair and
		 Louise Trevillyan},
  title =	 {Control-flow versus data-flow-based scheduling: combining
		 both approaches in an adaptive scheduling system},
  journal =	 transvlsi,
  year =	 1997,
  volume =	 5,
  number =	 1,
  pages =	 {82--100},
  month =	 mar,
  annote =	 {Talks about a system called ADAPT.
		 
		 Directly attacks the problem of control-dependent behavior
		 in high-level synthesis. Talks about path-based scheduling
		 versus data-flow-based scheduling. Basic idea in path-based
		 scheduling seems to be thinking of things as ranges.}
}

@InProceedings{bergamaschi1999behavioral,
  author =	 {Reinaldo A. Bergamaschi},
  title =	 {Behavioral network graph: unifying the domains of
		 high-level and logic synthesis},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {213--218},
  address =	 dac99a,
  month =	 jun,
  annote =	 {FIXME}
}

@InProceedings{bergamaschi2000designing,
  author =	 {R. A. Bergamaschi and W. R. Lee},
  title =	 {Designing Systems-on-Chip Using Cores},
  booktitle =	 dac00,
  year =	 2000,
  address =	 dac00a,
  month =	 jun,
  affiliation =	 {IBM},
  entered =	 {Luca Carloni,3/20/02},
  keywords =	 {soc design, deep submicron, timing closure},
  oldkey =	 {bergamaschi00},
  sedtransform = {s/bergamaschi00/bergamaschi2000designing-systems-on-chip-using-cores/}
		 
}

@Article{bergamaschi2001automating,
  author =	 {Reinaldo A. Bergamaschi and Subhrajit Bhattacharya and
		 Ronaldo Wagner and Colleen Fellenz and Michael Muhlada and
		 Foster White and Jean-Marc Daveau and William R. Lee},
  title =	 {Automating the Design of {SOCs} Using Cores},
  journal =	 ieeedtc,
  year =	 2001,
  volume =	 18,
  number =	 5,
  pages =	 {32--45},
  month =	 {September-October},
  annote =	 {Reinaldo mentioned this to me at IBM. It describes their
		 experience with a system much like Xilinx's EDK (Embedded
		 Development Kit).}
}

@Article{bergamaschi2002bridging,
  author =	 {Reinaldo A. Bergamaschi},
  title =	 {Bridging the Domains of High-Level and Logic Synthesis},
  journal =	 transcad,
  year =	 2002,
  volume =	 21,
  number =	 5,
  pages =	 {582--596},
  month =	 may,
  annote =	 {Random search on Reinaldo.
		 
		 Proposes a new internal representation that makes it easier
		 to estimate the later effects of logic synthesis on a
		 high-level synthesis run. His representation tries to
		 implicitly capture all possible schedules. Interesting,
		 high-powered stuff. Not directly relevant to a discussion of
		 don't-cares, though.}
}

@Book{bergeron2003writing,
  author =	 {Janick Bergeron},
  title =	 {Writing Testbenches: Function Verification of {HDL}
		 Models},
  publisher =	 kl,
  year =	 2003,
  address =	 kl_a,
  edition =	 {Second},
  annote =	 {Found on Amazon. Haven't read it. Grant Martin said it has
		 a comparison between e and Vera.}
}

@InProceedings{bergmann1999improving,
  author =	 {Jules P. Bergmann and Mark A. Horowitz},
  title =	 {Improving Coverage Analysis and Test Generation for Large
		 Designs},
  booktitle =	 iccad,
  year =	 1999,
  pages =	 {580--583},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Tom Shiple said this work was close to what he was doing.
		 Part of the work with Monica}
}

@InProceedings{bergmann1999vex,
  author =	 {Jules P. Bergmann and Mark A. Horowitz},
  title =	 {Vex: A {CAD} Toolbox},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {523--528},
  address =	 dac99a,
  month =	 jun,
  annote =	 {Describes a system based on the Verilog parser written by
		 Robert French and Jeremy Levitt at Stanford. This parser was
		 originally from Bakul Shah's parser. Includes a graphical
		 netlist browser and a finite-state machine browser.},
  url =		 {http://vextools.com},
  bdsk-url-1 =	 {http://vextools.com}
}

@InProceedings{berkel1991vlsi-programming,
  author =	 {Kees {van Berkel} and Joep Kessels and Marly Roncken and
		 Ronald Raeijs and Frits Schalij},
  title =	 {The {VLSI-programming} language {Tangram} and its
		 Translation into Handshake Circuits},
  booktitle =	 {Proceedings of European Design Automation (EDAC)},
  year =	 1991,
  pages =	 {384--389},
  address =	 {Amsterdam, The Netherlands},
  month =	 feb,
  annote =	 {Before van Berkel's thesis. Description of Tangram (very
		 cryptic, CSP-like), handshake circuits, and how one is
		 translated into the other.}
}

@PhDThesis{berkel1992handshake,
  author =	 {Kees {van Berkel}},
  title =	 {Handshake Circuits: An Intermediary Between Communicating
		 Processes and {VLSI}},
  school =	 {Eindhoven University of Technology},
  year =	 1992,
  address =	 {The Netherlands},
  month =	 may,
  annote =	 {Discussion of Tangram stuff. Martin Rem supervised the
		 thesis. Cryptic syntax here, much like regular expressions.
		 
		 Nice combination of theory and circuitry. Buried deeply in
		 Chapter 2 (p. 86, Thm. 3.16) is a theorem stating that the
		 parallel composition of two handshake processes is itself a
		 handshake process, meaning that the determinancy is
		 guaranteed by construction. Cute, but deeply buried.
		 
		 Looks like the interesting result on which Tangram and many
		 other things could be built. Nice. }
}

@InCollection{berkel1995vlsi,
  author =	 {Kees {van Berkel} and Martin Rem},
  title =	 {{VLSI} Programming of Asynchronous Circuits for Low Power},
  editor =	 {G. Birtwistle and A. Davis},
  booktitle =	 {Asynchronous Digital Circuit Design},
  publisher =	 sv,
  year =	 1995,
  series =	 {Workshops in Computing},
  pages =	 {151--210},
  annote =	 {From Steve Nowick. Describes the Philips Tangram stuff.
		 Apparently no electronic version. Starts at the CMOS circuit
		 level. Bunch of nice examples, but no careful discussion of
		 the Tangram formalism.}
}

@InProceedings{berman1990efficient,
  author =	 {C. Leonard Berman and David J. Hathaway and Andrea S.
		 LaPaugh and Louise H. Trevillyan},
  title =	 {Efficient Techniques for Timing Correction},
  booktitle =	 {Proceedings of the International Symposium on Circuits and
		 Systems},
  year =	 {1990},
  pages =	 {415--419},
  annote =	 {Restructuring for speeding up circuits}
}

@InProceedings{bernat2003pwcet,
  author =	 {Guillem Bernat and Antoine Colin and Stefan M. Petters},
  title =	 {{pWCET}, a Tool for Probabalistic {WCET} Analysis of
		 Real-Time Systems},
  booktitle =	 {Proceedings of the 3rd International Workshop on Worst-Case
		 Execution Time Analysis, {WCET 2003}},
  year =	 2003,
  pages =	 {21--38},
  address =	 {Porto, Portugal},
  month =	 jul,
  annote =	 {Part of the WCET paper (pWCET/RapiTime tool)}
}

@Misc{bernhard1989programming,
  author =	 {Rapha\"el Bernhard and G\'erard Berry and Fr\'ed\'eric
		 Boussinot and Georges Gonthier and Annie Ressouche and
		 Jean-Paul Rigault and Jean-Marc Tanzi},
  title =	 {Programming a Reflex Game in {Esterel V3}},
  howpublished = {http://www.esterel.org},
  year =	 1989,
  month =	 may,
  annote =	 {weil2000efficient referenced this.}
}

@Article{berry1982sequential,
  author =	 {G\'erard Berry and P. L. Curien},
  title =	 {Sequential Algorithms on Concrete Data Structures},
  journal =	 tcs,
  year =	 {1982},
  volume =	 {20},
  number =	 {3},
  pages =	 {265--321},
  month =	 jul
}

@InCollection{berry1984esterel,
  author =	 {G\'erard Berry and L. Cosserat},
  title =	 {The {ESTEREL} Synchronous Programming Language and its
		 Mathematical Semantics},
  editor =	 {S. D. Brooks and A. W. Roscoe and G. Winskel},
  booktitle =	 {Seminar on Concurrency},
  publisher =	 sv,
  year =	 {1984},
  volume =	 197,
  series =	 lncs,
  pages =	 {389--448},
  address =	 sv_a,
  annote =	 {In The Constructive Semantics of Pure Esterel, Berry cited
		 this as describing the V2 compiler.}
}

@InCollection{berry1985algebraic,
  author =	 {G\'erard Berry and P.-L. Curien},
  title =	 {Theory and Practice of Sequential Algorithms: The Kernel of
		 the Applicative Language {CDS}},
  editor =	 {Maurice Nivat and John C. Reynolds},
  booktitle =	 {Algebraic Methods in Semantics},
  publisher =	 cup,
  year =	 1985,
  chapter =	 2,
  pages =	 {35--87}
}

@Article{berry1986from,
  author =	 {G\'erard Berry and Ravi Sethi},
  title =	 {From Regular Expressions to Deterministic Automata},
  journal =	 tcs,
  year =	 1986,
  volume =	 48,
  number =	 1,
  pages =	 {117--126},
  annote =	 {Inspiration for the Esterel V3 compiler? See
		 brzozowski1964derivatives}
}

@InProceedings{berry1989incremental,
  author =	 {G\'erard Berry and Georges Gonthier},
  title =	 {Incremental Development of an {HDLC} Protocol in
		 {Esterel}},
  booktitle =	 {Proceedings of the Ninth International Symposium on
		 Protocol Specification, Testing, and Verification},
  year =	 {1989},
  url =		 {ftp://cma.cma.fr/esterel/hdlc.ps.Z},
  bdsk-url-1 =	 {ftp://cma.cma.fr/esterel/hdlc.ps.Z}
}

@InProceedings{berry1991hardware,
  author =	 {G\'erard Berry},
  title =	 {A Hardware Implementation of Pure {Esterel}},
  booktitle =	 {Proceedings of the International Workshop on Formal Methods
		 in {VLSI} Design},
  year =	 {1991},
  address =	 {Miami, Florida},
  month =	 jan
}

@TechReport{berry1991programming,
  author =	 {G\'erard Berry},
  title =	 {Programming a Digital Wristwatch in {Esterel V3}},
  institution =	 {Centre de Math\'ematiques Appliqu\'ees, Ecole des Mines de
		 Paris},
  year =	 1991,
  type =	 {Rapport de recherche},
  number =	 8,
  annote =	 {Reference for Berry's Wristwatch},
  optnote =	 {http://www.esterel.org}
}

@Article{berry1992esterel,
  author =	 {G\'erard Berry and Georges Gonthier},
  title =	 {The {Esterel} Synchronous Programming Language: Design,
		 Semantics, Implementation},
  journal =	 scicompprog,
  year =	 {1992},
  volume =	 {19},
  number =	 {2},
  pages =	 {87--152},
  month =	 nov,
  annote =	 {The primary Esterel reference},
  opturl =	 {ftp://cma.cma.fr/esterel/BerryGonthierSCP.ps.Z}
}

@Article{berry1992esterel1,
  author =	 {G\'erard Berry},
  title =	 {Esterel on Hardware},
  journal =	 {Philosophical Transactions of the {Royal Society of
		 London}. Series A},
  year =	 1992,
  volume =	 339,
  pages =	 {87--103},
  month =	 apr,
  note =	 {Issue 1652, Mechanized Reasoning and Hardware Design},
  annote =	 {Gerard said this was beginning of hardware translation.}
}

@InProceedings{berry1993communicating,
  author =	 {G\'erard Berry and S. Ramesh and R. K. Shyamasundar},
  title =	 {Communicating Reactive Processes},
  booktitle =	 popl,
  year =	 1993,
  address =	 {Charleston, Virginia},
  annote =	 {Proposes a fusion of synchronous Esterel with asynchronous
		 formalisms such as CSP, OCCAM, and Ada. Synchronous blocks
		 communicating through CSP-like communication (rendezvous).
		 Describes the exec statement.
		 
		 Basic idea: add channels to the interface of an Esterel
		 module and the rendezvous statement, which synchronizes on a
		 particular channel. Add a request, ack, and abandon signals
		 for each rendezvous, since a rendezvous statement can be
		 abandoned.
		 
		 Bank teller example.
		 
		 Includes a translation into the Meije process calculus. Not
		 clear what it's good for, although they claim it can be then
		 analyzed using the Auto model checker.
		 
		 The rendezvous/communication semantics can be described in
		 Esterel.
		 
		 Fundamentally nondeterministic, but interesting.},
  optmonth =	 {FIXME},
  optpages =	 {FIXME}
}

@InProceedings{berry1993preemption,
  author =	 {G\'erard Berry},
  title =	 {Preemption in Concurrent Systems},
  booktitle =	 {Proceedings of the 13th Conference on Foundations of
		 Software Technology and Theoretical Computer Science},
  year =	 {1993},
  series =	 lncs,
  volume =	 {761},
  pages =	 {72--93},
  address =	 {Bombay, India},
  month =	 dec,
  publisher =	 sv,
  annote =	 {Interesting, early description of termination levels.},
  opturl =	 {ftp://cma.cma.fr/esterel/}
}

@InBook{berry1993program,
  author =	 {G\'erard Berry},
  title =	 {Program Design Calculi},
  chapter =	 {The Semantics of Pure {Esterel}},
  pages =	 {361--409},
  publisher =	 sv,
  year =	 {1993},
  number =	 {118},
  series =	 {NATO ASI series. Series F, Computer and Systems Sciences},
  url =		 {ftp://cma.cma.fr/esterel/semantics.ps.gz},
  bdsk-url-1 =	 {ftp://cma.cma.fr/esterel/semantics.ps.gz}
}

@Unpublished{berry1995sc,
  author =	 {G\'erard Berry},
  title =	 {The {SC} Format Net Table},
  year =	 1995,
  note =	 {Unpublished internal documentation},
  annote =	 {Alain gave me a copy of this}
}

@Unpublished{berry1996circuit,
  author =	 {G\'erard Berry and Alain Girault},
  title =	 {Circuit Generation for Verification of {Esterel} Programs},
  year =	 1996,
  note =	 {Conference paper in preparation},
  annote =	 {Alain gave me a copy of this}
}

@Unpublished{berry1999constructive,
  author =	 {G\'erard Berry},
  title =	 {The Constructive Semantics of Pure {Esterel}},
  year =	 {1999},
  note =	 {Draft book},
  url =		 {http://www.esterel-technologies.com/files/book.zip},
  bdsk-url-1 =	 {http://www.esterel-technologies.com/files/book.zip}
}

@Article{berry2000esterel,
  author =	 {G\'erard Berry and Amar Bouali and Xavier Fornari and
		 Emmanuel Ledinot and Eric Nassor and Robert {De Simone}},
  title =	 {Esterel: A Formal Method Applied to Avionic Software
		 Development},
  journal =	 scicompprog,
  year =	 2000,
  volume =	 36,
  number =	 1,
  pages =	 {5--25},
  month =	 jan,
  annote =	 {Eric Nassor claims this is where the SEQUENCEUR and CABINE
		 examples will be described.}
}

@Manual{berry2000esterel1,
  author =	 {G\'erard Berry},
  title =	 {The {Esterel} v5 Language Primer},
  organization = {Centre de Math\'ematiques Appliqu\'ees},
  month =	 jul,
  year =	 2000,
  note =	 {Part of the Esterel compiler distribution.},
  annote =	 {Good history of Esterel}
}

@InCollection{berry2000foundations,
  author =	 {G\'erard Berry},
  title =	 {The Foundations of {Esterel}},
  booktitle =	 {Proof, Language and Interaction: Essays in Honour of Robin
		 Milner},
  publisher =	 {MIT Press},
  year =	 2000,
  annote =	 {Overview of Esterel semantics. Chemical, Newtonian, and
		 crystal models of computation. Good bibliography.}
}

@TechReport{berry2000hardware,
  author =	 {G\'erard Berry and M. Kishinevsky},
  title =	 {Hardware Esterel Language Extension Proposal},
  institution =	 {Esterel Technologies},
  year =	 2000,
  month =	 aug,
  annote =	 {Description of the language extensions, mostly the ability
		 to directly describe systems of equations.}
}

@Article{berry2000implementation,
  author =	 {G\'erard Berry and Ellen Sentovich},
  title =	 {An Implementation of Constructive Synchronous Programs in
		 {POLIS}},
  journal =	 {Formal Methods in System Design},
  year =	 2000,
  volume =	 17,
  number =	 2,
  pages =	 {165--191},
  month =	 oct,
  annote =	 {How to build synchronous systems in an asynchronous
		 setting.}
}

@Article{berry2006chaos,
  author =	 {Hugues Berry and Daniel Gracia P\'erez and Olivier Temam},
  title =	 {Chaos in computer performance},
  journal =	 {Chaos: An Interdisciplinary Journal of Nonlinear Science},
  year =	 2006,
  volume =	 16,
  number =	 013110,
  pages =	 {1--15},
  month =	 jan,
  annote =	 {From Simha. The cache behavior of bzip2 as a strange
		 attractor.},
  doi =		 {http://dx.doi.org/10.1063/1.2159147},
  bdsk-url-1 =	 {http://dx.doi.org/10.1063/1.2159147}
}

@InProceedings{bertin1993programmable,
  author =	 {Patrice Bertin and Didier Roncin and Jean Vuillemin},
  title =	 {Programmable Active Memories: a Performance Assessment},
  editor =	 {G. Borriello and C. Ebeling},
  booktitle =	 {Research on Integrated Systems: Proceedings of the 1993
		 Symposium},
  year =	 {1993},
  pages =	 {88--102},
  address =	 {Seattle, Washington},
  optannote =	 {Describes the PeRLe system to which Berry targeted the
		 first Esterel hardware translation, according to the Esterel
		 primer. Also PRL report 24.},
  url =		 {http://citeseer.nj.nec.com/bertin93programmable.html},
  bdsk-url-1 =	 {http://citeseer.nj.nec.com/bertin93programmable.html}
}

@InProceedings{bertin1999nouvelle,
  author =	 {Val\'erie Bertin and Michel Poize and Jacques Pulou},
  title =	 {Une Nouvelle M\'ethode de Compilation pour le Language
		 {ESTEREL} [{A} new method for compiling the {Esterel}
		 language]},
  booktitle =	 {Proceedings of GRAISyHM-AAA.},
  year =	 1999,
  address =	 {Lille, France},
  month =	 mar,
  annote =	 {Berry pointed me to this group. I've emailed
		 jacques.pulou@cnet.francetelecom.fr, who sent me the source.
		 The SAXO-RT compiler.
		 
		 Journ\'ees Th\'ematiques Universit\'es/Industries sur
		 l'Ad\'equation Algorithme-Archietecture pour les
		 Applications Temps-R\'eel Complexes
		 
		 Groupement de Recherche pour l'Automatisation
		 Int√{\copyright}gr√{\copyright}e et
		 Syst√{\textregistered}mes Hommes Machines.
		 
		 Ad√{\copyright}quation Algorithme-Architecture
		 
		 http://www-lasl.univ-littoral.fr/GRAISyHM-AAA-99/index.html/}
}

@InProceedings{bertin2000towards,
  author =	 {Val\'erie Bertin and Michel Poize and Jacques Pulou and
		 Joseph Sifakis},
  title =	 {Towards Validated Real-Time Software},
  booktitle =	 {Proceedings of the 12th Euromicro Conference on Real-Time
		 Systems (ECRTS)},
  year =	 2000,
  pages =	 {157--164},
  address =	 {Stockholm, Sweden},
  month =	 jun,
  annote =	 {Vaguely describes their Esterel compiler from
		 SED:bertin:98a. I got the paper from the IEEE library. This
		 is the SAXO-RT compiler.
		 
		 valerie.bertin michel.poize jacques.pulou
		 @cnet.francetelecom.fr Joseph.Sifakis@imag.fr
		 
		 Talks about the TAXYS system.},
  url =		 {http://ecrts00.twi.tudelft.nl/},
  bdsk-url-1 =	 {http://ecrts00.twi.tudelft.nl/}
}

@Article{bertozzi2004pipes,
  author =	 {D. Bertozzi and Luca Benini},
  title =	 {{\em $\times$pipes}: A Network-on-Chip Architecture for
		 Gigascale Systems-on-Chip},
  journal =	 ieeecsm,
  year =	 2004,
  volume =	 4,
  number =	 2,
  pages =	 {18-31},
  affiliation =	 {Stanford, University of Bologna},
  entered =	 {Luca Carloni, 2/15/05},
  keywords =	 {noc},
  oldkey =	 {bertozzi_csm04},
  sedtransform = {s/bertozzi_csm04/bertozzi2004pipes/}
}

@Article{bertozzi2005noc,
  author =	 {D. Bertozzi and A. Jalabert and S. Murali and R. Tamhankar
		 and S. Stergiou and Luca Benini and G. De Micheli},
  title =	 {{NoC} Synthesis Flow for Customized Domain Specific
		 Multiprocessor Systems-on-Chip},
  journal =	 transpds,
  year =	 2005,
  volume =	 16,
  number =	 2,
  pages =	 {113-129},
  month =	 feb,
  affiliation =	 {Stanford, University of Bologna},
  entered =	 {Luca Carloni, 2/15/05},
  keywords =	 {noc},
  oldkey =	 {bertozzi_tpds05},
  sedtransform = {s/bertozzi_tpds05/bertozzi2005noc/}
}

@Article{bertrand1999bdl,
  author =	 {Fr/'ed/'eric Bertrand and Michel Augeraud},
  title =	 {{BDL:} a specialized language for per-object reactive
		 control},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {347--362},
  month =	 may,
  annote =	 {Part of a special issue. UNREAD}
}

@Article{bertsekas1983distributed,
  author =	 {Dimitri P. Bertsekas},
  title =	 {Distributed Asynchronous Computation of Fixed Points},
  journal =	 {Mathematical Programming},
  year =	 {1983},
  volume =	 {27},
  number =	 {1},
  pages =	 {107--120},
  month =	 sep,
  abstract =	 {Presents an algorithmic model for distributed computation
		 of fixed points whereby several processors participate
		 simultaneously in the calculations while exchanging
		 information via communication links. The author places
		 essentially no assumptions on the ordering of computation
		 and communications between processors thereby allowing for
		 completely uncoordinated execution. He provides a general
		 convergence theorem for algorithms of this type, and
		 demonstrates its applicability to several classes of
		 problems including the calculation of fixed points of
		 contraction and monotone mappings arising in linear and
		 nonlinear systems of equations, optimization problems,
		 shortest path problems and dynamic programming.}
}

@Article{betker1997history,
  author =	 {Michael R. Betker and John S. Fernando and Shaun P.
		 Whalen},
  title =	 {The history of the microprocessor},
  journal =	 {Bell Labs Technical Journal},
  year =	 1997,
  volume =	 2,
  number =	 4,
  pages =	 {29--56},
  annote =	 {While looking for information about the 6502. Architectural
		 diagrams of the 4004, Z80, and a few others. Talks a lot
		 about RISC.},
  doi =		 {10.1002/bltj.2082},
  bdsk-url-1 =	 {http://dx.doi.org/10.1002/bltj.2082}
}

@Book{bhasker1998vhdl,
  author =	 {J. Bhasker},
  title =	 {A {VHDL} Synthesis Primer},
  publisher =	 {Star Galaxy Publishing},
  year =	 1998,
  address =	 {Allentown, Pennsylvania},
  edition =	 {Second},
  annote =	 {Randy also recommends this VHDL book.}
}

@Book{bhasker2004systemc,
  author =	 {J. Bhasker},
  title =	 {A {SystemC} Primer},
  publisher =	 {Star Galaxy Publishing},
  year =	 2004,
  address =	 {Allentown, Pennsylvania},
  edition =	 {Second},
  annote =	 {Haven't read it: on Amazon.}
}

@InProceedings{bhatia2004automatic,
  author =	 {Sapan Bhatia and Charles Consel and Anne-Fran\c{c}oise {Le
		 Meur} and Carleton Pu},
  title =	 {Automatic Specialization of Protocol Stacks in {OS}
		 kernels},
  booktitle =	 {Proceedings of the 29th Annual IEEE Conference on Local
		 Computer Networks},
  year =	 2004,
  address =	 {Tampa, Florida},
  month =	 nov,
  annote =	 {Using the Tempo Specializer to speed up TCP/IP in Linux. A
		 template for my "program specialization for speeding
		 fixed-point computation" paper, or whatever I'll call it.
		 
		 Starts by listing the speed-up possibilities and when these
		 can be done, then describes how the specialization actually
		 works (done at run-time), and finally presents experimental
		 results.},
  optpages =	 {FIXME}
}

@Article{bhattacharya2001parameterized,
  author =	 {Bishnupriya Bhattacharya and Shuvra S. Bhattacharyya},
  title =	 {Parameterized Dataflow Modeling for DSP Systems},
  journal =	 {IEEE Transactions on Signal Processing},
  year =	 2001,
  volume =	 49,
  number =	 10,
  pages =	 {2408--2421},
  month =	 oct,
  annote =	 {From Shuvra: clever dataflow scheduling}
}

@InProceedings{bhattacharyya1993scheduling,
  author =	 {Shuvra S. Bhattacharyya and Joe T. Buck and Soonhoi Ha and
		 Praveen K. Murthy and Edward A. Lee},
  title =	 {A Scheduling Framework for Minimizing Memory Requirements
		 of multirate {DSP} Systems Represented as Dataflow Graphs},
  booktitle =	 {Proceedings of the IEEE Workshop on VLSI Signal Processing
		 VI},
  year =	 1993,
  pages =	 {188--196},
  address =	 {Veldhoven, The Netherlands},
  month =	 oct,
  publisher =	 ieee,
  annote =	 {Source of the loose interdependence algorithm framework
		 (LIAF)}
}

@PhDThesis{bhattacharyya1994compiling,
  author =	 {Shuvra Shikhar Bhattacharyya},
  title =	 {Compiling Dataflow Programs for Digital Signal Processing},
  school =	 ucb,
  year =	 {1994},
  month =	 jul,
  note =	 {Available as UCB/ERL M94/52},
  annote =	 {Looped SDF Scheduling}
}

@Article{bhattacharyya1994looped,
  author =	 {Shuvra S. Bhattacharyya and Edward A. Lee},
  title =	 {Looped Schedules for Dataflow Descriptions of Multirate
		 Signal Processing Algorithms},
  journal =	 {Journal of Formal Methods in System Design},
  year =	 1994,
  volume =	 5,
  number =	 3,
  pages =	 {183--205},
  month =	 dec,
  annote =	 {Looped scheduling techniques},
  url =		 {http://ptolemy.eecs.berkeley.edu/publications/papers/94/looped_schedules}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/publications/papers/94/looped_schedules}
		 
}

@Book{bhattacharyya1996software,
  author =	 {Shuvra S. Bhattacharyya and Praveen K. Murthy and Edward A.
		 Lee},
  title =	 {Software Synthesis from Dataflow Graphs},
  publisher =	 kl,
  year =	 {1996},
  address =	 kl_a,
  annote =	 {A book on scheduling SDF for software.}
}

@Article{bhattacharyya1999synthesis,
  author =	 {Shuvra S. Bhattacharyya and Praveen K. Murthy and Edward A.
		 Lee},
  title =	 {Synthesis of Embedded Software from Synchronous Dataflow
		 Specifications},
  journal =	 {Journal of {VLSI} Signal Processing Systems},
  year =	 1999,
  volume =	 21,
  number =	 2,
  pages =	 {151--166},
  month =	 jun,
  annote =	 {A condensation of their book?},
  url =		 {http://ptolemy.eecs.berkeley.edu/publications/papers/99/synthesis/}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/publications/papers/99/synthesis/}
		 
}

@Article{bhattacharyya2000software,
  author =	 {Shuvra S. Bhattacharyya and Ranier Leupers and Peter
		 Marwedel},
  title =	 {Software Synthesis and Code Generation for Signal
		 Processing Systems},
  journal =	 {IEEE Transactions on Circuits and Systems---II: Analog and
		 Digital Signal Processing},
  year =	 2000,
  volume =	 47,
  number =	 9,
  pages =	 {849--875},
  month =	 sep,
  annote =	 {Shuvra mentioned this as a better survey of synthesis
		 techniques, more up-to-date than his book.}
}

@InProceedings{biere1999symbolic,
  author =	 {Armin Biere and Alessandro Cimatti and Edmund M. Clarke and
		 Masahiro Fujita and Yunshan Zhu},
  title =	 {Symbolic Model Checking Using {SAT} Procedures instead of
		 {BDDs}},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {317--320},
  address =	 dac99a,
  month =	 jun,
  annote =	 {From a random search of SAT procedures. Fairly obvious: how
		 to do bounded model checking. Short paper.}
}

@InProceedings{biere1999symbolic2,
  author =	 {Armin Biere and Alessandro Cimatti and Edmund M. Clarke and
		 Yunshan Zhu},
  title =	 {Symbolic Model Checking without BDDs},
  booktitle =	 tacas,
  year =	 1999,
  series =	 lncs,
  volume =	 1579,
  pages =	 {193--207},
  address =	 {Amsterdam, The Netherlands},
  month =	 mar,
  annote =	 {Random search. More details, more formal than
		 biere1999symbolic. Talks about translating LTL formulas into
		 CNF form. Talks about their BMC model checker.}
}

@InProceedings{bierman2005essence,
  author =	 {Gavin M. Bierman and Erik Meijer and Wolfram Schulte},
  title =	 {The essence of data access in {C}$\omega$},
  booktitle =	 ecoop,
  year =	 2005,
  series =	 lncs,
  volume =	 3586,
  pages =	 {287--311},
  address =	 {Glasgow, UK},
  month =	 jul
}

@InProceedings{bilsen1995cyclo-static,
  author =	 {Greet Bilsen and Marc Engels and Rudy Lauwereins and J. A.
		 Peperstraete},
  title =	 {Cyclo-Static Data Flow},
  booktitle =	 icassp,
  year =	 1995,
  pages =	 {3255--3258},
  address =	 {Detroit, Michigan},
  month =	 may,
  annote =	 {Hard to find. CSDF. Allows each port to have a sequence of
		 integer production/consumption numbers. Shows constraints on
		 directed cycles affects schedulability.},
  url =		 {ftp://ftp.esat.kuleuven.ac.be/pub/acca/GRAPE/REPORTS/g95-06.ps.Z}
		 ,
  bdsk-url-1 =	 {ftp://ftp.esat.kuleuven.ac.be/pub/acca/GRAPE/REPORTS/g95-06.ps.Z}
		 
}

@Article{bilsen1996cycle-static,
  author =	 {Greet Bilsen and Marc Engels and Rudy Lauwereins and J. A.
		 Peperstraete},
  title =	 {Cycle-Static Dataflow},
  journal =	 {IEEE Transactions on Signal Processing},
  year =	 1996,
  volume =	 44,
  number =	 2,
  pages =	 {397--408},
  month =	 feb,
  annote =	 {Describes the CSDF formalism. Is it "cyclo-static"?
		 Describes the formalism in greater detail, providing proofs
		 of correctness and liveness. It performs some sort of
		 analysis on the },
  url =		 {ftp://ftp.esat.kuleuven.ac.be/pub/acca/GRAPE/REPORTS/g95-04.ps.Z}
		 ,
  bdsk-url-1 =	 {ftp://ftp.esat.kuleuven.ac.be/pub/acca/GRAPE/REPORTS/g95-04.ps.Z}
		 
}

@Article{bini2004scheduability,
  author =	 {Enrico Bini and Giorgio C. Buttazzo},
  title =	 {Schedulability Analysis of Periodic Fixed Priority
		 Systems},
  journal =	 transcomp,
  year =	 2004,
  volume =	 53,
  number =	 11,
  pages =	 {1462--1473},
  month =	 nov,
  annote =	 {Start with Liu & Layland-style RM scheduling and progress
		 on to things like non-preemptive scheduling, shared
		 resources, etc. }
}

@InProceedings{binkley1992using,
  author =	 {David Binkley},
  title =	 {Using Semantic Differencing to Reduce the Cost of
		 Regression Testing},
  booktitle =	 {Conference on Software Maintenance},
  year =	 {1992},
  pages =	 {41--50},
  month =	 nov,
  annote =	 {Uses slicing to figure it out.}
}

@MastersThesis{birkedal1993partial,
  author =	 {Lars Birkedal and Morten Welinder},
  title =	 {Partial evaluation of {Standard} {ML}},
  school =	 {DIKU, University of Copenhagen, Denmark},
  year =	 1993,
  month =	 aug,
  url =		 {http://repository.readscheme.org/ftp/papers/topps/D-176.pdf}
		 ,
  bdsk-url-1 =	 {http://repository.readscheme.org/ftp/papers/topps/D-176.pdf}
		 
}

@Book{bishop1986data,
  author =	 {Judy Bishop},
  title =	 {Data Abstraction in Programming Languages},
  publisher =	 aw,
  year =	 {1986},
  address =	 aw_a
}

@InProceedings{bjesse1998lava,
  author =	 {Per Bjesse and Koen Claessen and Mary Sheeran and Satnam
		 Singh},
  title =	 {{Lava:} {Hardware} Design in {Haskell}},
  booktitle =	 icfp,
  year =	 1998,
  pages =	 {174--184},
  address =	 {Baltimore, Maryland},
  annote =	 {Found while looking for a Lava reference. There are some
		 later ones.}
}

@Article{blaer2009view,
  author =	 {Paul S. Blaer and Peter K. Allen},
  title =	 {View planning and automated data acquisition for
		 three-dimensional modeling of complex sites},
  journal =	 {Journal of Field Robotics},
  year =	 2009,
  volume =	 26,
  number =	 {1--11},
  pages =	 {865--891}
}

@Book{blahut1983theory,
  author =	 {Richard E. Blahut},
  title =	 {Theory and Practice of Error Control Codes},
  publisher =	 aw,
  year =	 {1983},
  address =	 aw_a,
  annote =	 {Purchased for McEliece's ECC class at Caltech}
}

@InProceedings{blanchet1998escape,
  author =	 {Bruno Blanchet},
  title =	 {Escape analysis: correctness proof, implementation and
		 experimental results},
  booktitle =	 popl,
  year =	 {1998},
  pages =	 {25--37},
  oldkey =	 {blanchet2},
  sedtransform = {s/blanchet2/blanchet1998escape/}
}

@InProceedings{blanchet1999escape,
  author =	 {Bruno Blanchet},
  title =	 {Escape analysis for Object Oriented Languages: Application
		 to {Java}},
  booktitle =	 oopsla,
  year =	 1999,
  pages =	 {20--34},
  address =	 {Denver, Colorado},
  month =	 nov
}

@InProceedings{blanchet2003static,
  author =	 {Bruno Blanchet and Patrick Cousot and Radhia Cousot and
		 J\'{e}rome Feret and Laurent Mauborgne and Antoine Min\'{e}
		 and David Monniaux and Xavier Rival},
  title =	 {A static analyzer for large safety-critical software},
  booktitle =	 pldi,
  year =	 2003,
  pages =	 {196--207},
  location =	 {San Diego, California, USA},
  oldkey =	 {astree},
  sedtransform = {s/astree/blanchet2003static/}
}

@Misc{blaza2009embedded,
  author =	 {David Blaza and Rich Nass and Michael Barr},
  title =	 {2009 Embedded Market Study},
  howpublished = {Techonline Webinar
		 http://www.techonline.com/learning/webinar/216500641},
  year =	 2009,
  month =	 {May 21},
  note =	 {Also for sale at http://tiny.cc/embedded},
  annote =	 {Nice statistics, although I only have an incomplete
		 version.}
}

@Misc{bluespecinc2004bluespec,
  author =	 {{Bluespec, Inc.}},
  title =	 {Bluespec(tm) SystemVerilog Reference Guide},
  year =	 {2004},
  note =	 {Description of the Bluespec SystemVerilog language and
		 libraries.}
}

@InProceedings{blumofe1995cilk,
  author =	 {Robert D. Blumofe and Christopher F. Joerg and Bradley C.
		 Kuszmaul and Charles E. Leiserson and Keith H. Randall and
		 Yuli Zhou},
  title =	 {{Cilk}: An Efficient Multithreaded Runtime System},
  booktitle =	 ppopp,
  year =	 1995,
  pages =	 {207--216},
  address =	 {Santa Barbara, California},
  month =	 jul,
  annote =	 {Cited in grama2003introduction. Talks about their
		 scheduler. "A Cilk multithreaded computation can be viewed
		 as a DAG that unfolds dynamically." Basically, their model
		 does not provide inter-thread communication, only data
		 passed when threads start and end. "An extension of C that
		 provides an abstraction of threads through an explicit
		 continuation-passign style."
		 
		 Uses a "work-stealing" scheduler (they give many citations)
		 in which a central processor selects another processor on
		 which to schedule work.
		 
		 Interesting to look at the performance numbers they report
		 and how they report them. Speedup a key metric.
		 
		 Very elaborate paper. 41-entry bibliography.
		 
		 Computational model very different from SHIM in that it does
		 not permit inter-thread communication. However, their
		 empirical approach and scheduling ideas may be relevant. At
		 the very least, we need to be aware of them.}
}

@InProceedings{bocchino2009parallel,
  author =	 {Robert L. Bocchino Jr. and Vikram S. Adve and Sarita V.
		 Adve and Marc Snir},
  title =	 {Parallel Programming Must Be Deterministic by Default},
  booktitle =	 {HOTPAR '09: USENIX Workshop on Hot Topics in Parallelism},
  year =	 2009,
  month =	 mar,
  doi =		 {10.1109/IPDPS.2008.4536264},
  url =		 {http://dx.doi.org/10.1109/IPDPS.2008.4536264}
}

@Article{bode1940feedback,
  author =	 {Hendrik Wade Bode},
  title =	 {Feedback Amplifier Design},
  journal =	 {Bell System Technical Journal},
  year =	 1940,
  volume =	 19,
  pages =	 42,
  annote =	 {An important early work on feedback control}
}

@Book{bode1945network,
  author =	 {Hendrik Wade Bode},
  title =	 {Network Analysis and Feedback Amplifier Design},
  publisher =	 {Van Nostrand},
  year =	 1945,
  annote =	 {Textbook version of bode1940feedback?}
}

@InProceedings{bodik1997interprocedural,
  author =	 {Rastislav Bod/'ik and Rajiv Gupta and Mary Lou Soffa},
  title =	 {Interprocedural Conditional Branch Elimination},
  booktitle =	 pldi,
  year =	 1997,
  pages =	 {146--158},
  address =	 {Las Vegas, Nevada},
  month =	 jun,
  annote =	 {Basis of Lance Leong's work on eliminating conditionals in
		 HDL compilation. Basic idea is that the single-entry,
		 single-exit function style often results in many redundant
		 conditional tests. A function often checks its arguments,
		 but the caller often controls those arguments before
		 calling. Moreover, a function often knows its return values,
		 but a caller often immediately checks them. They propose a
		 transformation where entry and exit points are split. They
		 take a demand-driven approach to analyzing correlations to
		 avoid analyzing the whole program.
		 
		 Analysis starts at a conditional and look backwards up the
		 control-flow graph to see whether the conditional predicate
		 (var relop const) is true, false, or indeterminiate at any
		 of the nodes. They draw conclusions at constant assignments
		 to the variable, other conditionals involving the variable,
		 unsigned to signed type conversion, and a dereference of a
		 pointer (must be non-zero, otherwise a seg fault). Copy
		 propagation (x = y;) is also handled.
		 
		 The answer at each node is a subset of TRUE, FALSE, UNDEF,
		 and TRANS (for function calls). Forward propagation merges
		 these so the full range of possibilities is known at each
		 node. },
  url =		 {http://www.cs.wisc.edu/~bodik/research/papers.html},
  bdsk-url-1 =	 {http://www.cs.wisc.edu/~bodik/research/papers.html}
}

@Article{bohr1995interconnect,
  author =	 {M.T. Bohr},
  title =	 {Interconnect Scaling - The Real Limiter to High Performance
		 {ULSI}},
  journal =	 iedm,
  year =	 1995,
  pages =	 {241-244},
  month =	 dec,
  affiliation =	 {Intel-Portland Technology Development},
  entered =	 {Luca Carloni,10/18/97},
  keywords =	 {interconnect scaling, deep-submicron, ULSI},
  oldkey =	 {bohr95},
  sedtransform = {s/bohr95/bohr1995interconnect/}
}

@Article{bohr1998silicon,
  author =	 {M. T. Bohr},
  title =	 {Silicon Trends and Limits for Advanced Microprocessors},
  journal =	 cacm,
  year =	 1998,
  volume =	 41,
  number =	 3,
  pages =	 {80-87},
  month =	 mar,
  affiliation =	 {Intel-Portland Technology Development},
  annote =	 {Additional layers of metal are helping to meet the
		 increasingly important need for interconnect density and
		 performance. Many challenges remain in meeting future
		 transistor and interconnect requirements, but the early
		 indications coming out of research organizations suggest
		 that integrated circuit technology will continue to
		 preogress at a healty pace for at least three or four more
		 generations. Beyond that point, financial and business
		 considerations are likely to be the main factors limiting
		 further advancementes in silicon technology. The cost of
		 patterning extremely small transistors and forming multiple
		 layers of interconnects with even more exotic materials
		 while still meeting tolerance and defect density
		 requirements will eventually become uneconomical, slowing
		 the pace of integrated circuit evolution unless other
		 feasibile means emerge},
  entered =	 {Luca Carloni,10/18/97},
  keywords =	 {interconnect scaling, deep-submicron, ULSI},
  oldkey =	 {bohr_cacm98},
  sedtransform = {s/bohr_cacm98/bohr1998silicon/}
}

@InProceedings{boldt2007worst,
  author =	 {Marian Boldt and Claus Traulsen and Reinhard von
		 Hanxleden},
  title =	 {Worst Case Reaction Time Analysis of Concurrent Reactive
		 Programs},
  booktitle =	 {Proceedings of the Workshop on Model-driven High-level
		 Programming of Embedded Systems (SLA++P)},
  year =	 2007,
  address =	 {Praga, Portugal},
  month =	 mar,
  annote =	 {About the KEP3a. Talks about estimating worst-case
		 execution time for Esterel code running on their
		 processor.}
}

@Book{bollella2000real-time,
  author =	 {Greg Bollella and Ben Brosgol and Peter Dibble and Steve
		 Furr and James Gosling and David Hardin and Mark Turnbull
		 and Rudy Belliardi and Doug Locke and Scott Robbins and
		 Pratik Solanki and Dionisio {de Niz}},
  title =	 {The Real-Time Specification for {Java}},
  publisher =	 aw,
  year =	 2000,
  address =	 aw_a,
  annote =	 {Mostly memory regions and scheduling policies.}
}

@TechReport{bollig1994on,
  author =	 {Beate Bollig and Martin Sauerhoff and Detlef Sieling and
		 Ingo Wegener},
  title =	 {On the Power of Different Types of Restricted Branching
		 Programs},
  institution =	 {Electronic Colloquium on Computational Complexity},
  year =	 {1994},
  number =	 {TR94--026},
  month =	 dec,
  annote =	 {Complexity results for various types of branching programs,
		 including k-BDDs, where a variable can be tested at most k
		 times.},
  url =		 {http://www.eccc.uni-trier.de/eccc/},
  bdsk-url-1 =	 {http://www.eccc.uni-trier.de/eccc/}
}

@Article{bolotin2004qnoc--qos,
  author =	 {E. Bolotin and I. Cidon and R. Ginosar and A. Kolodny},
  title =	 {{QNoC: QoS} architecture and design process for network on
		 chip},
  journal =	 {Journal of System Architecture},
  year =	 {2004},
  volume =	 {50},
  number =	 {2-3},
  pages =	 {105--128},
  oldkey =	 {bolotin04},
  sedtransform = {s/bolotin04/bolotin2004qnoc--qos/}
}

@Article{bolsens1997hardware-software,
  author =	 {Ivo Bolsens and Hugo J. {De Man} and Bill Lin and Karl {Van
		 Rompaey} and Steven Vercauteren and Diederik Verkest},
  title =	 {Hardware/Software Co-Design of Digital Telecommunication
		 Systems},
  journal =	 procieee,
  year =	 1997,
  volume =	 85,
  number =	 3,
  pages =	 {391--418},
  month =	 mar,
  annote =	 {Describes CoWare.
		 
		 Communication refinement is the main idea. Their technique
		 is based around remote procedure calls for communicating
		 information. So this is one way to attack them, that this
		 isn't really the right way to communicate between hardware
		 and software.
		 
		 But many of the ideas match mine: different backends for
		 various communication environments, automatic synthesis of
		 such things, etc.
		 
		 Another point of attack: efficiency. Since their approaches
		 are such high-level, and they don't talk about
		 optimizations...
		 
		 }
}

@MastersThesis{bondorf1987towards,
  author =	 {A. Bondorf},
  title =	 {Towards a Self-Applicable Partial Evaluator for Term
		 Rewriting Systems},
  school =	 {FIXME},
  year =	 1987,
  month =	 jul,
  annote =	 {The subject of the paper \cite{Bondorf:1988:Towards:WPEMC}
		 with the same title is dealt with in greater detail. In
		 addition to this, efficient compilation of the pattern
		 matching in the language Terse is discussed and
		 implemented.}
}

@Article{boni2007low-power,
  author =	 {Andrea Boni and Fernando Pianegiani and Dario Petri},
  title =	 {Low-Power and Low-Cost Implementation of {SVM}s for Smart
		 Sensors},
  journal =	 {IEEE Transactions on Instrumentation and Measurement},
  year =	 2007,
  volume =	 56,
  number =	 1,
  pages =	 {39--44},
  month =	 feb,
  annote =	 {Cites anguita2003digital. I met Dario in Trento.
		 Specifically mentions libsvn.}
}

@InProceedings{bonivento2005rialto,
  author =	 {A. Bonivento and L. P. Carloni and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Rialto: {A} Bridge between Description and Implementation
		 of Control Algorithms for Wireless Sensor Networks},
  editor =	 {W. Wolf and W. Taha},
  booktitle =	 emsoft,
  year =	 2005,
  address =	 {Jersey City, NY},
  month =	 sep,
  publisher =	 {ACM},
  affiliation =	 {Irisa, Inria, UC Berkeley, Verimag},
  annote =	 {183-186},
  entered =	 {Luca Carloni, 6/1/05},
  keywords =	 {synchrony, asynchrony, synchronous languages, GALS, LTTA},
  oldkey =	 {bonivento_emsoft05},
  sedtransform = {s/bonivento_emsoft05/bonivento2005rialto/}
}

@InProceedings{bonivento2006platform-based,
  author =	 {A. Bonivento and L. P. Carloni and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Platform-Based Design of Wireless Sensor Networks},
  booktitle =	 date,
  year =	 2006,
  address =	 {Munich, Germany},
  month =	 feb,
  publisher =	 {IEEE},
  affiliation =	 {UC Berkeley, Columbia},
  annote =	 {Invited Paper for Special Session},
  entered =	 {Luca Carloni,12/15/2005},
  keywords =	 {platform-based design, wireless sensor networks, embedded
		 software},
  oldkey =	 {bonivento_date06},
  sedtransform = {s/bonivento_date06/bonivento2006platform-based/}
}

@Book{booch1991object,
  author =	 {G. Booch},
  title =	 {Object Oriented Design with Applications},
  publisher =	 {Benjamin/Cummings},
  year =	 {1991},
  annote =	 {Excellent discussion comparing various languages, including
		 C++, Objective Pascal, Smalltalk, and CLOS.}
}

@Book{borenstein1991programming,
  author =	 {N. S. Borenstein},
  title =	 {Programming as if People Mattered: Friendly Programs,
		 Software Engineering, and Other Noble Delusions},
  publisher =	 {Princeton University Press},
  year =	 {1991}
}

@InProceedings{borkar2003parameter,
  author =	 {S. Borkar and T. Karnik and S. Narendra and J. Tschanz and
		 A. Keshavarzi and V. De},
  title =	 {Parameter Variations and Impact on Circuits and
		 Microarchitecture},
  booktitle =	 dac03,
  year =	 2003,
  pages =	 {338-342},
  address =	 dac03a,
  month =	 jun,
  entered =	 {Luca Carloni,07/12/05},
  keywords =	 {design variability, DFM},
  oldkey =	 {borkar03},
  sedtransform = {s/borkar03/borkar2003parameter/}
}

@InProceedings{borras1988centaur,
  author =	 {P. Borras and D. Cl\'emenet and Th. Despeyroux and J.
		 Incerpi and G. Kahn and B. Lang and V. Pascual},
  title =	 {{CENTAUR}: The System},
  booktitle =	 {SIGPLAN Notices 24(2):14--24, Feb. 1989},
  year =	 {1988},
  anannote =	 {A large environment development environment.},
  url =		 {ftp://babar.inria.fr/pub/centaur/papers/sde3.ps},
  bdsk-url-1 =	 {ftp://babar.inria.fr/pub/centaur/papers/sde3.ps}
}

@Article{borrione1992three,
  author =	 {Dominique Borrione and Robert Piloty and Dwight Hill and
		 Karl J. Lieberherr and Philip Moorby},
  title =	 {Three Decades of {HDLs}: Part {II}, {Colan} through
		 {Verilog}},
  journal =	 ieeedtc,
  year =	 1992,
  volume =	 9,
  number =	 3,
  pages =	 {54--63},
  month =	 sep,
  annote =	 {Comparisons with VHDL}
}

@InProceedings{bouali1993symbolic,
  author =	 {Amar Bouali and Robert {de Simone}},
  title =	 {Symbolic Bisimulation Minimisation},
  booktitle =	 {Computer Aided Verification : Fourth International
		 Workshop, CAV '92},
  year =	 {1993},
  series =	 lncs,
  volume =	 {663},
  publisher =	 sv,
  annote =	 {Didn't actually see the book -- from Gitanjali}
}

@Article{bourdoncle1992abstract,
  author =	 {Fran\c{c}ois Bourdoncle},
  title =	 {Abstract Interpretation by Dynamic Partitioning},
  journal =	 jfp,
  year =	 1992,
  volume =	 2,
  number =	 4,
  pages =	 {407--435},
  annote =	 {Contains an unclear idea about how to build abstract
		 descriptions of program states for abstract interpretation.
		 Collections of intervals?}
}

@InProceedings{bourdoncle1993abstract,
  author =	 {Fran\c{c}ois Bourdoncle},
  title =	 {Abstract Debugging of Higher-Order Imperative Languages},
  booktitle =	 pldi,
  year =	 1993,
  pages =	 {46--55},
  annote =	 {Part of the work with Monica. Describes Syntox, an abstract
		 debugger for Pascal. Solves fixedpoint equations to evaluate
		 integer and real variable ranges.},
  url =		 {http://www.cma.ensmp.fr/Francois.Bourdoncle/},
  bdsk-url-1 =	 {http://www.cma.ensmp.fr/Francois.Bourdoncle/}
}

@InProceedings{bourdoncle1993efficient,
  author =	 {Fran\c{c}ois Bourdoncle},
  title =	 {Efficient Chaotic Iteration Strategies with Widenings},
  booktitle =	 {Formal Methods in Programming and Their Applications:
		 International Conference Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {735},
  address =	 {Novosibirsk, Russia},
  month =	 jun,
  publisher =	 sv,
  annote =	 {From Tom Shiple---used in his causality paper.
		 
		 This is the algorithm used by the V5 Esterel compiler to
		 unroll cyclic circuits.},
  url =		 {http://www.ensmp.fr/~bourdonc/fmpa93.ps.Z},
  bdsk-url-1 =	 {http://www.ensmp.fr/~bourdonc/fmpa93.ps.Z}
}

@Article{boussinot1991esterel,
  author =	 {Fr\'ed\'eric Boussinot and Robert {de Simone}},
  title =	 {The {ESTEREL} Language},
  journal =	 procieee,
  year =	 {1991},
  volume =	 {79},
  number =	 {9},
  pages =	 {1293--1304},
  month =	 sep,
  annote =	 {Part of a special issue on synchronous real time systems}
}

@Misc{boussinot1992rc,
  author =	 {Fr\'{e}d\'{e}ric Boussinot and Guillaume Doumenc},
  title =	 {{RC} Reference Manual},
  year =	 {1992},
  url =		 {ftp://cma.cma.fr/pub/rc/reports/rapport16-92.ps.Z},
  bdsk-url-1 =	 {ftp://cma.cma.fr/pub/rc/reports/rapport16-92.ps.Z}
}

@TechReport{boussinot2003fairthreads,
  author =	 {Fr\'ed\'eric Boussinot},
  title =	 {{FairThreads}: mixing cooperative and preemptive threads in
		 {C}},
  institution =	 {INRIA},
  year =	 2003,
  type =	 {RR},
  number =	 5039,
  annote =	 {From Olivier: The most recent reference on FairThreads, a
		 round-robin non-preemptive scheduler.}
}

@InProceedings{boyapati2001parameterized,
  author =	 {Chandrasekhar Boyapati and Martin Rinard},
  title =	 {A Parameterized Type System for Race-Free {J}ava Programs},
  booktitle =	 oopsla,
  year =	 2001,
  pages =	 {56--69},
  address =	 {Tampa Bay, Florida},
  month =	 oct,
  annote =	 {Programmer-supplied annotations constrain each object to be
		 accessed safely by one thread, or know that it's read-only,
		 etc. Sort of a complement to SHIM in that it passes around
		 ownership of shared objects rather than the data they
		 contain.}
}

@InProceedings{boyapati2002ownership,
  author =	 {Chandrasekhar Boyapati and Robert Lee and Martin Rinard},
  title =	 {Ownership types for safe programming: Preventing data races
		 and deadlocks},
  booktitle =	 oopsla,
  year =	 2002,
  month =	 nov
}

@InProceedings{brace1990efficient,
  author =	 {Karl S. Brace and Richard L. Rudell and Randal E. Bryant},
  title =	 {Efficient Implementation of a {BDD} Package},
  booktitle =	 dac90,
  year =	 1990,
  pages =	 {40--45},
  address =	 {Orlando, Florida},
  month =	 jun,
  annote =	 {Fundamental BDD paper}
}

@Book{brand1995how,
  author =	 {Stewart Brand},
  title =	 {How Buildings Learn: What Happens After They're Built},
  publisher =	 {Penguin Books},
  year =	 1995,
  annote =	 {A marvelous book talking about how you should really be
		 thinking about long-term things when you build a building.
		 
		 Quarter of architects' revenues come from rehab p5 ``Form
		 follows funding'' p5 Three types of buildings: commercial,
		 domestic, and institutional p7 ``Institutional buildings
		 house bureaucracies, which are not allowed to fail and so
		 cannot help outgrowing their space.'' p9 All buildings grow.
		 p10 ``Buildings are layered by different rates of change''
		 (ch 2) ``Adaptation is easiest in cheap buildings that no
		 one cares about'' (ch 3) ``...and most refined in
		 long-lasting sustained purpose buildings'' (ch 4)
		 ``Adaptation, however, is anathema to architects and to most
		 of the building professions and trades'' (ch 5) ``and the
		 gyrations of real-estate markets sever continuity in
		 buildings'' (ch 6) ``the building preservation movement
		 arose in rebellion, deliberately frustrating creative
		 architects and the free market in order to restore
		 continuity'' (ch 7) ``Focus on preservation brought a new
		 focus on maintenance'' (ch 8) ``respect for humble older
		 buildings brought investigation of their design by
		 vernacular building historians'' (ch 9) ``The same kind of
		 investigation can be made of the persistent change, mostly
		 amateur, that occurs in contemporary houses and offices''
		 (ch 10) ``Imagine designing buildings that invite
		 adaptation'' (ch 12) ``Doing it properly requires an
		 intellectual discipline that doesn't exist yet'' (appendix)
		 
		 Architectural digest is actually an interior decorating
		 magazing p12 ``a building properly conceived is several
		 layers of longevity of built components.'' p12 Four layers:
		 Shell, Services, Scenery, and Set. Actually Six: Site,
		 Structure, Skin, Services, Space plan, Stuff Site examples:
		 roads never change, but the buildings there do. Roads in
		 Boston p17
		 
		 Low-road buildings: nobody cares, nothing to preserve. Easy
		 to adapt. p24 MIT's building 20
		 
		 Magazine architecture: austere, unchanging, unrealistic.
		 
		 Zoning laws can affect development. p80 ``Continuity of
		 use'' p83
		 
		 Adaptive use -- silos into a hotel p105
		 
		 Preventive maintenance vs. minor repairs vs. large changes
		 p112 Decay is non-linear, so it makes sense to invest in
		 repair early
		 
		 ``Houses rot from the bathrooms out'' p114
		 
		 Architects get sued when things go wrong, such as for
		 facades p120
		 
		 Masonry buildings (brick, etc.) take a lot more punishment
		 p124
		 
		 ``All buildings are predictions'' p 178 ``All predictions
		 are wrong'' ``Many a building is a brilliant solution to the
		 wrong problem'' p178 Academics terrible at insisting that
		 things be designed specifically for their current research,
		 but that changes so constantly as to be ridiculous p179
		 ``Programming'' is trying to guess future uses of buildings
		 p179
		 
		 Photographing walls before they close (p198)
		 
		 Calls for a science of studying building evolution Important
		 to have pictures of change, but often aren't available.
		 
		 }
}

@Article{brand1998dont,
  author =	 {Daniel Brand and Reinaldo A. Bergamaschi and Leon Stok},
  title =	 {Don't cares in synthesis: theoretical pitfalls and
		 practical solutions},
  journal =	 transcad,
  year =	 1998,
  volume =	 17,
  number =	 4,
  pages =	 {285--304},
  month =	 apr,
  annote =	 {Discusses how to define what a don't care actually is. "The
		 following three desirable properties are mutually
		 inconsistent: unrestricted use of X's, implementing a large
		 design one partition at a time, and guaranteed correctness."
		 
		 Has some references on extracting don't cares from
		 high-level descriptions.
		 
		 Lots of examples and discussion. Nothing terribly new, it
		 seems.}
}

@InProceedings{brand2000software,
  author =	 {Daniel Brand},
  title =	 {A Software Falsifier},
  booktitle =	 {Proceedings of Software Reliability Engineering (ISSRE)},
  year =	 2000,
  pages =	 {174--185},
  address =	 {San Jose, California},
  month =	 oct
}

@TechReport{brand2003arithmetic,
  author =	 {D. Brand and F. Krohm},
  title =	 {Arithmetic Reasoning for Static Analysis of Software},
  institution =	 {IBM Research Division, T. J. Watson Research Center},
  year =	 2003,
  number =	 {RC-22905},
  address =	 {Yorktown Heights, NY 10598},
  month =	 oct,
  annote =	 {BEAM theorem prover}
}

@InProceedings{brand2007evidence,
  author =	 {Daniel Brand and Marcio Buss and Vugranam Sreedhar},
  title =	 {Evidence Based Analysis and Inferring Preconditions for Bug
		 Detection},
  booktitle =	 {Proceedings of the International Conference on Software
		 Maintenance (ICSM)},
  year =	 2007,
  pages =	 {44--53},
  address =	 {Paris, France},
  month =	 oct,
  annote =	 {A definition of a bug different from whole program. Whether
		 a statement in a procedure has a bug may depend on callees,
		 but not on callers. This calls for pointer analysis that
		 propagates no information from callers to callees, only the
		 opposite direction.}
}

@MastersThesis{brannon1993chameleon,
  author =	 {Terrence Monroe Brannon},
  title =	 {Chameleon: An Embeddable Language Perspective for Multiple
		 Computer Language Programming},
  school =	 {Lehigh University},
  year =	 {1993},
  annote =	 {A Tcl-like library that allows C, Smalltalk, Elisp, and Tcl
		 to be called from each other}
}

@InProceedings{braun1995protocol,
  author =	 {Torsten Braun and Cristophe Diot},
  title =	 {Protocol Implementation Using Integrated Layer Processing},
  booktitle =	 sigcomm,
  year =	 1995,
  pages =	 {151--161},
  address =	 {Cambridge, Massachusetts},
  month =	 aug,
  organization = {ACM},
  annote =	 {Cited by basu1998promela. These guys are from INRIA in
		 Sophia-Antipolis.
		 
		 This is an example of a concrete implementation of the idea
		 of integrated layer processing. They do not automate the
		 process.
		 
		 The idea is to reduce the number of memory accesses by not
		 storing intermediate results there. So instead of "for (;;)
		 { A; } for (;;) { B; }, do it in one go "for (;;) { A; B;
		 }". Keep everything in the cache or registers.
		 
		 They experiment with a protocol stack including encryption.
		 Alignment and blocking considerations arise: encryption
		 usually works with 8-byte blocks, and headers may also
		 require some alignment. This is exactly the sort of thing
		 protocols should share.
		 
		 Make sure to inline function calls (i.e., use macros), since
		 function call overhead can completely swamp the advantages
		 of integrating loops. }
}

@Book{brayton1984logic,
  author =	 {Robert K. Brayton and Gary D. Hachtel and Curtis T.
		 McMullen and Alberto Sangiovanni-Vincentelli},
  title =	 {Logic Minimization Algorithms for {VLSI} Synthesis},
  publisher =	 kl,
  year =	 1984,
  address =	 kl_a,
  annote =	 {Description of Espresso. Horrid typesetting}
}

@InProceedings{brayton1987mis,
  author =	 {Robert K. Brayton and Richard Rudell and Alberto
		 Sangiovanni-Vincentelli and Albert R. Wang},
  title =	 {{MIS}: A multiple-level logic optimization system},
  booktitle =	 transcad,
  year =	 1987,
  volume =	 {CAD--6},
  pages =	 {1062--1081},
  month =	 nov,
  annote =	 {Seminal reference on MIS-II, cited by
		 sentovich1992sequential.},
  number =	 6
}

@Article{brayton1990multilevel,
  author =	 {R. K. Brayton and G. D. Hachtel and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Multilevel Logic Synthesis},
  journal =	 procieee,
  year =	 {1990},
  volume =	 {78},
  number =	 {2},
  pages =	 {264--300},
  month =	 feb,
  annote =	 {The whole thing, from algebraic decomposition to technology
		 matching.}
}

@InProceedings{brayton1996vis,
  author =	 {Robert K. Brayton and Gary D. Hachtel and Alberto
		 Sangiovanni-Vincentelli and Fabio Somenzi and Adnan Aziz and
		 Szu-Tsung Cheng and Stephen Edwards and Sunil Khatri and
		 Yuji Kukimoto and Abelardo Pardo and Shaz Qadeer and Rajeev
		 K. Ranjan and Shaker Sarwary and Thomas R. Shiple and
		 Gitanjali Swamy and Tiziano Villa.},
  title =	 {{VIS}: {A} System for Verification and Synthesis},
  booktitle =	 cav1996,
  year =	 1996,
  series =	 lncs,
  volume =	 1102,
  pages =	 {428--432},
  address =	 cav1996_a,
  month =	 jul,
  publisher =	 sv,
  annote =	 {The seminal VIS reference.},
  selectivity =	 {32/93 = 34\%, 367 citations on Google Scholar},
  url =		 {http://dx.doi.org/10.1007/3-540-61474-5_95},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/3-540-61474-5_95}
}

@InProceedings{brayton1996vis-fmcad,
  author =	 {Robert K. Brayton and Gary D. Hachtel and Alberto L.
		 Sangiovanni-Vincentelli and Fabio Somenzi and Adnan Aziz and
		 Szu-Tsung Cheng and Stephen A. Edwards and Sunil P. Khatri
		 and Yuji Kukimoto and Abelardo Pardo and Shaz Qadeer and
		 Rajeev K. Ranjan and Shaker Sarwary and Thomas R. Shiple and
		 Gitanjali Swamy and Tiziano Villa},
  title =	 {{VIS}},
  booktitle =	 {Proceedings of Formal Methods in Computer-Aided Design
		 (FMCAD)},
  year =	 1996,
  volume =	 1166,
  pages =	 {248--256},
  address =	 {Palo Alto, California},
  month =	 nov,
  annote =	 {Another copy of the VIS paper?},
  url =		 {http://dx.doi.org/10.1007/BFb0031812},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/BFb0031812}
}

@InProceedings{brayton2001compatible,
  author =	 {Robert K. Brayton},
  title =	 {Compatible observability don't cares revisited},
  booktitle =	 iccad,
  year =	 2001,
  pages =	 {618--623},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Discusses some fine points of defining a particular class
		 of don't cares and updating them during logic synthesis.}
}

@InProceedings{brebner2004hyper-programmable,
  author =	 {Gordon J. Brebner and Phil James-Roxby and Eric Keller and
		 Chidamber Kulkarni},
  title =	 {Hyper-Programmable Architectures for Adaptable Networked
		 Systems},
  booktitle =	 {Proceedings of the International Conference on
		 Application-Specific Systems, Architectures and Processors
		 (ASAP)},
  year =	 2004,
  address =	 {Galveston, Texas},
  month =	 sep
}

@Article{breidenbach1989novell,
  author =	 {Susan Breidenbach},
  title =	 {Novell discounts boards; Anthem to market them},
  journal =	 {Network World},
  year =	 1989,
  volume =	 6,
  number =	 24,
  pages =	 70,
  month =	 jun,
  annote =	 {Announcement that Novell would stop selling the NE2000
		 boards and was transferring their manufacture to Anthem.
		 Also, reducing the price of the NE2000 from \$495 to \$345.
		 Called the NE2000-A. "is consistent with Novell's strategy
		 to exit the hardware business in order to boost profit
		 margins" June 19, 1989},
  url =		 {http://books.google.com/books?id=zxwEAAAAMBAJ&lpg=PA70&dq=novell%20ne2000&lr=&as_drrb_is=b&as_minm_is=0&as_miny_is=&as_maxm_is=1&as_maxy_is=1990&as_brr=0&pg=PA70#v=onepage&q=novell%20ne2000&f=true}
		 
}

@InProceedings{brent1980chip,
  author =	 {Richard P. Brent and H. T. Kung},
  title =	 {The chip complexity of binary arithmetic},
  booktitle =	 {Proceedings of the twelfth annual ACM symposium on Theory
		 of computing},
  year =	 1980,
  pages =	 {190--200},
  address =	 {Los Angeles, California},
  month =	 apr,
  annote =	 {More complexity stuff. "Multiplication is harder."}
}

@Article{brent1981area-time,
  author =	 {Richard P. Brent and H. T. Kung},
  title =	 {The Area-Time Complexity of Binary Multiplication},
  journal =	 jacm,
  year =	 1981,
  volume =	 28,
  number =	 3,
  pages =	 {521--534},
  month =	 jul,
  annote =	 {Area-time tradeoffs.}
}

@Article{brent1982regular,
  author =	 {Richard P. Brent and H. T. Kung},
  title =	 {A Regular Layout for Parallel Adders},
  journal =	 transcomp,
  year =	 1982,
  volume =	 {C-31},
  number =	 3,
  pages =	 {260--264},
  month =	 mar,
  annote =	 {Source of their adder architecture? Carry look-ahead
		 architecture, broadly.
		 
		 n-bit addition in log n time, n area}
}

@InProceedings{breuer1988cbase,
  author =	 {M. A. Breuer and W. Cheng and R. Gupta and I. Hardonag and
		 E. Horowitz and S. Y. Lin},
  title =	 {Cbase 1.0: {A} {CAD} Database for {VLSI} Circuits Using
		 Object Oriented Technology},
  booktitle =	 iccad,
  year =	 {1988},
  pages =	 {392--395},
  address =	 iccad_a,
  month =	 nov
}

@Article{breuer2000fundamental,
  author =	 {Melvin A. Breuer and Majid Sarrafzadeh and Fabio Somenzi},
  title =	 {Fundamental {CAD} Algorithms},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1449--1475},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@Book{briand1999meeting,
  author =	 {Loic P. Briand and Daniel M. Roy},
  title =	 {Meeting Deadlines in Hard Real-Time Systems: The Rate
		 Monotonic Approach},
  publisher =	 ieeecs,
  year =	 1999,
  address =	 ieeecs_a,
  annote =	 {Recommended by Brian Evans}
}

@Book{bridge1977climbing,
  author =	 {R. Bridge},
  title =	 {Climbing : {A} Guide to Mountaineering},
  publisher =	 {Charles Scribner's Sons},
  year =	 {1977},
  annote =	 {Moffitt: GV200 B74}
}

@Article{briggs1998practical,
  author =	 {Preston Briggs and Keith D. Cooper and Timothy J. Harvey
		 and L. Taylor Simpson},
  title =	 {Practical Improvements to the Construction and Destruction
		 of Static Single Assignment Form},
  journal =	 spe,
  year =	 1998,
  volume =	 28,
  number =	 8,
  pages =	 {859--881},
  month =	 jul,
  annote =	 {Stan Liao said this was a reasonable improvement on the SSA
		 computation algorithm (cf. SED:cytron:91a)}
}

@InProceedings{brin1998anatomy,
  author =	 {Sergey Brin and Lawrence Page},
  title =	 {The Anatomy of a Large-Scale Hypertextual Web Search
		 Engine},
  booktitle =	 {Proceedings of the Seventh International World Wide Web
		 Conference},
  year =	 1998,
  pages =	 {107--117},
  address =	 {Brisbane, Australia},
  month =	 apr,
  annote =	 {Describes the Google search engine.},
  url =		 {http://www-db.stanford.edu/~sergey/},
  bdsk-url-1 =	 {http://www-db.stanford.edu/~sergey/}
}

@Article{brinch-hansen1975programming,
  author =	 {Per {Brinch Hansen}},
  title =	 {The Programming Language {Concurrent-Pascal}},
  journal =	 transse,
  year =	 1975,
  volume =	 1,
  number =	 2,
  pages =	 {199--207},
  month =	 jun,
  annote =	 {Cited as the first language to have used Monitors by Robert
		 Sebasta, Concepts of Programming Langauges.
		 
		 Reprinted in Programming languages: A Grand Tour.}
}

@InProceedings{brinch-hansen1993monitors,
  author =	 {Per {Brinch Hansen}},
  title =	 {Monitors and concurrent {Pascal}: A Personal History},
  booktitle =	 {History of Programming Languages II},
  year =	 1993,
  pages =	 {1--35},
  address =	 {Cambridge, Massachusetts},
  month =	 apr,
  annote =	 {Talks about Concurrent Pascal}
}

@InProceedings{bringmann1997resource,
  author =	 {Oliver Bringmann and Wolfgang Rosenstiel},
  title =	 {Resource sharing in hierarchical synthesis},
  booktitle =	 iccad,
  year =	 1997,
  pages =	 {318--325},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Related to SHIM-to-hardware stuff.}
}

@InProceedings{bringmann1998cross-level,
  author =	 {Oliver Bringmann and Wolfgang Rosenstiel},
  title =	 {Cross-level hierarchical high-level synthesis},
  booktitle =	 date,
  year =	 1998,
  pages =	 {451--456},
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {Related to SHIM-to-hardware stuff.}
}

@InProceedings{bringmann1998synchronization,
  author =	 {Oliver Bringmann and Wolfgang Rosenstiel and Dirk
		 Reichardt},
  title =	 {Synchronization detection for multi-process hierarchical
		 synthesis},
  booktitle =	 isss,
  year =	 1998,
  pages =	 {105--110},
  address =	 {Hsinchu, Taiwan},
  month =	 dec,
  annote =	 {Discovered while I was in Darmstadt. Very relevant to the
		 hardware-synthesis-from-SHIM work. "systems focus mainly on
		 the synthesis of single process specifications" Interesting
		 papers cite it.
		 
		 Begins by talking about "hierarchical synthesis," which
		 focuses mostly on re-using pre-synthesized modules. They
		 cite their own work.
		 
		 Cites some other work on analyzing the communication in
		 systems of communicating processes (some ICCAD, etc.)
		 
		 Their main focus in on sharing resources in a hierarchical
		 graph, but they appear to build communication dependency
		 graphs that look a lot like SHIM. (A control-flow graph that
		 is occasionally connected to a partner to represent
		 communication)
		 
		 Unlike SHIM, though, they're inferring the communication
		 schedule and don't appear to assume blocking read and write
		 behavior.
		 
		 They worry about calculating execution times (i.e., number
		 of clock cycles) so they worry about unbounded loops.
		 
		 The main focus is on analyzing when communication can take
		 place. They have an algorithm.
		 
		 Relevant to the SHIM-to-hardware stuff.
		 
		 katagiri2000hardware
		 
		 ecker1995vhdl-based
		 
		 wang2003high-level
		 
		 bringmann1997resource
		 
		 bringmann1998cross-level
		 
		 bringmann2005conflict
		 
		 takach1995scheduling
		 
		 dey1997performance
		 
		 kuehlmann1992timing
		 
		 amon1993algorithm
		 
		 A. Siebenborn, O. Bringmann , W. Rosenstiel, Worst-case
		 performance analysis of parallel, communicating software
		 processes, Proceedings of the tenth international symposium
		 on Hardware/software codesign, May 06-08, 2002, Estes Park,
		 Colorado
		 
		 Oliver Bringmann , Wolfgang Rosenstiel , Axel Siebenborn,
		 Conflict analysis in multiprocess synthesis for optimized
		 system integration, Proceedings of the 3rd IEEE/ACM/IFIP
		 international conference on Hardware/software codesign and
		 system synthesis, September 19-21, 2005, Jersey City, NJ, USA
		 
		 Oliver Bringmann , Carsten Menn , Wolfgang Rosenstiel,
		 Target architecture oriented high-level synthesis for
		 multi-FPGA based emulation, Proceedings of the conference on
		 Design, automation and test in Europe, p.326-332, March
		 27-30, 2000, Paris, France
		 
		 Some references from a 290N project at Berkeley that used
		 "Architectural Compiler" (?)
		 
		 [1] T. Amon, H. Hulgaard, S. M. Burns, and G. Borriello: An
		 Algorithm for Exact Bounds on the Time Separation of Events
		 in Concurrent Systems. Proceeding of International
		 Conference of Computer Design, 1993
		 
		 [2] D. Filo, D. Ku, C. Coelho, G. De Micheli: Interface
		 Optimization for Concurrent Systems under Timing
		 Constraints. IEEE Transac- tions on VLSI, vol. 1, no. 3, pp.
		 268-281, 1993.
		 
		 [3] S. Dey and S. Bommu: Performance Analysis of a System of
		 Communicating Processes. In Proceedings of ICCAD, 1997.
		 
		 [4] O. Bringmann, W. Rosenstiel, and D. Reichardt :
		 Synchronization Detection for Multi-Process Hierarchical
		 Synthesis. Proceedings of International Symposium on System
		 Synthesis (ISSS) Hsinchu, Taiwan, 1998.
		 
		 [5] C. Hansen, F. Nascimento, and W. Rosenstiel: An Approach
		 for Extracting RT Timing Information to Annotate Algorithmic
		 VHDL Specifications. DAC, 1999
		 
		 [6] S. S. Bhattacharyya, S. Sriram, E. A. Lee:
		 Resynchronization for Multiprocessor DSP Systems, IEEE
		 Transaction on Circuits and Systems : Fundamental Theory and
		 Applications, Vol. 47, No. 11, Nov. 2000
		 
		 [7] W. Wang, A. Raghunathan, N. Jha, and S. Dey: High-level
		 Synthesis of Multi-process Behavioral Descriptions.
		 Proceedings of the 16th International Conference on VLSI
		 Design, 2003
		 
		 [8] A. Sirbenborn, O. Bringmann, and W. Rosenstiel:
		 Communication Analysis for System on Chip Design: Design,
		 Automation and Test in Europe Conference andExhibition. 2004
		 
		 }
}

@InProceedings{bringmann2005conflict,
  author =	 {Oliver Bringmann and Wolfgang Rosenstiel and Axel
		 Siebenborn},
  title =	 {Conflict analysis in multiprocess synthesis for optimized
		 system integration},
  booktitle =	 codesisss,
  year =	 2005,
  pages =	 {15--20},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {Part of the work by Bringmann et al. on sharing in
		 high-level synthesis.}
}

@InProceedings{brna1992framework,
  author =	 {Paul Brna and Alan Bundy and Helen Pain},
  title =	 {A Framework for the Principled Debugging of {Prolog}
		 Programs: How to Debug Non-Terminating Programs},
  editor =	 {D. R. Brough},
  booktitle =	 {Logic Programming: New Frontiers},
  year =	 {1992},
  pages =	 {22--55},
  publisher =	 kl
}

@InProceedings{brodersen2002methods,
  author =	 {R. W. Brodersen and M. A. Horowitz and D. Markovic and B.
		 Nikolic and V. Stojanovic},
  title =	 {Methods for True Power Minimization},
  booktitle =	 iccad,
  year =	 2002,
  pages =	 {35-42},
  month =	 nov,
  oldkey =	 {brodersen02},
  sedtransform = {s/brodersen02/brodersen2002methods/}
}

@Article{brookes1984theory,
  author =	 {S. D. Brookes and C. A. R. Hoare and A. W. Roscoe},
  title =	 {A Theory of Communicating Sequential Processes},
  journal =	 jacm,
  year =	 1984,
  volume =	 31,
  number =	 3,
  pages =	 {560--599},
  address =	 nyny,
  doi =		 {http://doi.acm.org/10.1145/828.833},
  issn =	 {0004-5411},
  publisher =	 {ACM},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/828.833}
}

@Article{brookes1993historical,
  author =	 {Stephen Brookes},
  title =	 {Historical Introduction to ``Concrete Domains'' by G. Kahn
		 and G. D. Plotkin},
  journal =	 tcs,
  year =	 1993,
  volume =	 121,
  number =	 {1--2},
  pages =	 {179--186},
  month =	 dec,
  annote =	 {Talks about kahn1993concrete. Berry figures in it quite a
		 lot. It's really a work of pure semantics, e.g., Scott et
		 al.}
}

@Book{brooks1975mythical,
  author =	 {F. P. Brooks},
  title =	 {The Mythical Man-Month: Essays on Software Engineering},
  publisher =	 aw,
  year =	 {1975},
  address =	 aw_a,
  annote =	 {A classic}
}

@Book{brown1948principles,
  author =	 {Gordon Stanley Brown and Donald P. Campbell},
  title =	 {Principles of Servomechanisms},
  publisher =	 jw,
  year =	 1948,
  annote =	 {Cited by lewis1992applied as an early control theory
		 text.}
}

@Book{brown1990boolean,
  author =	 {Frank Markham Brown},
  title =	 {Boolean Reasoning: The Logic of Boolean Equations},
  publisher =	 kl,
  year =	 {1990},
  address =	 kl_a,
  annote =	 {Good, but so-so notation.}
}

@Book{brown1994embedded,
  author =	 {John Forrest Brown},
  title =	 {Embedded Systems Programming in {C} and Assembly},
  publisher =	 vnr,
  year =	 1994,
  address =	 vnr_a,
  annote =	 {Rather like Barr's book. Focuses on a lengthy example of a
		 pilot control interface. A little dated, and definitely very
		 practical.}
}

@InProceedings{broy1994equations,
  author =	 {Manfred Broy},
  title =	 {Equations for Describing Dynamic Nets of Communicating
		 Systems},
  booktitle =	 {COMPASS/ADT},
  year =	 1994,
  pages =	 {170--187},
  url =		 {citeseer.ist.psu.edu/broy95equation.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/broy95equation.html}
}

@Book{bruce1980software,
  author =	 {Robert Bruce},
  title =	 {Software Debugging for Microcomputers},
  publisher =	 ph,
  year =	 1980
}

@InProceedings{bruno1998eclipse,
  author =	 {John Bruno and Eran Gabber and Banu \"Ozden and Abraham
		 Silberschatz},
  title =	 {The {Eclipse} operating system: providing quality of
		 service via reservation domains},
  booktitle =	 usenix,
  year =	 1998,
  address =	 {New Orleans, Louisiana},
  annote =	 {Cited by nesbit2007virtual.
		 
		 Quality-of-service (QoS) focused. Idea is to provide each
		 "reservation domain" a certain fraction of resources such as
		 CPU, disk I/O, etc. Scheduling algorithm: Move-to-Rear List
		 Scheduling that provides fairness, cumulative service
		 guarantees, and delay bounds.
		 
		 This Eclipse is based on Plan9. Can schedule any I/O
		 device.}
}

@InProceedings{bruns2002searching,
  author =	 {Glenn Bruns and Satish Chandra},
  title =	 {Searching for points-to analysis},
  booktitle =	 fse,
  year =	 2002,
  pages =	 {61--70},
  address =	 {Charleston, South Carolina},
  month =	 nov,
  annote =	 {Suggested by a reviewer of our SCP BEAM paper. Talks about
		 different abstractions for pointer analysis based on
		 reachability analysis. Defined over a labelled transition
		 system. Idea is to characterize pointer analysis as a
		 combination of program transformations plus reachability
		 analysis.}
}

@Article{bruns2003searching,
  author =	 {Glenn Bruns and Satish Chandra},
  title =	 {Searching for Points-To Analysis},
  journal =	 transse,
  year =	 2003,
  volume =	 29,
  number =	 10,
  pages =	 {883--897},
  month =	 nov,
  annote =	 {Expanded version of bruns2002searching}
}

@InProceedings{bryant1983race,
  author =	 {Randal E. Bryant},
  title =	 {Race Detection in {MOS} Circuits by Ternary Simulation},
  booktitle =	 {Proceedings of the International Conference on VLSI Design
		 (VLSI)},
  year =	 1983,
  pages =	 {85--95},
  address =	 {Trondheim, Norway},
  month =	 aug,
  annote =	 {Cited by bryant1987boolean.}
}

@Article{bryant1986graph-based,
  author =	 {Randal E. Bryant},
  title =	 {Graph-Based Algorithms for Boolean Function Manipulation},
  journal =	 transcomp,
  year =	 {1986},
  volume =	 {C-35},
  number =	 {8},
  pages =	 {677--691},
  month =	 aug,
  annote =	 {The seminal BDD paper}
}

@Article{bryant1987algorithmic,
  author =	 {Randal E. Bryant},
  title =	 {Algorithmic Aspects of Symbolic Switch Network Analysis},
  journal =	 transcad,
  year =	 {1987},
  volume =	 {CAD-6},
  number =	 {4},
  pages =	 {618--633},
  month =	 jul,
  annote =	 {Solving switch networks symbolically. Gaussian elimination.
		 Applicable to MOS circuit simulation.}
}

@Article{bryant1987boolean,
  author =	 {Randal E. Bryant},
  title =	 {Boolean Analysis of {MOS} Circuits},
  journal =	 transcad,
  year =	 {1987},
  volume =	 {CAD-6},
  number =	 {4},
  pages =	 {634--649},
  month =	 jul,
  annote =	 {Analyzing switch-level models of MOS circuits into boolean
		 networks}
}

@InProceedings{bryant1987cosmos,
  author =	 {Randal E. Bryant and Derek Beatty and Karl Brace and
		 Kyeongsoon Cho and Thomas Sheffler},
  title =	 {{COSMOS}: {A} Compiled Simulator for {MOS} Circuits},
  booktitle =	 dac87,
  year =	 {1987},
  pages =	 {9--16},
  address =	 dac87a,
  month =	 jun
}

@Article{bryant1987switch-level,
  author =	 {Randal E. Bryant},
  title =	 {A Switch-Level Model and Simulator for {MOS} Digital
		 Systems},
  journal =	 transcomp,
  year =	 {1987},
  volume =	 {C-33},
  number =	 {2},
  pages =	 {160--177},
  month =	 feb,
  annote =	 {Ternary-valued logic: X is the overdetermined object.
		 Develops an algebra, builds a solution scheme built on
		 Gaussian elimination and a fixed-point equation. Very
		 MOS-transistor-specific.}
}

@InProceedings{bryant1995binary,
  author =	 {Randal E. Bryant},
  title =	 {Binary Decision Diagrams and Beyond: Enabling Technologies
		 for Formal Verification},
  booktitle =	 iccad,
  year =	 {1995},
  pages =	 {236--243},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Survey of various BDD things, including free BDDs, dynamic
		 ordering, zero-suppressed BDDs, and BMDs}
}

@Article{brzozowski1964derivatives,
  author =	 {Janusz A. Brzozowski},
  title =	 {Derivatives of Regular Expressions},
  journal =	 jacm,
  year =	 1964,
  volume =	 11,
  number =	 4,
  pages =	 {481--494},
  month =	 oct,
  annote =	 {Inspiration for Berry's compilation technique}
}

@Article{brzozowski1979ternary,
  author =	 {Janusz A. Brzozowski and Michael Yoeli},
  title =	 {On a Ternary Model of Gate Networks},
  journal =	 transcomp,
  year =	 1979,
  volume =	 {C--28},
  number =	 3,
  pages =	 {178--184},
  month =	 mar,
  annote =	 {Cited in brzozowski1995asynchronous as the source of their
		 chapter 7 (ternary simulation). Cites eichelberger1965 and
		 mentions Jephson et al (1989) and Putzolu and Roth (1971).}
}

@Book{brzozowski1995asynchronous,
  author =	 {Janusz A. Brzozowski and Carl-Johan H. Seger},
  title =	 {Asynchronous Circuits},
  publisher =	 sv,
  year =	 {1995},
  annote =	 {Tom Shiple's favorite. Excellent survey of ternary
		 simulation, motivations, etc.}
}

@Article{bucci2005correctness,
  author =	 {G. Bucci and L. Sassoli and E. Vicario},
  title =	 {Correctness verification and performance analysis of real
		 time systems using stochastic preemptive Time {Petri} Nets},
  journal =	 transse,
  year =	 2005,
  volume =	 31,
  number =	 11,
  pages =	 {913--927}
}

@InProceedings{buchmann1990modeling,
  author =	 {A. P. Buchmann},
  title =	 {Modeling Heterogeneous Systems as an Active Object Store},
  year =	 1990,
  pages =	 {279--290},
  crossref =	 {dearle1990implementing},
  optannote =	 {Comparison of active object databases}
}

@Article{buchsbaum1998new,
  author =	 {Adam L. Buchsbaum and Haim Kaplan and Anne Rogers and
		 Jeffery R. Westbrook},
  title =	 {A New, Simpler Linear-Time Dominators Algorithm},
  journal =	 toplas,
  year =	 1998,
  volume =	 20,
  number =	 6,
  pages =	 {1265--1296},
  month =	 nov,
  annote =	 {Is linear versus Lengauer and Tarjan's algorithm, but this
		 comes at the expense of a more complex implementation. Does
		 not appear to be a significant improvement.}
}

@InProceedings{buck1991ptolemy,
  author =	 {Joseph T. Buck and Soonhoi Ha and Edward A. Lee and David
		 G. Messerschmitt},
  title =	 {Ptolemy: {A} Mixed-Paradigm Simulation/Prototyping Platform
		 in {C++}},
  booktitle =	 {Proceedings of the {C++} At Work Conference},
  year =	 {1991},
  address =	 {Santa Clara, California},
  month =	 nov,
  url =		 {http://ptolemy.berkeley.edu/},
  bdsk-url-1 =	 {http://ptolemy.berkeley.edu/}
}

@PhDThesis{buck1993scheduling,
  author =	 {Joseph Tobin Buck},
  title =	 {Scheduling Dynamic Dataflow Graphs with Bounded Memory
		 using the Token Flow Model},
  school =	 ucb,
  year =	 {1993},
  note =	 {Available as UCB/ERL M93/69},
  annote =	 {Boolean dataflow discussed. Ties it to Petri Nets, Karp's
		 computation graphs, and discusses when it's possible to
		 publish these things.}
}

@Article{buck1994ptolemy,
  author =	 {Joseph T. Buck and Soonhoi Ha and Edward A. Lee and David
		 G. Messerschmitt},
  title =	 {Ptolemy: {A} Framework for Simulating and Prototyping
		 Heterogeneous Systems},
  journal =	 {International Journal of Computer Simulation},
  year =	 {1994},
  volume =	 {4},
  pages =	 {155--182},
  month =	 apr,
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/JEurSim/index.html}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/JEurSim/index.html}
		 
}

@InProceedings{buck1994static,
  author =	 {Joseph Tobin Buck},
  title =	 {Static Scheduling and Code Generation from Dynamic Dataflow
		 Graphs with Integer-Valued Control Streams},
  booktitle =	 {Conference Record of the Twenty-Eighth Asilomar Conference
		 on Signals, Systems \& Computers},
  year =	 {1994},
  pages =	 {508--513},
  address =	 {Pacific Grove, CA},
  month =	 oct,
  publisher =	 ieee,
  annote =	 {Nice summary of SDF, BDF, and an extension: IDF (Integer
		 Data Flow)
		 
		 BDF uses symbolic balance equations that include
		 functionality. Strong consistency: solutions exist
		 regardless of controlling values. Weak consistency:
		 solutions only exist for certain values. Cluster to build a
		 schedule.},
  url =		 {http://ptolemy.eecs.berkeley.edu},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu}
}

@InProceedings{buck2000heterogeneous,
  author =	 {Joseph Buck and Radha Vaidyanathan},
  title =	 {Heterogeneous Modeling and Simulation of Embedded Systems
		 in {El Greco}},
  booktitle =	 {Proceedings of the Eighth International Workshop on
		 Hardware/Software Codesign (CODES)},
  year =	 2000,
  address =	 {San Diego, California},
  month =	 may,
  annote =	 {First public presentation of the El Greco work}
}

@InProceedings{buck2004brook,
  author =	 {I. Buck and T. Foley and D. Horn and J. Sugerman and K.
		 Fatahalian and M. Houston and P. Hanrahan},
  title =	 {Brook for {GPU}s: {S}tream computing on graphics hardware},
  booktitle =	 {SIGGRAPH '04: ACM SIGGRAPH 2004 Papers},
  year =	 2004,
  pages =	 {777--786}
}

@InProceedings{budiu2002compiling,
  author =	 {Mihai Budiu and Seth C. Goldstein},
  title =	 {Compiling Application-Specific Hardware},
  booktitle =	 fpl,
  year =	 2002,
  series =	 lncs,
  volume =	 2438,
  pages =	 {853--863},
  address =	 {Montpellier, France},
  month =	 sep,
  publisher =	 sv,
  annote =	 {I learned of Budiu's work from a submitted DAC paper.
		 Describes the CASH compiler briefly. Uses SUIF to transform
		 C into hyperblocks, transforms these into predicated things,
		 then transforms them to SSA form. Builds a dataflow-like
		 circuit from this mess, but doesn't describe the details.}
}

@TechReport{budiu2002pegasus,
  author =	 {Mihai Budiu and Seth C. Goldstein},
  title =	 {Pegasus: An Efficient Intermediate Representation},
  institution =	 {Carnegie-Mellon},
  year =	 2002,
  number =	 {CMU-CS-02-107},
  month =	 apr,
  annote =	 {Part of Budiu's CASH compiler work. Pegasus is an SSA-like
		 representation. Based on the idea of an asynchronous
		 dataflow machine.}
}

@PhDThesis{budiu2003spatial,
  author =	 {Mihai Budiu},
  title =	 {Spatial Computation},
  school =	 {Carnegie Mellon University, Computer Science Department},
  year =	 2003,
  month =	 dec,
  note =	 {CMU-CS-03-217},
  annote =	 {Describes his CASH compiler? The DAC paper,
		 venkataramani2004c, describes how they generate asynchronous
		 hardware from a C description. }
}

@TechReport{buhl1993recent,
  author =	 {W. F. Buhl and A. E. Erdem and F. C. Winkelmann and E. F.
		 Sowell},
  title =	 {Recent Improvements in {SPARK}: Strong Component
		 Decomposition, Multivalued Objects, and Graphical
		 Interface},
  institution =	 {Lawrence Berkeley Laboratory},
  year =	 {1993},
  number =	 {LBL-33906},
  month =	 aug,
  annote =	 {From Jean-Michel Nataf: nataf@srge.lbl.gov}
}

@InProceedings{burch1993modeling,
  author =	 {Jerry R. Burch and David Dill and Elizabeth Wolf and
		 Giovanni De Micheli},
  title =	 {Modeling Hierarchical Combinational Circuits},
  booktitle =	 {1993 IEEE/ACM International Conference on Computer-Aided
		 Design: Digest of Technical Papers},
  year =	 {1993},
  pages =	 {612--617},
  address =	 {Santa Clara, CA},
  month =	 nov,
  publisher =	 ieeecs,
  annote =	 {Ternary-valued relations}
}

@InProceedings{burchett2007lowering,
  author =	 {Kimberley Burchett and Gregory H. Cooper and Shriram
		 Krishnamurthi},
  title =	 {Lowering: a static optimization technique for transparent
		 functional reactivity},
  booktitle =	 pepm,
  year =	 2007,
  pages =	 {71--80},
  address =	 nyny,
  publisher =	 {ACM Press},
  doi =		 {http://doi.acm.org/10.1145/1244381.1244393},
  isbn =	 {978-1-59593-620-2},
  location =	 {Nice, France},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1244381.1244393}
}

@InProceedings{burckhardt2007checkfence,
  author =	 {Sebastian Burckhardt and Rajeev Alur and Milo M. K.
		 Martin},
  title =	 {Checkfence: Checking consistency of concurrent data types
		 on relaxed memory models},
  booktitle =	 pldi,
  year =	 2007,
  pages =	 {12--21},
  address =	 {San Diego, California, USA},
  month =	 jun,
  annote =	 {Worrying about out-of-order writes.}
}

@InProceedings{burd2000design,
  author =	 {T. D. Burd and R. W. Broderson},
  title =	 {Design issues for dynamic voltage scaling},
  booktitle =	 {Intl. Symp. on Low Power Electronics and Design},
  year =	 {2000},
  pages =	 {9--14},
  oldkey =	 {burd00},
  sedtransform = {s/burd00/burd2000design/}
}

@Article{burke1990interval-based,
  author =	 {Michael Burke},
  title =	 {An Interval-Based Approach to Exhaustive and Incremental
		 Interprocedural Data-Flow Analysis},
  journal =	 toplas,
  year =	 1990,
  volume =	 12,
  number =	 3,
  pages =	 {341--395},
  month =	 jul,
  annote =	 {Lengthy, very program-analysis oriented. Also concerned
		 with incremental techniques.}
}

@InProceedings{burke1995flow-insensitive,
  author =	 {M. Burke and P. Carini and J. Choi and M. Hind},
  title =	 {Flow-insensitive interprocedural alias analysis in the
		 presence of pointers},
  booktitle =	 {Proceedings of the Workshop on Languages and Compilers for
		 Parallel Computing},
  year =	 1995,
  series =	 lncs,
  volume =	 1473,
  pages =	 {234--250},
  publisher =	 sv,
  oldkey =	 {burke95},
  sedtransform = {s/burke95/burke1995flow-insensitive/}
}

@InProceedings{burnim2009asserting,
  author =	 {Burnim, Jacob and Sen, Koushik},
  title =	 {Asserting and checking determinism for multithreaded
		 programs},
  booktitle =	 {ESEC/FSE '09: Proceedings of the 7th joint meeting of the
		 European software engineering conference and the ACM SIGSOFT
		 symposium on The foundations of software engineering on
		 European software engineering conference and foundations of
		 software engineering symposium},
  year =	 {2009},
  pages =	 {3--12},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  isbn =	 {978-1-60558-001-2},
  location =	 {Amsterdam, The Netherlands},
  doi =		 {http://doi.acm.org/10.1145/1595696.1595700}
}

@InProceedings{burns1991performance,
  author =	 {Steven M. Burns and Alain J. Martin},
  title =	 {Performance Analysis and Optimization of Asynchronous
		 Circuits},
  booktitle =	 {Proceedings of the University of California/Santa Cruz
		 Conference on Advanced Research in VLSI},
  year =	 1991,
  pages =	 {71--86},
  publisher =	 {MIT Press},
  annote =	 {Cited by Luca in some of the LID work. Seems to be worrying
		 about minimum cycle mean stuff much like Dasdan et al.
		 
		 Really addressing the much more difficult problem of
		 performance analysis of asynchronous circuits vs.
		 synchronous ones. Don't use timed Petri nets; use their
		 "event-rule systems."
		 
		 Computes minimum cycle mean (notes that enumerating cycles
		 is impractical).
		 
		 Looks like it requires an explicit transition graph, then
		 computes minimum cycle mean. Has some neat symbolic work
		 with transistor sizing. Not really computing the same things
		 we are for pipelines, and takes a really different view of
		 what needs to be done.}
}

@PhDThesis{burns1991performance1,
  author =	 {Steven Morgan Burns},
  title =	 {Performance analysis and optimization of asynchronous
		 circuits},
  school =	 {California Institute of Technology},
  year =	 1991,
  address =	 {Pasadena, CA, USA},
  order_no =	 {UMI Order No. GAX91-37214}
}

@Book{burns1997real-time,
  author =	 {Alan Burns and Andy Wellings},
  title =	 {Real-Time Systems and Programming Languages},
  publisher =	 aw,
  year =	 1997,
  address =	 aw_a,
  edition =	 {Second},
  annote =	 {Cited by simon1999embedded. "Academic text aimed at
		 gradulate students."}
}

@TechReport{burrows2002finding,
  author =	 {Michael Burrows and K. Rustan and M. Leino},
  title =	 {Finding stale-value errors in concurrent programs},
  institution =	 {Systems Research Center, Compaq},
  year =	 2002,
  number =	 {2002-004},
  month =	 may
}

@Article{burstall1977transformation,
  author =	 {R M. Burstall and John Darlington},
  title =	 {A Transformation System for Developing Recursive Programs},
  journal =	 jacm,
  year =	 1977,
  volume =	 24,
  number =	 1,
  pages =	 {44--67},
  month =	 jan,
  annote =	 {Cited by proebsting1996filter.
		 
		 Transforming recursively-defined programs for more efficient
		 implementaion.
		 
		 E.g., Transform f(a,b,n) + f(c,d,n), where f is recursive,
		 into a single recursive function.
		 
		 An approach to manipulating recursively-defined functions.
		 For example, they transform the exponential implementation
		 of fibonacci into a linear one. Requires some number of
		 "eureka"-like constructions (e.g., introducing some new
		 function which the procedure shows how to use).
		 
		 They wrote a symbolic program transformation package that
		 requires some user intervention.}
}

@Article{bush2000static,
  author =	 {William R. Bush and Jonathan D. Pincus and David J.
		 Sielaff},
  title =	 {A Static Analyzer for Finding Dynamic Programming Errors},
  journal =	 spe,
  year =	 2000,
  volume =	 30,
  pages =	 {775--802},
  annote =	 {Monica's favorite: Describes Intrinsa's PREfix static
		 program checker. The basic idea is to do automated, limited,
		 exhaustive simulation on small parts of the program,
		 propogating the behavior of leaf functions up to callers.},
  url =		 {http://www3.interscience.wiley.com/cgi-bin/abstract/72001834/START}
		 ,
  bdsk-url-1 =	 {http://www3.interscience.wiley.com/cgi-bin/abstract/72001834/START}
		 
}

@InProceedings{buss2005pointer,
  author =	 {Marcio Buss and Stephen A. Edwards and Bin Yao and Daniel
		 Waddington},
  title =	 {Pointer Analysis for Source-to-Source Transformations},
  booktitle =	 {Proceedings of the 5th International Workshop on Source
		 Code Analysis and Manipulation (SCAM)},
  year =	 2005,
  pages =	 {139--148},
  address =	 {Budapest, Hungary},
  month =	 sep,
  annote =	 {My first paper with Marcio. From his work on pointer
		 analysis at Bell in the summer of 2004.},
  selectivity =	 {18/48 = 38\%},
  url =		 {http://dx.doi.org/10.1109/SCAM.2005.20},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/SCAM.2005.20}
}

@TechReport{buss2005pointer2,
  author =	 {Marcio Buss and Stephen A. Edwards and Bin Yao and Daniel
		 Waddington},
  title =	 {Pointer Analysis for {C} Programs Through {AST} Traversal},
  institution =	 cucs,
  year =	 2005,
  number =	 {CUCS--028--05},
  address =	 nyny,
  annote =	 {Tech. report version of the SCAM paper, with proofs, more
		 experimental resuts, etc.}
}

@TechReport{buss2007new,
  author =	 {Marcio Buss and Daniel Brand and Vugranam Sreedhar and
		 Stephen A. Edwards},
  title =	 {A New Abstraction for Summary-Based Pointer Analysis},
  institution =	 {IBM},
  year =	 2007,
  number =	 {RC24104},
  address =	 {New York},
  annote =	 {Submitted to SAC. Work on Marcio's pointer analysis
		 representation in BEAM.},
  url =		 {http://domino.watson.ibm.com/library/CyberDig.nsf/1e4115aea78b6e7c85256b360066f0d4/fea97cc0bb6891528525735a004fbfa3?OpenDocument}
		 ,
  bdsk-url-1 =	 {http://domino.watson.ibm.com/library/CyberDig.nsf/1e4115aea78b6e7c85256b360066f0d4/fea97cc0bb6891528525735a004fbfa3?OpenDocument}
		 
}

@InProceedings{buss2008flexible,
  author =	 {Marcio Buss and Daniel Brand and Vugranam Sreedhar and
		 Stephen A. Edwards},
  title =	 {Flexible Pointer Analysis Using Assign-Fetch Graphs},
  booktitle =	 sac,
  year =	 2008,
  pages =	 {234--239},
  address =	 {Fortaleza, Cear\'a, Brazil},
  month =	 mar,
  annote =	 {About using his assign-fetch graphs for a "flow-aware
		 analysis" that totally orders the statements in a procedure
		 for a more precise analysis.},
  selectivity =	 {384/1307 = 29.3\%},
  url =		 {http://doi.acm.org/10.1145/1363686.1363746},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1363686.1363746}
}

@PhDThesis{buss2008summary,
  author =	 {Marcio Buss},
  title =	 {Summary-Based Pointer Analysis Framework for Modular Bug
		 Finding},
  school =	 {Columbia University},
  year =	 2008,
  address =	 nyny,
  month =	 feb,
  note =	 {CUCS--013--08},
  annote =	 {Marcio's thesis and my third PhD student to deposit.
		 Describes his work in the context of IBM's BEAM tool in
		 which he proposes a more operational model of functions
		 (acyclic) and a way to analyze them, along with a neat trick
		 of embeddeding acyclic graphs in 2D and using two numbers to
		 answer reachability questions.}
}

@Article{buss2009novel,
  author =	 {Marcio Buss and Daniel Brand and Vugranam Sreedhar and
		 Stephen A. Edwards},
  title =	 {A novel analysis space for pointer analysis and its
		 application for bug finding},
  journal =	 scicompprog,
  year =	 {2009},
  note =	 {doi: 10.1016/j.scico.2009.08.002},
  optkey =	 {},
  optvolume =	 {FIXME},
  optnumber =	 {FIXME},
  optpages =	 {FIXME},
  optmonth =	 {FIXME},
  optannote =	 {Marcio's thesis (finally) distilled to a journal article.},
  url =		 {http://dx.doi.org/10.1016/j.scico.2009.08.002}
}

@Article{cai1982new,
  author =	 {{Mao-cheng} Cai},
  title =	 {A New Bound on the Length of the Shortest String Containing
		 All $r$-Permutations},
  journal =	 dm,
  year =	 1982,
  volume =	 39,
  number =	 3,
  pages =	 {329--330},
  month =	 may,
  annote =	 {Short results on the permutation problem.}
}

@InProceedings{cai2003transaction,
  author =	 {Lukai Cai and Daniel Gajski},
  title =	 {Transaction level modeling: An Overview},
  booktitle =	 codesisss,
  year =	 2003,
  pages =	 {19--24},
  address =	 {Newport Beach, California},
  month =	 oct,
  annote =	 {Random search on transaction-level modeling}
}

@InProceedings{callahan1998fast,
  author =	 {Timothy J. Callahan and Philip Chong and Andr\'{e} DeHon
		 and John Wawrzynek},
  title =	 {Fast Module Mapping and Placement for Datapaths in
		 {FPGAs}},
  booktitle =	 fpga,
  year =	 {1998},
  pages =	 {123--132},
  address =	 {Monterey, California}
}

@InProceedings{campos1994computing,
  author =	 {S\'ergio Campos and Edmund M. Clarke and W. Marrero and M.
		 Minea},
  title =	 {Computing Quantitative Characteristics of Finite-State
		 Real-Time Systems},
  booktitle =	 rtss,
  year =	 1994,
  pages =	 {266--270},
  month =	 dec,
  annote =	 {From Ed Clarke}
}

@InProceedings{campos1995timing,
  author =	 {Sergio Campos and Edmund M. {Clarke, Jr.} and W. Marrero
		 and M. Minea},
  title =	 {Timing Analysis of Industrial Real-Time Systems},
  booktitle =	 {Proceedings of the Workshop on Industrial-strength Formal
		 Specification Techniques},
  year =	 1995,
  annote =	 {Recommended by Ed Clarke.
		 
		 Different detail than campus1995verus. Talks more about
		 their model checking approach and experimental results,
		 rather than the modeling language.},
  optaddress =	 {FIXME},
  optmonth =	 {FIXME},
  optpages =	 {FIXME},
  url =		 {http://www.cs.cmu.edu/~marreo},
  bdsk-url-1 =	 {http://www.cs.cmu.edu/~marreo}
}

@InProceedings{campos1995verus,
  author =	 {Sergio Campos and Edmund M. {Clarke, Jr.} and W. Marrero
		 and M. Minea},
  title =	 {Verus: A Tool for Quantitative Analysis of Finite-State
		 Real-Time Systems},
  booktitle =	 {Proceedings of the ACM SIGPLAN Workshop on Languages,
		 Compilers, \& Tools for Real-Time Systems},
  year =	 1995,
  pages =	 {70--78},
  address =	 {La Jolla, California},
  month =	 jun,
  annote =	 {Ed Clarke recommended this.
		 
		 The Verus language is their own invention: it is good for
		 modeling concurrent software systems at a high level. They
		 have explicit delay statements, priority setting statements,
		 and integer arithmetic manipulation. They translate this
		 into a finite-state system and model check it.}
}

@Article{campos1997symbolic,
  author =	 {S\'ergio Campos and Edmund M. Clarke and Marius Minea},
  title =	 {Symbolic Techniques for Formally Verifying Industrial
		 Systems},
  journal =	 scicompprog,
  year =	 1997,
  volume =	 29,
  pages =	 {79--98},
  annote =	 {From Ed Clarke. Model-checking based, of course.}
}

@InProceedings{camposano1990scheduling,
  author =	 {Raul Camposano and Reinaldo A. Bergamaschi},
  title =	 {Scheduling and allocation II: {Redesign} using state
		 splitting},
  booktitle =	 {Proceedings of European Design Automation (EDAC)},
  year =	 1990,
  pages =	 {157--161},
  address =	 {Glasgow, Scotland},
  month =	 mar,
  annote =	 {FIXME}
}

@Article{camposano1991path-based,
  author =	 {Raul Camposano},
  title =	 {Path-based Scheduling for Synthesis},
  journal =	 transcad,
  year =	 1991,
  volume =	 10,
  number =	 1,
  pages =	 {85--93},
  month =	 jan,
  annote =	 {Cited by bergamaschi1997control-flow. Objective: minimize
		 number of control steps under resource constraints. Does it
		 on a per-path basis, which can be exponential.
		 As-fast-as-possible scheduling.
		 
		 "Each possible path is scheduled independently in an optimal
		 fasion, in the sense that the minimum number of control
		 states for the given constraints is found. Then the
		 schedules for each path are overlapped, again in an optimal
		 way."
		 
		 This is an idea for addressing the problem of conditional
		 behaviors in high-level synthesis. He doesn't consider
		 pipelining of loops.
		 
		 Builds some sort of interval graph for representing how
		 things need to be merged.
		 
		 Implemented it in APL and run on an IBM 3090/200.}
}

@Article{camposano1991vhdl,
  author =	 {Raul Camposano and L. F Saunders and R. M. Tablet.},
  title =	 {{VHDL} as Input for High-level Synthesis},
  journal =	 ieeedtc,
  year =	 1991,
  volume =	 8,
  number =	 1,
  pages =	 {43--49},
  month =	 mar,
  annote =	 {Cited in williamson1998synthesis. Interesting set of rules
		 for behavioral synthesis, i.e., allowing waits in the body
		 of a process.}
}

@Article{camposano1996embedded,
  author =	 {Raul Camposano and J\"org Wilberg},
  title =	 {Embedded System Design},
  journal =	 daes,
  year =	 {1996},
  volume =	 {1},
  pages =	 {5--50},
  annote =	 {Raul showed me a copy -- it talks about things all across
		 the map and has a few examples.}
}

@Article{camposano2000electronic,
  author =	 {Raul Camposano and M Pedram},
  title =	 {Electronic design automation at the turn of the century:
		 accomplishments and vision of the future},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1401--1403},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@InProceedings{cantrill2004dynamic,
  author =	 {Bryan M. Cantrill and Michael W. Shapiro and Adam H.
		 Leventhal},
  title =	 {Dynamic Instrumentation of Production Systems},
  booktitle =	 usenix,
  year =	 2004,
  pages =	 {15--28},
  address =	 {Boston, Massachusetts},
  month =	 jun,
  annote =	 {Describes DTrace, a programmable way to monitor programs,
		 e.g., what files they open, what system calls they make,
		 etc. Designed here for Solaris. SystemTap (stap) is an
		 open-source rip-off that seems to be available for Ubuntu.},
  url =		 {http://www.usenix.org/event/usenix04/tech/general/full_papers/cantrill/cantrill_html/}
		 ,
  bdsk-url-1 =	 {http://www.usenix.org/event/usenix04/tech/general/full_papers/cantrill/cantrill_html/}
		 
}

@InProceedings{capiluppi2003characteristics,
  author =	 {Andrea Capiluppi and Patricia Lago and Maurizio Morisio},
  title =	 {Characteristics of open source projects},
  booktitle =	 {Proceedings of the Seventh European Conference on Software
		 Maintenance and Reengineering (CSMR)},
  year =	 2003,
  pages =	 {317--327},
  address =	 {Benevento, Italy},
  month =	 mar,
  annote =	 {Cited by capiluppi2003models. The wide (400-side) study of
		 open-source projects.}
}

@InProceedings{capiluppi2003models,
  author =	 {Andrea Capiluppi},
  title =	 {Models for the evolution of {OS} projects},
  booktitle =	 {Proceedings of the International Conference on Software
		 Maintenance (ICSM)},
  year =	 2003,
  pages =	 {65--74},
  address =	 {Montr\'eal, Canada},
  annote =	 {Cited by lehman2003software. Like godfrey2000evolution,
		 lots of graphs measuring things.
		 
		 An in-depth look at some 12 active projects. Few open-source
		 projects are alive "successful projects are a minority and
		 mortality is high."}
}

@Article{cardelli1985on,
  author =	 {Luca Cardelli and Peter Wegner},
  title =	 {On Understanding Types, Data Abstraction, and
		 Polymorphism},
  journal =	 surveys,
  year =	 1985,
  volume =	 17,
  number =	 4,
  pages =	 {471--522},
  month =	 dec,
  annote =	 {Part of Monica's reading group.},
  url =		 {http://suif.stanford.edu/~brm/reading/cardelli.ps},
  bdsk-url-1 =	 {http://suif.stanford.edu/~brm/reading/cardelli.ps}
}

@InProceedings{cardelli1985squeak,
  author =	 {Luca Cardelli and Rob Pike},
  title =	 {Squeak: A Language for Communicating with Mice},
  booktitle =	 {Proceedings of the Twelfth ACM Annual Conference on
		 Computer Graphics and Interactive Techniques (SIGGRAPH)},
  year =	 1985,
  pages =	 {199--204},
  address =	 {San Francisco, California},
  annote =	 {Compilation technique resembles Esterel automata compilers.
		 Language is CSP-like, using rendezvous communication.},
  url =		 {http://www.luca.demon.co.uk/Bibliography.html},
  bdsk-url-1 =	 {http://www.luca.demon.co.uk/Bibliography.html}
}

@Article{cardelli1999service,
  author =	 {Luca Cardelli and Rowan Davies},
  title =	 {Service combinators for Web computing},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {309--316},
  month =	 may,
  annote =	 {Part of a special issue.
		 
		 A language for accessing the web. Idea is to provide
		 mechanisms for dealing with unreliable servers (timeouts,
		 slow progress, etc.) They implemented an interpreter in
		 Java. Interesting ideas, but a little primitive. Formal (?)
		 semantics defined.
		 
		 The language described here inspired WebL, which later
		 became "Compaq's Web Language."}
}

@InProceedings{carloni1999latency,
  author =	 {Luca P. Carloni and Kenneth L. McMillan and Alberto L.
		 Sangiovanni-Vincentelli},
  title =	 {Latency Insensitive Protocols},
  editor =	 {N. Halbwachs and D. Peled},
  booktitle =	 {Proceedings of the 11th International Conference on
		 Computer-Aided Verification},
  year =	 1999,
  volume =	 1633,
  pages =	 {123-133},
  address =	 {Trento, Italy},
  month =	 jul,
  publisher =	 {Springer Verlag},
  affiliation =	 {UC Berkeley, Cadence Berkeley Laboratories},
  entered =	 {Luca Carloni,3/3/99},
  keywords =	 {verification, logic synthesis, communication protocols}
}

@InProceedings{carloni1999methodology,
  author =	 {Luca. P. Carloni and Kennneth L. McMillan and Alexander
		 Saldanha and Alberto L. Sangiovanni-Vincentelli},
  title =	 {A Methodology for Correct-by-Construction
		 Latency-Insensitive Design},
  booktitle =	 iccad,
  year =	 1999,
  pages =	 {309--315},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Appeared later in "The Best of ICCAD"}
}

@InProceedings{carloni2000performance,
  author =	 {Luca P. Carloni and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Performance Analysis and Optimization of Latency
		 Insensitive Systems},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {361-367},
  month =	 jun,
  affiliation =	 {UC Berkeley},
  doi =		 {http://doi.acm.org/10.1145/337292.337441},
  entered =	 {Luca Carloni,4/20/2000, NOTE= 4 candidate best papers out
		 of 6 reviews!!},
  keywords =	 {embedded system design, logic synthesis},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/337292.337441}
}

@Article{carloni2001theory,
  author =	 {Luca P. Carloni and Kenneth L. McMillan and Alberto L.
		 Sangiovanni-Vincentelli},
  title =	 {Theory of Latency-Insensitive Design},
  journal =	 transcad,
  year =	 2001,
  volume =	 20,
  number =	 9,
  pages =	 {1059--1076},
  month =	 sep,
  affiliation =	 {UC Berkeley, CBL, PARADES},
  annote =	 {Luca considers this seminal},
  entered =	 {Luca Carloni,3/31/01},
  url =		 {http://www.gigascale.org/pubs/430.html},
  bdsk-url-1 =	 {http://www.gigascale.org/pubs/430.html}
}

@Article{carloni2002coping,
  author =	 {Luca P. Carloni and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Coping with Latency in {SOC} Design},
  journal =	 ieeemicro,
  year =	 2002,
  volume =	 22,
  number =	 5,
  pages =	 {24-35},
  month =	 {Sep-Oct},
  affiliation =	 {UC Berkeley},
  annote =	 {Special Issue on Systems on a Chip},
  entered =	 {Luca Carloni,8/3/02},
  keywords =	 {Latency, Deep Sub-Micron, Latency Insensitive Design}
}

@InProceedings{carloni2003combining,
  author =	 {Luca P. Carloni and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Combining Retiming and Recycling to Optimize the
		 Performance of Synchronous Circuits},
  booktitle =	 {Proceedings of the 16th Symposium on Integrated Circuits
		 and System Design (SBCCI)},
  year =	 2003,
  address =	 {S\~ao Paulo, Brazil},
  month =	 sep,
  annote =	 {Luca's work on recycling.}
}

@InProceedings{carloni2003formal,
  author =	 {L. P. Carloni and A. L. Sangiovanni-Vincentelli},
  title =	 {A Formal Modeling Framework for Deploying Synchronous
		 Designs on Distributed Architectures},
  booktitle =	 {FMGALS 2003: First International Workshop on Formal Methods
		 for Globally Asynchronous Locally Synchronous
		 Architectures},
  year =	 2003,
  pages =	 {11-31},
  address =	 {Pisa, Italy},
  month =	 sep,
  affiliation =	 {UC Berkeley},
  entered =	 {Luca Carloni,7/7/2003},
  keywords =	 {desynchronization, GALS, formal methods, endochrony,
		 isochrony, synchronous languages},
  oldkey =	 {carloni_fmgals03},
  sedtransform = {s/carloni_fmgals03/carloni2003formal/}
}

@InCollection{carloni2003methodology,
  author =	 {Luca P. Carloni and Kenneth L. McMillan and Alex Saldanha
		 and Alberto L. Sangiovanni-Vincentelli},
  title =	 {A Methodology for ``Correct-by-Construction'' Latency
		 Insensitive Design},
  editor =	 {Andreas Kuehlmann},
  booktitle =	 {The Best of ICCAD - 20 Years of Excellence in
		 Computer-Aided Design},
  publisher =	 kl,
  year =	 2003,
  chapter =	 12,
  pages =	 {143-158}
}

@PhDThesis{carloni2004latency-insensitive,
  author =	 {L. P. Carloni},
  title =	 {Latency-Insensitive Design},
  school =	 ucb,
  year =	 2004,
  address =	 {Electronics Research Laboratory, College of Engineering,
		 Berkeley, CA 94720},
  month =	 aug,
  note =	 {Memorandum No. UCB/ERL M04/29}
}

@TechReport{carloni2004modeling,
  author =	 {L. P. Carloni and M. Di Benedetto and A. Pinto and A.
		 Sangiovanni-Vincentelli},
  title =	 {Modeling techniques, programming languages design toolsets
		 and interchange formats for hybrid systems},
  institution =	 {IST - Columbus Project},
  year =	 {2004},
  note =	 {available at {\footnotesize\tt
		 www.columbus.gr/documents/public/WPHS/Columbus\_DHS3\_0.2\_Cover.pdf}}
		 ,
  oldkey =	 {columbusdhs3},
  sedtransform = {s/columbusdhs3/carloni2004modeling/}
}

@TechReport{carloni2004modeling*1,
  author =	 {L. P. Carloni and M. Di Benedetto and R. Passerone and A.
		 Pinto and A. Sangiovanni-Vincentelli},
  title =	 {Modeling techniques, programming languages and design
		 toolsets for hybrid systems},
  institution =	 {IST - Columbus Project},
  year =	 {2004},
  note =	 {available at {\footnotesize\tt
		 www.columbus.gr/documents/public/WPHS/Columbus\_DHS4\_0.2.pdf}},
  oldkey =	 {columbusdhs4},
  sedtransform = {s/columbusdhs4/carloni2004modeling*1/}
}

@InCollection{carloni2005platform-based,
  author =	 {L. P. Carloni and F. De Bernardinis and C. Pinello and A.
		 L. Sangiovanni-Vincentelli and M. Sgroi},
  title =	 {Platform-Based Design for Embedded Systems},
  editor =	 {Richard Zurawski},
  booktitle =	 {The Embedded Systems Handbook},
  publisher =	 {CRC Press},
  year =	 2005,
  series =	 {Industrial Electronics Series},
  address =	 {Florida},
  month =	 aug,
  oldkey =	 {carloni_platform05_ies},
  sedtransform = {s/carloni_platform05_ies/carloni2005platform-based/}
}

@InProceedings{carloni2005role,
  author =	 {L. P. Carloni},
  title =	 {The Role of Back-Pressure in Implementing
		 Latency-Insensitive Design},
  editor =	 {M. Singh and J.P. Talpin},
  booktitle =	 {FMGALS 2005: Second International Workshop on Formal
		 Methods for Globally Asynchronous Locally Synchronous
		 Architectures},
  year =	 2005,
  series =	 entcs,
  volume =	 {146},
  pages =	 {61--80},
  address =	 {Verona, Italy},
  month =	 jul,
  publisher =	 {Elsevier},
  affiliation =	 {Columbia University},
  entered =	 {Luca Carloni, 6/11/05},
  keywords =	 {hybrid systems, interchange format}
}

@Article{carloni2006framework,
  author =	 {L. P. Carloni and A. L. Sangiovanni-Vincentelli},
  title =	 {A Framework for Modeling the Distributed Deployment of
		 Synchronous Designs},
  journal =	 jfmsd,
  year =	 2006,
  volume =	 {28},
  number =	 {2},
  pages =	 {93--110},
  month =	 mar,
  note =	 {Special Issue on Formal Methods for Globally Asynchronous
		 and Locally Synchronous Design},
  affiliation =	 {Columbia University},
  entered =	 {Luca Carloni,8/3/05},
  keywords =	 {Latency, Deep Sub-Micron, Latency Insensitive Design}
}

@Article{carloni2006languages,
  author =	 {L. P. Carloni and R. Passerone and A. Pinto and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Languages and Tools for Hybrid Systems Design},
  journal =	 {Foundations and Trends in Electronic Design Automation},
  year =	 2006,
  volume =	 {1},
  number =	 {1-2},
  pages =	 {1-194},
  month =	 jul,
  address =	 {Delft, The Netherlands},
  affiliation =	 {Columbia, UC Berkeley, Cadence},
  entered =	 {Luca Carloni, 2/11/06},
  keywords =	 {hybrid systems},
  oldkey =	 {carloni_now06},
  publisher =	 {now publishers},
  sedtransform = {s/carloni_now06/carloni2006languages/}
}

@Article{carloni2006role,
  author =	 {Luca P. Carloni},
  title =	 {The Role of Back-Pressure in Implementing
		 Latency-Insensitive Systems.},
  journal =	 entcs,
  year =	 2006,
  volume =	 146,
  number =	 2,
  pages =	 {61-80},
  bibsource =	 {DBLP, http://dblp.uni-trier.de},
  ee =		 {http://dx.doi.org/10.1016/j.entcs.2005.05.036}
}

@Book{carlson1990introduction,
  author =	 {Steve Carlson},
  title =	 {Introduction to {HDL}-Based Design using {VHDL}},
  publisher =	 {Synopsys, Inc.},
  year =	 1990,
  address =	 {Mountain View, California, USA},
  annote =	 {Out of print, but Randy likes it. VHDL for logic
		 synthesis.}
}

@Article{carlstrom2004synchronous,
  author =	 {Jakob Carlstr\"om and Thomas Bod\'en},
  title =	 {Synchronous dataflow architecture for network processors},
  journal =	 ieeemicro,
  year =	 2004,
  volume =	 24,
  number =	 5,
  pages =	 {10--18},
  month =	 {September--October},
  annote =	 {Cites lee1987pipeline1. Talks about a packet-oriented
		 instruction set with deep pipelines. Interesting: a stream
		 of processors each executing instruction per packet that
		 goes by. Their chip has 200 of these. Definitely tries to
		 avoid pipeline hazards.}
}

@Article{carroll2003genetics,
  author =	 {Sean B. Carroll},
  title =	 {Genetics and the making of \emph{Homo sapiens}},
  journal =	 {Nature},
  year =	 2003,
  volume =	 422,
  pages =	 {849--857},
  month =	 apr,
  annote =	 {From Carroll's website,
		 http://www.molbio.wisc.edu/carroll/publications.html
		 
		 Nice overview of some of the answers and open questions in
		 the human evolution question. Very lengthy bibliography.
		 
		 Was human evolution special? Carroll claims no. "This
		 suggests that modification of existing structures and
		 developmental pathways, rather than the invention of new
		 features, underlies much of human evolution."
		 
		 Discussion of coding vs. non-coding numbers, how important
		 it is, etc. }
}

@Book{carroll2005endless,
  author =	 {Sean B. Carroll},
  title =	 {Endless Forms Most Beautiful: The New Science of {Evo Devo}
		 and the Making of the Animal Kingdom},
  publisher =	 {W. W. Norton},
  year =	 2005,
  annote =	 {Fantastic book about the structure of evolution and
		 developmental things. Basic idea: there's a toolkit of genes
		 that has been around for many, many years that different
		 organisms just use differently.}
}

@InProceedings{casotto1990design,
  author =	 {Andrea Casotto and A. Richard Newton and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Design Mangement Based on Design Traces},
  booktitle =	 dac90,
  year =	 1990,
  pages =	 {136--141},
  address =	 dac90a,
  month =	 jun,
  annote =	 {More about the VOV stuff}
}

@Article{casotto1993automated,
  author =	 {Andrea Casotto and Alberto Sangiovanni-Vincentelli},
  title =	 {Automated design management using traces},
  journal =	 transcad,
  year =	 1993,
  volume =	 12,
  number =	 8,
  pages =	 {1077--1095},
  month =	 aug,
  annote =	 {Andrea's VOV system, that turned into his Runtime Design
		 Automation company.}
}

@InProceedings{casotto1993run-time,
  author =	 {Andrea Casotto},
  title =	 {Run-time Requirement Tracing},
  booktitle =	 iccad,
  year =	 1993,
  pages =	 {350--355},
  address =	 {San Jose, California},
  month =	 nov,
  annote =	 {More on the VOV stuff}
}

@InProceedings{caspi1987lustre,
  author =	 {Paul Caspi and Daniel Pilaud and Nicholas Halbwachs and J.
		 A. Plaice},
  title =	 {{LUSTRE}: {A} Declarative Language for Programming
		 Synchronous Systems},
  booktitle =	 popl,
  year =	 {1987},
  pages =	 {178--188},
  address =	 {Munich, Germany},
  month =	 jan
}

@Article{caspi1992clocks,
  author =	 {Paul Caspi},
  title =	 {Clocks in Dataflow Languages},
  journal =	 tcs,
  year =	 {1992},
  volume =	 {94},
  number =	 {1},
  pages =	 {125--140},
  month =	 mar,
  abstract =	 {This paper addresses the problem of using a dataflow
		 language in 'real-time' continuously operating systems. It
		 shows that this raises a problem of bounded memory which can
		 be characterized in terms of multiple input-output
		 sequential machines, and proposes a generalization of the
		 Ginsburg-Rose theorem in this case. Finally, it shows how
		 these concepts have been applied in the clock calculus of
		 the synchronous dataflow language Lustre.},
  annote =	 {Reprint from Alain}
}

@InProceedings{caspi1994distributing,
  author =	 {Paul Caspi and Alain Girault and Daniel Pilaud},
  title =	 {Distributing Reactive Systems},
  booktitle =	 {Seventh International Conference on Parallel and
		 Distributed Computing Systems, PDCS'94},
  year =	 {1994},
  address =	 {Las Vegas, Nevada},
  month =	 oct,
  publisher =	 {ISCA},
  url =		 {http://ptolemy.eecs.berkeley.edu/~girault/Publications/Pdcs94/}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/~girault/Publications/Pdcs94/}
		 
}

@Article{caspi1999automatic,
  author =	 {Paul Caspi and Alain Girault and Daniel Pilaud},
  title =	 {Automatic Distribution of Reactive Systems for Asynchronous
		 Networks of Processors},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {416--427},
  month =	 may,
  annote =	 {He cites my thesis. Research report INRIA 3491},
  url =		 {http://www.inrialpes.fr/bip/people/girault/Publications/Tse99/}
		 ,
  bdsk-url-1 =	 {http://www.inrialpes.fr/bip/people/girault/Publications/Tse99/}
		 
}

@InProceedings{caspi2000stream,
  author =	 {Eylon Caspi and Michael Chu and Randy Huang and Joseph Yeh
		 and Yury Markovskiy and John Wawrzynek and Andr\'e DeHon},
  title =	 {Stream Computations Organized for Reconfigurable Execution
		 (SCORE): Introduction and Tutorial},
  booktitle =	 fpl,
  year =	 2000,
  series =	 lncs,
  volume =	 1896,
  pages =	 {605--614},
  address =	 {Villach, Austria},
  month =	 aug,
  annote =	 {Off Wawrzynek's page. Part of PRET work}
}

@InProceedings{caspi2001streaming,
  author =	 {Eylon Caspi and Randy Huang and Yury Markovskiy and Joseph
		 Yeh and John Wawrzynek and Andr\'e DeHon},
  title =	 {A Streaming Multi-Threaded Model},
  booktitle =	 {Proceedings of the Third Workshop on Media and Stream
		 Processors (MSP-3)},
  year =	 2001,
  address =	 {Austin, Texas},
  month =	 dec,
  annote =	 {Off Wawrzynek's page. Part of PRET work}
}

@InCollection{castellani2001localities,
  author =	 {Illaria Castellani},
  title =	 {Process Algebras with Localities},
  editor =	 {Jan A. Bergstra and Alban Ponse and Scott A. Smolka},
  booktitle =	 {Handbook of Process Algebra},
  year =	 2001,
  pages =	 {945--1046}
}

@InProceedings{castelluccia1996generating,
  author =	 {Claude Castelluccia and Walid Dabbous and Sean O'Malley},
  title =	 {Generating Efficient Protocol Code from an Abstract
		 Specification},
  booktitle =	 {Proceedings of ACM SIGCOMM},
  year =	 1996,
  pages =	 {60--71},
  address =	 {Stanford University, California},
  month =	 aug,
  annote =	 {Referenced by basu1998promela. Includes an appendix with a
		 description of the TCP stuff in Esterel.},
  url =		 {http://citeseer.nj.nec.com/castelluccia96generating.html},
  bdsk-url-1 =	 {http://citeseer.nj.nec.com/castelluccia96generating.html}
}

@Article{castelluccia1997generating,
  author =	 {Claude Castelluccia and Walid Dabbous and Sean O'Malley},
  title =	 {Generating Efficient Protocol Code from an Abstract
		 Specification},
  journal =	 transnet,
  year =	 1997,
  volume =	 5,
  number =	 4,
  pages =	 {514--524},
  month =	 aug,
  annote =	 {Same as castelluccia1996generating?
		 
		 An Esterel compiler back-end much like the Polis compiler.
		 They optimize OC, but aim at optimizing the common case,
		 which they analyze. Nice set of references.
		 
		 "State Trees" are the non-reconvergent branching programs in
		 each state. They attempt a tree-to-DAG merging to conserve
		 code size. It looks like it inserts tests, perhaps
		 reconstructing some of the context switching code I generate.
		 
		 Neat set of optimizations, including reordering, outlining
		 (removing infrequently-run portions of the code so that
		 everything else fits in a cache), inlining.
		 
		 Their example started with only 21 states, so would it
		 scale? For communication protocols, it might not matter: the
		 number of states remains reasonable. They built a TCP
		 example and did some good tests.
		 
		 This smells a little like hardware, but here they're
		 optimizing the common case, not the worst case. The
		 equivalent of static timing analysis is much harder here
		 because the frequency of execution is as important as the
		 delay, and depends on the expected inputs.}
}

@InProceedings{casu2004floorplanning,
  author =	 {M. R. Casu and L. Macchiarulo},
  title =	 {Floorplanning for Throughput},
  booktitle =	 ispd,
  year =	 2004,
  pages =	 {62-69},
  month =	 apr,
  affiliation =	 {polito},
  annote =	 {Citing my TCAD'01, ICCAD'99, and DAC'00 papers},
  entered =	 {Luca Carloni,03/12/04},
  keywords =	 {soc design, noc, deep submicron}
}

@InProceedings{casu2004issues,
  author =	 {Mario R. Casu and Luca Macchiarulo},
  title =	 {Issues in Implementing Latency Insensitive Protocols},
  booktitle =	 date,
  year =	 2004,
  pages =	 {1390-1391},
  publisher =	 {IEEE},
  isbn =	 {0-7695-2085-5-2}
}

@InProceedings{casu2004new,
  author =	 {Mario R. Casu and Luca Macchiarulo},
  title =	 {A New Approach to Latency Insensitive Design},
  booktitle =	 dac04,
  year =	 2004,
  pages =	 {576--581},
  address =	 dac04a,
  month =	 jun,
  annote =	 {Citing my TCAD'01, ICCAD'99, and DAC'00 papers},
  doi =		 {http://doi.acm.org/10.1145/996566.996725},
  entered =	 {Luca Carloni,03/12/04},
  isbn =	 {1-58113-828-8},
  keywords =	 {soc design, noc, deep submicron},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/996566.996725}
}

@InProceedings{casu2005floorplan,
  author =	 {Mario R. Casu and Luca Macchiarulo},
  title =	 {Floorplan Assisted Data Rate Enhancement through Wire
		 Pipelining: A Real Assessment},
  booktitle =	 ispd,
  year =	 2005,
  month =	 apr,
  affiliation =	 {Politecnico di Torino, Univ. of Hawaii},
  entered =	 {Luca Carloni, 2/15/05},
  keywords =	 {noc},
  oldkey =	 {casu_ispd05},
  sedtransform = {s/casu_ispd05/casu2005floorplan/}
}

@Article{casu2005throughput-driven,
  author =	 {Mario R. Casu and Luca Macchiarulo},
  title =	 {Throughput-Driven Floorplanning With Wire Pipelining},
  journal =	 transcad,
  year =	 2005,
  volume =	 24,
  number =	 5,
  pages =	 {663-675},
  month =	 may,
  affiliation =	 {Politecnico di Torino, University of Hawaii},
  entered =	 {Luca Carloni, 6/1/05},
  keywords =	 {TCAD'01, DAC'00, ICCAD'99, SBCCI'03},
  oldkey =	 {casu_tcad05},
  sedtransform = {s/casu_tcad05/casu2005throughput-driven/}
}

@Article{catthoor1988architectural,
  author =	 {Francky Catthoor and Jan Rabaey and Gert Goossens and Jef
		 L. {Van Meerbergen} and Rajeev Jain and Hugo J. {De Man} and
		 Joos Vandewalle},
  title =	 {Architectural Strategies for an Application Specific
		 Synchronous Multi-processor Environment},
  journal =	 transassp,
  year =	 1988,
  volume =	 32,
  number =	 2,
  pages =	 {265--284},
  month =	 feb,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@Misc{cbmc:website,
  author =	 {Daniel Kroening and Edmund Clarke},
  title =	 {{Carnegie-Mellon Bounded Model-Checker (CBMC)}},
  note =	 {\texttt{http://www.cprover.org/cbmc/}}
}

@Manual{celoxica2003handelc,
  title =	 {Handel-C Language Reference Manual},
  organization = {Celoxica},
  year =	 2003,
  note =	 {RM-1003-4.0},
  annote =	 {Describes the Handle-C language.},
  url =		 {http://www.celoxica.com},
  bdsk-url-1 =	 {http://www.celoxica.com}
}

@InProceedings{cesario2002component-based,
  author =	 {W. Ces\'ario and A. Baghdadi and L. Gauthier and D.
		 Lyonnard and G. Nicolescu and Y. Paviot and S. Yoo and A. A.
		 Jerraya and M. Diaz-Nava},
  title =	 {Component-Based Design Approach for Multicore {SoCs}},
  booktitle =	 dac02,
  year =	 2002,
  pages =	 {789--794},
  address =	 dac02a,
  month =	 jun,
  annote =	 {Description of their ROSES system.
		 
		 Cites balarin1997hardware-software, gajski2000specc, and }
}

@Article{chajakis1991synchrons,
  author =	 {Emmanuel D. Chajakis and Stavros A. Zenios},
  title =	 {Synchrons and Asynchronous Implementations of Relaxation
		 Algorithms for Nonlinear Network Optimization},
  journal =	 {Parallel Computing},
  year =	 {1991},
  volume =	 {17},
  number =	 {8},
  pages =	 {873--894},
  month =	 oct
}

@Article{chaki2003automated,
  author =	 {Sagar Chaki and Jo\"el Ouaknine and Karen Yorav and Edmund
		 Clarke},
  title =	 {Automated Compositional Abstraction Refinement for
		 Concurrent {C} Programs: A Two-Level Approach},
  journal =	 entcs,
  year =	 2003,
  volume =	 89,
  number =	 3,
  pages =	 {417--432},
  doi =		 {10.1016/S1571-0661(05)80004-0}
}

@InProceedings{chaki2004automated,
  author =	 {Sagar Chaki and Edmund Clarke and Jo\"el Ouaknine and
		 Natasha Sharygina},
  title =	 {Automated, Compositional and Iterative Deadlock Detection},
  booktitle =	 memocode,
  year =	 2004,
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {Counterexample-guided abstraction refinement (CEGAR). They
		 work on finite-state abstractions of C programs built by
		 their "Magic" tool.},
  url =		 {http://citeseer.ist.psu.edu/666871.html},
  bdsk-url-1 =	 {http://citeseer.ist.psu.edu/666871.html}
}

@Article{chaki2004modular,
  author =	 {Sagar Chaki and Edmund Clarke and Alex Groce and Somesh Jha
		 and Helmut Veith},
  title =	 {Modular verification of software components in {C}},
  journal =	 {IEEE Transactions on Software Engineering (TSE)},
  year =	 {2004},
  volume =	 {30},
  number =	 {6},
  pages =	 {388--402},
  month =	 {June},
  publisher =	 {IEEE Computer Society Press}
}

@InProceedings{chaki2006assume,
  author =	 {Sagar Chaki and Nishant Sinha},
  title =	 {Assume-Guarantee Reasoning for Deadlock},
  booktitle =	 fmcad,
  year =	 2006,
  pages =	 {134--141},
  address =	 {San Jose, California},
  month =	 nov,
  doi =		 {10.1109/FMCAD.2006.8},
  keywords =	 {finite automata, inference mechanisms, system
		 recoveryassume-guarantee reasoning, compositional deadlock
		 detection, compositional regular failure language
		 containment, failure automata, finite automata},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/FMCAD.2006.8}
}

@Article{chan1998model,
  author =	 {William Chan and Richard J. Anderson and Paul Beame and
		 Steve Burns and Francesmary Modugno and David Notkin and Jon
		 D. Reese},
  title =	 {Model Checking Large Software Specifications},
  journal =	 transse,
  year =	 1998,
  volume =	 24,
  number =	 7,
  pages =	 {498--520},
  month =	 jul,
  annote =	 {Using SMV to verify the TCAS II protocol (Traffic Alert and
		 Collision Avoidance System) in aircraft. It was specified in
		 RSML, a statechart-like hierarchical formalism, and they
		 translated it into SMV input. Arithmetic was the main
		 challenge.},
  url =		 {http://www.cs.washington.edu/homes/notkin/papers/mc-tse.htm}
		 ,
  bdsk-url-1 =	 {http://www.cs.washington.edu/homes/notkin/papers/mc-tse.htm}
		 
}

@Article{chandra1999teapot,
  author =	 {Satish Chandra and Bradley Richards and James R. Larus},
  title =	 {Teapot: a domain-specific language for writing cache
		 coherence protocols},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {317--333},
  month =	 may,
  annote =	 {Part of a special issue.
		 
		 Generates both a C implementation and Murphi description,
		 similar to kumar2001esp.
		 
		 Language describes a set of states and transitions. Also
		 includes recursive subroutines. Rather tedious reading.}
}

@InProceedings{chandra2004power,
  author =	 {V. Chandra and H. Schmit and A. Xu and L. Pileggi},
  title =	 {A Power Aware System Level Interconnect Design Methodology
		 for Latency-Insensitive Systems},
  booktitle =	 iccad,
  year =	 2004,
  pages =	 {275-282},
  affiliation =	 {Tabula Inc., CMU},
  annote =	 {It writes: "Latency-insensitive design methodology is a
		 solution to both the design issues mentioned above", It
		 copies verbatim the intro from my ICCAD'99 paper which is
		 cited. Goes back to the problem of FIFO sizing discussed in
		 chandra_date04 but now it focuses on multi-clock domains.},
  entered =	 {Luca Carloni, 11/1/05},
  keywords =	 {Systems-on-Chip, interconnect synthesis, latency},
  oldkey =	 {chandra_iccad04},
  sedtransform = {s/chandra_iccad04/chandra2004power/}
}

@InProceedings{chandra2008type,
  author =	 {Satish Chandra and Vijay Saraswat and Vivek Sarkar and
		 Rastislav Bodik},
  title =	 {Type inference for locality analysis of distributed data
		 structures},
  booktitle =	 ppopp,
  year =	 2008,
  pages =	 {11--22},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/1345206.1345211},
  isbn =	 {978-1-59593-795-7},
  location =	 {Salt Lake City, UT, USA},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1345206.1345211}
}

@Article{chandrakasan1992low-power,
  author =	 {A. Chandrakasan and S. Sheng and R. Brodersen},
  title =	 {Low-Power {CMOS} Digital Design},
  journal =	 jssc,
  year =	 1992,
  volume =	 27,
  number =	 4,
  pages =	 {473-484},
  month =	 apr,
  oldkey =	 {chandrakasan92},
  sedtransform = {s/chandrakasan92/chandrakasan1992low-power/}
}

@InProceedings{chandrasekaran2007programming,
  author =	 {Prakash Chandrasekaran and Christopher L. Conway and Joseph
		 M. Joy and Sriram K. Rajamani},
  title =	 {Programming Asynchronous Layers with {CLARITY}},
  booktitle =	 fse,
  year =	 2007,
  pages =	 {FIXME},
  address =	 {Cavtat near Dubrovnik, Croatia},
  month =	 sep,
  annote =	 {From Sriram. Related to device driver language things, but
		 in fact much more focused on how to write things with
		 callbacks.}
}

@Book{chandy1988parallel,
  author =	 {K. Mani Chandy and Jayadev Misra},
  title =	 {Parallel program design: A foundation},
  publisher =	 aw,
  year =	 1988,
  address =	 aw_a,
  annote =	 {Cited by dechering1999formalization.
		 
		 Their "unity" language is essentially guarded commands
		 (assignments) selected nondeterministically.
		 
		 Rather theoretical, but very algorithm-focused (how do you
		 compute shortest-paths-in-a-graph using their model, etc.)}
}

@Book{chang1990visual,
  author =	 {S-K. Chang},
  title =	 {Visual Languages and Visual Programming},
  publisher =	 {Plenum Press},
  year =	 {1990},
  annote =	 {Rather disappointing. Visual languages seem to be limited
		 to icons and how to interpret them using context-free
		 grammars.},
  callnum =	 {QA76.65.V57}
}

@InProceedings{chang1995effective,
  author =	 {W.-T. Chang and A. Klavade and Edward A. Lee},
  title =	 {Effective Heterogeneous Design and Cosimulation},
  booktitle =	 {NATO Advanced Study Institute Workshop on Hardware/Software
		 Codesign},
  year =	 {1995},
  month =	 jun,
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/effective/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/effective/}
}

@Unpublished{chang1995fsm,
  author =	 {Wan-Teh Chang},
  title =	 {{FSM} in {Ptolemy}},
  year =	 {1995},
  month =	 jul,
  note =	 {Ptolemy group internal document}
}

@Manual{chang2001libsvn,
  author =	 {Chih-Chung Chang and Chih-Jen Lin},
  title =	 {{LIBSVM}: a library for support vector machines},
  year =	 2001,
  note =	 {Software available at
		 \url{http://www.csie.ntu.edu.tw/~cjlin/libsvm}},
  annote =	 {This seems to be the SVN library everybody is using.}
}

@Article{chang2005bee2,
  author =	 {Chen Chang and John Wawrzynek and Robert W. Brodersen},
  title =	 {BEE2: A High-End Reconfigurable Computing System},
  journal =	 ieeedtc,
  year =	 2005,
  volume =	 22,
  number =	 2,
  pages =	 {114--125},
  month =	 {March-April},
  annote =	 {Off Wawrzynek's page. Part of PRET work.}
}

@InProceedings{chang2005design,
  author =	 {Chen Chang and John Wawrzynek and Robert W. Brodersen},
  title =	 {The Design and Application of {BEE2}: A High-end
		 Reconfigurable Computing System},
  booktitle =	 {HotChips 17, A Symposium on High Performance Chips},
  year =	 2005,
  address =	 {Palo Alto, California},
  month =	 aug,
  annote =	 {Off Wawrzynek's page. Part of PRET work.}
}

@InProceedings{chang2005explaining,
  author =	 {Andrew Chang and William J. Dally},
  title =	 {Explaining the gap between {ASIC} and custom power: a
		 custom perspective},
  booktitle =	 dac05,
  year =	 2005,
  pages =	 {281--284},
  address =	 dac05a,
  month =	 jun,
  doi =		 {http://doi.acm.org/10.1145/1065579.1065652},
  annote =	 {Martha found this}
}

@PhDThesis{chapman1994verified,
  author =	 {Richard Oliver Chapman},
  title =	 {Verified High Level Synthesis},
  school =	 {Cornell},
  year =	 {1994},
  annote =	 {Suggested by Dan.
		 
		 Describes his HardwarePal language, a mostly-sequential
		 Pascal derivative, defines its semantics formally, and shows
		 his translation is correct with respect to those semantics.
		 Uses a dependence flow graph to represent the program to be
		 synthesized.
		 
		 His level of "parallelism" is at the atomic statement level,
		 and does not provide a way to run processes in parallel.},
  url =		 {http://www.eng.auburn.edu/users/chapman/},
  bdsk-url-1 =	 {http://www.eng.auburn.edu/users/chapman/}
}

@InProceedings{chapman1996process-algebraic,
  author =	 {Richard Chapman and Deok Hwang},
  title =	 {A Process-Algebraic Semantics for {VHDL}},
  booktitle =	 {VHDL Forum in Europe},
  year =	 {1996},
  url =		 {http://www.eng.auburn.edu/users/chapman/},
  bdsk-url-1 =	 {http://www.eng.auburn.edu/users/chapman/}
}

@InProceedings{chapman1997formally,
  author =	 {Richard Chapman and Deok-Hyun Hwang},
  title =	 {A Formally Verified {HLS} Front-end: Translation of {VHDL}
		 to Dependence Flow Graphs},
  booktitle =	 {Proceedings of the European Design Automation Conference},
  year =	 {1997},
  url =		 {http://www.eng.auburn.edu/users/chapman/},
  bdsk-url-1 =	 {http://www.eng.auburn.edu/users/chapman/}
}

@Article{charles2005x10,
  author =	 {Philippe Charles and Christian Grothoff and Vijay Saraswat
		 and Christopher Donawa and Allan Kielstra and Kemal Ebcioglu
		 and Christoph von Praun and Vivek Sarkar},
  title =	 {X10: an object-oriented approach to non-uniform cluster
		 computing},
  journal =	 {SIGPLAN Not.},
  year =	 {2005},
  volume =	 {40},
  number =	 {10},
  pages =	 {519--538},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/1103845.1094852},
  issn =	 {0362-1340},
  publisher =	 {ACM},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1103845.1094852}
}

@Article{charlesworth1987multiway,
  author =	 {Arthur Charlesworth},
  title =	 {The multiway rendezvous},
  journal =	 toplas,
  year =	 1987,
  volume =	 9,
  number =	 3,
  pages =	 {350--366},
  address =	 nyny,
  annote =	 {was "mutiwayrendezvous1987charlesworth"},
  doi =		 {http://doi.acm.org/10.1145/24039.24050},
  issn =	 {0164-0925},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/24039.24050}
}

@Article{charny2005razr,
  author =	 {Ben Charny},
  title =	 {Razr phone boots {Motorola} to No. 2 sales slot},
  journal =	 {CNET News.com},
  year =	 2005,
  month =	 {March 3},
  annote =	 {Motorola is once again the No. 2 cell-phone maker
		 worldwide, with strong sales of its Razr handsets pushing
		 Samsung back to third place, industry analysts said.
		 
		 Industry watcher Gartner, in a report released Thursday,
		 showed how a single product can swing a company's fortunes.
		 In this case, it was the ultrathin cell phone, released in
		 July and originally intended for the ultrachic. But, in a
		 pleasant surprise for Motorola, sales really took off in
		 September, when the Razr proved to have a much wider appeal.
		 More than a million of the slim handsets have been sold.
		 
		 Motorola hopes to get an even bigger boost in the next few
		 weeks with the release of a Razr capable of playing songs
		 distributed by Apple Computer's popular iTunes service.
		 
		 As Samsung and Motorola flip-flopped position, perennial No.
		 1 Nokia lost 4 percent of its market share during 2004,
		 according to the report. The Finnish handset maker's
		 shortage of lower-priced phones early in 2004 helped
		 Motorola, Samsung, LG and Sony Ericsson gain market share.
		 But Nokia rebounded strongly, and crept back over the 30
		 percent mark by year's end, according to Gartner. No. 2
		 Motorola has a 15.4 percent share while Samsung, which
		 barely edged out Motorola briefly last year, came in with
		 12.6 percent.
		 
		 "Nokia stabilized its market share at the end of 2004, after
		 the challenges of the first two quarters," Gartner principal
		 analyst Ben Wood said in a statement. "It must regain the
		 initiative in terms of brand and technology leadership in
		 the face of strong competition."
		 
		 Overall, 674 million cell phones were sold worldwide in
		 2004, a 30 percent increase from the year before. Gartner
		 credited the increase in part to emerging cell phone markets
		 in Latin America. Growth is expected to remain robust in
		 2005, with Gartner predicting 730 million cell phone
		 sales.},
  url =		 {http://news.com.com/Razr+phone+boosts+Motorola+to+No.+2+sales+slot/2100-1039_3-5598432.html}
		 ,
  bdsk-url-1 =	 {http://news.com.com/Razr+phone+boosts+Motorola+to+No.+2+sales+slot/2100-1039_3-5598432.html}
		 
}

@InProceedings{chase1990analysis,
  author =	 {D. Chase and M. Wegman and F. Zadek},
  title =	 {Analysis of Pointers and Structures},
  booktitle =	 pldi,
  year =	 1990,
  pages =	 {296--310},
  address =	 {White Plains, New York},
  month =	 jun
}

@InProceedings{chatterjee1999relevant,
  author =	 {Ramkrishna Chatterjee and Barbara Ryder and William Landi},
  title =	 {Relevant Context Inference},
  booktitle =	 popl,
  year =	 1999,
  pages =	 {133--146},
  address =	 {San Antonio, Texas},
  month =	 jan
}

@Article{chazan1969chaotic,
  author =	 {D. Chazan and W. Miranker},
  title =	 {Chaotic Relaxation},
  journal =	 {Linear Algebra and Its Applications},
  year =	 {1969},
  volume =	 {2},
  number =	 {2},
  pages =	 {199--222},
  annote =	 {Early work--suggested by Robert's book. Relaxation for
		 linear systems. Gives a basic definition for the idea of
		 chaotic relaxation--``randomly'' updating a single entry in
		 a vector in each step, using information from the last or an
		 earlier step. Gauss-Jacobi and Gauss-Seidel schemes fit
		 exactly into this framework. A periodic scheme uses a
		 repeating pattern of updates. Gives a general theorem for
		 convergence based on spectral radius.}
}

@InProceedings{chelcea2001robust,
  author =	 {T. Chelcea and S. Nowick},
  title =	 {Robust Interfaces for Mixed-Timing Systems with Application
		 to Latency-Insensitive Protocols},
  booktitle =	 dac01,
  year =	 2001,
  pages =	 {21-26},
  address =	 dac01a,
  affiliation =	 {Columbia University},
  annote =	 {Cites my ICCAD 99 paper},
  entered =	 {Luca Carloni, 5/5/01},
  keywords =	 {synchrony,asynchrony},
  oldkey =	 {chelcea01},
  sedtransform = {s/chelcea01/chelcea2001robust/}
}

@InProceedings{chelcea2002resynthesis,
  author =	 {Tiberiu Chelcea and Steven M. Nowick},
  title =	 {Resynthesis and peephole transformations for the
		 optimization of large-scale asynchronous systems},
  booktitle =	 dac02,
  year =	 2002,
  pages =	 {405--410},
  address =	 dac02a,
  month =	 jun,
  annote =	 {Related to Tibi's thesis.}
}

@PhDThesis{chelcea2004design,
  author =	 {Tiberiu Chelcea},
  title =	 {Design and Optimization of Large-Scale Asynchronous and
		 Mixed-Timing Systems},
  school =	 {Columbia University},
  year =	 2004,
  address =	 nyny,
  annote =	 {Steve Nowick's student's work with Tangram and others.}
}

@Article{chelcea2004robust,
  author =	 {T. Chelcea and S. Nowick},
  title =	 {Robust Interfaces for Mixed-Timing Systems},
  journal =	 transvlsi,
  year =	 2004,
  volume =	 12,
  number =	 8,
  pages =	 {857-873},
  month =	 aug,
  affiliation =	 {Tufts University, IBM Austin Research Labs},
  annote =	 {Citing my ICCAD99, DAC00, TCAD01 papers.},
  entered =	 {Luca Carloni, 11/5/03},
  oldkey =	 {chelcea_tvlsi04},
  sedtransform = {s/chelcea_tvlsi04/chelcea2004robust/}
}

@Article{chen1971parallelism,
  author =	 {T. C. Chen},
  title =	 {Parallelism, Pipelining and Computer Efficiency},
  journal =	 {Computer Design},
  year =	 1971,
  volume =	 10,
  number =	 1,
  pages =	 {69--74},
  month =	 jan,
  annote =	 {Cited by ramamoorthy1977pipeline. Must be a very early
		 survey on pipelining. Interleaved pipelines.}
}

@Article{chen1992reconfigurable,
  author =	 {Dev C. Chen and Jan M. Rabaey},
  title =	 {A reconfigurable multiprocessor {IC} for rapid prototyping
		 of algorithmic-specific high-speed {DSP} data paths},
  journal =	 jssc,
  year =	 1992,
  volume =	 27,
  number =	 12,
  pages =	 {1895--1904},
  month =	 dec,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{cheng1993slicing,
  author =	 {Jingde Cheng},
  title =	 {Slicing Concurrent Programs---{A} Graph-Theoretical
		 Approach},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {749},
  pages =	 {223--240},
  publisher =	 kl,
  annote =	 {Difficult to read.}
}

@TechReport{cheng1994compiling,
  author =	 {Szu-Tsung Cheng and Robert K. Brayton},
  title =	 {Compiling {Verilog} into Automata},
  institution =	 ucb,
  year =	 {1994},
  number =	 {UCB/ERL M94/37},
  annote =	 {Describes the vl2mv compiler used within the HSIS system.
		 Accessible off the VIS homepage.},
  url =		 {http://www-cad.eecs.berkeley.edu/~vis},
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/~vis}
}

@InProceedings{cheng2000modular,
  author =	 {B. Cheng and W. Hwu},
  title =	 {Modular Interprocedural pointer analysis using access
		 paths: design implementation and evaluation},
  booktitle =	 pldi,
  year =	 {2000},
  address =	 {Vancouver, BC, Canada},
  month =	 jun
}

@InProceedings{cheong2005galsc,
  author =	 {Elaine Cheong and Jie Liu},
  title =	 {{galsC}: A Language for Event-Driven Embedded Systems},
  booktitle =	 date,
  year =	 2005,
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Luca pointed this out to me before it appeared. Interesting
		 idea.},
  optpages =	 {FIXME}
}

@InProceedings{cherem2007practical,
  author =	 {Sigmund Cherem and Radu Rugina},
  title =	 {A Practical Escape and Effect Analysis for Building
		 Lightweight Method Summaries},
  booktitle =	 cc,
  year =	 2007,
  series =	 lncs,
  volume =	 4420,
  pages =	 {172--186},
  address =	 {Braga, Portugal},
  publisher =	 sv
}

@Book{chestnut1951servomechanisms,
  author =	 {Harold Chestnut and Robert W. Mayer},
  title =	 {Servomechanisms and Regulating System Design},
  publisher =	 jw,
  year =	 1951,
  volume =	 1,
  note =	 {Volume 2 in 1955},
  annote =	 {Cited by lewis1992applied as an early control theory
		 text.}
}

@InProceedings{chiang2004low-level,
  author =	 {Chia-Chu Chiang},
  title =	 {Low-level language constructs considered harmful for
		 distributed parallel programming},
  booktitle =	 {Proceedings of the 42nd annual ACM Southeast regional
		 conference},
  year =	 2004,
  pages =	 {279--284},
  address =	 {Hustville, Alabama},
  month =	 apr,
  annote =	 {Middleware stuff.}
}

@Book{ching1979architecture,
  author =	 {Francis D. K. Ching},
  title =	 {Architecture: Form, Space \& Order},
  publisher =	 vnr,
  year =	 {1979},
  address =	 vnr_a,
  annote =	 {Purchased 941209, William Stout Architectural books, 804
		 Montgomery Street, SF, CA (415) 391-6757}
}

@InProceedings{chinnery2000closing,
  author =	 {David Chinnery and Kurt Keutzer},
  title =	 {Closing the Gap Between {ASIC} and Custom: An {ASIC}
		 Perspective},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {637--642},
  address =	 dac00a,
  month =	 jun,
  annote =	 {Martha found this.}
}

@InProceedings{chiodo1993formal,
  author =	 {Massimiliano Chiodo and Paolo Giusto and Attila Jurecska
		 and Luciano Lavagno and Harry Hsieh and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {A Formal Specification Model for Hardware/Software
		 Codesign},
  booktitle =	 {Proceeding of the International Workshop on
		 Hardware-Software Codesign},
  year =	 {1993},
  address =	 {Cambridge, Massachusetts},
  month =	 oct,
  annote =	 {The CFSM model},
  url =		 {http://www-cad.eecs.berkeley.edu/Respep/Research/hsc/abstract.html}
		 ,
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/Respep/Research/hsc/abstract.html}
		 
}

@InProceedings{chiodo1995synthesis,
  author =	 {Massimiliano Chiodo and Paolo Giusto and Attila Jurecska
		 and Luciano Lavagno and Harry Hsieh and Kei Suzuki and
		 Alberto Sangiovanni-Vincentelli and Ellen Sentovich},
  title =	 {Synthesis of Software Programs for Embedded Control
		 Applications},
  booktitle =	 dac95,
  year =	 {1995},
  pages =	 {587--592},
  address =	 dac95a,
  month =	 jun,
  publisher =	 acm,
  abstract =	 {Software components for embedded reactive real-time
		 applications must satisfy tight code size and run-time
		 constraints. Cooperating finite state machines provide a
		 convenient intermediate format for embedded system
		 co-synthesis, between high-level specification languages and
		 software or hardware implementations. We propose a software
		 generation methodology that takes advantage of the very
		 restricted class of specifications and allows for tight
		 control over the implementation cost. The methodology
		 exploits several techniques from the domain of Boolean
		 function optimization. We also describe how the simplified
		 control/data-flow graph used as an intermediate
		 representation can be used to accurately estimate the size
		 and timing cost of the final executable code.},
  annote =	 {CFSMs -> MDDs -> S-graphs -> C code},
  url =		 {ftp://ic.eecs.berkeley.edu/pub/HWSW/dac95.ps.gz},
  bdsk-url-1 =	 {ftp://ic.eecs.berkeley.edu/pub/HWSW/dac95.ps.gz}
}

@Article{chiodo1996case,
  author =	 {Massimiliano Chiodo and Daniel Engels and Paolo Giusto and
		 Harry Hsieh and Attila Jurecska and Luciano Lavagno and Kei
		 Suzuki and Alberto Sangiovanni-Vincentelli},
  title =	 {A Case Study in Computer-Aided Co-design of Embedded
		 Controllers},
  journal =	 daes,
  year =	 1996,
  volume =	 1,
  number =	 1,
  pages =	 {51-67},
  month =	 jan,
  annote =	 {The Polis Shock-Absorber Example}
}

@InProceedings{chiou2007fpga-accelerated,
  author =	 {Derek Chiou and Dam Sunwoo and Joonsoo Kim and Nikhil Patil
		 and William Reinhart and Eric Johnson and Jebediah Keefe and
		 Hari Angepat},
  title =	 {{FPGA}-Accelerated Simulation Technologies ({FAST}): Fast,
		 Full-System, Cycle-Accurate Simulators},
  booktitle =	 micro,
  year =	 2007,
  pages =	 {249--261},
  address =	 {Chicago, Illinois},
  month =	 dec,
  annote =       {Full computer system simulation on FPGAs (e.g., boot
                  Linux)}
}

@InProceedings{cho1994state,
  author =	 {Hyunwoo Cho and Gary D. Hachtel and Enrico Macii and
		 Massimo Poncino and Fabio Somenzi},
  title =	 {A State Space Decomposition Algorithm for Approximate {FSM}
		 Traversal},
  booktitle =	 {Proceedings of the European Design and Test Conference},
  year =	 {1994},
  pages =	 {137--141},
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {Tom pointed this out to me: Decomposing the latch
		 connection graph for FSM traversal}
}

@InProceedings{cho1994structural,
  author =	 {Hyunwoo Cho and Gary D. Hachtel and Enrico Macii and
		 Massimo Poncino and Fabio Somenzi},
  title =	 {A Structural Approach to State Space Decomposition for
		 Approximate Reachability Analysis},
  booktitle =	 iccd,
  year =	 1994,
  pages =	 {236--239},
  address =	 {Cambridge, Massachusetts},
  month =	 oct,
  annote =	 {Tom pointed this out to me: like SED:cho:94a.}
}

@InProceedings{choi1993efficient,
  author =	 {J. Choi and M. Burke and P. Carini},
  title =	 {Efficient flow-sensitive interprocedural computation of
		 pointer-induced aliases and side effects},
  booktitle =	 popl,
  year =	 1993,
  pages =	 {232--245},
  address =	 {Charleston, South Carolina},
  month =	 jan,
  oldkey =	 {choi93},
  sedtransform = {s/choi93/choi1993efficient/}
}

@Article{choi1994on,
  author =	 {Jong-Deok Choi and Ron Cytron and Jeanne Ferrante},
  title =	 {On the Efficient Engineering of Ambitious Program
		 Analysis},
  journal =	 {IEEE Transactions on Software Engineering},
  year =	 1994,
  volume =	 20,
  number =	 2,
  pages =	 {105--114},
  oldkey =	 {choi94},
  sedtransform = {s/choi94/choi1994on/}
}

@Article{choi1994static,
  author =	 {Jong-Deok Choi and Jeanne Ferrante},
  title =	 {Static slicing in the presence of goto statements},
  journal =	 toplas,
  year =	 1994,
  volume =	 16,
  number =	 4,
  pages =	 {1097--1113},
  month =	 jul,
  annote =	 {Cited by kumar2002better as using the PDG more accurately
		 for slicing.}
}

@InProceedings{choi1999escape,
  author =	 {Jong-Deok Choi and Manish Gupta and Mauricio Serrano and
		 Vugranam Sreedhar and Sam Midkiff},
  title =	 {Escape Analysis for {Java}},
  booktitle =	 oopsla,
  year =	 1999,
  pages =	 {1--19},
  address =	 {Denver, Colorado},
  month =	 nov
}

@InProceedings{choi2002efficient,
  author =	 {Jong-Deok Choi and Keunwoo Lee and Alexey Loginov and
		 Robert O'Callahan and Vivek Sarkar and Manu Sridharan},
  title =	 {Efficient and precise datarace detection for multithreaded
		 object-oriented programs},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {258--269},
  address =	 {Berlin, Germany},
  month =	 jun
}

@InProceedings{chou1992synthesis,
  author =	 {Pai Chou and Ross B. Ortega and Gaetano Borriello},
  title =	 {Synthesis of the Hardware/Software Interface in
		 Microcontroller-Based Systems},
  booktitle =	 iccad,
  year =	 1992,
  pages =	 {488--495},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Found using a google search. Their example is connecting a
		 bunch of peripherals up to a 8751, and they're worrying
		 about pins on a chip.}
}

@InProceedings{chou1995interface,
  author =	 {Pai Chou and Ross B. Ortega and Gaetano Borriello},
  title =	 {Interface Co-Synthesis Techniques for Embedded Systems},
  booktitle =	 iccad,
  year =	 1995,
  pages =	 {280--287},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Interface synthesis techniques. Synthesizes both software
		 drivers and glue logic.
		 
		 "The main goal in hardware/software interface synthe-sis is
		 to generate a communication link using minimal glue logic
		 while respecting timing constraints."
		 
		 A bit like the 1992 paper -- they're worrying about I/O
		 resources (pins on a chip). Actually, very much like their
		 1992 paper. Worried more about protocols.}
}

@InProceedings{chow2005programming,
  author =	 {Alex Chunghen Chow and Gordon C. Fossum and Daniel A.
		 Brokenshire},
  title =	 {A Programming Example: Large {FFT} on the {Cell}
		 {Broadband} {Engine}},
  booktitle =	 {Global Signal Processing Expo (GSPx)},
  year =	 2005,
  address =	 {Santa Clara, California},
  month =	 oct,
  note =	 {Available from IBM},
  annote =	 {Referenced by a bunch of Cell programming things}
}

@Article{chowning1973synthesis,
  author =	 {John M. Chowning},
  title =	 {The Synthesis of Complex Audio Spectra by Means of
		 Frequency Modulation},
  journal =	 jaes,
  year =	 {1973},
  volume =	 {21},
  number =	 {7},
  pages =	 {526--534},
  month =	 sep,
  annote =	 {The reference for FM synthesis techniques.}
}

@InProceedings{chrobak2001buffer,
  author =	 {Marek Chrobak and J\'{a}nos Csirik and Csan\'{a}d Imreh and
		 John Noga and Jiri Sgall and Gerhard J. Woeginger},
  title =	 {The Buffer Minimization Problem for Multiprocessor
		 Scheduling with Conflicts},
  booktitle =	 {Proceedings of the International Colloquium on Automata,
		 Languages and Programming (ICALP)},
  year =	 {2001},
  series =	 lncs,
  volume =	 2076,
  pages =	 {862--874},
  address =	 {Heraklion, Crete, Greece},
  publisher =	 {Springer-Verlag},
  isbn =	 {3-540-42287-0}
}

@Article{chu1965algol-like,
  author =	 {Youhan Chu},
  title =	 {An {ALGOL}-like computer design language},
  journal =	 cacm,
  year =	 1965,
  volume =	 8,
  number =	 10,
  pages =	 {607--615},
  month =	 oct,
  annote =	 {Referenced in chu1992three. Got the reference from the ACM
		 online library.}
}

@Article{chu1992three,
  author =	 {Yaohan Chu and Donald L. Dietmeyer and James R. Duley and
		 Fredrick J. Hill and Mario R. Barbacci and Charles W. Rose
		 and Greg Ordy and Bill Johnson and Martin Roberts},
  title =	 {Three Decades of {HDLs}: Part {I}, {CDL} through {TI-HDL}},
  journal =	 ieeedtc,
  year =	 1992,
  volume =	 9,
  number =	 2,
  pages =	 {69--81},
  month =	 jun,
  annote =	 {See also borrione1992three. This issue has a number of VHDL
		 articles.}
}

@PhDThesis{cifuentes1994reverse,
  author =	 {Cristina Cifuentes},
  title =	 {Reverse Compilation Techniques},
  school =	 {Queensland University of Technology},
  year =	 1994,
  address =	 {Brisbane, Australia},
  month =	 jul,
  annote =	 {Is her control-flow-graph structuring algorithm buggy? I
		 had problems making it work even when it had no loops.},
  url =		 {http://www.csee.uq.edu.au/~cristina/pubs.html},
  bdsk-url-1 =	 {http://www.csee.uq.edu.au/~cristina/pubs.html}
}

@InProceedings{cifuentes1996structuring,
  author =	 {Cristina Cifuentes},
  title =	 {Structuring Decompiled Graphs},
  booktitle =	 {Proceedings of the International Conference on Compiler
		 Construction},
  year =	 1996,
  series =	 lncs,
  volume =	 1060,
  pages =	 {91--105},
  address =	 {Linkoping, Sweden},
  month =	 apr,
  publisher =	 sv,
  annote =	 {References Baker's work on structuring flowgraphs.},
  url =		 {http://www.csee.uq.edu.au/~cristina/pubs.html},
  bdsk-url-1 =	 {http://www.csee.uq.edu.au/~cristina/pubs.html}
}

@InProceedings{cifuentes2002walkabout,
  author =	 {Cristina Cifuentes and Brian Lewis and David Ung},
  title =	 {Walkabout --- A Retargetable Dynamic Binary Translation
		 Framework},
  booktitle =	 {Fourth Workshop on Binary Translation},
  year =	 2002,
  address =	 {Charlottesville, Virginia},
  month =	 sep,
  annote =	 {Cifuentes is with Sun in Palo Alto. Looks like a portable,
		 very mature system drived from the Queesnland Binary
		 Translator. This is a dynamic translator, so it doesn't do
		 as much optimization, but it might run faster. Nicely
		 written paper, with a good review of existing work.
		 
		 Dynamic recompilation techniques designed to be
		 retargetable. Interprets until a hot path is found, then
		 translates it into code.
		 
		 Uses the SLED machine description language that's part of
		 the New Jersey Machine Code toolkit (NJMC).
		 
		 Binary-to-binary translation stuff
		 
		 http://www.itee.uq.edu.au/~csmweb/decompilation/bintrans.html
		 http://www.program-transformation.org/twiki/bin/view/Transform/DeCompilation
		 Cristina Cifuentes is now with Sun, working on something
		 called "Walkabout" http://research.sun.com/walkabout/
		 
		 NJMC: http://www.eecs.harvard.edu/~nr/toolkit/
		 
		 Emulators:
		 http://www.ibiblio.org/pub/Linux/system/emulators/!INDEX.html
		 
		 }
}

@InProceedings{cimatti2002nusmv,
  author =	 {Alessandro Cimatti and Edmund M. Clarke and Enrico
		 Giunchiglia and Fausto Giunchiglia and Marco Pistore and
		 Marco Roveri and Roberto Sebastiani and Armando Tacchella},
  title =	 {{NuSMV} Version 2: An {OpenSource} Tool for Symbolic Model
		 Checking},
  booktitle =	 cav,
  year =	 2002,
  series =	 lncs,
  volume =	 2404,
  pages =	 {359--364},
  address =	 {Copenhagen, Denmark},
  month =	 jul
}

@InProceedings{claessen2001design,
  author =	 {Koen Claessen and Mary Sheeran and Satnam Singh},
  title =	 {The Design and Verification of a Sorter Core},
  booktitle =	 charme,
  year =	 2001,
  series =	 lncs,
  volume =	 2114,
  pages =	 {355--369},
  address =	 {Livingston, Scotland},
  month =	 sep,
  annote =	 {More Lava work.}
}

@Article{claessen2003using,
  author =	 {Koen Claessen and Mary Sheeran and Satnam Singh},
  title =	 {Using {Lava} to design and verify recursive and periodic
		 sorters},
  journal =	 {International Journal on Software Tools for Technology
		 Transfer (STTT)},
  year =	 2003,
  volume =	 4,
  number =	 3,
  pages =	 {349--358},
  month =	 may,
  annote =	 {Another Lava paper.}
}

@Article{clark1980comments,
  author =	 {Douglas W. Clark and William D. Strecker},
  title =	 {Comments on ``The Case for the Reduced Instruction Set
		 Computer,'' by Patterson and Ditzel},
  journal =	 {ACM SIGARCH Computer Architecture News},
  year =	 1980,
  volume =	 8,
  number =	 6,
  pages =	 {34--38},
  month =	 oct,
  annote =	 {A rebuttal of sorts to patterson1980case. They observe that
		 different high-level language compilers may choose a
		 different set of instructions. Basically, they don't like
		 the arguments much because the VAX is successful.}
}

@Misc{clark1982modularity,
  author =	 {David D. Clark},
  title =	 {Modularity and Efficiency in Protocol Implementation},
  howpublished = {RFC 817, IETF},
  year =	 1982,
  month =	 jul,
  annote =	 {Cited by kohler1999readable.
		 
		 Talks about how modularity, while good programming practice,
		 can slow things down.
		 
		 Very good, readable document. Are all RFCs this clear?
		 
		 Discusses some of the tradeoffs in where to put network
		 protocol code. In the kernel makes sense for efficiency, but
		 memory requirements and the need to be awakened after a
		 timeout can make this difficult. Efficiency in user space is
		 an issue.
		 
		 Slicing a complete stack (e.g., a Telnet server) is another
		 issue: there are many different places to cut it, but
		 putting it completely within kernel or user space is not
		 appropriate.
		 
		 Points out that complete ignorance of what is happening at
		 upper or lower layers is wasteful. E.g., should you send an
		 Ack, or wait for the next bit of data from above and send it
		 along with that? If you're doing telnet, send the Ack; if
		 you're sending files, wait for the next piece of
		 information, which will certainly come.
		 
		 Examining all the details of an incoming packet is often
		 wasteful, since most packets are "typical." This argues for
		 short paths in protocol code. "Build your program to
		 optimize the expected case." Retransmission queue is rarely
		 used: should be most efficient at discarding things.
		 
		 Computing checksums are one of the slowest operations since
		 it touches all of the data.
		 
		 Avoid copying data more than necessary.
		 
		 }
}

@InProceedings{clark1990architectural,
  author =	 {David D. Clark and David L. Tennenhouse},
  title =	 {Architectural Considerations for a New Generation of
		 Protocols},
  booktitle =	 {Proceedings of the Conference on Applications,
		 technologies, architectures, and protocols for computer
		 communication (SIGCOMM)},
  year =	 1990,
  pages =	 {200-208},
  address =	 {Philadelphia, Pennsylvania},
  month =	 sep,
  organization = {ACM},
  annote =	 {Cited by braun1995protocol. Integrated Layer Processing.
		 Clark, from MIT, also wrote RFC 817.
		 
		 Proposes Application Level Framing and Integrated Layer
		 Processing.
		 
		 Discussion of what happens in a protocol system: excellent.
		 
		 Data Manipulation (creating and modifying data): moving data
		 to/from the net, error detection, buffering for
		 retransmission, encryption, moving to/from application
		 space, presentation formatting.
		 
		 Transfer Control (deciding where to send data):
		 Flow/Congestion control, detecting network transmission
		 problems, acknowledgement, multiplexing, timestamping,
		 framing.
		 
		 Transfer control is generally not computationally intensive,
		 although it's fussy. Data manipulations are harder since
		 they must touch all the data.
		 
		 Copy costs and memory bandwidth are the ultimate upper limit
		 on bandwidth. He advocates combining checksumming and
		 copying.
		 
		 Application Level Framing: Let the application divide the
		 data into frames so that when one is lost the application
		 can deal with it more intelligently.
		 
		 Integrated Layer Processing: perform all the manipulations
		 in one or two integrated processing loops rather than
		 serially. The structure of the protocol may preclude this
		 from happening, but he suggests they should be designed with
		 this in mind.
		 
		 ALF and ILP work together: an application data unit becomes
		 the piece that the ILP works on.
		 
		 Nice analysis, but rather vague proposals and conclusions.
		 }
}

@Article{clark1990bugs,
  author =	 {Douglas W. Clark},
  title =	 {Bugs are Good: {A} Problem-Oriented Approach to the
		 Mangement of Design Engineering},
  journal =	 {Research-Technology Management},
  year =	 {1990},
  volume =	 {33},
  number =	 {3},
  pages =	 {23--27},
  month =	 may
}

@InProceedings{clarke1981design,
  author =	 {Edmund M. Clarke and E. A. Emerson},
  title =	 {Design and Synthesis of Synchronization Skeletons using
		 Branching Time Temporal Logic},
  booktitle =	 {Proceedings of the Workshop on Logic of Programs},
  year =	 1981,
  series =	 lncs,
  volume =	 131,
  pages =	 {52--71},
  address =	 {Yorktown Heights, New York},
  month =	 may,
  publisher =	 sv,
  annote =	 {Considered the source of computation tree logic CTL?
		 Couldn't actually get to it: LNCS has some things online
		 (Lecture Notes in Mathematics is listed on the Columbia Web
		 server), but not 131. It's too old.}
}

@Article{clarke1986automatic,
  author =	 {E. M. Clarke and E. A. Emerson and A. P. Sistla},
  title =	 {Automatic verification of finite-state concurrent systems
		 using temporal logic specifications},
  journal =	 toplas,
  year =	 1986,
  volume =	 8,
  number =	 2,
  pages =	 {244--263},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/5397.5399},
  issn =	 {0164-0925},
  publisher =	 {ACM},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/5397.5399}
}

@InProceedings{clarke1989comp,
  author =	 {Clarke, E. and Long, D. and McMillan, K.},
  title =	 {Compositional model checking},
  booktitle =	 {Proceedings of the Fourth Annual Symposium on Logic in
		 Computer Science (LICS)},
  year =	 {1989},
  pages =	 {353--362},
  address =	 {Piscataway, NJ, USA},
  publisher =	 {IEEE Press},
  date-modified ={2009-07-31 20:56:20 -0400},
  isbn =	 {0-8186-1954-6},
  location =	 {Pacific Grove, California, United States}
}

@Article{clarke1991language,
  author =	 {Edmund M. {Clarke, Jr} and David E. Long and Kenneth L.
		 McMillan},
  title =	 {A Language for Compositional Specification and Verification
		 of Finite State Hardware Controllers},
  journal =	 procieee,
  year =	 {1991},
  volume =	 {79},
  number =	 {9},
  pages =	 {1283--1292},
  month =	 sep,
  annote =	 {Describes the SML language. Part of a special issue on
		 synchronous real time systems}
}

@InProceedings{clarke1998ownership,
  author =	 {David G. Clarke and John M. Potter and James Noble},
  title =	 {Ownership Types for Flexible Alias Protection},
  booktitle =	 oopsla,
  year =	 1998,
  pages =	 {48--64},
  address =	 {Vancouver, British Columbia, Canada},
  month =	 oct
}

@InProceedings{clarke1998ownershiptypes,
  author =	 {David G. Clarke and John M. Potter and James Noble},
  title =	 {Ownership Types for Flexible Alias Protection},
  booktitle =	 {Proceedings of the 13th Conference on Object-Oriented
		 Programming, Systems, Languages, and Applications (OOPSLA)},
  year =	 1998,
  pages =	 {48--64},
  address =	 {Vancouver, British Columbia, Canada},
  month =	 oct
}

@Book{clarke1999model,
  author =	 {Edmund M. Clarke and Orna Grumberg and Doron A. Peled},
  title =	 {Model Checking},
  publisher =	 {MIT Press},
  year =	 1999,
  key =		 {clarke1999},
  oldkey =	 {model_checking1},
  sedtransform = {s/model_checking1/clarke1999model/}
}

@InProceedings{clarke1999program,
  author =	 {Edmund M. {Clarke, Jr} and Masahiro Fujita and Sreeranga P.
		 Rajan and Thomas Reps and Subash Shankar and Tim
		 Teitelbaum},
  title =	 {Program Slicing of Hardware Description Languages},
  booktitle =	 charme,
  year =	 1999,
  address =	 {Bad Herrenalb, Germany},
  month =	 sep,
  annote =	 {David Dill pointed me to this VHDL slicing paper.},
  url =		 {http://www.cs.wisc.edu/~reps},
  bdsk-url-1 =	 {http://www.cs.wisc.edu/~reps}
}

@TechReport{clarke1999program*1,
  author =	 {Edmund M. {Clarke, Jr} and Masahiro Fujita and Sreeranga P.
		 Rajan and Thomas Reps and Subash Shankar and Tim
		 Teitelbaum},
  title =	 {Program Slicing of Hardware Description Languages},
  institution =	 cmu,
  year =	 1999,
  number =	 {CMU-CS-99-103},
  annote =	 {Referenced by SED:clarke:99a.},
  url =		 {http://reports-archive.adm.cs.cmu.edu/cs1999.html},
  bdsk-url-1 =	 {http://reports-archive.adm.cs.cmu.edu/cs1999.html}
}

@InProceedings{clarke2000counterexampleguided,
  author =	 {Edmund M. Clarke and Orna Grumberg and Somesh Jha and Yuan
		 Lu and Helmut Veith},
  title =	 {Counterexample-Guided Abstraction Refinement},
  booktitle =	 cav,
  year =	 2000,
  series =	 lncs,
  volume =	 1855,
  pages =	 {154--169},
  address =	 cav2000_a,
  month =	 jul
}

@InProceedings{cleaveland1990on,
  author =	 {Rance Cleaveland},
  title =	 {On Automatically Explaining Bisimulation Inequivalence},
  booktitle =	 cav1990,
  year =	 {1990},
  series =	 lncs,
  volume =	 {531},
  pages =	 {364--372},
  address =	 cav1990_a,
  publisher =	 sv
}

@InProceedings{cleemput1979computer,
  author =	 {W. M. {van Cleemput}},
  title =	 {Computer Hardware Description Languages and their
		 Applications},
  booktitle =	 dac79,
  year =	 1979,
  pages =	 {554--560},
  address =	 dac79a,
  month =	 jun,
  annote =	 {Very early survey of HDLs. Cited by dewey1983vhsic. Blast
		 -- no PDF on the ACM website.}
}

@Misc{clemence1926push-button-control,
  author =	 {Edward Clemence},
  title =	 {Push-button-control system},
  howpublished = {US Patent 1,581,387},
  year =	 1926,
  month =	 {April 20},
  note =	 {Assigned to Otis Elevator Co.},
  annote =	 {Random search. The timing is about right to be among the
		 earliest. patent 1581387. Got it from Google Patents
		 (www.google.com/patents). Looks like there are floor call
		 buttons, interlocks, etc.}
}

@InProceedings{clements1996survey,
  author =	 {Paul C. Clements},
  title =	 {A Survey of Architecture Description Languages},
  booktitle =	 {Proceedings of the the 8th Interational Workshop on
		 Software Specification and Design},
  year =	 1996,
  pages =	 {16--25},
  address =	 {Paderborn, Germany},
  month =	 mar,
  publisher =	 {IEEE Computer Society Press},
  annote =	 {Cited by henzinger2001embedded.
		 
		 Emphasis of these languages is specification rather than
		 implementation details (different from programming
		 languages). Communication, connection primary issues.
		 
		 Categorizes things based on the established
		 "feature-oriented domain analysis" approach: essentially, a
		 checklist. Sent this checklist to the proprietors of a bunch
		 of ADLs.
		 
		 Commonalities: * Graphical and textual forms * Formal
		 semantics * Could handle pipe-and-filter semantics *
		 Dataflow and control-flow interconnection mechanisms *
		 Hierarchy
		 
		 Not as detailed as I would like: more raw data, less
		 analysis and discussion. No examples. }
}

@InProceedings{click1995simple,
  author =	 {Cliff Click and Michael Paleczny},
  title =	 {A Simple Graph-Based Intermeidate Representation},
  booktitle =	 {First ACM SIGPLAN Workshop on Intermediate
		 Representations},
  year =	 1995,
  pages =	 {35--49},
  address =	 {San Francisco, California},
  month =	 jan,
  annote =	 {Got this one from Ervan. Intermediate forms for compilers.
		 More appropriate for sequential languages. Their
		 representation is SSA-based.},
  url =		 {http://www.cs.rice.edu:80/~mpal/papers/index.html},
  bdsk-url-1 =	 {http://www.cs.rice.edu:80/~mpal/papers/index.html}
}

@InProceedings{clifton2000multijava,
  author =	 {Curtis Clifton and Gary T. Leavens and Craig Chambers and
		 Todd Millstein},
  title =	 {{MultiJava}: Modular Open Classes and Symmetric Multiple
		 Dispatch for {Java}},
  booktitle =	 {Proceedings of Object-Oriented Programming, Systems,
		 Languages, and Applications (OOPSLA)},
  year =	 2000,
  pages =	 {130--145},
  address =	 {Minneapolis, Minnesota}
}

@InProceedings{closse2001saxo-rt,
  author =	 {Etienne Closse and Michel Poize and Jacques Pulou and
		 Patrick Venier and Daniel Weil},
  title =	 {{SAXO-RT}: Efficient Compilation of {Esterel} for Real-Time
		 Embedded Systems},
  booktitle =	 {Proceedings of the International Workshop on Advanced
		 Compiler Technology (IWACT)},
  year =	 2001,
  pages =	 {83--86},
  address =	 {Bucarest, Hungary},
  month =	 jul,
  annote =	 {Cited in closse2002saxo-rt as a variant of their scheduling
		 technique. Haven't seen it yet.}
}

@InProceedings{closse2002saxo-rt,
  author =	 {Etienne Closse and Michel Poize and Jacques Pulou and
		 Patrick Venier and Daniel Weil},
  title =	 {{SAXO-RT}: Interpreting {Esterel} Semantic on a Sequential
		 Execution Structure},
  booktitle =	 slap,
  year =	 2002,
  series =	 entcs,
  volume =	 {65(5)},
  pages =	 {80--94},
  address =	 {Grenoble, France},
  month =	 apr,
  publisher =	 els,
  annote =	 {Describes the latest version of France Telecom's SAXO-RT
		 compiler. See also weil2000efficient and
		 bertin1999nouvelle.},
  url =		 {http://dx.doi.org/10.1016/S1571-0661(05)80443-8},
  bdsk-url-1 =	 {http://dx.doi.org/10.1016/S1571-0661(05)80443-8}
}

@InProceedings{cloute1999hardwaresoftware,
  author =	 {Fran\c{c}ois Clout\'e and Jean-No\"el Contensou and Daniel
		 Esteve and Pascal Pampagnin and Philippe Pons and Yvws Favard},
  title =	 {Hardware/Software Co-Design of an Avionics Communication
		 Protocol Interface System: an Industrial Case Study},
  booktitle =	 {Proceedings of the Seventh International Workshop on
		 Hardware/Software Codesign (CODES)},
  year =	 1999,
  pages =	 {48--52},
  address =	 {Rome, Italy},
  month =	 may,
  annote =	 {Sent me an example.}
}

@InProceedings{coalco2005conservative,
  author =	 {Jean-Loius Cola\c{c}o and Bruno Pagano and Marc Pouzet},
  title =	 {A Conservative Extension of Synchronous Data-flow with
		 State Machines},
  booktitle =	 emsoft,
  year =	 2005,
  pages =	 {173--182},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {SCADE}
}

@InProceedings{cobleigh2003learning,
  author =	 {Jamieson M. Cobleigh and Dimitra Giannakopoulou and Corina
		 S. P\u{a}s\u{a}reanu},
  title =	 {Learning Assumptions for Compositional Verification},
  booktitle =	 tacas,
  year =	 {2003},
  series =	 lncs,
  volume =	 2619,
  pages =	 {331--346},
  publisher =	 {Springer-Verlag}
}

@Article{cobleigh2008compsurvey,
  author =	 {Cobleigh, Jamieson M. and Avrunin, George S. and Clarke,
		 Lori A.},
  title =	 {Breaking up is hard to do: An evaluation of automated
		 assume-guarantee reasoning},
  journal =	 {ACM Transactions on Software Engineering Methodology},
  year =	 {2008},
  volume =	 {17},
  number =	 {2},
  pages =	 {1--52},
  address =	 {New York, NY, USA},
  date-modified ={2009-07-31 21:20:41 -0400},
  doi =		 {http://doi.acm.org/10.1145/1348250.1348253},
  issn =	 {1049-331X},
  publisher =	 {ACM},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1348250.1348253}
}

@InProceedings{coelho1994dynamic,
  author =	 {Claudionor N. Coelho Jr. and Giovanni {De Micheli}},
  title =	 {Dynamic Scheduling and Synchronization Synthesis of
		 Concurrent Digital Systems under System-Level Constraints},
  booktitle =	 iccad,
  year =	 1994,
  pages =	 {175--181},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {UNREAD}
}

@Book{coffman1976computer,
  editor =	 {E. G. {Coffman, Jr.}},
  title =	 {Computer and Job-Shop Scheduling Theory},
  publisher =	 jw,
  year =	 1976,
  address =	 jw_a,
  annote =	 {Photocopied from Jos\'e Pino}
}

@InProceedings{cogswell1994timing,
  author =	 {Bryce Cogswell and Zary Segall},
  title =	 {Timing Insensitive Binary to Binary Translation of Real
		 Time Systems},
  booktitle =	 {Proceedings of the First Annual Rapid Prototyping of
		 Application Specific Signal Processors (RASSP) Conference},
  year =	 1994,
  address =	 {Arlington, Virginia},
  month =	 aug,
  annote =	 {John Regehr suggested this. This citation is questionable:
		 Citeseer has it listed differently, but it does seem to have
		 been part of the RASSP conference}
}

@Book{cohen1999vhdl,
  author =	 {Ben Cohen},
  title =	 {{VHDL} Coding Styles and Methodologies},
  publisher =	 kl,
  year =	 1999,
  address =	 kl_a,
  edition =	 {Second},
  annote =	 {Got from Kluwer as part of work on the book.}
}

@Book{cohen2004using,
  author =	 {Ben Cohen and Srinivasan Venkataramanan and Ajeetha
		 Kumari},
  title =	 {Using {PSL/Sugar} for Formal Verification},
  publisher =	 {VhdlCohen Publishing},
  year =	 2004,
  address =	 {PO Box 2362, Palos Verdes Peninsula, California},
  annote =	 {Didn't see it: on Amazon, mentioned by Grant Martin}
}

@InProceedings{cohen2007sets,
  author =	 {Haim Cohen and Stephen A. Edwards},
  title =	 {{\{sets\}}---A Lightweight Constraint Programming Language
		 Based on {ROBDDs}},
  booktitle =	 {Proceedings of the IADIS International Conference on
		 Applied Computing},
  year =	 2007,
  address =	 {Salamanca, Spain},
  month =	 feb,
  annote =	 {Came out of a CVN student's PLT project. Not a high-flying
		 conference, accepted as a short paper, but what the heck.}
}

@Article{cole2001embedded,
  author =	 {Bernard Cole},
  title =	 {Embedded to be Network-centric},
  journal =	 {EE Times},
  year =	 2001,
  month =	 {April 26},
  annote =	 {Simply that embedded systems are almost always going to
		 have a communications component.},
  url =		 {http://www.eetimes.com/story/OEG20010423S0114},
  bdsk-url-1 =	 {http://www.eetimes.com/story/OEG20010423S0114}
}

@TechReport{colin1999worst-case,
  author =	 {Antoine Colin and Isabelle Puaut},
  title =	 {Worst-Case Timing Analysis of the {RTEMS} Real-Time
		 Operating System},
  institution =	 {IRISA},
  year =	 1999,
  number =	 1277,
  address =	 {Campus de Beaulieu, Rennes, France},
  month =	 {nov},
  annote =	 {Part of the WCET paper}
}

@Article{colin2000worst,
  author =	 {Antoine Colin and Isabelle Puaut},
  title =	 {Worst Case Execution Time Analysis for a Processor with
		 Branch Prediction},
  journal =	 {Real-Time Systems},
  year =	 2000,
  volume =	 18,
  number =	 {2/3},
  pages =	 {249--274},
  annote =	 {WCET paper. Static analysis with branch prediction.}
}

@InProceedings{colin2001modular,
  author =	 {Antoine Colin and Isabelle Puaut},
  title =	 {A modular and retargetable framework for tree-based {WCET}
		 analysis},
  booktitle =	 {Proceedings of the 13th Euromicro Conference on Real-Time
		 Systems},
  year =	 2001,
  pages =	 {37--44},
  address =	 {Delft, The Netherlands},
  month =	 jun,
  annote =	 {Part of the WCET paper (Heptane tool).
		 
		 Cites Puschner and Burns, A review... Real-Time Systems,
		 18(2-3):115--128, May 2000. }
}

@TechReport{collins1998computer,
  author =	 {Steven Collins},
  title =	 {Computer Graphics during the 8-bit Computer Game Era},
  institution =	 {Trinity College},
  year =	 1998,
  number =	 {TCD-CS-1998-15},
  address =	 {Dublin, Ireland},
  month =	 sep,
  annote =	 {John Regehr suggested this},
  url =		 {http://www.cs.tcd.ie/publications/tech-reports/reports.98/TCD-CS-1998-15.pdf}
		 ,
  bdsk-url-1 =	 {http://www.cs.tcd.ie/publications/tech-reports/reports.98/TCD-CS-1998-15.pdf}
		 
}

@TechReport{collins2007topology-based,
  author =	 {R. L. Collins and L. P. Carloni},
  title =	 {Topology-Based Optimization of Maximal Sustainable
		 Throughput in a Latency-Insensitive System},
  institution =	 cu,
  year =	 2007,
  number =	 {CUCS-008-07},
  address =	 nyny,
  month =	 {February}
}

@Article{collinson1999fly-by-wire,
  author =	 {Robert P. G. Collinson},
  title =	 {Fly-by-wire flight control},
  journal =	 {Computing and Control Engineering},
  year =	 1999,
  volume =	 10,
  number =	 4,
  pages =	 {141--152},
  month =	 aug,
  annote =	 {Cited in henzinger2003giotto. Nice overview of such
		 systems. Dick Collinson also wrote a book titled
		 "Introduction to avionics systems".}
}

@Book{collinson2003introduction,
  author =	 {Robert P. G. Collinson},
  title =	 {Introduction to Avionics Systems},
  publisher =	 sp,
  year =	 2003,
  edition =	 {Second},
  annote =	 {He also wrote collinson1999fly-by-wire. I haven't seen
		 it.}
}

@Book{comer1991internetworking,
  author =	 {Douglas E. Comer},
  title =	 {Internetworking with {TCP/IP}},
  publisher =	 ph,
  year =	 {1991},
  volume =	 {I: Principles, Protocols, and Architecture},
  edition =	 {Second},
  annote =	 {Read it at Dagstuhl 96}
}

@InBook{comer2004network,
  author =	 {Douglas E. Comer},
  title =	 {Network Systems Design with Network Processors, Agere
		 Version},
  chapter =	 {20,21},
  pages =	 {293--330},
  publisher =	 ph,
  year =	 {2004},
  annote =	 {ISBN: 0-13-148927-5}
}

@Article{commoner1971marked,
  author =	 {F. Commoner and Anatol W. Holt and Shimon Even and Amir
		 Pnueli},
  title =	 {Marked Directed Graphs},
  journal =	 {Journal of Computer and System Sciences},
  year =	 1971,
  volume =	 5,
  number =	 5,
  pages =	 {511--523},
  month =	 oct,
  annote =	 {From Steve Nowick: Seminal reference on marked graphs.
		 Doesn't seem to be in electronic form.}
}

@Article{commoner1971marked-broken,
  author =	 {F. Commoner and A. W. Holt and S. Even and Amir Pnueli},
  title =	 {Marked Directed Graphs},
  journal =	 {Journal of Computer and System Science},
  year =	 1971,
  volume =	 5,
  number =	 6,
  pages =	 {511--523},
  month =	 dec,
  entered =	 {Luca Carloni,1/21/99},
  keywords =	 {marked graphs, cycle mean, cycle time, discrete event
		 systems}
}

@InProceedings{cong2004application-specific,
  author =	 {Jason Cong and Yiping Fan and Guoling Han and Zhiru Zhang},
  title =	 {Application-specific instruction generation for
		 configurable processor architectures},
  booktitle =	 fpga,
  year =	 2004,
  pages =	 {183--189},
  address =	 {Monterey, California},
  month =	 feb,
  doi =		 {http://doi.acm.org/10.1145/968280.968307},
  annote =	 {Martha found this.}
}

@Article{conner1990new,
  author =	 {Margery Conner},
  title =	 {New Software Tools Speed Design and Debug},
  journal =	 {EDN},
  year =	 {1990},
  volume =	 {35},
  number =	 {2},
  pages =	 {95--102},
  annote =	 {A list of some embedded-system software design tools.}
}

@InProceedings{consel1991semantics,
  author =	 {C. Consel and S. C. Khoo},
  title =	 {Semantics-Directed Generation of a {Prolog} Compiler},
  editor =	 {J. Maluszy{\'n}ski and M. Wirsing},
  booktitle =	 {Programming Language Implementation and Logic Programming,
		 3rd International Symposium, PLILP '91, Passau, Germany,
		 August 1991 (Lecture Notes in Computer Science, vol. 528)},
  year =	 1991,
  pages =	 {135-146},
  publisher =	 sv
}

@Article{consel1993parameterized,
  author =	 {Charles Consel and Siau Cheng Khoo},
  title =	 {Parameterized partial evaluation},
  journal =	 toplas,
  year =	 {1993},
  volume =	 {15},
  number =	 {3},
  pages =	 {463--493},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/169683.174155},
  issn =	 {0164-0925},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/169683.174155}
}

@InProceedings{consel1993tutorial,
  author =	 {Charles Consel and Oliver Danvy},
  title =	 {Tutorial Notes on Partial Evaluation},
  booktitle =	 popl,
  year =	 1993,
  pages =	 {493--501},
  address =	 {Charleston, South Carolina},
  month =	 jan,
  annote =	 {Cited by pu1995optimistic as a definition for partial
		 evaluation. Certainly not the first publication in this
		 area.}
}

@InProceedings{consel1996general,
  author =	 {Charles Consel and Fran\c{c}ois No\"{e}l},
  title =	 {A general approach for run-time specialization and its
		 application to {C}},
  booktitle =	 popl,
  year =	 1996,
  pages =	 {145--156},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/237721.237767},
  isbn =	 {0-89791-769-3},
  location =	 {St. Petersburg Beach, Florida, United States},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/237721.237767}
}

@InProceedings{consel1996uniform,
  author =	 {Charles Consel and Luke Hornof and Fran\c{c}ois No\"{e}l
		 and Jacques Noy\'{e} and Nicolae Volansche},
  title =	 {A Uniform Approach for Compile-Time and Run-Time
		 Specialization},
  booktitle =	 {Selected Papers from the Internaltional Seminar on Partial
		 Evaluation},
  year =	 1996,
  pages =	 {54--72},
  address =	 {London, UK},
  publisher =	 sv,
  isbn =	 {3-540-61580-6}
}

@Article{consel1998tempo,
  author =	 {Charles Consel and L. Hornof and Julia L. Lawall and Renaud
		 Marlet and G. Muller and J. Noy\'e and Scott Thibault and
		 E.-N. Volanschi},
  title =	 {Tempo: Specializing Systems Applications and Beyond},
  journal =	 {ACM Computing Surveys, Symposium on Partial Evaluation
		 (SOPE)},
  year =	 1998,
  volume =	 30,
  number =	 {3es},
  month =	 sep,
  annote =	 {A central reference for the Tempo partial evaluation
		 specializer system for C. Electronic supplement; no page
		 numbers.},
  url =		 {http://compose.labri.fr/prototypes/tempo/},
  bdsk-url-1 =	 {http://compose.labri.fr/prototypes/tempo/}
}

@Article{consel2004tour,
  author =	 {Charles Consel and Julia L. Lawall and Anne-Fran\c{c}oise
		 {Le Meur}},
  title =	 {A Tour of {Tempo}: A Program Specializer for the {C}
		 Language},
  journal =	 scicompprog,
  year =	 2004,
  volume =	 52,
  number =	 {1--3},
  pages =	 {341--370},
  month =	 aug,
  annote =	 {Recommended by one of the PEPM reviewers.}
}

@Book{conte1980elementary,
  author =	 {S. D. Conte and Carl de Boor},
  title =	 {Elementary Numerical Analysis},
  publisher =	 mgh,
  year =	 {1980},
  edition =	 {Third},
  annote =	 {Used as a textbook in Math 128a, Berkeley.}
}

@Book{conway1967theory,
  author =	 {Richard W. Conway and William L. Maxwell and Louis W.
		 Miller},
  title =	 {Theory of Scheduling},
  publisher =	 aw,
  year =	 1967,
  annote =	 {Cited by coffman1976computer as a starting point. Excellent
		 early reference that formalized the problem (group of
		 machines that take time to perform operations).}
}

@InProceedings{conway2004ndl,
  author =	 {Christopher L. Conway and Stephen A. Edwards},
  title =	 {{NDL}: A Domain-Specific Language for Device Drivers},
  booktitle =	 lctes,
  year =	 2004,
  pages =	 {30--36},
  address =	 {Washington, DC},
  month =	 jun,
  annote =	 {My first paper with Chris.},
  selectivity =	 {28/120 = 23\%},
  url =		 {http://doi.acm.org/10.1145/997163.997169},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/997163.997169}
}

@InProceedings{conway2005incremental,
  author =	 {Christopher L. Conway and Kedar S. Namjoshi and Dennis Dams
		 and Stephen A. Edwards},
  title =	 {Incremental Algorithms for Inter-procedural Analysis of
		 Safety Properties},
  booktitle =	 cav2005,
  year =	 2005,
  series =	 lncs,
  volume =	 {3576},
  pages =	 {449--461},
  address =	 cav2005_a,
  month =	 jun,
  annote =	 {Chris's summer work with the Bell Labs folks on making
		 incremental their automata model checker.},
  selectivity =	 {32/123 = 26\%},
  url =		 {http://dx.doi.org/10.1007/11513988_45},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/11513988_45}
}

@TechReport{conway2005incremental2,
  author =	 {Christopher L. Conway and Kedar S. Namjoshi and Dennis Dams
		 and Stephen A. Edwards},
  title =	 {Incremental Algorithms for Inter-procedural Analysis of
		 Safety Properties},
  institution =	 cucs,
  year =	 2005,
  number =	 {CUCS--018--05},
  address =	 nyny,
  annote =	 {Tech. report version of the CAV paper, with proofs, more
		 experimental resuts, etc.}
}

@InProceedings{cooper1988inter-procedural,
  author =	 {K.D. Cooper and K. Kennedy},
  title =	 {Inter-procedural side-effect analysis in linear time},
  booktitle =	 pldi,
  year =	 1988,
  pages =	 {487--506},
  address =	 {Atlanta, Georgia},
  month =	 jun,
  oldkey =	 {cooper1},
  sedtransform = {s/cooper1/cooper1988inter-procedural/}
}

@InProceedings{cooper1992using,
  author =	 {Keith D. Cooper},
  title =	 {Using Compiler Technology to Drive Advanced
		 Microprocessors},
  booktitle =	 {DARPA Software Technology Conference},
  year =	 1992,
  pages =	 {42--49},
  address =	 {Los Angeles, California},
  month =	 apr,
  annote =	 {Picked off of CiteSeer. Cooper is at Rice and publishes
		 heavily.
		 
		 http://www.cs.rice.edu/~keith/}
}

@Article{cooper2001simple,
  author =	 {Keith D. Cooper and Timothy J. Harvey and Ken Kennedy},
  title =	 {A Simple, Fast Dominance Algorithm},
  journal =	 spe,
  year =	 2001,
  note =	 {Submitted},
  annote =	 {Improves on Lengauer-Tarjan? Potentially quadratic, but
		 simpler.},
  optmonth =	 {FIXME},
  optnumber =	 {FIXME},
  optpages =	 {FIXME},
  optvolume =	 {FIXME}
}

@Article{coppola2004occn,
  author =	 {M. Coppola and S. Curaba and M. D. Grammatikakis and R.
		 Locatelli and G. Maruccia and F. Papariello},
  title =	 {{OCCN}: a {NoC} Modeling Framework for Design Exploration},
  journal =	 jsa,
  year =	 2004,
  volume =	 50,
  number =	 {2-3},
  pages =	 {129-163},
  month =	 feb,
  affiliation =	 {ST, Univ. Pisa, ISD Greece},
  entered =	 {Luca Carloni, 5/6/05},
  keywords =	 {IEEE Micro and TCAD},
  oldkey =	 {coppola_jsa04},
  publisher =	 {Elsevier},
  sedtransform = {s/coppola_jsa04/coppola2004occn/}
}

@InProceedings{coppola2004spidergon,
  author =	 {M. Coppola and R. Locatelli and G. Maruccia and L.
		 Pieralisi and A. Scandurra},
  title =	 {Spidergon: A NoC Modeling Paradigm},
  booktitle =	 {Proc. 2004 International Symposium on System-on-Chip},
  year =	 2004,
  pages =	 {15},
  month =	 nov,
  affiliation =	 {STMicroelectronics},
  entered =	 {Luca Carloni,8/15/2005},
  oldkey =	 {coppola_spidergon04},
  sedtransform = {s/coppola_spidergon04/coppola2004spidergon/}
}

@Manual{coq,
  author =	 {{The Coq Development Team}},
  title =	 {The Coq Proof Assistant Reference Manual},
  organization = {INRIA},
  note =	 {http://coq.inria.fr/doc/main.html}
}

@Article{corbett1996evaluating,
  author =	 {James C. Corbett},
  title =	 {Evaluating Deadlock Detection Methods for Concurrent
		 Software},
  journal =	 transse,
  year =	 1996,
  volume =	 22,
  number =	 3,
  pages =	 {161--180},
  month =	 mar,
  annote =	 {Talks about doing it for Ada. Looks at SPIN, SMV, and a few
		 others. Notes that the interleaving model of concurrency is
		 a problem.},
  doi =		 {http://dx.doi.org/10.1109/32.489078},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/32.489078}
}

@Article{corbett1996timing,
  author =	 {James C. Corbett},
  title =	 {Timing Analysis of {Ada} Tasking Programs},
  journal =	 transse,
  year =	 1996,
  volume =	 22,
  number =	 7,
  pages =	 {461--438},
  month =	 jul,
  annote =	 {Precursor to Corbett's Bandera work. Worrying about timing
		 of concurrent programs. Builds hybrid automata (transitions
		 = sequences of code) and verifies them with the HyTech
		 verifier (Henzinger, Ho).
		 
		 Ada supports rendezvous-style communication and some form of
		 preemption. It assumes a preemptive priority-based scheduler.
		 
		 Very complicated techniques for accounting for the behavior
		 of the scheduler, context-switch overhead, etc. HyTech is
		 costly even for the toy examples he shows.},
  url =		 {http://www2.ics.hawaii.edu/~corbett/pubs.html},
  bdsk-url-1 =	 {http://www2.ics.hawaii.edu/~corbett/pubs.html}
}

@InProceedings{corbett1998constructing,
  author =	 {James C. Corbett},
  title =	 {Constructing Compact Models of Concurrent {Java} Programs},
  booktitle =	 {Proceedings of the International Symposium on Software
		 Testing and Analysis (ISSTA)},
  year =	 1998,
  pages =	 {1--10},
  address =	 {Clearwater Beach, Florida},
  month =	 mar,
  annote =	 {Pointer analysis for simplifying transition systems built
		 from concurrent Java specifications. Concentrates on
		 understanding what variables are protected by locks.
		 
		 Part of the Bandera work. Focuses on the concurrency model
		 and building a transition system from the Java concurrency
		 model. Worries about threads and locks. Each transition
		 corresponds to the execution of a Java byte code.
		 
		 Challenge is to reduce the number of transitions. Operations
		 on local variables by definition cannot affect
		 concurrently-running threads, so these can be merged
		 together. The effects of locks can also be used to reduce
		 this. But this requires knowledge of which locks protect
		 which variables, something that takes analysis.
		 
		 Program represented as a set of CFGs. Assumes bounded
		 recursion so everything is inlined.
		 
		 Does pointer analysis to figure out the stack to determine
		 the effect of the locks.},
  url =		 {http://www2.ics.hawaii.edu/~corbett/pubs.html},
  bdsk-url-1 =	 {http://www2.ics.hawaii.edu/~corbett/pubs.html}
}

@InProceedings{corbett2000bandera,
  author =	 {James Corbett and Matthew B. Dwyer and John Hatcliff and
		 Shawn Laubach and Corina S. P\u{a}s\u{a}reanu and Robby and
		 Hongjun Zheng},
  title =	 {Bandera: Extracting Finite-State Models from {Java} Source
		 Code},
  booktitle =	 {Proceedings of the 22nd International Conference on
		 Software Engineering},
  year =	 2000,
  address =	 {Limerick, Ireland},
  month =	 jun,
  annote =	 {Works on Java. Advocates a component-based architecture for
		 building models of software for model checking. Points out
		 that you want different abstractions for different
		 properties.
		 
		 Slicer, abstraction engine, back end to generate a
		 guarded-command language, and a GUI for relating results
		 back to the source.
		 
		 Powerful abstraction engine (user can explain to use "signs"
		 for a particular variable). Insert abstractions, simplify
		 the program, and inline everything.
		 
		 Based on the Soot compiler framework from McGill. See
		 valleeria1999soot.
		 
		 Sometimes the abstraction goes too far and the decision at a
		 branch cannot be made. They turn this into a
		 nondeterministic choice.
		 
		 Has an abstraction specification language BASL, and expects
		 the user to specify which abstractions to use on which
		 variables.
		 
		 Backend translates their intermediate representation into a
		 common guarded-command language, then they have specific
		 translators that build, e.g., SMV or SPIN models from it.
		 Has structures for threads, locks, and bounded heap
		 allocation in the intermediate representation that is
		 translated to an implementation in a particular model
		 checker.},
  url =		 {http://www.cis.ksu.edu/santos/bandera},
  bdsk-url-1 =	 {http://www.cis.ksu.edu/santos/bandera}
}

@Misc{coreconnect,
  author =	 {{IBM}},
  title =	 {{Core Connect} Bus Architecture},
  howpublished = {Available at
		 {http://www.ibm.com/chips/products/coreconnect/}},
  oldkey =	 {coreconnect}
}

@Book{cormen1990introduction,
  author =	 {Thomas H. Cormen and Charles E. Leiserson and Ronald L.
		 Rivest},
  title =	 {Introduction to Algorithms},
  publisher =	 mit,
  year =	 {1990},
  address =	 mit_a,
  annote =	 {Textbook for CS170 when I took it.}
}

@Book{cormen2001introduction,
  author =	 {Thomas H. Cormen and Clifford Stein and Ronald L. Rivest
		 and Charles E. Leiserson},
  title =	 {Introduction to Algorithms},
  publisher =	 {McGraw-Hill},
  year =	 2001,
  isbn =	 0070131511
}

@InProceedings{cortadella1995synthesizing,
  author =	 {Jordi Cortadella and Michael Kishinevsky and Luciano
		 Lavagno and Alex Yakovlev},
  title =	 {Synthesizing Petri Nets from State-Based Models},
  booktitle =	 iccad,
  year =	 {1995},
  pages =	 {164--171},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Relevant to Esterel-to-Petri for state assignment?
		 Describes a rather elaborate procedure where groups of
		 states are partitioned into regions.}
}

@TechReport{cortadella1995synthesizing*1,
  author =	 {Jordi Cortadella and Michael Kishinevsky and Luciano
		 Lavagno and Alexandre Yakovlev},
  title =	 {Synthesizing Petri Nets from State-Based Models},
  institution =	 {Universitat Polit\`ecnica de Catalunya},
  year =	 {1995},
  number =	 {UPC-DAC-95-09},
  annote =	 {Luciano presented this at the UCB CAD Seminar on 950830}
}

@TechReport{cortadella1999task,
  author =	 {Jordi Cortadella and Alex Kondratyev and Luciano Lavagno
		 and Marc Massot and Sandra Moral and Claudio Passerone and
		 Yosinori Watanabe and Alberto Sangiovanni-Vincentelli},
  title =	 {Task Generation and Compile-Time Scheduling for Mixed
		 Data-Control Embedded Software},
  institution =	 {Department of Software, Universitat Polit\`ecnica de
		 Catalunya},
  year =	 1999,
  type =	 {Technical Report},
  number =	 {LSI-99-47-R},
  month =	 nov,
  annote =	 {Extended version of cortadella2000task}
}

@InProceedings{cortadella2000task,
  author =	 {Jordi Cortadella and Alex Kondratyev and Luciano Lavagno
		 and Marc Massot and Sandra Moral and Claudio Passerone and
		 Yosinori Watanabe and Alberto Sangiovanni-Vincentelli},
  title =	 {Task Generation and Compile-Time Scheduling for Mixed
		 Data-Control Embedded Software},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {489--494},
  address =	 dac00a,
  publisher =	 acm,
  annote =	 {More work on their synchronous/asynchronous software
		 synthesis technology.}
}

@InProceedings{cortadella2006synthesis,
  author =	 {J. Cortadella and M. Kishinevsky and B. Grundmann},
  title =	 {Synthesis of Synchronous Elastic Architectures},
  booktitle =	 dac06,
  year =	 2006,
  pages =	 {657-662},
  address =	 dac06a,
  month =	 jul,
  affiliation =	 {IBM},
  entered =	 {Luca Carloni,7/20/06},
  keywords =	 {soc design, deep submicron, timing closure},
  oldkey =	 {cortadella06},
  sedtransform = {s/cortadella06/cortadella2006synthesis/}
}

@InProceedings{costa2000observability,
  author =	 {Jos/'e C. Costa and Srinivas Devadas and Jos/'e C.
		 Monteiro},
  title =	 {Observability Analysis of Embedded Software for
		 Coverage-Directed Validation},
  booktitle =	 iccad,
  year =	 2000,
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Copy came from Don before it was published.
		 
		 Idea is to move from a statement coverage or branch coverage
		 metric to an observability coverage metric for software.
		 Inspired by their DAC 1998 paper.
		 
		 Looks backward from output statements (e.g., a print), looks
		 at the variables that are written, then looks back at all
		 the statements that can affect that variable. Builds these
		 dependency lists as the program runs.
		 
		 A function call is added to each statement that registers
		 what variable is modified and what variables affect its
		 value.},
  optpages =	 {FIXME}
}

@InProceedings{coudert1989verification,
  author =	 {Olivier Coudert and Christian Berthet and Jean Cristophe
		 Madre},
  title =	 {Verification of Synchronous Sequential Machines Based On
		 Symbolic Execution},
  editor =	 {J. Sifakis},
  booktitle =	 {Proceedings of the Workshop on Automatic Verification
		 Methods for Finite State Systems},
  year =	 1989,
  series =	 lncs,
  volume =	 407,
  pages =	 {365--373},
  address =	 {Grenoble, France},
  month =	 jun,
  publisher =	 sv,
  annote =	 {The seminal paper on symbolic state space exploration?}
}

@InProceedings{coudert1990unified,
  author =	 {Olivier Coudert and Jean Christophe Madre},
  title =	 {A Unified Framework for the Formal Verification of
		 Sequential Circuits},
  booktitle =	 iccad,
  year =	 {1990},
  pages =	 {126--129},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Image computation, etc.}
}

@Article{cousineau1980algebraic,
  author =	 {Guy Cousineau},
  title =	 {An Algebraic Definition for Control Structures},
  journal =	 tcs,
  year =	 1980,
  volume =	 12,
  number =	 2,
  pages =	 {175--192},
  month =	 oct,
  annote =	 {Cited by berry2000foundations as the inspiration for the
		 exit level encoding.
		 
		 Dense, very abstract. Talks of algebras on trees and tries
		 to relate them to trees of execution caused by executing
		 sequences of instructions.}
}

@InProceedings{cousot1977abstract,
  author =	 {Patrick Cousot and Radhia Cousot},
  title =	 {Abstract Interpretation: A Unified Lattice Model for Static
		 Analysis of Programs by Construction or Approximation of
		 Fixpoints},
  booktitle =	 popl,
  year =	 1977,
  pages =	 {238--252},
  address =	 {Los Angeles, California},
  month =	 jan,
  annote =	 {Referenced by SED:bourdoncle:93b. Part of the work with
		 Monica. Builds a mathematical foundataion for abstract
		 interpretation. Basically, a characterization of all
		 possible states of a program store at each possible step
		 (arc in the control-flow graph). Finding these sets is a
		 solution of a fixpoint equation. Also talks about
		 characterizing general abstractions. Has many what are now
		 classical references, such as the Tarski fixpoint theorem on
		 Lattices.},
  url =		 {http://www.dmi.ens.fr/~cousot},
  bdsk-url-1 =	 {http://www.dmi.ens.fr/~cousot}
}

@TechReport{cousot1977asynchronous,
  author =	 {Patrick Cousot},
  title =	 {Asynchronous Iterative Methods for Solving a Fixed Point
		 System of Monotone Equations in a Complete Lattice},
  institution =	 {Laboratoire d'Informatique, Universit\'e Scientifique et
		 M\'edicale de Grenoble},
  year =	 1977,
  type =	 {Rapport de Recherche},
  number =	 {IMAG--RR--88},
  address =	 {Grenoble, France},
  month =	 sep,
  annote =	 {Cited by cousot1981program as the source of the idea of
		 chaotic iteration.}
}

@InProceedings{cousot1977automatic,
  author =	 {Patrick Cousot and Radhia Cousot},
  title =	 {Automatic Synthesis of Optimal Invariant Assertions:
		 Mathematical Foundations},
  booktitle =	 {Proceedings of the ACM Symposium on Artificial Intelligence
		 and Programming Languages},
  year =	 1977,
  series =	 {ACM SIGPLAN Notices 12(8)},
  pages =	 {1--12},
  address =	 {Rochester, New York},
  month =	 aug,
  annote =	 {Cited by cousot1981program as a source of the idea of
		 chaotic iteration.}
}

@InCollection{cousot1981program,
  author =	 {Patrick Cousot},
  title =	 {Semantics Foundations of Program Analysis},
  editor =	 {Steven S. Muchnick and Neil D. Jones},
  booktitle =	 {Program Flow Analysis: Theory and Applications},
  publisher =	 ph,
  year =	 1981,
  pages =	 {303--346},
  address =	 ph_a,
  annote =	 {"flowchart programs" described as a control-flow graph with
		 states involving edges and memory. Mathematics: posets,
		 least fixed-points, chains, forward and backward equations.
		 Exact analysis done on infinite-height lattices. Requires
		 induction to do exactly---problem of choosing appropriate
		 induction invariants. APPROXIMATE ANALYSIS: reduce the
		 height of the lattices to speed convergence, maintain
		 conservativism. Examples: characterizing the signs of the
		 variables, characterizing the ranges of each variable,
		 characterizing the convex hull of the variables. Widening
		 and narrowing.
		 
		 Contains a discussion (but not a proof) that any chaotic
		 iteration strategy (probably his thesis work) will find the
		 least upper bound. },
  url =		 {http://www.dmi.ens.fr/~cousot},
  bdsk-url-1 =	 {http://www.dmi.ens.fr/~cousot}
}

@InProceedings{cowan1998stackguard,
  author =	 {Crispan Cowan and Calton Pu and Dave Maier and Jonathan
		 Walpole and Peat Bakke and Steve Beattie and Aaron Grier and
		 Perry Wagle and Qian Zhang and Heather Hinton},
  title =	 {{StackGuard}: Automatic Adaptive Detection and Prevention
		 of Buffer-Overflow Attacks},
  booktitle =	 {Proceedings of the 7th USENIX Security Conference},
  year =	 {1998},
  pages =	 {63--78},
  month =	 jan
}

@Book{cox1986object,
  author =	 {B. J. Cox},
  title =	 {Object Oriented Programming},
  publisher =	 aw,
  year =	 {1986},
  address =	 aw_a,
  annote =	 {The ``Software-IC'' concept is promoted. Objective-C is his
		 baby.}
}

@InProceedings{crews1996controller,
  author =	 {Andrew Crews and Forrest Brewer},
  title =	 {Controller Optimization for Protocol Intensive
		 Applications},
  booktitle =	 {Proceedings of the European Design Automation Conference},
  year =	 1996,
  pages =	 {140--145},
  address =	 {Geneva, Switzerland},
  month =	 sep,
  annote =	 {Cited by seawright1998partitioning. Addresses controller
		 synthesis from regular expression-like specifications.
		 Doesn't do the state-space exploration that
		 seawright1998partitioning does. Brewer was also Seawright's
		 advisor -- this work is closely related.
		 
		 Nice idea: some simple peephole optimizations on the DAG
		 they use as an intermediate representation. Its nodes are
		 simple connectives, such as sequencing and parallel. They
		 attach BDDs to leaves to represent complex conditionals.
		 
		 Synthesis assigns a register to each path in the DAG and
		 allows logic to be shared.}
}

@InProceedings{crews1999shape-based,
  author =	 {Andrew Crews and Forrest Brewer},
  title =	 {Shape-Based Sequential Machine Analysis},
  booktitle =	 {Proceedings of the International Symposium on Circuits and
		 Systems (ISCAS)},
  year =	 1999,
  volume =	 1,
  pages =	 {395--399},
  address =	 {Orlando, Florida},
  month =	 may,
  annote =	 {Tries to fit a controller into a "shape" such as a feedback
		 shift register.
		 
		 Starts with D-atoms: pairs of states that must be
		 distinguished. This places a restriction on the encoding of
		 those states.
		 
		 Has the notion of representing states with multiple
		 encodings, effectively duplicating the state in the STG.
		 
		 Idea is to look at communication (dependencies) between
		 pairs of D-atoms. If there's a dependency, there needs to be
		 communication.
		 
		 A very interesting idea, but I think they are starting from
		 too unstructured a model and attempting to attach structure
		 to it. It's a nice way to think of physical circuit
		 structure, though.
		 
		 A drawback: still thinks of states as coming from an
		 undifferentiated set structured in some way by pairs of
		 states that need to be distinguished.
		 
		 Some really nice results: able to recover the encoding of a
		 shift register by just looking at (and analyzing) its STG.
		 
		 However, it really doesn't scale, even though everything is
		 done in BDDs. They seem to run out of gas in the 30-state
		 range!}
}

@Article{crowcroft1992is,
  author =	 {Jon Crowcroft and Ian Wakeman and Zheng Wang and Dejan
		 Sirovica},
  title =	 {Is Layering Harmful?},
  journal =	 {IEEE Network},
  year =	 1992,
  volume =	 6,
  number =	 1,
  pages =	 {20--24},
  month =	 jan,
  annote =	 {Cited by basu1998promela.
		 
		 Problems with RPC due to conflicting buffer sizes. They
		 observed strange nonlinearities in transit times due to a
		 mismatch between buffer sizes.}
}

@InProceedings{cuatto1998case,
  author =	 {Tullio Cuatto and Claudio Passerone and Luciano Lavagno and
		 Attila Jurecska and Antonino Damiano and Claudio Sanso\`e
		 and Alberto Sangiovanni-Vincentelli},
  title =	 {A case study in embedded system design: an engine control
		 unit},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {804--807},
  address =	 dac98a,
  annote =	 {Conference version of cuatto2000case. Very abbreviated,
		 mostly talks about the simulation strategy.}
}

@Article{cuatto2000case,
  author =	 {Tullio Cuatto and Claudio Passerone and Claudio Sanso\`e
		 and Francesco Gregoretti and Attila Jurecska and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {A Case Study in Embedded System Design: an Engine Control
		 Unit},
  journal =	 daes,
  year =	 2000,
  volume =	 6,
  number =	 1,
  pages =	 {71--88},
  month =	 sep,
  annote =	 {Another case study}
}

@InProceedings{culler1991fine-grain,
  author =	 {David E. Culler and Anurag Sah and Klaus E. Schauser and
		 Thorsten {von Eicken} and John Wawrzynek},
  title =	 {Fine-grain parallelism with minimal hardware support: a
		 compiler-controlled threaded abstract machine},
  booktitle =	 asplos,
  year =	 1991,
  series =	 {ACM SIGPLAN Notices},
  volume =	 26,
  pages =	 {164--175},
  address =	 {Santa Clara, California},
  month =	 apr,
  annote =	 {Cited by dean2004efficient. Something like the idea in my
		 Synopsys compiler?},
  number =	 4
}

@Article{curtis1988field,
  author =	 {Bill Curtis and Herb Krasner and Neil Iscoe},
  title =	 {A field study of the software design process for large
		 systems},
  journal =	 cacm,
  year =	 1988,
  volume =	 31,
  number =	 11,
  pages =	 {1268--1287},
  month =	 nov,
  annote =	 {Cited by mockus2002two}
}

@InProceedings{cytron1990compact,
  author =	 {Ron Cytron and Jeanne Ferrante and Vivek Sarkar},
  title =	 {Compact Representations for Control Dependence},
  booktitle =	 pldi,
  year =	 {1990},
  pages =	 {337--351},
  address =	 {White Plains, New York},
  month =	 jun,
  annote =	 {Cited in Johnson's thesis. Control dependence computation
		 algorithms.}
}

@Article{cytron1991efficiently,
  author =	 {Ron Cytron and Jeanne Ferrante and Barry K. Rosen and Mark
		 N. Wegman and F. Kenneth Zadeck},
  title =	 {Efficiently computing static single assignment form and the
		 control dependence graph},
  journal =	 toplas,
  year =	 1991,
  volume =	 13,
  number =	 4,
  pages =	 {451--490},
  month =	 oct,
  annote =	 {Stan Liao cited this as a primary description of SSA.
		 
		 "Control dependences are essentially the dominance frontiers
		 in the reverse graph of the control flow graph."}
}

@InProceedings{cytron1993efficient,
  author =	 {Ron Cytron and Reid Gershbein},
  title =	 {Efficient Accomodation of May-Alias Information in SSA
		 Form},
  booktitle =	 pldi,
  year =	 {1993},
  pages =	 {36--45},
  oldkey =	 {cytron},
  sedtransform = {s/cytron/cytron1993efficient/}
}

@Book{czarnecki2000generative,
  author =	 {Krzysztof Czarnecki and Ulrich W. Eisenecker},
  title =	 {Generative Programming: Methods, Tools, and Applications},
  publisher =	 aw,
  year =	 2000,
  annote =	 {Cited by Elrad. Claims to cover
		 
		 * Domain Engineering * Feature Modeling * Generic
		 Programming * Aspect-Oriented Programming * Template
		 Metaprogramming in C++ * Generators * Microsoft's
		 Intentional Programming }
}

@InProceedings{dallosso2003pipes,
  author =	 {M. Dall'Osso and G. Biccari and L. Giovannini and D.
		 Bertozzi and Luca Benini},
  title =	 {{\em $\times$pipes}: a Latency Insensitive Parameterized
		 Network-on-chip Architecture for Multi-Processor {SoC}s},
  booktitle =	 iccd,
  year =	 2003,
  pages =	 {536-541},
  month =	 oct,
  affiliation =	 {Universita di Bologna, Bologna, Italy},
  annote =	 {Citing the TCAD paper},
  entered =	 {Luca Carloni,8/15/2003},
  keywords =	 {wire pipelining, NOC},
  oldkey =	 {dallosso_iccd03},
  sedtransform = {s/dallosso_iccd03/dallosso2003pipes/}
}

@InProceedings{dallosso2003xpipes,
  author =	 {M. Dall'Osso and G. Biccari and L. Giovannini and D.
		 Bertozzi and Luca Benini},
  title =	 {{\em $\times$pipes}: a Latency Insensitive Parameterized
		 Network-on-chip Architecture for Multi-Processor {SoC}s},
  booktitle =	 iccd,
  year =	 2003,
  pages =	 {536-541},
  month =	 oct,
  affiliation =	 {Universita di Bologna, Bologna, Italy},
  annote =	 {Citing the TCAD paper},
  entered =	 {Luca Carloni,8/15/2003},
  keywords =	 {wire pipelining, NOC}
}

@InProceedings{dally1989micro-optimizations,
  author =	 {William J. Dally},
  title =	 {Micro-optimizations of Floating-Point Operations},
  booktitle =	 asplos,
  year =	 1989,
  pages =	 {283--289},
  address =	 {Boston, Massachusetts},
  month =	 apr,
  annote =	 {Referenced in SED:babb:99a.},
  url =		 {http://www.acm.org/pubs/citations/proceedings/asplos/70082/p283-dally/}
		 ,
  bdsk-url-1 =	 {http://www.acm.org/pubs/citations/proceedings/asplos/70082/p283-dally/}
		 
}

@InProceedings{dally2001route,
  author =	 {W. J. Dally and B. Towles},
  title =	 {Route Packets, Not Wires: On-Chip Interconnection
		 Networks},
  booktitle =	 dac01,
  year =	 2001,
  pages =	 {684-689},
  address =	 dac01a,
  month =	 jun,
  affiliation =	 {UC Berkeley},
  annote =	 {Describes an on-chip network routing packets using virtual
		 channels with a folded-tours topology. While on-chip
		 networks leverage many years of research in inter-chip
		 networks, many challenges remain in adapting these networks
		 to the unique opportunities and constraints of intra-chip
		 communication. Identifies 3 avenuse of further research: (1)
		 there are 24x more wires than intra-chip networks, how to
		 use them? (2) Much less buffer space than intra-chip
		 networks. Which flow-control methods to seamlessly handle a
		 combination of statically scheduled and dynamic traffic?.
		 (3) which circuits for such structured wiring? Finally, the
		 network interface must be simple yet able to support a wide
		 variety of higher-level protocols and a wide variety of data
		 widths with low overhead.},
  entered =	 {Luca Carloni,10/25/02},
  keywords =	 {deep submicron, interconnect},
  oldkey =	 {dally01},
  sedtransform = {s/dally01/dally2001route/}
}

@InProceedings{damas1982principal,
  author =	 {Lu\'is Damas and Robin Milner},
  title =	 {Principal type-schemes for functional programs},
  booktitle =	 popl,
  year =	 1982,
  pages =	 {207--212},
  address =	 {Albuquerque, New Mexico},
  month =	 jan,
  annote =	 {The W algorithm used for ML's type inference system.}
}

@Article{daniell1991object,
  author =	 {J. Daniell and S. W. Director},
  title =	 {An Object Oriented Approach to {CAD} Tool Control},
  journal =	 transcad,
  year =	 {1991},
  volume =	 {10},
  number =	 {6},
  pages =	 {698--713},
  month =	 jun
}

@Article{darringer2000eda,
  author =	 {John Darringer and Evan Davidson and David J. Hathaway and
		 Bernd Koenemann and Mark Lavin and Joseph K. Morrell and
		 Khalid Rahmat and Wolfgang Roesner and Erich Schanzenbach
		 and Gustavo Tellez and Louise Trevillyan},
  title =	 {{EDA} in {IBM}: Past, Present, and Future},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1476--1497},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@InProceedings{das1999experience,
  author =	 {Satyaki Das and David L. Dill and Seungjoon Park},
  title =	 {Experience with Predicate Abstraction},
  booktitle =	 cav1999,
  year =	 1999,
  series =	 lncs,
  volume =	 1633,
  pages =	 {160--171},
  address =	 cav1999_a,
  month =	 jul,
  publisher =	 sv,
  annote =	 {From Ed Clarke. Builds on graf1997construction, but is more
		 readable.}
}

@InProceedings{das2000unification-based,
  author =	 {Manuvir Das},
  title =	 {Unification-based Pointer Analysis with Directional
		 Assignments},
  booktitle =	 pldi,
  year =	 2000,
  pages =	 {35--46},
  address =	 {Vancouver, BC, Canada},
  month =	 jun,
  annote =	 {Part of Monica's reading group. An improvement on
		 Steensgaard's algorithm, which sets equal the points-to sets
		 of pointers assigned to each other. This is pessimistic,
		 since a = b has a different effect than b = a. },
  url =		 {http://research.microsoft.com/manuvir/homepage.html},
  bdsk-url-1 =	 {http://research.microsoft.com/manuvir/homepage.html}
}

@InProceedings{das2002esp,
  author =	 {Manuvir Das and Sorin Lerner and Mark Seigle},
  title =	 {{ESP}: Path-Sensitive Program Verification in Polynomial
		 Time},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {57--68},
  address =	 {Berlin, Germany},
  month =	 jun,
  annote =	 {Partial program verification. Same idea as many: describe a
		 finite-state-machine for a property (fwrite only on open
		 file descriptors was their example) and an algorithm for
		 quickly proving it for very, very large programs. They
		 worked on GCC.}
}

@InProceedings{dasdan1997ratan,
  author =	 {Ali Dasdan and Anmol Mathur and Rajesh K. Gupta},
  title =	 {{RATAN}: A Tool for Rate Analysis and Rate Constraint
		 Debugging for Embedded Systems},
  booktitle =	 {Proceedings of the European conference on Design and Test},
  year =	 1997,
  pages =	 {2--6},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Talks about what you have to do to meet rate constraints.
		 Starts with an outer constraint and propagates it inwards.
		 Algorithm is something like "does it meet constraints? If
		 not, pipeline or adjust things in critical loops and
		 repeat"}
}

@Article{dasdan1998faster,
  author =	 {Ali Dasdan and Rajesh K. Gupta},
  title =	 {Faster maximum and minimum mean cycle algorithms for
		 system-performance analysis},
  journal =	 transcad,
  year =	 1998,
  volume =	 17,
  number =	 10,
  pages =	 {889--899},
  month =	 oct,
  annote =	 {Found by looking into minimum cycle mean stuff. Related to
		 the work with Luca.
		 
		 Talks about the problem of calculating the maximum cycle
		 mean of a graph, which represents its minimum periodic cycle
		 time. Karp apparently developed the first such algorithm in
		 1978. Only worries about calculating this number, not
		 adjusting it.
		 
		 Assumes, like Luca, that every process starts with a token
		 and that there are delays on the inter-process communication
		 channels. Related to work on asynchronous circuits. Steve
		 Burns's thesis from Caltech apparently has some of this in
		 it.}
}

@InProceedings{dasdan1998rate,
  author =	 {Ali Dasdan and Dinesh Ramanathan and Rajesh K. Gupta},
  title =	 {Rate derivation and its applications to reactive, real-time
		 embedded systems},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {263--268},
  address =	 dac98a,
  month =	 jun,
  annote =	 {More by Dasdan. Talks about an abstract task model and how
		 to think about response times, etc. Considers both AND-style
		 firing rules and OR-style.
		 
		 Rate derivation uses their maximum cycle mean algorithm.
		 
		 Applied the algorithm to the POLIS dashboard controller and
		 one from elsewhere described in their TODAES paper.}
}

@InProceedings{dasdan1999efficient,
  author =	 {Ali Dasdan and Sandy S. Irani and Rajesh K. Gupta},
  title =	 {Efficient Algorithms for Optimum Cycle Mean and Optimum
		 Cost to Time Ratio Problems},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {37--42},
  address =	 dac99a,
  month =	 jun,
  annote =	 {Rather like their transcad paper.}
}

@Article{dasdan2004experimental,
  author =	 {Ali Dasdan},
  title =	 {Experimental analysis of the fastest optimum cycle ratio
		 and mean algorithms},
  journal =	 todaes,
  year =	 2004,
  volume =	 9,
  number =	 4,
  pages =	 {385--418},
  month =	 oct,
  annote =	 {Survey of algorithms and their performance. Interesting
		 motivation for the importance of the problem: asynchronous,
		 discrete event systems, etc. Complete experimental results,
		 but doesn't talk about trying to modify delays.}
}

@InProceedings{dashofy2001highly-extensible,
  author =	 {Eric M. Dashofy and Andr\'e {van der Hoek} and Richard N.
		 Taylor},
  title =	 {A Highly-Extensible, {XML}-Based Architecture Description
		 Language},
  booktitle =	 {Proceedings of the Working IEEE/IFIP Conference on Software
		 Architecture (WICSA)},
  year =	 2001,
  pages =	 {103--112},
  address =	 {Amsterdam, The Netherlands},
  month =	 aug,
  annote =	 {Part of the DASADA project. These guys are from UCI.
		 Descibes their xADL 2.0.
		 
		 Argues that extensibility is an important attribute of ADLs.
		 Has a nice summary of existing ADLs (Wright, Rapide, and
		 Darwin) and a good bibliography. Taylor has written
		 extensively on ADLs. Wright uses CSP to describe systems.
		 Darwin uses the pi calculus.
		 
		 Argues for the importance of using XML for an ADL. Lengthy
		 arguments for why bother to design a new language.
		 
		 Product families and variants are a common theme in these
		 languages.
		 
		 Not too much technical detail, actually. More an abstract
		 discussion of the features of the language. Clearly relevant
		 to the SOD ideas, though. },
  url =		 {http://www.isr.uci.edu/architecture/publications.html},
  bdsk-url-1 =	 {http://www.isr.uci.edu/architecture/publications.html}
}

@Book{date1990introduction,
  author =	 {C. J. Date},
  title =	 {An Introduction to Database Systems},
  publisher =	 aw,
  year =	 {1990},
  series =	 {Addison-Wesley systems programming series},
  address =	 aw_a,
  edition =	 {Fifth},
  annote =	 {Simplistic introduction to databases, primarily relational.
		 Relational uses tables exclusively---good mathematical
		 rigor. Discussion of SQL, a somewhat crusty query language.
		 Textbook for the database class at Berkeley},
  callnum =	 {QA76.9.D3D37}
}

@Book{davey1990introduction,
  author =	 {B. A. Davey and H. A. Priestley},
  title =	 {Introduction to Lattices and Order},
  publisher =	 cup,
  year =	 {1990},
  annote =	 {Book Edward used for a class at Berkeley.}
}

@InProceedings{davis1995asynchronous,
  author =	 {A. Davis and S. M. Nowick},
  title =	 {Asynchronous Circuit Design: Motivation, Background, and
		 Methods},
  editor =	 {Graham Birtwistle and Al Davis},
  booktitle =	 {Asynchronous Digital Circuit Design},
  year =	 1995,
  series =	 {Workshops in Computing},
  pages =	 {1--49},
  publisher =	 {Springer-Verlag}
}

@Article{davis2001interconnect,
  author =	 {J. A. Davis and R. Venkatesan and A. Kaloyeros and M.
		 Beylansky and S.J. Souri and K. Banerjee and K.C. Saraswat
		 and A. Rahman and R. Reif and J.D. Meindl},
  title =	 {Interconnect Limits on Gigascale Integration (GSI) in th
		 21st Century},
  journal =	 procieee,
  year =	 2001,
  volume =	 89,
  number =	 3,
  pages =	 {305-324},
  month =	 mar,
  annote =	 {Discuss fundamental limits for interconnect. With a
		 acomparative table on interconnect and Transistor Scaling
		 Properties},
  entered =	 {Luca Carloni,3/18/02},
  keywords =	 {interconnect scaling, deep-submicron, ULSI},
  oldkey =	 {davis01},
  sedtransform = {s/davis01/davis2001interconnect/}
}

@InProceedings{dayal1988active,
  author =	 {U. Dayal},
  title =	 {Active Database Management Systems},
  year =	 1988,
  pages =	 {150--169},
  annote =	 {Excellent overview of all the issues in active databases},
  crossref =	 {beeri1988proceedings}
}

@InProceedings{dayal1988rules,
  author =	 {U. Dayal and A. P. Buchmann and D. R. McCarthy},
  title =	 {Rules Are Objects Too: {A} Knowledge Model for an Active,
		 Object-Oriented Database System},
  year =	 1988,
  pages =	 {129--143},
  annote =	 {Discussion similar to \cite{SED:dayal:88a}},
  crossref =	 {dittrich1988advances}
}

@Article{de-bruin1985denotational,
  author =	 {Arie {De Bruin} and Wim B{\"o}hm},
  title =	 {The Denotational Semantics of Dynamic Networks of
		 Processes},
  journal =	 toplas,
  year =	 {1985},
  volume =	 {7},
  number =	 {4},
  pages =	 {656--679},
  month =	 oct,
  annote =	 {Description of the network of processes described by
		 Kahn~\cite{kahn1974semantics}}
}

@InProceedings{de-jong1994communicating,
  author =	 {Gjalt G. {de Jong} and Bill Lin},
  title =	 {A Communicating {Petri} Net Model for the Design of
		 Concurrent Asynchronous Modules},
  booktitle =	 dac94,
  year =	 1994,
  pages =	 {49--55},
  address =	 dac94a,
  month =	 jun,
  annote =	 {Referenced by lin1998software. Describes the rules for
		 fusing parallel processes represented as Petri nets.}
}

@Article{de-micheli1985optimal,
  author =	 {Giovanni {De Micheli} and Robert K. Brayton and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Optimal State Assignment for Finite State Machines},
  journal =	 transcad,
  year =	 1985,
  volume =	 {CAD-4},
  number =	 3,
  pages =	 {269--285},
  month =	 jul,
  annote =	 {Describes KISS, a state-assignment tool.}
}

@Article{de-micheli1986symbolic,
  author =	 {Giovanni {De Micheli}},
  title =	 {Symbolic Design of Combinational and Sequential Logic
		 Circuits Implemented by Two-Level Logic Macros},
  journal =	 transcad,
  year =	 1986,
  volume =	 {CAD-5},
  number =	 4,
  pages =	 {597--616},
  month =	 oct,
  annote =	 {A main KISS reference? Stanford's Luc Semeria pointed to
		 this here.}
}

@Article{de-micheli1990olympus,
  author =	 {Giovanni {De Micheli} and David Ku and Fr\'ed\'eric Mailhot
		 and Thomas Truong},
  title =	 {The {Olympus} Synthesis System},
  journal =	 ieeedtc,
  year =	 1990,
  volume =	 7,
  number =	 5,
  pages =	 {37--53},
  month =	 oct,
  annote =	 {Describes their behavioral synthesis system and its input
		 language HardwareC. Includes the Hercules behavioral
		 synthesis engine, Hebe structural synthesizer, Mercury logic
		 synthesis, Ariadne for simulation, Theseus waveform display,
		 and Ceres for technology mapping.}
}

@Book{de-micheli1994synthesis,
  author =	 {Giovanni {De Micheli}},
  title =	 {Synthesis and Optimization of Digital Circuits},
  publisher =	 mgh,
  year =	 {1994},
  address =	 mgh_a,
  annote =	 {EE 290LS in a book? Bought a copy 970511.
		 
		 http://akebono.stanford.edu/users/nanni/mcgraw/}
}

@InProceedings{de-micheli1999hardware,
  author =	 {Giovanni {De Micheli}},
  title =	 {Hardware Synthesis from {C/C++} Models},
  booktitle =	 date,
  year =	 1999,
  pages =	 {382--383},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Two-page survey.
		 
		 Very nice summary. Touches on the major challenges:
		 concurrency, structure, constraints, timing.
		 
		 Cites: stroud1988behavioral
		 
		 His own HardwareC with David Ku (ku1992high-level)
		 
		 Coware Design, Frontier Design, Scenic, C2Verilog from C
		 Level Design (Compilogic)
		 
		 ernst1993hardware-software Cosyma schaumont1998programming
		 OCAPI }
}

@InProceedings{dean1995optimization,
  author =	 {Jeffrey Dean and David Grove and Craig Chambers},
  title =	 {Optimization of Object-Oriented Programs Using Static Class
		 Hierarchy Analysis},
  booktitle =	 ecoop,
  year =	 1995,
  pages =	 {77--101},
  address =	 {London, UK},
  publisher =	 sv,
  isbn =	 {3-540-60160-0}
}

@InProceedings{dean1998techniques,
  author =	 {Alexander G. Dean and John Paul Shen},
  title =	 {Techniques for Software Thread Integration in Real-Time
		 Embedded Systems},
  booktitle =	 rtss,
  year =	 1998,
  pages =	 {322--333},
  address =	 {Madrid, Spain},
  month =	 dec,
  annote =	 {Earlier work, when he was still at CMU.}
}

@InProceedings{dean2002compiling,
  author =	 {Alexander G. Dean},
  title =	 {Compiling for Concurrency: Planning and Performing Software
		 Thread Integration},
  booktitle =	 {Proceedings of the 23rd IEEE Real-Time Systems Symposium},
  year =	 2002,
  address =	 {Austin, Texas},
  month =	 dec,
  annote =	 {Cited by welch2005supporting. Contains most of that journal
		 paper, actually. Similar code expansion results (2X for
		 small examples), again because of loop unrolling.},
  optpages =	 {FIXME}
}

@Article{dean2003generate,
  author =	 {Alexander G. Dean and Shobhit Kanaujia and Benjamin Welch},
  title =	 {Generate Video Using Software Thread Integration},
  journal =	 {Circuit Cellar},
  year =	 2003,
  volume =	 161,
  pages =	 {10--18},
  month =	 dec,
  annote =	 {Neat idea: Dean's been working on software thread
		 integration out of NC State for quite some time. Uses an AVR
		 microcontroller plus their fancy compiler to solve timing
		 issues. Like my idea of predictable software timing.}
}

@Article{dean2004efficient,
  author =	 {Alexander G. Dean},
  title =	 {Efficient Real-Time Fine-Grained Concurrency on Low-Cost
		 Microcontrollers},
  journal =	 {IEEE Micro},
  year =	 2004,
  volume =	 24,
  number =	 4,
  pages =	 {10--22},
  month =	 {July/August},
  annote =	 {More lengthy. Nice bibliography.}
}

@InProceedings{dean2004mapreduce,
  author =	 {J. Dean and S. Ghemawat},
  title =	 {{MapReduce}: Simplified Data Processing on Large Clusters},
  booktitle =	 osdi,
  year =	 2004,
  month =	 dec
}

@InProceedings{dean2005software,
  author =	 {Alexander G. Dean},
  title =	 {Software Thread Integration and Synthesis for Real-Time
		 Applications},
  booktitle =	 date,
  year =	 2005,
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {I invited him to this.}
}

@Proceedings{dearle1990implementing,
  title =	 {Implementing Persistent Object Bases: Principles and
		 Practice / The Forth International Workshop on Persistent
		 Object Systems},
  year =	 {1990},
  editor =	 {A. Dearle and G. M. Shaw and S. B. Zdonik},
  address =	 {Martha's Vineyard, Massachusetts, USA},
  month =	 sep,
  publisher =	 mk,
  booktitle =	 {Implementing Persistent Object Bases: Principles and
		 Practice / The Forth International Workshop on Persistent
		 Object Systems}
}

@InProceedings{deboer2000compositional,
  author =	 {Frank S. {de Boer} and Marcello M. Bonsangue},
  title =	 {A Compositional Model for Confluent Dynamic Data-Flow
		 Networks},
  booktitle =	 {Mathematical Foundations of Computer Science},
  year =	 {2000},
  pages =	 {212-221},
  url =		 {citeseer.ist.psu.edu/deboer00compositional.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/deboer00compositional.html}
}

@InProceedings{dechering1999formalization,
  author =	 {Paul Dechering and Rix Groenboom and Edwin {de Jong} and
		 Jan Tijmen Udding},
  title =	 {Formalization of a software architecture for embedded
		 systems: a process algebra for {SPLICE}},
  booktitle =	 {Proceedings of the 32nd Hawaii International Conference on
		 System Sciences},
  year =	 1999,
  address =	 {Maui, Hawaii},
  month =	 jan,
  annote =	 {More from the Udding et al. group. SPLICE allows
		 asynchronous communication between processes. Presents a
		 process algebra describing the systems. Write to distributed
		 memory, destructive and non-destructive read.
		 
		 Couldn't easily tell whether their systems were determinstic
		 by construction or by design.
		 
		 Laws for the algebra look very much like the DI algebra in
		 josephs1993overview.
		 
		 Interesting bibliography. Mentions a bunch of coordination
		 languages that I hadn't heard of before.
		 
		 Ultimately unsatisfying. Mostly just rewrites the behavior
		 of these odd embedded systems (effectively communicate
		 through shared memory, but the process blocks if information
		 hasn't been written yet) in the style of a process algebra a
		 la josephs1993overview. },
  optpages =	 {FIXME}
}

@TechReport{dedhia2009example,
  author =	 {Devesh Dedhia},
  title =	 {Example application under {PRET} environment ---
		 Programming a {MultiMediaCard}},
  institution =	 cucs,
  year =	 2009,
  number =	 {CUCS--005--09},
  address =	 nyny,
  month =	 jan,
  annote =	 {Some ideas about how to get an MMC card working in a PRET
		 environment.}
}

@InProceedings{dekock2000yapi,
  author =	 {E. A. {de Kock} and W. J. M. Smits and P. {van der Wolf}
		 and J.-Y. Brunel and W. M. Kruijtzer and P. Lieverse and K.
		 A. Vissers and G. Essink},
  title =	 {{YAPI}: Application Modeling for Signal Processing
		 Systems},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {402--405},
  address =	 dac00a,
  month =	 jun,
  annote =	 {Cited by stefanov2004systems. Seems like just "Kahn
		 networks plus some extra stuff is good for video
		 processing." The example they include is tiny and not
		 illustrative. A C++ library for the concurrency.
		 stefanov2004system has better examples. Basically, read and
		 write calls.
		 
		 "Y-Chart Application Programming Interface"}
}

@PhDThesis{deline1999resolving,
  author =	 {Robert DeLine},
  title =	 {Resolving Packaging Mismatch},
  school =	 {Carnegie Mellon University},
  year =	 1999,
  annote =	 {Idea is to defer packaging (interface) decisions until
		 later in the software design process to improve integration
		 challenges. He published something that caught my eye at
		 PLDI 2001.},
  url =		 {http://research.microsoft.com/users/rdeline/publications/dissertation/index.html}
		 ,
  bdsk-url-1 =	 {http://research.microsoft.com/users/rdeline/publications/dissertation/index.html}
		 
}

@Article{deline2001avoiding,
  author =	 {Robert DeLine},
  title =	 {Avoiding Packaging Mismatch with Flexible Packaging},
  journal =	 {IEEE Transactions on Software Engineering},
  year =	 2001,
  volume =	 27,
  number =	 2,
  pages =	 {124--142},
  month =	 feb,
  annote =	 {Like his thesis. Really neat idea: separate body and
		 interface and allow interface to change later. "Packaging"
		 is evidentally accepted in the SW Engineering community. He
		 cites some ICSE papers that use it in the title. What a neat
		 idea for device drivers: the interface is everything. Would
		 the architectural language they developed (UniCon) be useful
		 for device drivers? That's probably his PLDI paper.
		 
		 They propose an extension to C called Ciao that adds
		 dataflow-like channels and interleaves the flow of control
		 through coroutines. The wares (what's inside the package)
		 and the packagers are written in this and communicate
		 through channels. Buffered communication helps to resolve
		 potential deadlocks. He has the amusing problem of just
		 moving the problem: the ware and the package must themselves
		 agree on a communication protocol (i.e., what and when to
		 send on channels).
		 
		 Compatibility between channels: Uses a CSP-like
		 specification of the communication. The commercial FDR model
		 checker for CSP verifies the protocols match. Doesn't have a
		 great mechanism for verifying the code actually adheres to
		 the CSP signature.
		 
		 Write an interface specification in UniCon. A customized
		 packaging generator (written, with luck, once by a
		 "packaging specialist") synthesizes Ciao (C + buffers,
		 coroutines) based on it.
		 
		 Efficiency is claimed to be good: he measured no more than 8
		 percent overhead.
		 
		 His advisor is CMU's Mary Shaw, who seems very big in this
		 community (ICSE keynote).},
  url =		 {http://research.microsoft.com/users/rdeline/publications/tse-icse99/index.html}
		 ,
  bdsk-url-1 =	 {http://research.microsoft.com/users/rdeline/publications/tse-icse99/index.html}
		 
}

@InProceedings{deline2001enforcing,
  author =	 {Robert DeLine and Manuel F\"ahndrich},
  title =	 {Enforcing High-Level Protocols in Low-Level Software},
  booktitle =	 pldi,
  year =	 2001,
  pages =	 {59--69},
  address =	 {Snowbird, Utah},
  month =	 jun,
  annote =	 {Description of the Vault project at Microsoft Research}
}

@Book{demarco1982controlling,
  author =	 {T. DeMarco},
  title =	 {Controlling Software Projects: Management, Measurement \&
		 Estimation},
  publisher =	 {Yourdon Press},
  year =	 {1982}
}

@InProceedings{derose1995falcon,
  author =	 {Luiz {De Rose} and Kyle Gallivan and Efstratios Gallopoulos
		 and Bret A. Marsolf and David A. Padua},
  title =	 {{FALCON}: A {MATLAB} Interactive Restructuring Compiler.},
  booktitle =	 {Proceedings of the Workshop on Languages and Compilers for
		 Parallel Computing (LCPC)},
  year =	 {1995},
  series =	 lncs,
  volume =	 1033,
  pages =	 {269--288},
  address =	 {Columbus, Ohio},
  month =	 aug,
  annote =	 {Part of our LCPC paper}
}

@Article{derose1999techniques,
  author =	 {Luiz {De Rose} and David Padua},
  title =	 {Techniques for the translation of {MATLAB} programs into
		 {Fortran 90}},
  journal =	 toplas,
  year =	 1999,
  volume =	 21,
  number =	 2,
  pages =	 {286--323},
  month =	 mar,
  annote =	 {Describes the FALCON compiler. Cited in our LCPC paper. At
		 UIUC.}
}

@TechReport{detlefs1998extended,
  author =	 {David L.~Detlefs and K.~Rustan M.~Leino and Greg Nelson and
		 James B.~Saxe},
  title =	 {Extended Static Checking},
  institution =	 {Compaq Systems Research Center},
  year =	 {1998},
  number =	 {\#159},
  address =	 {Palo Alto, USA},
  month =	 dec,
  annote =	 {Cited by the PREfix paper, among many others. Uses a
		 theorem-prover. Has programmers put assertions into the code
		 that are then tested automatically. Checks for a fixed set
		 of errors including array bounds, NIL dereference,
		 divide-by-zero, and so forth. Originally implemented for
		 Modula-3. Does not strive to be complete.},
  url =		 {citeseer.nj.nec.com/detlefs98extended.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/detlefs98extended.html}
}

@InProceedings{detreville2005making,
  author =	 {John DeTreville},
  title =	 {Making System Configuration More Declarative},
  booktitle =	 {HotOS X},
  year =	 2005,
  address =	 {Santa Fe, New Mexico},
  month =	 jun,
  annote =	 {For the ESAL stuff.}
}

@TechReport{deutsch1983behavioral-level,
  author =	 {Jeff T. Deutsch},
  title =	 {Behavioral-Level Simulation and Synthesis of Digital
		 Systems},
  institution =	 ucb,
  year =	 {1983},
  number =	 {UCB/ERL M83/47}
}

@InProceedings{deutsch1994interprocedural,
  author =	 {Alain Deutsch},
  title =	 {Interprocedural May-Alias Analysis for Pointers: Beyond
		 {\em k}-limiting},
  booktitle =	 {ACM SIGPLAN 94-6/94},
  year =	 {1994},
  pages =	 {230--241},
  oldkey =	 {deutsch94},
  sedtransform = {s/deutsch94/deutsch1994interprocedural/}
}

@Article{devadas1988mustang,
  author =	 {Srinivas Devadas and Hi-Keung Ma and A. Richard Newton and
		 A. Sangiovanni-Vincentelli},
  title =	 {{MUSTANG}: State Assignment of Finite State Machines
		 Targeting Multilevel Logic Implementations},
  journal =	 transcad,
  year =	 1988,
  volume =	 7,
  number =	 12,
  pages =	 {1290--1300},
  month =	 dec,
  annote =	 {MUSTANG multi-level state assignment, a bit like NOVA,
		 JEDI, etc. Has some very old papers as well as citations of
		 de-micheli1985optimal.}
}

@Article{devadas1988on,
  author =	 {Srinivas Devadas and Hi-Keung Tony Ma and A. Richard
		 Newton},
  title =	 {On the Verification of Sequential Machines at Differing
		 Levels of Abstraction},
  journal =	 transcad,
  year =	 {1988},
  volume =	 {7},
  number =	 {6},
  pages =	 {713--722},
  month =	 jun,
  annote =	 {Kurt pointed me to this. It has a mechanism for going from
		 gates to cubes involving Espresso-like minimization.}
}

@PhDThesis{devadas1988techniques,
  author =	 {Srinivas Devadas},
  title =	 {Techniques for Optimization-Based Synthesis of Digital
		 Systems},
  school =	 ucb,
  year =	 {1988},
  note =	 {Available as UCB/ERL M88/54}
}

@Article{devadas1989decomposition,
  author =	 {S. Devadas and A. R. Newton},
  title =	 {Decomposition and Factorization of Sequential Finite State
		 Machines},
  journal =	 transcad,
  year =	 {1989},
  volume =	 {8},
  number =	 {11},
  pages =	 {1206--1217},
  month =	 nov,
  annote =	 {Speaks of series, parallel, and arbitrary decomposition}
}

@Article{devadas1989synthesis,
  author =	 {S. Devadas and H.-K. T. Ma and A. R. Newton and A.
		 Sangiovanni-Vincentelli},
  title =	 {A Synthesis and Optimization Procedure for Fully and Easily
		 Testable Sequential Machines},
  journal =	 transcad,
  year =	 {1989},
  volume =	 {8},
  number =	 {10},
  pages =	 {1100--1107},
  month =	 oct,
  annote =	 {Many proofs--trick is to break logic into cones}
}

@Article{devadas1991optimizing,
  author =	 {Srinivas Devadas},
  title =	 {Optimizing interacting finite state machines using
		 sequential don't cares},
  journal =	 tcad,
  year =	 1991,
  volume =	 10,
  number =	 12,
  pages =	 {1473--1484},
  month =	 dec,
  annote =	 {Early work? Distinguishes between input Don't Care Vectors
		 and sequences. Assumes that the STG can be represented
		 explicitly. Largest machine had 2111 states. Uses MUSTANG
		 and MIS.}
}

@Article{devadas1991unified,
  author =	 {S. Devadas and K. Keutzer},
  title =	 {A Unified Approach to the Synthesis of Fully Testable
		 Sequential Machines},
  journal =	 transcad,
  year =	 {1991},
  volume =	 {10},
  number =	 {1},
  pages =	 {39--50},
  month =	 jan,
  annote =	 {Opaque}
}

@Book{devadas1994logic,
  author =	 {Srinivas Devadas and Abhijit Ghosh and Kurt Keutzer},
  title =	 {Logic Synthesis},
  publisher =	 mgh,
  year =	 1994,
  address =	 mgh_a,
  annote =	 {Hachtel and Somenzi's is better}
}

@InProceedings{devane1997efficient,
  author =	 {Charles J. DeVane},
  title =	 {Efficient Circuit Partitioning to Extend Cycle Simulation
		 Beyond Synchronous Circuits},
  booktitle =	 iccad,
  year =	 {1997},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Has a way to break up networks into regions with identical
		 clocks, no clocks, etc.}
}

@InProceedings{devietti2009dmp,
  author =	 {Joseph Devietti and Brandon Lucia and Luis Ceze and Mark
		 Oskin},
  title =	 {DMP: deterministic shared memory multiprocessing.},
  booktitle =	 {ASPLOS},
  year =	 {2009},
  pages =	 {85-96},
  publisher =	 {ACM},
  url =		 {http://dblp.uni-trier.de/db/conf/asplos/asplos2009.html#DeviettiLCO09}
		 ,
  ee =		 {http://doi.acm.org/10.1145/1508244.1508255},
  isbn =	 {978-1-60558-406-5},
  date =	 {2009-03-24}
}

@InProceedings{dewey1983vhsic,
  author =	 {Al Dewey},
  title =	 {{VHSIC} hardware description {(VHDL)} development program},
  booktitle =	 dac83,
  year =	 1983,
  pages =	 {625--628},
  address =	 dac83a,
  month =	 jun,
  annote =	 {Very early VHDL paper. It's actually Lt. Al Dewey, USAF.
		 Very nice bibliography.
		 
		 Talks more about the VHSIC program, which was barely
		 underway, rather than the VHDL language that was ultimately
		 produced. Describes the procedure in detail: gathering
		 requirements, posting benchmarks, disseminating the
		 information, taking bids, and so forth. Instructive to see
		 what the attitudes were to begin with. A lot's rather silly,
		 though: concerns about too complex a language, main focus
		 was on communicating design information (it's completely
		 inscrutable), worries about everything in the language
		 having a hardware analog.
		 
		 Things started in Woods Hole in 1981.}
}

@Article{dewey1992vhdl,
  author =	 {Allen Dewey and Aart J. {de Geus}},
  title =	 {{VHDL}: Toward a Unified View of Design},
  journal =	 ieeedtc,
  year =	 1992,
  volume =	 9,
  number =	 2,
  pages =	 {8--17},
  month =	 apr,
  annote =	 {Cites dewey1983vhsic. Dewey apparently left the Air Force
		 and joined IBM.
		 
		 Discusses the same history as dewey1983vhsic Started in
		 1981, defined in 1982, started really in 1983. Contract
		 awarded to Intermetrics, TI, and IBM. Designed really during
		 1983-1984. Version finally released to the public in the
		 summer of 1985 (VHDL 7.2). Revised and turned into IEEE
		 standard in 1987 (1076).
		 
		 Perhaps most interesting are the list of things that didn't
		 pan out. Discusses a common intermediate representation
		 (i.e., below text) that I've never seen used. Mentions
		 analog modeling, which did come to fruition. Also mentions
		 design-for-test (manufacturing) issues. Performance modeling
		 also: has a lengthy discussion of using VHDL to describe
		 Petri nets. Gives a vague example of a package supporting
		 Petri net modeling. Talks also about WAVES, a test pattern
		 interchange language (subset).}
}

@Book{dewey1997analysis,
  author =	 {Allen M. Dewey},
  title =	 {Analysis and Design of Digital Systems with {VHDL}},
  publisher =	 {Brooks/Cole Publishing (Formerly PWS)},
  year =	 1997,
  address =	 {Pacific Grove, California},
  annote =	 {Randy says this is one of the best-selling VHDL books.},
  url =		 {http://www.pws.com},
  bdsk-url-1 =	 {http://www.pws.com}
}

@InProceedings{dey1997performance,
  author =	 {Sujit Dey and Surendra Bommu},
  title =	 {Performance analysis of a system of communicating
		 processes},
  booktitle =	 iccad,
  year =	 1997,
  pages =	 {590--597},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Relevant to the SHIM-to-hardware stuff. Predicting
		 worst-case performance.}
}

@InProceedings{di-natale2000task,
  author =	 {Marco {Di Natale} and Alberto Sangiovanni-Vincentelli and
		 Felice Balarin},
  title =	 {Task Scheduling with {RT} Constraints},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {483--488},
  address =	 dac00a,
  month =	 jun,
  annote =	 {About assigning priorities to make sure CFSMs communicate
		 the way you'd think.}
}

@Article{didio1988novell,
  author =	 {Laura DiDio},
  title =	 {Novell unveils {LAN} gear, new version of {NetWare}},
  journal =	 {Network World},
  year =	 1988,
  volume =	 5,
  number =	 20,
  pages =	 {4, 71},
  month =	 may,
  annote =	 {The announcement of the NE2000 for \$495 at Comdex.},
  url =		 {http://books.google.com/books?id=GRIEAAAAMBAJ&lpg=PA4&dq=novell%20NE2000%20review&pg=PA4#v=onepage&q=novell%20NE2000%20review&f=false}
		 ,
  text =	 { May 16, 1988
		 
		 Novell unveils LAN gear, new version of NetWare; Comdex
		 conference is site of product barrage.
		 
		 BYLINE: By Laura DiDio, Senior Editor
		 
		 SECTION: TOP NEWS; Pg. 4
		 
		 LENGTH: 847 words
		 
		 DATELINE: ATLANTA
		 
		 Novell, Inc. introduced several new products at
		 Comdex/Spring '88 last week, including Advanced NetWare
		 v2.11, featuring built-in support for OS/2, and the
		 ATterminal, an Intel Corp. 80286-based diskless workstation.
		 
		 Novell also announced that Nondedicated NetWare for OS/2,
		 which lets users run NetWare on OS/2-based servers, will be
		 bundled with Advanced NetWare v2.11 by the end of this year.
		 
		 Several other hardware offerings were also unveiled by
		 Novell here, including three local network adapters, a Disk
		 Coprocessor Board for IBM Personal System/2 Models 50, 60
		 and 80 used as NetWare servers, and an enhanced version of
		 its Intel 80386-based local network file server called the
		 386E.
		 
		 Nine months after announcing it would support OS/2-based
		 workstations, Novell last week said it will provide that
		 support as part of Advanced NetWare v2.11, which will ship
		 May 27. Previously, users needing OS/2 support purchased a
		 separate software package from the company.
		 
		 "It's nice, but it's not earth-shattering," said Lee Doyle,
		 senior analyst at market research firm International Data
		 Corp. in Framingham, Mass. "The support for OS/2 in NetWare
		 is simply part of Novell's strategy to keep abreast of the
		 market. Almost all of the major LAN vendors will support
		 OS/2." But according to the IDC analyst, the impact of
		 Novell or any local network vendor's support for OS/2 won't
		 be felt until OS/2 becomes a reality.
		 
		 "Right now," Doyle said, "there are very few users who have
		 OS/2 running on their PCs, and this won't change for at
		 least a couple of years. But nobody can afford to ignore it
		 because it's an emerging standard."
		 
		 Doyle voiced similar sentiments about Novell's announcement
		 that Nondedicated NetWare for OS/2 will be included with
		 Advanced NetWare v2.11 and Entry Level System (ELS) NetWare
		 Level II offerings by the fourth quarter of 1988.
		 
		 Nondedicated NetWare for OS/2 gives users the option of
		 running their servers in one of three modes -- dedicated or
		 nondedicated DOS, or nondedicated OS/2 -- while still
		 maintaining full NetWare compatibility.
		 
		 "As a network operating system, OS/2 is actually pretty
		 slow," Doyle said. "Novell believes that NetWare will always
		 be faster. But again, Novell has to support emerging
		 standards or they'll get crucified, from a marketing
		 standpoint."
		 
		 Additionally, Nondedicated NetWare for OS/2 includes a full
		 set of interprocess communications facilities such as LU
		 6.2, Network Basic I/O System, Named Pipes and NetWare's
		 Internetwork Packet Exchange/Sequence Packet Exchange
		 transport protocols.
		 
		 The new Novell ATterminal is a diskless local network
		 workstation that has a built-in Ethernet network interface
		 card. It also comes with a proprietary network boot feature
		 that allows it to boot the operating system automatically
		 from the server, said Darrell Evora, vice-president of
		 marketing for Novell's Hardware Products Division.
		 
		 Users can also install other network interface cards in the
		 four available expansion slots. This lets the ATterminal
		 work in other types of networks, such as Novell's RX-Net.
		 
		 The ATterminal's 80286 microprocessor runs at either 6 or 12
		 MHz and will be available in June for $1,595.
		 
		 The three Ethernet local-area network adapters are the
		 NE2000 Ethernet Adapter, the NE/2 LAN Adapter and the
		 RX-Net/2 Micro Channel LAN Adapter.
		 
		 The NE2000 is a 16-bit Ethernet adapter designed for use
		 with NetWare Version 2.0a and higher. It is a
		 high-performance interface card for personal computers used
		 as servers on NetWare local nets.
		 
		 The NE/2 is Novell's first Ethernet adapter for personal
		 computers using IBM's Micro Channel bus architecture. It
		 provides Ethernet support for Personal System/2 machines
		 running either as workstations or as file servers on NetWare
		 Ethernet local networks.
		 
		 The RX-Net/2 Micro Channel network adapter is a 16-bit
		 implementation of Novell's RX-Net network adapter for use in
		 Personal System/2 Models 50, 60 and 80 workstations and file
		 servers.
		 
		 The NE2000 will be available in July for $495. The NE/2 is
		 also priced at $495 and will be available in August. The
		 RX-Net/2 is available now for $695.
		 
		 The Novell 386AE file server is an enhanced version of the
		 earlier 386A, which is based on the Intel 80386
		 microprocessor running at 16 MHz. The 386AE, which features
		 a 375-watt power supply, can be expanded to support up to
		 four subnets.
		 
		 The 386AE will ship in the third quarter and sells for
		 $9,975 with a single 155M-byte drive and $13,695 with dual
		 155M-byte drives.
		 
		 The Disk Coprocessor Board/2 is for IBM Personal System/2s
		 used as file servers. It supports up to seven disk drives
		 with a maximum of 2G bytes of storage and is priced at $995.
		 
		 Advanced NetWare v2.11 is priced at $2,695, and the System
		 Fault Tolerant (SFT) version is priced at $4,695. The cost
		 to upgrade from Advanced NetWare v2.1 to v2.11 is $500; the
		 cost to those users who are migrating from Advanced NetWare
		 v2.1 to SFT NetWare v2.11 is $2,500. Additionally, ELS/2
		 NetWare supporting eight users is priced at $1,395. ELS/2 is
		 slated to ship in August.
		 
		 SUBJECT: COMPUTER NETWORKS (90%); NETWORK SERVERS (90%); NEW
		 PRODUCTS (89%); NETWORK PROTOCOLS (89%); NETWORK SOFTWARE
		 (89%); CUSTOMER SERVICE (78%); COMPUTER OPERATING SYSTEMS
		 (78%); NETWORKING EQUIPMENT (78%); PERSONAL COMPUTERS (77%);
		 NETWORK STORAGE TECHNOLOGY (76%); NETWORK INTERFACE CARDS
		 (75%); COMPUTER SOFTWARE (72%); MARKET RESEARCH FIRMS (71%);
		 MARKET RESEARCH (71%); MARKET RESEARCH & ANALYSIS (71%);
		 
		 INDUSTRY: NAICS334413 SEMICONDUCTOR & RELATED DEVICE
		 MANUFACTURING (93%);
		 
		 PERSON: LEE DOYLE (64%);
		 
		 COUNTRY: UNITED STATES (55%);
		 
		 STATE: MASSACHUSETTS, USA (55%);
		 
		 COMPANY: NOVELL INC (97%); INTEL CORP (93%); INTERNATIONAL
		 DATA CORP (68%);
		 
		 LANGUAGE: ENGLISH
		 
		 Copyright 1988, Network World, Inc.
		 
		 Search Terms [(novell unveils)](21) View search details
		 Search Details
		 
		 You searched for: (novell unveils) Source [Network World]
		 Show Full with Indexing Sort Publication Date Date/Time
		 December 2 2009 19:26:03}
}

@Article{diefendorff1997how,
  author =	 {Keith Diefendorff and Pradeep K. Dubey},
  title =	 {How multimedia workloads will change processor design},
  journal =	 computer,
  year =	 1997,
  volume =	 30,
  number =	 9,
  pages =	 {43--45},
  month =	 sep,
  annote =	 {Cited by Crystal Mayer as motivation for of the Playstation
		 2 architecture.
		 
		 Media-specific horsepower. Predicts that general-purpose
		 processors will evolve to accomodate these workloads, rather
		 than specialized digital signal processors.
		 
		 Observes that most applications have been "largely
		 nonnumeric with little inherent parallelism." Leads to
		 scalar processing, control-flow speculation, dynamic
		 instruction reordering, and large caches.
		 
		 But multimedia (video, animation, music) is different. Many
		 such applications. Multimedia applications: peer-to-peer,
		 real-time constraints, continuous data streams, packed
		 integer and floating-point vectors.
		 
		 Claim that there's no need for special-purpose hardware:
		 these architectures should fit into general-purpose
		 processors without a problem. Things like Intel's MMX speed
		 things greatly without a big architectural impact. Actually,
		 they claim special-purpose hardware will disappear from
		 computers, but not in embedded consumer devices.
		 
		 Real-time response, continuous media data types,
		 fine-grained data parallelism, small loops (instruction
		 locality) "Furthermore, even without good compiler
		 technology, manual assembly coding and hand optimization of
		 such tight loops is practical." Data reorganization. High
		 memory and network bandwidth.
		 
		 "we believe specialized media digital signal processors will
		 simply become extinct, laid victim by phenomenal technology
		 growth."
		 
		 Rather a grim prediction w.r.t. compiler technology, but
		 focuses an awful lot on general-purpose computers (i.e., not
		 embedded systems).
		 
		 Diefendorff is from Apple, Dubey is from IBM T. J. Watson}
}

@Article{dijkstra1965solution,
  author =	 {Edsger W. Dijkstra},
  title =	 {Solution of a Problem in Concurrent Programming Control},
  journal =	 cacm,
  year =	 1965,
  volume =	 8,
  number =	 9,
  pages =	 569,
  month =	 sep,
  annote =	 {Mutual exclusion (single critical section) among multiple
		 processes. No references, but everybody cites it.}
}

@Article{dijkstra1968goto,
  author =	 {Edsger W. Dijkstra},
  title =	 {Letters to the editor: go to statement considered harmful},
  journal =	 {Commun. ACM},
  year =	 {1968},
  volume =	 {11},
  number =	 {3},
  pages =	 {147--148},
  doi =		 {http://doi.acm.org/10.1145/362929.362947},
  issn =	 {0001-0782},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/362929.362947}
}

@Article{dijkstra1968structure,
  author =	 {Edsger W. Dijkstra},
  title =	 {The structure of the {``THE''}-multiprogramming system},
  journal =	 cacm,
  year =	 1968,
  volume =	 11,
  number =	 5,
  pages =	 {341--346},
  month =	 may,
  address =	 nyny,
  annote =	 {Appendix contains a very basic discussion of semaphores.
		 Appears to be seminal.},
  doi =		 {http://doi.acm.org/10.1145/363095.363143},
  issn =	 {0001-0782},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/363095.363143}
}

@Book{dijkstra1976discipline,
  author =	 {Edsger Wybe Dijkstra},
  title =	 {A Discipline of Programming},
  publisher =	 ph,
  year =	 1976,
  annote =	 {Deriving iterative algorithms, guarded command languages,
		 etc.}
}

@Article{dipert2001audio,
  author =	 {Brian Dipert},
  title =	 {Audio receivers tune in to binary broadcasts},
  journal =	 {EDN},
  year =	 2001,
  pages =	 {48--54},
  month =	 {April 26},
  annote =	 {Good description of how an embedded system is engineered.
		 There's some realtime issues, flexible protocol challenges,
		 communication, I/O, many decisions about which interfaces to
		 consider (USB? Ethernet? 1394?). A good case study for an
		 engineering class.}
}

@Book{diringer1948alphabet,
  author =	 {David Diringer},
  title =	 {The Alphabet: {A} Key to The History of Mankind},
  publisher =	 {Philosphical Library Inc.},
  year =	 {1948},
  address =	 {New York}
}

@InProceedings{discolo2006lock,
  author =	 {Anthony Discolo and Tim Harris and Simon Marlow and Simon
		 Peyton Jones and Satnam Singh},
  title =	 {Lock Free Data Structures using {STM} in {Haskell}},
  booktitle =	 {Proceedings of Functional and Logic Programming (FLOPS)},
  year =	 2006,
  series =	 lncs,
  volume =	 3945,
  pages =	 {65--80},
  address =	 {Fuji Susono, Japan},
  month =	 apr,
  url =		 {http://www.haskell.org/~simonmar/papers/lockfreedatastructures.pdf}
		 ,
  bdsk-url-1 =	 {http://www.haskell.org/~simonmar/papers/lockfreedatastructures.pdf}
		 
}

@Proceedings{dittrich1988advances,
  title =	 {Advances in Object-Oriented Database Systems / 2nd
		 International Workshop of Object-Oriented Database Systems},
  year =	 {1988},
  editor =	 {K. R. Dittrich},
  number =	 {334},
  series =	 lncs,
  address =	 {Bad M\"unster am Stein-Ebemburg, Germany},
  month =	 sep,
  publisher =	 sv,
  booktitle =	 {Advances in Object-Oriented Database Systems / 2nd
		 International Workshop of Object-Oriented Database Systems}
}

@Manual{dmg1997wind,
  title =	 {Wind River Systems: A Rising Star in Embedded Computing
		 Software},
  organization = {Deutsche Morgan Grenfell},
  address =	 {New York, New York},
  month =	 feb,
  year =	 1997,
  annote =	 {Mentions microprocessor shipments. Substantial review.}
}

@Book{doblhofer1961voices,
  author =	 {Ernst Doblhofer},
  title =	 {Voices in Stone: The Decipherment of Ancient Scripts and
		 Writings},
  publisher =	 {Viking Press},
  year =	 1961
}

@Article{dodge2005study,
  author =	 {Catherine Dodge and Cynthia Irvine and Thuy Nguyen},
  title =	 {A study of initialization in {Linux} and {OpenBSD}},
  journal =	 {ACM SIGOPS Operating Systems Review},
  year =	 2005,
  volume =	 39,
  number =	 2,
  pages =	 {79--93},
  month =	 apr,
  annote =	 {Cited by spear2006solving.
		 
		 Nice tutorial on how these systems boot (BIOS, bootloaders,
		 etc.)}
}

@InProceedings{domaschka2006revisiting,
  author =	 {Jorg Domaschka and Andreas I. Schmied and Hans P. Reiser
		 and Franz J. Hauck},
  title =	 {Revisiting Deterministic Multithreading Strategies},
  booktitle =	 ipdps,
  year =	 2007,
  address =	 {California, USA},
  month =	 mar
}

@Manual{domer2001specc,
  author =	 {Rainer D\"omer and Andreas Gerstlauer and Daniel Gajski},
  title =	 {{SpecC} Language Reference Manual},
  organization = {SpecC consortium},
  edition =	 {Version 1.0},
  month =	 mar,
  year =	 2001,
  annote =	 {Definition of the language.}
}

@Manual{domer2002specc,
  author =	 {Rainer D\"omer and Andreas Gerstlauer and Daniel Gajski},
  title =	 {{SpecC} Language Reference Manual},
  organization = {SpecC consortium},
  edition =	 {Version 2.0},
  month =	 mar,
  year =	 2001,
  annote =	 {Definition of the language. Adds fsmd, standard library}
}

@Misc{domic1995some,
  author =	 {Antun Domic},
  title =	 {Some Problems in Sub Micron Technology and Their Effect on
		 Design Methods and {CAD} Tools},
  howpublished = {UC Berkeley CAD Seminar},
  year =	 {1995},
  month =	 may
}

@Article{donnelly1971periodic,
  author =	 {J. D. P. Donnelly},
  title =	 {Periodic Chaotic Relaxation},
  journal =	 {Linear Algebra and Its Applications},
  year =	 {1971},
  volume =	 {4},
  number =	 {2},
  pages =	 {117--128},
  month =	 apr,
  annote =	 {Restriction of Chazan and Miranker's work to periodic
		 schemes working on positive-definite matrices. Not terribly
		 relevant.}
}

@Book{douglass1999doing,
  author =	 {Bruce Powel Douglass},
  title =	 {Doing Hard Real-Time: Developing Real-Time Systems with
		 UML, Objects, Frameworks, and Patterns},
  publisher =	 aw,
  year =	 1999,
  address =	 aw_a,
  annote =	 {Rather long-winded. Definitely UML-centric (he's on the
		 committee), and very pro-iLogix, since he's an evangalist
		 for them. I borrowed this book from Stan.
		 
		 Objects are fundamentally concurrent. Conceptually, each
		 could exist on a separate processor, all running
		 concurrently, and passing messages back and forth. The
		 restriction is really one of sequential behavior in the
		 methods on each object. This is why object-oriented
		 languages are so good for simulations.
		 
		 Looks pretty good. A bit breezy, but discusses everything
		 from real-time behavior to architectures designed for safety.
		 
		 Safety chapter particularly interesting: hazard (a bad thing
		 that could happen), fault (a failure of a component), latent
		 fault, failure-mode analysis, a few patterns for safety
		 (redundancy in various forms). Basic idea is to make the
		 system behave well even if a single thing goes wrong. }
}

@InProceedings{drake2006mpeg2,
  author =	 {Matthew Drake and Henry Hoffman and Rodric Rabbah and Saman
		 Amarasinghe},
  title =	 {{MPEG-2} Decoding in a Stream Programming Language},
  booktitle =	 {International Parallel and Distributed Processing
		 Symposium},
  year =	 2006,
  address =	 {Rhodes Island, Greece},
  month =	 apr,
  annote =	 {Part of the StreamIt project at MIT. The MPEG2 source is
		 available.}
}

@Article{drusinsky1989using,
  author =	 {D. Drusinsky and D. Harel},
  title =	 {Using {Statecharts} for Hardware Description and
		 Synthesis},
  journal =	 transcad,
  year =	 {1989},
  volume =	 {8},
  number =	 {7},
  pages =	 {798--807},
  month =	 jul
}

@Article{du2000high-performance,
  author =	 {Junchen Du and George Warner and Erik Vallow and Tom
		 Hollenbach},
  title =	 {High-Performance {DSPs}},
  journal =	 {IEEE Signal Processing Magazine},
  year =	 2000,
  volume =	 17,
  number =	 2,
  pages =	 {16--26},
  month =	 mar,
  annote =	 {From Brian. Discusses GSM EFR Speech Coding on the Lucent
		 DSP16000.}
}

@InProceedings{ducasse1993pragmatic,
  author =	 {Mireille Ducass\'{e}},
  title =	 {A Pragmatic Survey of Automated Debugging},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {749},
  pages =	 {1--15},
  publisher =	 kl,
  annote =	 {Excellent survey of the different modern techniques}
}

@InProceedings{duesterwald1995demand-driven,
  author =	 {Evelyn Duesterwald and Rajiv Gupta and Mary Lou Soffa},
  title =	 {Demand-Driven Computation of Interprocedural Data Flow},
  booktitle =	 popl,
  year =	 1995,
  pages =	 {37--48},
  address =	 {San Francisco, California},
  month =	 jan,
  annote =	 {Referenced by SED:bodik:97a},
  url =		 {http://www.cs.arizona.edu/people/gupta/research/Publications/analysis.html}
		 ,
  bdsk-url-1 =	 {http://www.cs.arizona.edu/people/gupta/research/Publications/analysis.html}
		 
}

@Article{dutton2000perspectives,
  author =	 {Robert W. Dutton and Andrzej J. Strojwas},
  title =	 {Perspectives on Technology and Technology-Driven {CAD}},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1544-1560},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@InProceedings{dwyer1996flexible,
  author =	 {Matthew B. Dwyer and Lori A. Clarke},
  title =	 {A flexible architecture for building data flow analyzers},
  booktitle =	 {Proceedings of the 18th International Conference on
		 Software Engineering (ICSE)},
  year =	 1996,
  pages =	 {554--564},
  address =	 {Berlin, Germany},
  isbn =	 {0-8186-7246-3}
}

@InProceedings{dwyer2001tool-supported,
  author =	 {Matthew B. Dwyer and John Hatcliff and Robby Joehanes and
		 Shawn Laubach and Corina S. P\u{a}s\u{a}reanu and Robby and
		 Willem Visser and Hongjun Zheng},
  title =	 {Tool-supported Program Abstraction for Finite-state
		 Verification},
  booktitle =	 icse,
  year =	 2001,
  pages =	 {FIXME},
  annote =	 {From Ed Clarke. Part of the Bandera work.},
  optaddress =	 {FIXME},
  optmonth =	 {FIXME}
}

@Article{eades1993fast,
  author =	 {Peter Eades and Xuemin Lin and W. F. Smyth},
  title =	 {A Fast and Effective Heuristic for the Feedback Arc Set
		 Problem},
  journal =	 ipl,
  year =	 1993,
  volume =	 47,
  number =	 6,
  pages =	 {319--323},
  month =	 oct,
  annote =	 {A good, short paper. The algorithm is simple and greedy:
		 remove sources and sinks, sort the remaining vertices based
		 on outdegree - indegree. Looks like something that will work
		 well on sparse graphs. Probably worth implementing.}
}

@InProceedings{ecker1995vhdl-based,
  author =	 {Wolfgang Ecker and Manfred Huber},
  title =	 {{VHDL-based} communication and synchronization synthesis},
  booktitle =	 {Proceedings of the European Design Automation Conference
		 (EDAC)},
  year =	 1995,
  pages =	 {458--462},
  address =	 {Brighton, England},
  month =	 sep,
  annote =	 {Relevant to the SHIM-to-hardware stuff.
		 
		 Proposes a little protocol description language. Talks about
		 automatic mapping from communication structures onto details.
		 
		 Very VHDL-specific, not particularly obvious what they're
		 doing in the synthesis. Almost like transaction-level
		 design. Basic idea is to expand a single port into multiple
		 wires and expand simple communication operations into
		 function calls.
		 
		 Take-away ideas: * language for describing expansion of
		 commnunication channels. Not clear whether there is any good
		 algorithmic idea here.}
}

@Article{edenfeld20042003,
  author =	 {D. Edenfeld and A.B. Kahng and M. Rodgers and Y. Zorian},
  title =	 {2003 Technology Roadmap for Semiconductors},
  journal =	 computer,
  year =	 2004,
  volume =	 37,
  number =	 1,
  pages =	 {47-56},
  month =	 jan,
  affiliation =	 {UC Berkeley},
  entered =	 {Luca Carloni,2/3/04},
  keywords =	 {dsm,system-on-a-chip,ULSI},
  oldkey =	 {edenfeld04},
  sedtransform = {s/edenfeld04/edenfeld20042003/}
}

@InProceedings{edman2004timing,
  author =	 {A. Edman and C. Svensson},
  title =	 {Timing Closure through a Globally Synchronous, Timing
		 Partitioned Design Methodology},
  booktitle =	 dac04,
  year =	 2004,
  pages =	 {71-74},
  address =	 dac04a,
  month =	 jun,
  affiliation =	 {liu.se},
  annote =	 {Citing my ICCAD'99 paper},
  entered =	 {Luca Carloni,03/31/04},
  keywords =	 {soc design, timing closure, deep submicron},
  oldkey =	 {edman_dac04},
  sedtransform = {s/edman_dac04/edman2004timing/}
}

@MastersThesis{edwards1994esterel,
  author =	 {Stephen Edwards},
  title =	 {An {Esterel} Compiler for a Synchronous/Reactive
		 Development System},
  school =	 ucb,
  year =	 {1994},
  month =	 jun,
  note =	 {Available as UCB/ERL M94/43},
  abstract =	 {The objective of this project was to create a different
		 scheme for compiling the Esterel synchronous reactive
		 programming language which could handle larger programs,
		 facilitates debugging, and could be easily retargeted toward
		 different architectures. The approach presented here uses an
		 intermediate representation which is somewhere between a
		 high-level reactive language like Esterel and assembly code
		 for a traditional processor. This is similar to the ic
		 format used in the Esterel V3 compiler and Baker's NDAM.
		 Compilation proceeds by translating this into assembly code
		 for a SPARC processor. This differs significantly from the
		 scheme used in the V3 compiler, which derives a single
		 finite-state machine representing the behavior of the
		 program. The FSM approach offers fast executables and exact
		 causality checking, but suffers from exponential growth of
		 compile times and object code sizes. This report describes
		 the Esterel language, the intermediate representation used
		 by this new compiler, and how the format is translated into
		 executable SPARC assembly code. Its intended audience are
		 those who wish to understand the workings of this Esterel
		 compiler and those simply curious about the Esterel
		 language.}
}

@Misc{edwards1995interactive,
  author =	 {Stephen A. Edwards},
  title =	 {An Interactive Editor for the Statecharts Graphical
		 Language},
  howpublished = {Report for CS 260 at Berkeley},
  year =	 1995,
  month =	 jun
}

@TechReport{edwards1996identifying,
  author =	 {Stephen A. Edwards and Gitanjali M. Swamy and Robert K.
		 Brayton},
  title =	 {Identifying Common Substructure for Incremental Methods},
  institution =	 ucb,
  year =	 {1996},
  number =	 {UCB/ERL M96/21},
  abstract =	 {In this paper we solve the problem of identifying a
		 ``matching'' between two logic circuits or ``networks''. A
		 matching is a functions that maps each gate or ``node'' in
		 the new circuit into one in the old circuit (if a matching
		 does not exist it maps it to null). We present both an exact
		 and a heuristic way to solve the maximal matching problem.
		 The matching problem does not require any input
		 correspondences; the purpose is to identify structurally
		 identical regions in the networks. We apply this solution to
		 the problem of incremental design. Logic design is usually
		 an iterative process where errors are corrected and
		 optimizations performed repeatedly. A designer rectifies,
		 re-optimizes, and rechecks a design many times. In practice,
		 it is common for small, incremental changes to be made to
		 the design, rather than changing the entirety of the design.
		 Currently, each time the system is modified, the entire set
		 of computations (synthesis,verification) are repeated from
		 the beginning. This results in unnecessary re-computation of
		 information, which can be avoided by re-using results of a
		 previous iteration and information about changes to the
		 system. Synthesis and verification tools that recognize
		 these sequences of slightly-differing inputs may be able to
		 outperform their counterparts that discard all previous
		 work. This work is concerned with detecting what information
		 has changed in a design, and what information may be
		 re-utilized.},
  annote =	 {Submitted to ICCAD '96}
}

@Article{edwards1997design,
  author =	 {Stephen Edwards and Luciano Lavagno and Edward A. Lee and
		 Alberto Sangiovanni-Vincentelli},
  title =	 {Design of Embedded Systems: Formal Models, Validation, and
		 Synthesis},
  journal =	 procieee,
  year =	 1997,
  volume =	 85,
  number =	 3,
  pages =	 {366--390},
  month =	 mar,
  annote =	 {My first journal paper. Invited paper.},
  oldurl =	 {http://ptolemy.eecs.berkeley.edu/papers/97/codesign/},
  selectivity =	 {Invited. 272 citations on Google Scholar},
  url =		 {http://dx.doi.org/10.1109/5.558710},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/5.558710}
}

@PhDThesis{edwards1997specification,
  author =	 {Stephen Anthony Edwards},
  title =	 {The Specification and Execution of Heterogeneous
		 Synchronous Reactive Systems},
  school =	 ucb,
  year =	 {1997},
  note =	 {Available as UCB/ERL M97/31},
  selectivity =	 {44 citations on Google Scholar},
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/97/sedwardsThesis/}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/97/sedwardsThesis/}
		 
}

@InProceedings{edwards1999compiling,
  author =	 {Stephen A. Edwards},
  title =	 {Compiling {Esterel} into Sequential Code},
  booktitle =	 {Proceedings of the 7th International Workshop on
		 Hardware/Software Codesign (CODES)},
  year =	 1999,
  pages =	 {147--151},
  address =	 {Rome, Italy},
  month =	 may,
  publisher =	 acm,
  annote =	 {My first workshop paper. Sponsored by the IEEE Computer
		 Society and ACM SIGDA. 20 regular + 20 short out of 98
		 submitted. 41\% rate.},
  oldurl =	 {http://www.sigda.acm.org/Archives/ProceedingsArchives/},
  selectivity =	 {20/90 = 22\%},
  url =		 {http://dx.doi.org/10.1109/HSC.1999.777410},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/HSC.1999.777410}
}

@InProceedings{edwards2000compiling,
  author =	 {Stephen A. Edwards},
  title =	 {Compiling {Esterel} into Sequential Code},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {322--327},
  address =	 dac00a,
  month =	 jun,
  publisher =	 acm,
  annote =	 {My first conference paper. 154 papers accepted out of 445
		 papers submitted. 35\% rate. Sponsored by ACM SIGDA and the
		 IEEE Circuits and Systems Society.},
  oldurl =	 {http://www.dac.com/37proceedings/19_2.pdf},
  selectivity =	 {154/445 = 35\%, Cited by 47 in Google Scholar},
  url =		 {http://doi.acm.org/10.1145/337292.337429},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/337292.337429}
}

@Book{edwards2000languages,
  author =	 {Stephen A. Edwards},
  title =	 {Languages for Digital Embedded Systems},
  publisher =	 kl,
  year =	 2000,
  address =	 kl_a,
  month =	 sep,
  annote =	 {My first book.},
  isbn =	 {0-7923-7925-X},
  optseries =	 {The Kluwer International Series in Engineering and Computer
		 Science},
  optvolume =	 {572},
  url =		 {http://www.springer.com/prod/b/0-7923-7925-X},
  bdsk-url-1 =	 {http://www.springer.com/prod/b/0-7923-7925-X}
}

@InProceedings{edwards2001using,
  author =	 {Stephen A. Edwards and Tony Ma and Robert Damiano},
  title =	 {Using a Hardware Model Checker to Verify Software},
  booktitle =	 {Proceedings of the 4th International Conference on ASIC
		 (ASICON)},
  year =	 2001,
  pages =	 {85--90},
  address =	 {Shanghai, China},
  month =	 oct,
  annote =	 {Also submitted to the CAV workshop on software model
		 checking, but rejected. Sponsored by Chinese Institute of
		 Electronics and IEEE Beijing Section. Couldn't find any
		 statistics on it.},
  url =		 {http://dx.doi.org/10.1109/ICASIC.2001.982504},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/ICASIC.2001.982504}
}

@Article{edwards2002esterel,
  author =	 {Stephen A. Edwards},
  title =	 {An {Esterel} Compiler for Large Control-Dominated Systems},
  journal =	 transcad,
  year =	 2002,
  volume =	 21,
  number =	 2,
  pages =	 {169--183},
  month =	 feb,
  annote =	 {Gory details of the compiler I built at Synopsys.},
  selectivity =	 {37 citations on Google Scholar},
  url =		 {http://dx.doi.org/10.1109/43.980257},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/43.980257}
}

@InProceedings{edwards2002esuif,
  author =	 {Stephen A. Edwards},
  title =	 {{ESUIF}: An Open {Esterel} Compiler},
  booktitle =	 slap,
  year =	 2002,
  series =	 entcs,
  volume =	 {65(5)},
  pages =	 71,
  address =	 {Grenoble, France},
  month =	 apr,
  publisher =	 els,
  annote =	 {Describes the beginnings of the ESUIF compiler: rough.},
  selectivity =	 {13/16 = 81\%},
  url =		 {http://dx.doi.org/10.1016/S1571-0661(05)80442-6},
  bdsk-url-1 =	 {http://dx.doi.org/10.1016/S1571-0661(05)80442-6}
}

@InProceedings{edwards2002high-level,
  author =	 {Stephen A. Edwards},
  title =	 {High-level Synthesis from the Synchronous Language
		 {Esterel}},
  booktitle =	 iwls,
  year =	 2002,
  address =	 {New Orleans, Louisiana},
  month =	 jun,
  annote =	 {Very rough description of control dependence, state
		 encoding, and don't-care extraction.},
  optpages =	 {FIXME},
  selectivity =	 {22 long talks/80 = 28\%. 14 citations on Google Scholar}
}

@Article{edwards2003compiling,
  author =	 {Stephen A. Edwards},
  title =	 {Tutorial: Compiling Concurrent Languages for Sequential
		 Processors},
  journal =	 todaes,
  year =	 2003,
  volume =	 8,
  number =	 2,
  pages =	 {141--187},
  month =	 apr,
  annote =	 {Written mostly while I was at Synopsys, finally fixed three
		 years later.},
  selectivity =	 {19 citations on Google Scholar},
  url =		 {http://doi.acm.org/10.1145/762488.762489},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/762488.762489}
}

@TechReport{edwards2003design,
  author =	 {Stephen A. Edwards},
  title =	 {Design Languages for Embedded Systems},
  institution =	 cucs,
  year =	 2004,
  number =	 {CUCS--009--03},
  address =	 nyny,
  annote =	 {Tech. report version of the CRC press book chapter.}
}

@InProceedings{edwards2003making,
  author =	 {Stephen A. Edwards},
  title =	 {Making Cyclic Circuits Acyclic},
  booktitle =	 dac03,
  year =	 2003,
  pages =	 {159--162},
  address =	 dac03a,
  month =	 jun,
  annote =	 {Second DAC paper. Describes algorithm I came up with while
		 at SYNCHRON 2002. People asked about using it to simplify
		 formal verification. Sponsored by the ACM SIGDA and the IEEE
		 Circuits and Systems Society.},
  selectivity =	 {152/628 = 24\%. 13 citations on Google Scholar},
  url =		 {http://doi.acm.org/10.1145/775832.775874},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/775832.775874}
}

@Article{edwards2003semantics,
  author =	 {Stephen A. Edwards and Edward A. Lee},
  title =	 {The Semantics and Execution of a Synchronous Block-Diagram
		 Language},
  journal =	 scicompprog,
  year =	 2003,
  volume =	 48,
  number =	 1,
  pages =	 {21--42},
  month =	 jul,
  annote =	 {My thesis distilled into a journal paper},
  selectivity =	 {16 citations on Google Scholar},
  url =		 {http://dx.doi.org/10.1016/S0167-6423(02)00096-5},
  bdsk-url-1 =	 {http://dx.doi.org/10.1016/S0167-6423(02)00096-5}
}

@InProceedings{edwards2004challenges,
  author =	 {Stephen A. Edwards},
  title =	 {The Challenges of Hardware Synthesis from {C}-like
		 Languages},
  booktitle =	 iwls,
  year =	 2004,
  pages =	 {509--516},
  address =	 {Temecula, California},
  month =	 jun,
  annote =	 {Nicely received, although I should perhaps tone down my
		 dismissal of these languages or focus my arguments},
  selectivity =	 {33 talks/70 = 47\%}
}

@InProceedings{edwards2004compiling,
  author =	 {Stephen A. Edwards and Vimal Kapadia and Michael Halas},
  title =	 {Compiling {Esterel} into Static Discrete-Event Code},
  booktitle =	 slap,
  year =	 2004,
  series =	 entcs,
  volume =	 {153(4)},
  pages =	 {107--121},
  address =	 {Barcelona, Spain},
  month =	 mar,
  publisher =	 els,
  annote =	 {March 28th. Work with the three IBM guys on GRCC2, the
		 block-structured Esterel code generator.},
  optpages =	 {117--131},
  selectivity =	 {7/10 = 70\%, 12 citations on Google Scholar},
  url =		 {http://dx.doi.org/10.1016/j.entcs.2006.02.027},
  bdsk-url-1 =	 {http://dx.doi.org/10.1016/j.entcs.2006.02.027}
}

@TechReport{edwards2004design,
  author =	 {Stephen A. Edwards},
  title =	 {Design and Verification Languages},
  institution =	 cucs,
  year =	 2004,
  number =	 {CUCS--046--04},
  address =	 nyny,
  annote =	 {Tech. report version of the CRC press book chapter.
		 
		 Somebody liked it:
		 http://www.eg3.com/eclips/html/design-guide/software_languages_blank.html}
		 
}

@TechReport{edwards2004determining,
  author =	 {Stephen A. Edwards and Chun Li},
  title =	 {Determining Interfaces using Type Inference},
  institution =	 cucs,
  year =	 2004,
  number =	 {CUCS--052--04},
  address =	 nyny,
  month =	 dec,
  annote =	 {Rejected Sigsoft and later Compiler Construction paper. I
		 gave up.}
}

@InProceedings{edwards2004determining1,
  author =	 {Stephen A. Edwards and Chun Li},
  title =	 {Determining Interfaces using Type Inference},
  booktitle =	 fse,
  year =	 2004,
  pages =	 {FIXME},
  address =	 {Newport Beach, California},
  month =	 nov,
  organization = {ACM SIGSOFT},
  note =	 {Rejected},
  annote =	 {Describes Chun and my work on inferring APIs through type
		 inference. Early work, but surprisingly effective.}
}

@InCollection{edwards2004languages,
  author =	 {Stephen A. Edwards},
  title =	 {Languages for Embedded Systems},
  editor =	 {Richard Zurawski},
  booktitle =	 {The Industrial Information Technology Handbook},
  publisher =	 {CRC Press},
  year =	 2004,
  pages =	 {85-1--85-18},
  address =	 {Boca Raton, Florida},
  annote =	 {Finally, the published version of the (fairly popular)
		 Online Symposium for Electrical Engineers article. Copyright
		 is 2005, I received my copy December 2004.}
}

@InProceedings{edwards2004shim,
  author =	 {Stephen A. Edwards},
  title =	 {{SHIM}: A Language for Hardware/Software Integration},
  booktitle =	 {Proceedings of SYNCHRON},
  year =	 2004,
  address =	 {Schloss Dagstuhl, Germany},
  month =	 dec,
  annote =	 {My little language. Not an "official" publication, but I
		 did present this publicly here for the first time.}
}

@InProceedings{edwards2005challenges,
  author =	 {Stephen A. Edwards},
  title =	 {The Challenges of Hardware Synthesis from {C}-like
		 Languages},
  booktitle =	 date,
  year =	 2005,
  pages =	 {66--67},
  address =	 {Munich, Germany},
  month =	 mar,
  note =	 {Invited},
  selectivity =	 {176/825 = 21\%. 17 citations on Google Scholar.},
  url =		 {http://dx.doi.org/10.1109/DATE.2005.307},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/DATE.2005.307}
}

@InProceedings{edwards2005deterministic,
  author =	 {Stephen A. Edwards and Olivier Tardieu},
  title =	 {Deterministic Receptive Processes are {Kahn} Processes},
  booktitle =	 memocode,
  year =	 2005,
  pages =	 {37--44},
  address =	 {Verona, Italy},
  month =	 jul,
  annote =	 {Olivier helped out a lot with this: showing that you can
		 model josephs2003analysis with Kahn.},
  selectivity =	 {17/47 = 36\%},
  url =		 {http://dx.doi.org/10.1109/MEMCOD.2005.1487889},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/MEMCOD.2005.1487889}
}

@Article{edwards2005experiences,
  author =	 {Stephen A. Edwards},
  title =	 {Experiences Teaching an {FPGA}-based Embedded Systems
		 Class},
  journal =	 {ACM SIGBED Review},
  year =	 2005,
  volume =	 2,
  number =	 4,
  pages =	 {56--62},
  month =	 oct,
  note =	 {Originally presented at the Workshop on Embedded Systems
		 Education},
  annote =	 {Co-located with Emsoft. Talks about my 4840 class.
		 Originally in the workshop "proceedings."},
  url =		 {http://doi.acm.org/10.1145/1121812.1121823},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1121812.1121823}
}

@InProceedings{edwards2005experiences-workshop,
  author =	 {Stephen A. Edwards},
  title =	 {Experiences Teaching an {FPGA}-based Embedded Systems
		 Class},
  booktitle =	 {Proceedings of the Workshop on Embedded Systems Education
		 (WESE)},
  year =	 2005,
  pages =	 {52--58},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {Co-located with Emsoft. Talks about my 4840 class.}
}

@InCollection{edwards2005languages,
  author =	 {Stephen A. Edwards},
  title =	 {Languages for Embedded Systems},
  editor =	 {Richard Zurawski},
  booktitle =	 {The Embedded Systems Handbook},
  publisher =	 {CRC Press},
  year =	 2005,
  pages =	 {7-1--7-19},
  address =	 {Boca Raton, Florida},
  annote =	 {The same as the edwards2004languages.}
}

@InProceedings{edwards2005shim,
  author =	 {Stephen A. Edwards},
  title =	 {{SHIM}: A Language for Hardware/Software Integration},
  booktitle =	 slap,
  year =	 2005,
  series =	 entcs,
  address =	 {Edinburgh, Scotland},
  month =	 apr,
  annote =	 {My little language.},
  optpages =	 {FIXME},
  optvolume =	 {FIXME},
  selectivity =	 {9/17 = 53\%}
}

@InProceedings{edwards2005shim-rejected,
  author =	 {Stephen A. Edwards},
  title =	 {{SHIM}: A Language for Hardware/Software Integration},
  booktitle =	 date,
  year =	 2005,
  address =	 {Munich, Germany},
  month =	 mar,
  note =	 {Rejected},
  annote =	 {My little language},
  optpages =	 {FIXME}
}

@InProceedings{edwards2005shim2,
  author =	 {Stephen A. Edwards and Olivier Tardieu},
  title =	 {{SHIM}: A Deterministic Model for Heterogeneous Embedded
		 Systems},
  booktitle =	 emsoft,
  year =	 2005,
  pages =	 {37--44},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {Describes our rendezvous-Kahn model, Tiny-SHIM, a little
		 language, its formal semantics, a software simulation
		 technique, and a hardware synthesis technique.},
  selectivity =	 {25/88 = 28\%, 10 citations on Google Scholar},
  url =		 {http://doi.acm.org/10.1145/1086228.1086277},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1086228.1086277}
}

@TechReport{edwards2006case,
  author =	 {Stephen A. Edwards and Edward A. Lee},
  title =	 {The Case for the Precision Timed ({PRET}) Machine},
  institution =	 {EECS Department, University of California, Berkeley},
  year =	 2006,
  number =	 {UCB/EECS-2006-149},
  month =	 nov,
  annote =	 {Edward's and my submission to the WACI track of DAC. Argues
		 for bringing precision timing to processor architecture.}
}

@Article{edwards2006challenges,
  author =	 {Stephen A. Edwards},
  title =	 {The Challenges of Synthesizing Hardware from {C}-Like
		 Languages},
  journal =	 ieeedtc,
  year =	 2006,
  volume =	 23,
  number =	 5,
  pages =	 {375--386},
  month =	 {September/October},
  annote =	 {The IWLS paper whipped into shape. John Sanguinetti writes
		 a counterpoint in the same issue (on ESL).},
  url =		 {http://dx.doi.org/10.1109/43.980257},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/43.980257}
}

@InCollection{edwards2006design,
  author =	 {Stephen A. Edwards},
  title =	 {Design and Verification Languages},
  editor =	 {Luciano Lavagno and Grant Martin and Lou Scheffer},
  booktitle =	 {Electronic Design Automation for Integrated Circuits
		 Handbook},
  publisher =	 {CRC Press},
  year =	 2006,
  address =	 {Boca Raton, Florida},
  annote =	 {Grant Martin directed me on this. More on System Verilog,
		 e, and PSL in addition to SystemC, VHDL, etc. Claims will be
		 published at the end of January, 2006.},
  optpages =	 {FIXME}
}

@InProceedings{edwards2006efficient,
  author =	 {Stephen A. Edwards and Olivier Tardieu},
  title =	 {Efficient Code Generation from {SHIM} Models},
  booktitle =	 lctes,
  year =	 2006,
  pages =	 {125--134},
  address =	 {Ottawa, Canada},
  month =	 jun,
  annote =	 {Partial evaluation of subsets, building the nifty
		 communication graph. I hosted the PC meeting in Manhattan in
		 March.},
  selectivity =	 {21/83 = 25\%},
  url =		 {http://doi.acm.org/10.1145/1134650.1134669},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1134650.1134669}
}

@Article{edwards2006shim,
  author =	 {Stephen A. Edwards and Olivier Tardieu},
  title =	 {{SHIM}: A Deterministic Model for Heterogeneous Embedded
		 Systems},
  journal =	 transvlsi,
  year =	 2006,
  volume =	 14,
  number =	 8,
  pages =	 {854--867},
  month =	 aug,
  annote =	 {The journal version of the Emsoft paper. Added software
		 synthesis.},
  url =		 {http://dx.doi.org/10.1109/TVLSI.2006.878473},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/TVLSI.2006.878473}
}

@InProceedings{edwards2006using,
  author =	 {Stephen A. Edwards},
  title =	 {Using Program Specialization to Speed {SystemC} Fixed-Point
		 Simulation},
  booktitle =	 pepm,
  year =	 2006,
  pages =	 {21--28},
  address =	 {Charleston, South Carolina},
  month =	 jan,
  annote =	 {Finally, after trying DAC, DATE, and ASP-DAC, this is
		 accepted at a conference. Rather unimpressive 18/29 (62
		 percent) acceptance rate.},
  selectivity =	 {17/29 = 59\%},
  url =		 {http://doi.acm.org/10.1145/1111542.1111547},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1111542.1111547}
}

@InProceedings{edwards2007case,
  author =	 {Stephen A. Edwards and Edward A. Lee},
  title =	 {The Case for the Precision Timed ({PRET}) Machine},
  booktitle =	 dac07,
  year =	 2007,
  pages =	 {264--265},
  address =	 dac07a,
  month =	 jun,
  annote =	 {I talked Edward into writing this, although we both had the
		 idea.},
  selectivity =	 {8/54 = 15\% (``WACI'' track)}
}

@Article{edwards2007code,
  author =	 {Stephen A. Edwards and Jia Zeng},
  title =	 {Code Generation in the {Columbia} {Esterel} {Compiler}},
  journal =	 {EURASIP Journal on Embedded Systems},
  year =	 2007,
  volume =	 {2007},
  pages =	 {Article ID 52651, 31 pages},
  annote =	 {Summary of the Columbia Esterel Compiler.},
  url =		 {http://dx.doi.org/10.1155/2007/52651},
  bdsk-url-1 =	 {http://dx.doi.org/10.1155/2007/52651}
}

@InProceedings{edwards2008programming,
  author =	 {Stephen A. Edwards and Nalini Vasudevan and Olivier
		 Tardieu},
  title =	 {Programming Shared Memory Multiprocessors with
		 Deterministic Message-Passing Concurrency: Compiling {SHIM}
		 to {Pthreads}},
  booktitle =	 date,
  year =	 2008,
  pages =	 {1498--1503},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {About our SHIM-to-Pthreads code generator and experiences
		 porting the JPEG decoder.}
}

@InProceedings{edwards2008static,
  author =	 {Stephen A. Edwards and Jia Zeng},
  title =	 {Static Elaboration of Recursion for Concurrent Software},
  booktitle =	 pepm,
  year =	 2008,
  pages =	 {71--80},
  address =	 {San Francisco, California},
  month =	 jan,
  annote =	 {Jia and my work on unrolling recursion in SHIM. Rather
		 positive reviews.},
  selectivity =	 {20/74 = 27\%}
}

@InProceedings{edwards2009concurrency,
  author =	 {Stephen A. Edwards},
  title =	 {Concurrency and Communication: Lessons from the {SHIM}
		 Project},
  booktitle =	 {Proceedings of the Workshop on Software Technologies for
		 Future Embedded and Ubiquitious Systems (SEUS)},
  year =	 2009,
  series =	 lncs,
  volume =	 5860,
  pages =	 {276--287},
  address =	 {Newport Beach, California},
  month =	 nov,
  publisher =	 sv,
  note =	 {Invited.},
  annote =	 {Sort of a final report on the SHIM project.}
}

@InProceedings{edwards2009distruptive,
  author =	 {Stephen A. Edwards and Sungjun Kim and Edward A. Lee and
		 Isaac Liu and Hiren D. Patel and Martin Schoeberl},
  title =	 {A Disruptive Computer Design Idea: Architectures with
		 Repeatable Timing},
  booktitle =	 iccd,
  year =	 2009,
  address =	 {Lake Tahoe, CA},
  month =	 oct,
  optpages =	 {FIXME},
  annote =	 {Repeatable more important than predictable timing}
}

@InProceedings{edwards2009reconciling,
  author =	 {Stephen A. Edwards and Sungjun Kim and Edward A. Lee and
		 Hiren D. Patel and Martin Schoeberl},
  title =	 {Reconciling Repeatable Timing with Pipelining and Memory
		 Hierarchy},
  booktitle =	 {Proceedings of the Workshop on Reconciling Performance with
		 Predictability (RePP)},
  year =	 2009,
  address =	 {Grenoble, France},
  month =	 oct,
  optpages =	 {FIXME},
  annote =	 {Interaction of the pipeline with memory hierarchy.}
}

@Article{edwards2009retrocomputing,
  author =	 {Stephen A. Edwards},
  title =	 {Retrocomputing on an {FPGA}},
  journal =	 {Circuit Cellar},
  year =	 2009,
  volume =	 233,
  pages =	 {24--35},
  month =	 dec,
  annote =	 {My Apple II-on-an-FPGA paper},
  selectivity =	 {Not peer-reviewed}
}

@TechReport{edwards2009retrocomputing-tr,
  author =	 {Stephen A. Edwards},
  title =	 {Retrocomputing on an FPGA: Reconstructing an 80's-Era Home
		 Computer with Programmable Logic},
  institution =	 cucs,
  year =	 2009,
  number =	 {CUCS--003--09},
  address =	 nyny,
  month =	 jan,
  annote =	 {A techreport version of my Circuit Cellar article.}
}

@Article{eetimes2006challenges,
  author =	 {Anonymous},
  title =	 {Challenges ahead for embedded sector, experts say},
  journal =	 {EE Times},
  year =	 2006,
  month =	 {September 26},
  annote =	 { BOSTON-- The embedded electronics industry faces financial
		 and technology challenges that must be overcome for the
		 industry to grow, industry experts said.
		 
		 Joseph Raffa, venture partner with Adams Capital Management,
		 and Chris Lanfear, director of embedded software research
		 for Venture Development Corp., analyzed the landscape from
		 those two perspectives during a Tuesday (Sept. 26) panel at
		 the Embedded Systems Conference moderated by Embedded System
		 Design Editor-in-Chief Richard Nass.
		 
		 For startups to thrive in the embedded sector, the market
		 needs to be bigger. "This is a big challenge in embedded
		 systems," Raffa said. It's easy to start out as a
		 consultancy, "but you need to aggregate volume solutions to
		 be an interesting [VC] investment."
		 
		 Lanfear said there is roughly $$1.9 billion in sales each
		 year for embedded tools, with one subset of that, mobile
		 applications, growing at a 35-percent compound annual growth
		 rate. Still, code bloat is worsening. The amount of code
		 written per project soared 46 percent annually between
		 1980-2005, Lanfear said. The number of developers hired to
		 write that code has risen only 7.5 percent annually, he
		 added.
		 
		 That's one key reason projects are suffering. Lanfear said
		 his recent survey found that more than a third of all
		 embedded projects are late and nearly 13 percent are
		 canceled. Complexity, specification changes and unrealistic
		 schedules are most often sited as reasons for the delays. },
  url =		 {http://www.eetimes.com/showArticle.jhtml?articleID=193006135}
		 ,
  bdsk-url-1 =	 {http://www.eetimes.com/showArticle.jhtml?articleID=193006135}
		 
}

@Article{eichelberger1965hazard,
  author =	 {E. B. Eichelberger},
  title =	 {Hazard Detection in Combinational and Sequential Switching
		 Circuits},
  journal =	 {IBM Journal of Research and Development},
  year =	 {1965},
  volume =	 {9},
  number =	 {2},
  pages =	 {90--99},
  month =	 mar,
  annote =	 {Brzozowski and Seger claim in their book (beginning of
		 chapter 7, p113) this is where ternary simulation started.
		 But cites yoeli1964application, huffman1957design,
		 huffman1954synthesis. Also cites Stephen Unger's work.
		 
		 Basic idea is to change to X all changing signals, propagate
		 the effects, then change them to the new value and propagate
		 the effects.
		 
		 Eichelberger's theorem says that if the circuit stabilizes
		 under this simulation, it will do so regardless of delays.
		 }
}

@InProceedings{eichenberger2005optimizing,
  author =	 {Alexandre E. Eichenberger and Kathryn O'Brien and Kevin K.
		 O'Brien and Peng Wu and Tong Chen and Peter H. Oden and
		 Daniel A. Prener and Janice C. Shepherd and Byoungro So and
		 Zehra Sura and Amy Wang and Tao Zhang and Peng Zhao and
		 Michael Gschwind},
  title =	 {Optimizing Compiler for the {CELL} Processor},
  booktitle =	 pact,
  year =	 2005,
  pages =	 {161--172},
  address =	 {Saint Louis, Missouri},
  month =	 sep,
  annote =	 {From Rebecca.
		 
		 The usual low-level optimizations designed to improve
		 SIMD/vector performance:
		 
		 "Techniques include compiler-supported branch prediction,
		 compiler-assisted instruction fetch, generation of scalar
		 codes on SIMD units, automatic generation of SIMD codes, and
		 data and code partitioning across the multiple processor
		 elements in the system."
		 
		 But they also support task-level parallelization: OpenMP
		 pragmas, as described in eichenberger2006using.
		 
		 Extensive bibliography. Apparently a conference version of
		 eichenberger2006using.},
  url =		 {http://domino.research.ibm.com/comm/research_projects.nsf/pages/cellcompiler.refs.html}
		 ,
  bdsk-url-1 =	 {http://domino.research.ibm.com/comm/research_projects.nsf/pages/cellcompiler.refs.html}
		 
}

@Article{eichenberger2006using,
  author =	 {A. E. Eichenberger and J. K. O'Brien and K. M. O'Brien and
		 P. Wu and T. Chen and P. H. Oden and D. A. Prener and J. C.
		 Shepherd and B. So and Z. Sura and A. Wang and T. Zhang and
		 P. Zhao and M. K. Gschwind and R. Archambault and Y. Gao and
		 R. Koo},
  title =	 {Using advanced compiler technology to exploit the
		 performance of the {Cell} {Broadband} {Engine}
		 architecture},
  journal =	 {IBM Systems Journal},
  year =	 2006,
  volume =	 45,
  number =	 1,
  pages =	 {59--84},
  annote =	 {On Rebecca Collins's reading list.},
  doi =		 {http://dx.doi.org/10.1147/sj.451.0059},
  bdsk-url-1 =	 {http://dx.doi.org/10.1147/sj.451.0059}
}

@InProceedings{eide1997flick,
  author =	 {Eric Eide and Kevin Frei and Bryan Ford and Jay Lepreau and
		 Gary Lindstrom},
  title =	 {Flick: A Flexible, Optimizing {IDL} Compiler},
  booktitle =	 pldi,
  year =	 1997,
  pages =	 {44--56},
  address =	 {Las Vegas, Nevada},
  month =	 jun,
  annote =	 {Cited by merillon2000devil
		 
		 IDL: Interface Description Language. CORBA has such a thing,
		 as does Sun's RPC (now ONC RPC). These were generally on
		 different machines, so that performance wasn't an issue; the
		 communication would dominate.
		 
		 Generating stubs for communicating between software
		 components. Interface is a set of function calls with
		 arguments.
		 
		 Optimizations about buffer sizing, data copying.
		 
		 Assembling and disassembling data is called "marshalling"
		 
		 Somewhat interesting, but fairly special-purpose (remote
		 procedure call) and software-specific. Would some of the
		 optimizations be worth understanding? },
  url =		 {http://www.cs.utah.edu/flux/flick/},
  bdsk-url-1 =	 {http://www.cs.utah.edu/flux/flick/}
}

@InProceedings{eidorff1999annodomini,
  author =	 {Peter Harry Eidorff and Fritz Henglein and Christian Mossin
		 and Henning Niss and Morten Heine S\o{}rensen and Mads
		 Tofte},
  title =	 {{AnnoDomini}: from type theory to {Year 2000} conversion
		 tool},
  booktitle =	 popl,
  year =	 1999,
  pages =	 {1--14},
  address =	 {San Antonio, Texas},
  month =	 jan,
  annote =	 {IBM's tool for COBOL to Y2K compliant code}
}

@Book{eisenstadt1991transparent,
  author =	 {M. Eisenstadt and M. Brayshaw and J. Paine},
  title =	 {The Transparent Prolog Machine},
  publisher =	 kl,
  year =	 {1991},
  address =	 kl_a,
  annote =	 {A graphical tree-based way of displaying the execution of a
		 Prolog program. Includes a user's tutorial.}
}

@Article{eisner2002sugar,
  author =	 {Cindy Eisner and Dana Fisman},
  title =	 {Sugar 2.0 Tutorial Explains Language Basics},
  journal =	 {EEdesign},
  year =	 2002,
  month =	 {May 9},
  note =	 {Online, part of EE Times},
  annote =	 {Bizarre reference. Appears to be some sort of webzine
		 associated with EE Times. Eisner also has a link off her
		 website.},
  url =		 {http://www.eedesign.com/features/exclusive/OEG20020509S0075}
		 ,
  bdsk-url-1 =	 {http://www.eedesign.com/features/exclusive/OEG20020509S0075}
		 
}

@Book{electronic-industries-association1987edif,
  author =	 {{Electronic Industries Association}},
  title =	 {{EDIF}, Electronic Design Interchange Format, Version 2 0
		 0},
  publisher =	 {Electronic Industries Association},
  year =	 {1987},
  address =	 {2001 Eye Street NW, Washington DC, 20006}
}

@Article{elliott1999embedded,
  author =	 {Conal Elliott},
  title =	 {An embedded modeling language approach to interactive {3D}
		 and multimedia animation},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {291--308},
  month =	 may,
  annote =	 {Part of a special issue.
		 
		 Describes Fran, a language built into Haskell. Mostly a
		 library of functions and operators. Haskell allows you to
		 define both prefix (function) and infix operators using
		 syntax of your own choosing.
		 
		 Lengthy arguments for why a functional language is
		 well-suited for this application (garbage collection,
		 laziness, higher-order functions, static typing, etc.).
		 
		 Doesn't talk about implementation much.
		 
		 Seems mostly like a library in Haskell, which does seem like
		 a good language in which to build language-like libraries.
		 See hudak1998modular.
		 
		 Elliott is from Microsoft. }
}

@Book{elliott1999understanding,
  author =	 {John P. Elliott},
  title =	 {Understanding Behavioral Synthesis: A Practical Guide to
		 High-Level Design},
  publisher =	 kl,
  year =	 1999,
  address =	 kl_a,
  annote =	 {Discussion related to Mentor's Monet tool? Something about
		 the first press run being bought out?}
}

@Book{ellis1990annotated,
  author =	 {Margaret A. Ellis and Bjarne Stroustrup},
  title =	 {The Annotated {C++} Reference Manual},
  publisher =	 aw,
  year =	 {1990},
  address =	 aw_a
}

@Book{ellsberger1997sdl,
  author =	 {Jan Ellsberger and Dieter Hogrefe and Amardeo Sarma},
  title =	 {{SDL}: Formal Object-Oriented Language for Communicating
		 Systems},
  publisher =	 ph,
  year =	 1997,
  address =	 ph_a,
  edition =	 {Second},
  annote =	 {A good reference on SDL according to a now-gone CAE in the
		 El Greco group. Telelogic's web site recommends this book.
		 ASN? Some sort of protocol language going along with it? ITU
		 standard Z.100 New version out in November}
}

@Article{elrad2001aspect-oriented,
  author =	 {Tzilla Elrad and Robert E. Filman and Atef Bader},
  title =	 {Aspect-Oriented Programming},
  journal =	 cacm,
  year =	 2001,
  volume =	 44,
  number =	 10,
  pages =	 {29--32},
  month =	 oct,
  annote =	 {Separation of concerns seems to be the main buzzword. "We
		 are now seeing that many requirements do not decompse neatly
		 into behavior centered on a single locus. Object technology
		 has difficulty localizing concerns involving global
		 constraints and pandemic behaviors, appropriately
		 segregating concerns, and applying domain-specific
		 knowledge."
		 
		 POP-Post-object-programming.
		 
		 Crosscutting concerns.
		 
		 Cites Czarnecki, K. and Eisenecker, U.W. Generative
		 Programming: Methods, Tools, and Applications. Addison
		 Wesley, Boston, 2000.}
}

@MastersThesis{emami1993practical,
  author =	 {Maryam Emami},
  title =	 {A practical interprocedural alias analysis for an
		 optimizing/parallelizing {C} compiler},
  school =	 {School of Computer Science, McGill University},
  year =	 1993,
  address =	 {Canada},
  month =	 aug
}

@InProceedings{emami1994context-sensitive,
  author =	 {Maryam Emami and Rakesh Ghiya and Laurie J. Hendren},
  title =	 {Context-sensitive interprocedural points-to analysis in the
		 presence of function pointers},
  booktitle =	 pldi,
  year =	 1994,
  pages =	 {242--256},
  address =	 {Orlando, Florida},
  month =	 jun,
  annote =	 {Marcio pointed me to this: the closest interprocedural
		 pointer analysis work relevant to his. Very widely-cited.
		 May have been the first to propose point-to analysis instead
		 of alias analysis.}
}

@TechReport{embedded2006state,
  author =	 {Embedded Systems Design},
  title =	 {State of Embedded Market Survey},
  institution =	 {CMP Media},
  year =	 2006,
  note =	 {http://www.embedded.com/columns/survey},
  annote =	 {nice collection of statistics. Debugger support apparently
		 the most important thing. Unfortunately, nothing on code
		 size.}
}

@Article{emer2002asim,
  author =	 {Joel Emer and Pritpal Ahuja and Eric Borch and Artur
		 Klauser and Chi-Keung Luk and Srilatha Manne and Shubhendu
		 S. Mukherjee and Harish Patil and Steven Wallace and Nathan
		 Binkert and Roger Espasa and Toni Juan},
  title =	 {Asim: A Performance Model Framework},
  journal =	 computer,
  year =	 2002,
  volume =	 35,
  number =	 2,
  pages =	 {68--76},
  issn =	 {0018--9162},
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/2.982918}
}

@Book{enderton1972mathematical,
  author =	 {H. B. Enderton},
  title =	 {A Mathematical Introduction to Logic},
  publisher =	 ap,
  year =	 {1972}
}

@InProceedings{engblom1999static,
  author =	 {Jakob Engblom},
  title =	 {Static Properties of Commercial Embedded Real-Time
		 Programs, and Their Implication for Worst-Case Execution
		 Time Analysis},
  booktitle =	 {Proceedings of the 5th IEEE Real-Time Technology and
		 Applications Symposium (RTAS)},
  year =	 1999,
  address =	 {Vancouver, Canada},
  month =	 jun,
  annote =	 {Found on his website. Addressed 8- and 16-bit embedded
		 processors only. Mostly about the sorts of control
		 structures he found in programs. Very interesting survey.},
  optpages =	 {FIXME}
}

@InProceedings{engblom2001hardware,
  author =	 {Jakob Engblom},
  title =	 {On Hardware and Hardware Models for Embedded Real-Time
		 Systems},
  booktitle =	 {Proceedings of the Workshop on Real-Time Embedded Systems
		 (WRTES)},
  year =	 2001,
  address =	 {London, UK},
  month =	 dec,
  annote =	 {Cited by anantaraman2003virtual.
		 
		 Interesting. A bunch of case studies that point out that you
		 need really accurate models of processors to predict WCET,
		 yet such models are very difficult to obtain.},
  optpages =	 {FIXME}
}

@TechReport{engblom2002time-accurate,
  author =	 {Jakob Engblom and Magnus Nilsson},
  title =	 {Time-Accurate Simulation: Making a {PC} Behave Like a 8-Bit
		 Embedded {CPU}},
  institution =	 {Department of Information Technology, Uppsala Unversity},
  year =	 2002,
  number =	 {2002-024},
  address =	 {Sweden},
  month =	 jul,
  annote =	 {John Regehr suggested this.}
}

@Article{engblom2003worst-case,
  author =	 {Jakob Engblom and Andreas Ermedahl and Mikael Sj\"odin and
		 Jan Gustafsson and Hans Hansson},
  title =	 {Worst-Case Execution-Time Analysis for Embedded Real-Time
		 Systems},
  journal =	 {International Journal on Software Tools for Technology
		 Transfer},
  year =	 2003,
  volume =	 4,
  number =	 4,
  pages =	 {437--455},
  month =	 oct,
  annote =	 {Part of the WCET paper (Uppsala Univ prototype)}
}

@InProceedings{engels1994cyclo-static,
  author =	 {Marc Engels and Greet Bilsen and Rudy Lauwereins and Jean
		 Peperstraete},
  title =	 {Cyclo-Static Dataflow: Model and Implementation},
  booktitle =	 {Conference Record of the Twenty-Eighth Asilomar Conference
		 on Signals, Systems \& Computers},
  year =	 {1994},
  volume =	 {1},
  pages =	 {503--507},
  address =	 {Pacific Grove, California},
  month =	 oct,
  publisher =	 ieeecs,
  annote =	 {Cyclo-static dataflow scheduling uses the same balance
		 equations as SDF, but actual schedule is more granular.}
}

@PhDThesis{engels2000scheduling,
  author =	 {Daniel Wayne Engels},
  title =	 {Scheduling for Hardware-Software Paritioning in Embedded
		 System Design},
  school =	 {Massachusetts Institute of Technology},
  year =	 2000,
  month =	 may,
  annote =	 {Dan's thesis, finally.}
}

@InProceedings{engler1997incorporating,
  author =	 {Dawson R. Engler},
  title =	 {Incorporating Application Semantics and Control into
		 Compilation},
  booktitle =	 {Proceedings of the First Conference on Domain-specific
		 Languages},
  year =	 1997,
  address =	 {Santa Barbara, California},
  month =	 oct,
  annote =	 {First reference to his Magik system for compiler extensions
		 for verification.
		 
		 User extensions written in ANSI C are dynamically linked
		 into the compiler, which is based on lcc.
		 
		 Describes his API. Very relevant to the verification
		 libraries idea. Strongly based on lcc. Focuses mostly on
		 nifty program transformations (type-aware output function,
		 RPC wrapping, return-code checking). Doesn't focus on
		 verification issues.}
}

@Article{engler1999interface,
  author =	 {Dawson R. Engler},
  title =	 {Interface compilation: steps toward compiling program
		 interfaces as language},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {387--400},
  month =	 may,
  annote =	 {Engler's idea of exposing compiler technology to the
		 programmer to check and optimize things. Argues that
		 high-level optimization should greatly exceed the
		 optimization possible at the low level.
		 
		 Idea: subroutine libraries are more semantically rich,
		 syntactically poor languages with little or no support for
		 being checked.
		 
		 Unix I/O library typical. open ... read/write/seek ...
		 close. Rules about correctness of arguments much more
		 complex than "int" versus "char."
		 
		 Trigonometric functions: simple things like constant calls
		 should be fixed at compile time. Applying trigonometric
		 identities to simplify expressions a much more complicated
		 example.
		 
		 From the conclusion: "For decades, there has been a clamor
		 for higher and higher-level languages. But, in fact, these
		 languages are already prevalent, as a simple perusal of
		 header files and module definitions will show. Their
		 apparent absence is merely due to lack of compiler support."
		 
		 Part of a special issue.}
}

@InProceedings{engler2000checking,
  author =	 {Dawson Engler and Benjamin Chelf and Andy Chou and Seth
		 Hallem},
  title =	 {Checking System Rules Using System-Specific,
		 Programmer-Written Compiler Extensions},
  booktitle =	 osdi,
  year =	 2000,
  address =	 {San Diego, California},
  month =	 oct,
  annote =	 {Idea is to write little checkers that abstract C statements
		 into small state machines and watch how these evolve (either
		 one or per-variable) across the flowgraph of a program.
		 Impressive results, good bibliography. This reference may be
		 wrong, but the paper is great.},
  url =		 {http://www.stanford.edu/~engler},
  bdsk-url-1 =	 {http://www.stanford.edu/~engler}
}

@Misc{engler2003racerx,
  author =	 {Dawson Engler and Ken Ashcraft},
  title =	 {RacerX: Effective, Static Detection of Race Conditions and
		 Deadlocks},
  year =	 2003,
  booktitle =	 sosp,
  pages =	 {237--252}
}

@InProceedings{engler2004static,
  author =	 {Dawson Engler and Madanlal Musuvathi},
  title =	 {Static Analysis versus Model Checking for Bug Finding},
  booktitle =	 vmcai,
  year =	 2004,
  series =	 lncs,
  volume =	 2937,
  address =	 {Venice, Italy},
  month =	 jan,
  publisher =	 sv,
  oldkey =	 {engler},
  sedtransform = {s/engler/engler2004static/}
}

@Book{ercegovac2004digital,
  author =	 {Milo\v{s} Ercegovac and Tom\'as Lang},
  title =	 {Digital Arithmetic},
  publisher =	 mk,
  year =	 2004,
  annote =	 {Found in the library: adders etc.
		 
		 Somewhat basic: ripple-carry, switched carry-ripple
		 (Manchester) (uses pass gates with generate/propagate/kill
		 logic), Carry-Skip, Carry-Lookahead (flatten carry
		 computations to two-level logic), Prefix, Carry-Select,
		 Conditional Sum
		 
		 Pretty basic discussion of adders, but at least a
		 bibliography. Some circuit structures, but not very
		 serious.}
}

@Article{erlingsson1996efficient,
  author =	 {\'{U}lfar Erlingsson and Mukki Krishnamoorthy and T. V.
		 Raman},
  title =	 {Efficient multiway radix search trees},
  journal =	 ipl,
  year =	 1996,
  volume =	 60,
  number =	 3,
  pages =	 {115--120},
  month =	 nov,
  annote =	 {Clever ways to synthesize ``case'' statements}
}

@InProceedings{ermedahl1997deriving,
  author =	 {Andreas Ermedahl and Jan Gustafsson},
  title =	 {Deriving Annotations for Tight Calculation of Execution
		 Time},
  booktitle =	 {Proceedings of the European Conference on Parallel
		 Processing},
  year =	 1997,
  pages =	 {1298--1307},
  month =	 aug,
  annote =	 {WCET paper. Automatic derivation of code annotations.}
}

@InProceedings{ermedahl2002unified,
  author =	 {Andreas Ermedahl and Jakob Engblom and Friedhelm Stappert},
  title =	 {A Unified Flow Information Language for {WCET} Analysis},
  booktitle =	 {Proceedings of the 2nd IEEE International Workshop on
		 Worst-Case Execution Time Analysis},
  year =	 2002,
  pages =	 {21--24},
  address =	 {Vienna, Austria},
  month =	 jun,
  annote =	 {Part of the WCET paper (future research)}
}

@InProceedings{ermedahl2005experiences,
  author =	 {Andreas Ermedahl and Jan Gustafsson and Bj\"orn Lisper},
  title =	 {Experiences from Industrial {WCET} Analysis Case Studies},
  booktitle =	 {Proceedings of the Fifth International Workshop on
		 Worst-Case Execution Time Analysis (WCET)},
  year =	 2005,
  pages =	 {25--28},
  address =	 {Palma de Mallorca, Spain},
  month =	 jul,
  annote =	 {Part of the WCET paper (general; SWEET and aiT tested}
}

@Article{ernst1993hardware-software,
  author =	 {Rolf Ernst and J\"org Henkel and Thomas Benner},
  title =	 {Hardware-software cosynthesis for microcontrollers},
  journal =	 ieeedtc,
  year =	 1993,
  volume =	 10,
  number =	 4,
  pages =	 {64--75},
  month =	 dec,
  annote =	 {Describes Cosyma. Cited in de-micheli1990hardware.}
}

@Article{ernst1996cosyma,
  author =	 {Rolf Ernst and J\"org Henkel and Thomas Benner and Wei Ye
		 and Ulrich Holtmann and Dirk Herrmann and Michael Trawny},
  title =	 {The {COSYMA} Environment for Hardware/Software Cosynthesis
		 of Small Embedded Systems},
  journal =	 {Microprocessors and Microsystems},
  year =	 1996,
  volume =	 20,
  number =	 3,
  pages =	 {159--166},
  month =	 may,
  annote =	 {COSYMA reference cited by cesario2002component-based.
		 
		 Targets processor/coprocessor architectures that communicate
		 via shared memory. Automatic hardware/software partitioning.
		 C-like input language with extensions. CSP-like
		 communication across process boundaries. Hardware processes
		 fed to high-level synthesis.
		 
		 Starts with a process dependency graph, schedules,
		 serializes, and checks timing.
		 
		 Partitioning starts with an all-software solution, looks for
		 bottlenecks, and moves them into hardware.
		 
		 Says communication is like ismail1994cosmos, and is
		 therefore based on RPC.
		 
		 Based strongly on the real-time periodic process model;
		 scheduling, etc.}
}

@InProceedings{ernst1997code,
  author =	 {Jens Ernst and William Evans and Christopher W. Fraser and
		 Steven Lucco and Todd A. Proebsting},
  title =	 {Code Compression},
  booktitle =	 pldi,
  year =	 {1997},
  pages =	 {358--365},
  month =	 jun,
  annote =	 {Compressing code to fit onto embedded systems. Fraser is
		 with Microsoft's research arm.}
}

@InProceedings{ernst2000embedded,
  author =	 {Rolf Ernst and Ahmed Amine Jerraya},
  title =	 {Embedded System Design with Multiple Languages},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {391--396},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Luc Semeria pointed this out. Parallels Edward's views of
		 the world. Discusses process networks, Kahn process
		 networks, Dataflow process networks, synchronous reactive
		 systems, SDL, POLIS. Matlab/Simulink: shared registers:
		 destructive write, non-destructive read. Periodic or
		 event-driven processes. Cites PCC: process control calculus
		 (EDTC97). *charts (TransCAD!) SPI: system property intervals
		 (theirs) Non-executable. No major conclusion, only that
		 multiple languages are needed.}
}

@InProceedings{ernst2000quickly,
  author =	 {Michael D. Ernst and Adam Czeisler and William G. Griswold
		 and David Notkin},
  title =	 {Quickly Detecting Relevant Program Invariants},
  booktitle =	 icse,
  year =	 2000,
  address =	 {Limerick, Ireland},
  month =	 jun,
  annote =	 {Saw his candidate talk at Stanford. Wrote the Daikon tool.
		 Idea is to capture variable values at function and loop
		 entries and test a predefined set of invariants against the
		 values. Most are disqualified quickly (each at most involves
		 three variables); only those shown to be true are an issue.
		 Challenges arise in removing irrelevant invariants, such as
		 those between variables that do not interact. He uses
		 O'Callahan and Jackson's Lackwit tool for some of this.},
  url =		 {http://www.cs.washington.edu/homes/mernst/pubs/},
  bdsk-url-1 =	 {http://www.cs.washington.edu/homes/mernst/pubs/}
}

@Article{ernst2001dynamically,
  author =	 {Michael D. Ernst and Jake Cockrell and William G. Griswold
		 and David Notkin},
  title =	 {Dynamically discovering likely program invariants to
		 support program evolution},
  journal =	 transse,
  year =	 2001,
  volume =	 27,
  number =	 2,
  pages =	 {99--123},
  month =	 feb,
  annote =	 {Dynamically discovering program invariants by running the
		 program and getting rid of obviously incorrect ones. First
		 published at ICSE 99.}
}

@InProceedings{erra2001minimal,
  author =	 {Robert Erra and Nik Lygeros and Nigel Stewert},
  title =	 {On minimal strings containing the elements of $S_n$ by
		 decimation},
  booktitle =	 {Vingti\`emes Journ\'ees sur les Arithm\'etiques Faibles
		 (JAF)},
  year =	 2001,
  address =	 {IUT de Fountainebleu, France},
  month =	 jun,
  annote =	 {Solution of the permutation problem? Rather rough work, but
		 do give a (minimal?) construction for arbitrary n. Give 12,
		 19, 28, etc.
		 
		 www.nigels.com},
  optpages =	 {FIXME}
}

@InProceedings{erra2001minimal1,
  author =	 {Robert Erra and Nik Lygeros and Nigel Stewart},
  title =	 {On minimal strings containing the elements of {$S_n$} by
		 decimation},
  booktitle =	 {Discrete Models: Combinatorics, Computation, and Geometry
		 (DM-CCG)},
  year =	 2001,
  series =	 {Discrete Mathematics and Theoretical Computer Science
		 Proceedings},
  volume =	 {AA},
  pages =	 {165--176},
  address =	 {Paris, France},
  month =	 jul,
  annote =	 {A conference proceedings published in a journal. Version of
		 erra2001minimal. No new results.}
}

@TechReport{estevez2004live,
  author =	 {Hanoril Estevez and Stephen A. Edwards},
  title =	 {Live {CD} Cluster Performance},
  institution =	 cucs,
  year =	 2004,
  number =	 {CUCS--037--04},
  address =	 nyny,
  annote =	 {Independent project: Knoppix vs. others doing parallel
		 image processing}
}

@Article{eswaran1976augmentation,
  author =	 {Kapali P. Eswaran and R. Endre Tarjan},
  title =	 {Augmentation Problems},
  journal =	 {SIAM Journal on Computing},
  year =	 {1976},
  volume =	 {5},
  number =	 {4},
  pages =	 {653--665},
  month =	 dec,
  annote =	 {Adding weighted vertices to make a graph strongly
		 connected, among others. Shows the weighted problem of a
		 minimal set of edges to make a graph strongly connected is
		 NP-complete, but provides a linear-time algorithm where all
		 edges are of the same cost: condense the graph's
		 strongly-connected components and connect sinks and
		 sources.}
}

@InProceedings{evans1996lclint,
  author =	 {D. Evans and J. Guttag and J. Horning and Y.M. Tan},
  title =	 {Lclint: A tool for Using Specifications to Check Code},
  booktitle =	 fse,
  year =	 {1996},
  oldkey =	 {evans96},
  sedtransform = {s/evans96/evans1996lclint/}
}

@InProceedings{evans2000signal,
  author =	 {Brian L. Evans and G\"uner Arslan},
  title =	 {A Signal Processing System-Level Design Course},
  booktitle =	 {IEEE Signal Processing Education Workshop},
  year =	 2000,
  address =	 {Hunt, Texas},
  month =	 oct,
  annote =	 {Description of Brian's class in which he uses my book.}
}

@Book{even1979graph,
  author =	 {Shimon Even},
  title =	 {Graph Algorithms},
  publisher =	 {Computer Science Press},
  year =	 {1979}
}

@Article{eyre2000evolution,
  author =	 {Jennifer Eyre and Jeff Bier},
  title =	 {The Evolution of {DSP} Processors},
  journal =	 {IEEE Signal Processing Magazine},
  year =	 2000,
  volume =	 17,
  number =	 2,
  pages =	 {43--51},
  month =	 mar,
  annote =	 {From Brian. Discusses different DSP architectures.}
}

@Article{faggin1996history,
  author =	 {Federico Faggin and Marcian E. {Hoff Jr.} and Stanley Mazor
		 and Masatoshi Shima},
  title =	 {The History of the 4004},
  journal =	 ieeemicro,
  year =	 1996,
  volume =	 16,
  number =	 6,
  pages =	 {10--20},
  month =	 dec,
  annote =	 {Talks about how Intel agreed to develop calculator chips}
}

@InProceedings{fahndrich2000scalable,
  author =	 {M. Fahndrich and J. Rehof and M. Das},
  title =	 {Scalable context-sensitive flow analysis using
		 instantiation constraints},
  booktitle =	 pldi,
  year =	 2000,
  pages =	 {253--263},
  oldkey =	 {fahndrich00},
  sedtransform = {s/fahndrich00/fahndrich2000scalable/}
}

@Article{fahndrich2006language,
  author =	 {Manuel F\"ahndrich and Mark Aiken and Chris Hawblitzel and
		 Orion Hodson and Galen Hunt and James R. Larus and Steven
		 Levi},
  title =	 {Language support for fast and reliable message-based
		 communication in singularity OS},
  journal =	 {SIGOPS Operaing Systems Review},
  year =	 {2006},
  volume =	 {40},
  number =	 {4},
  pages =	 {177--190},
  address =	 {New York, NY, USA},
  annote =	 {was "singularity2006fandrich"},
  doi =		 {http://doi.acm.org/10.1145/1218063.1217953},
  issn =	 {0163-5980},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1218063.1217953}
}

@Article{falaschi1997confluence,
  author =	 {Moreno Falaschi and Maurizio Gabbrielli and Kim Marriott
		 and Catuscia Palamidessi},
  title =	 {Confluence in concurrent constraint programming},
  journal =	 {Theoretical Computer Science},
  year =	 {1997},
  volume =	 {183},
  number =	 {2},
  pages =	 {281--315},
  url =		 {citeseer.ist.psu.edu/article/falaschi96confluence.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/article/falaschi96confluence.html}
}

@InProceedings{fallah1999simulation,
  author =	 {Farzan Fallah and Pranav Ashar and Srinivas Devadas},
  title =	 {Simulation Vector Generation from {HDL} Descriptions for
		 Observability-Enhanced Statement Coverage},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {666--671},
  address =	 dac99a,
  month =	 jun,
  annote =	 {Builds a structural representation of an RTL netlist and
		 does ATPG-style justification to generate test vectors.
		 Doesn't take a very high-level approach. Looked at it for
		 the Stanford project.}
}

@Article{fan2005working,
  author =	 {Rong-En Fan and Pai-Hsuen Chen and Chih-Jen Lin},
  title =	 {Working set selection using the second order information
		 for training {SVM}},
  journal =	 {Journal of Machine Learning Research},
  year =	 2005,
  volume =	 6,
  pages =	 {1889--1918},
  month =	 dec,
  annote =	 {Related to LIBSVN (chang2001libsvn)}
}

@InProceedings{fang2003toward,
  author =	 {Claire Fang Fang and Rob A. Rutenbar and Markus P\"uschel
		 and Tsuhan Chen},
  title =	 {Toward efficient static analysis of finite-precision
		 effects in {DSP} applications via affine arithmetic
		 modeling},
  booktitle =	 dac03,
  year =	 2003,
  pages =	 {496--501},
  address =	 dac03a,
  month =	 jun,
  annote =	 {Interesting}
}

@InProceedings{fatahalian2006sequoia,
  author =	 {Kayvon Fatahalian and Timothy J. Knight and Mike Houston
		 and Mattan Erez and Daniel Reiter Horn and Larkhoon Leem and
		 Ji Young Park and Manman Ren and Alex Aiken and William J.
		 Dally and Pat Hanrahan},
  title =	 {Sequoia: Programming the Memory Hierarchy},
  booktitle =	 {Proceedings of the ACM/IEEE Conference on Supercomputing
		 (SC)},
  year =	 2006,
  address =	 {Tampa, Florida},
  note =	 {Article 83},
  annote =	 {From Rebecca. Focused on the memory hierarchy and tuned
		 towards things like matrix operations. Has "mapreduce" as a
		 primitive, among other things like it. Targets both the Cell
		 processor and a cluster of workstations. Very much
		 supercomputer application-oriented.
		 
		 Looks like communication happens only at task boundaries, so
		 it's not really designed for pipelined operation.
		 
		 Instead, it's intended for divide-and-conquer-style
		 algorithms that expose lots of concurrency.
		 
		 },
  doi =		 {http://doi.acm.org/10.1145/1188455.1188543},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1188455.1188543}
}

@InProceedings{favre2005languages,
  author =	 {Jean-Marie Favre},
  title =	 {Languages evolve too! {Changing} the Software Time Scale},
  booktitle =	 {Proceedings of the International Workshop on Principles of
		 Software Evolution (IWPSE)},
  year =	 2005,
  address =	 {Lisbon, Portugal},
  month =	 sep,
  annote =	 {Nice bunch of references, including one by Shaw on the
		 whole idea of Software Engineering. Some very interesting
		 graphs on the evolution of languages, which is easier to
		 trace than programs, in general.
		 
		 Basic thesis is that languages have been evolving, too, and
		 that the time scales involved aren't ones that programmers
		 are accustomed too.},
  optpages =	 {FIXME}
}

@Book{feibelman1994phd,
  author =	 {Peter J. Feibelman},
  title =	 {A Ph.D. Is Not Enough: A Guide to Survival in Science},
  publisher =	 {Perseus Publishing},
  year =	 1994,
  annote =	 {A little cynical (experimental physics is tricky), but
		 still good.}
}

@Article{feldman1979make,
  author =	 {Stuart I. Feldman},
  title =	 {Make -- A program for maintaining computer programs},
  journal =	 spe,
  year =	 1979,
  volume =	 9,
  number =	 4,
  pages =	 {255--265},
  month =	 apr,
  annote =	 {The original make program},
  doi =		 {10.1002/spe.4380090402},
  bdsk-url-1 =	 {http://dx.doi.org/10.1002/spe.4380090402}
}

@InProceedings{feldman1989igor,
  author =	 {Stuart I. Feldman and Channing B. Brown},
  title =	 {{IGOR}: {A} System for Program Debugging via Reversible
		 Execution},
  booktitle =	 {Proceedings of the ACM SIGPLAN and SIGOPS Workshop on
		 Parallel and Distributed Debugging, Madison, WI, USA, 5--6
		 May 1988},
  year =	 {1989},
  series =	 {SIGPLAN Notices, 24(1):112--123},
  month =	 jan
}

@Article{feller1983vlsi,
  author =	 {M. Feller},
  title =	 {{VLSI} Design Automation: An Introduction},
  journal =	 procieee,
  year =	 1983,
  volume =	 71,
  number =	 1,
  month =	 jan,
  annote =	 {Cited by dewer1983vhsic as having a reference to the
		 "first" HDL, i.e., by I. S. Reed in 1952.},
  optpages =	 {5--FIXME}
}

@Article{fenton1994software,
  author =	 {Norman Fenton},
  title =	 {Software Measurement: A Necessary Scientific Basis},
  journal =	 transse,
  year =	 1994,
  volume =	 20,
  number =	 3,
  pages =	 {199--206},
  month =	 mar,
  annote =	 {Cited by mockus2002two}
}

@InProceedings{ferdinand2001reliable,
  author =	 {Christian Ferdinand and Reinhold Heckmann and Marc
		 Langenbach and Florian Martin and Michael Schmidt and Henrik
		 Theiling and Stephan Thesing and Reinhard Wilhelm},
  title =	 {Reliable and precise {WCET} determination for a real-life
		 processor},
  booktitle =	 emsoft,
  year =	 2001,
  series =	 lncs,
  volume =	 2211,
  pages =	 {469--485},
  address =	 {North Lake Tahoe, California},
  month =	 oct,
  annote =	 {Details about how they took some very simple straight-line
		 code from Airbus and had to deal with the cache, pipeline,
		 etc. Motorola Coldfire processor.}
}

@InProceedings{ferrandi1996symbolic,
  author =	 {Fabrizio Ferrandi and Franco Fummi and Enrico Macii and
		 Massimo Poncino and Donatella Sciuto},
  title =	 {Symbolic optimization of {FSM} networks based on sequential
		 {ATPG} techniques},
  booktitle =	 dac96,
  year =	 1996,
  pages =	 {467--470},
  address =	 dac96a,
  month =	 jun,
  annote =	 {Cites wang1993input. Considers optimizing an FSM driven by
		 a second one. Uses ATPG to check for faults that correspond
		 to things that can be removed. Also uses BDDs. Seems rather
		 bizarre.}
}

@InProceedings{ferrante1985on,
  author =	 {Jeanne Ferrante and Mary Mace},
  title =	 {On Linearizing Parallel Code},
  booktitle =	 popl,
  year =	 1985,
  pages =	 {179--190},
  address =	 {New Orleans, Louisiana},
  month =	 jan,
  organization = {ACM},
  annote =	 {Found at Stanford. Referenced by Ferrante's TOPLAS article.
		 Shows first that some parallel programs don't have any
		 linearization without code duplication or inserting guards.
		 Next, shows a boolean solution that queries containment to
		 generate code. Finally, has a graph-coloring algorithm
		 that's O(N log N). Early work, but definitive. Only works
		 when code duplication and guard insertion is unnecessary.},
  keywords =	 {program dependence graph, linearizing parallel code}
}

@Article{ferrante1987program,
  author =	 {Jeanne Ferrante and Karl J. Ottenstein and Joe D. Warren},
  title =	 {The Program Dependence Graph and Its Use in Optimization},
  journal =	 toplas,
  year =	 1987,
  volume =	 9,
  number =	 3,
  pages =	 {319--349},
  month =	 jul,
  annote =	 {The seminal paper on the program dependence graph. Gives
		 definitions, describes the two types of dependencies (bad
		 values if two statements were reversed, statement and
		 predicate immediately controlling that statement), defined
		 in terms of postdominators (cites the Dragon Book),
		 references SED:ferrante:85a for sequentializing.
		 
		 cytron1991efficiently cites this when referring to control
		 dependence.
		 
		 Proposes the following for data dependence: construct data
		 dependence DAGs for each basic block, use data flow analysis
		 to compute reaching definitions, then glue them together.},
  keywords =	 {program dependence graph}
}

@InProceedings{ferrante1988generating,
  author =	 {Jeanne Ferrante and Mary Mace and Barbara Simons},
  title =	 {Generating Sequential Code from Parallel Code},
  booktitle =	 {1988 International Conference on Supercomputing},
  year =	 1988,
  pages =	 {582--592},
  address =	 {St. Malo, France},
  month =	 jul,
  organization = {ACM},
  annote =	 {Also found at Stanford. Not to be confused with ISS 88.
		 Shows that the condition (predicate containment) presented
		 in Ferrante 85 is also necessary for there to be a solution
		 where guard insertion is unnecessary. They conjecture that
		 the problem of minimum guard insertion is NP-complete.},
  keywords =	 {program dependence graph, linearizing parallel code}
}

@InProceedings{flake1975hilo,
  author =	 {P. C. Flake and G. Musgrave and M. Shortland},
  title =	 {The {HILO} Logic Simulation Language},
  booktitle =	 {Proceedings of the International Symposium on Computer
		 Hardware Description Languages and their Applications},
  year =	 1975,
  pages =	 {134--142},
  address =	 {New York},
  annote =	 {Cited by Chen and Coffman, Multi-Sim, A Dynamic Multi-level
		 Simulator, DAC 1978},
  optmonth =	 {FIXME}
}

@InProceedings{flake1981hilo,
  author =	 {Peter L. Flake and Philip R. Moorby and G. Musgrave},
  title =	 {{HILO} Mark 2 Hardware Description Language},
  booktitle =	 {Proceedings of ACM/IEEE CHDL},
  year =	 1981,
  address =	 {Kaiserslautern, Germany},
  month =	 sep,
  annote =	 {Cited in flake2000superlog. HILO-2 was inspiration for
		 Verilog.
		 
		 Published by North-Holland:
		 
		 Computer hardware description languages and their
		 applications : proceedings of the IFIP TC-10 Fifth
		 International Conference on Computer Hardware Description
		 Languages and Their Applications, Kaiserslautern, F.R.G.,
		 7-9 September 1981
		 
		 By: Melvin A Breuer; Reiner Hartenstein
		 
		 Publisher: Amsterdam ; New York : New York : North-Holland
		 Pub. Co. : sole distributors for the U.S.A. and Canada,
		 Elsevier North-Holland, 1981.
		 
		 ISBN: 044486279X },
  optpages =	 {FIXME}
}

@InProceedings{flake1983algebra,
  author =	 {Peter L. Flake and Philip R. Moorby and G. Musgrave},
  title =	 {An Algebra for Logic Strength Simulation},
  booktitle =	 dac83,
  year =	 1983,
  pages =	 {615--618},
  address =	 dac83a,
  month =	 jun,
  annote =	 {Interesting. Their affiliation is with Cirrus Computers in
		 Uxbridge, Middlesex, UK. This is pre-Verilog, but looks a
		 lot like the source of the Verilog strength model.}
}

@InProceedings{flake2000superlog,
  author =	 {Peter L. Flake and Simon J. Davidmann},
  title =	 {Superlog, a Unified Design Language for System-on-chip},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {583--586},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Luc Semeria pointed me to this. Mostly a laundry list. Good
		 bibliography, listing HILO. Verilog: No dynamic memory
		 allocation (no stack or heap), text processing difficult.
		 VHDL: Strict type system, limited interprocess
		 communication, no dynamic process creation. Superlog not a
		 subset of Verilog: switch-level modeling, quasi-continuous
		 assignment removed. Shared variables for IPC (Verilog reg).
		 Both C and Verilog built-in data types. User-defined types:
		 enumerations, structures, pointers, arrays, and unions.
		 Fixed-length, variable-length, sparse, and associative
		 arrays. State declarations for modeling finite-state
		 machines. case-like transition statement for FSMs. Verilog &
		 Superlog: Functions may not take time; tasks may. Processes
		 may be created and destroyed. Nested module declarations.}
}

@InProceedings{flanagan2000type-based,
  author =	 {Cormac Flanagan and Stephen N. Freund},
  title =	 {Type-based Race Detection for {J}ava},
  booktitle =	 pldi,
  year =	 2000,
  pages =	 {219--232},
  address =	 {Vancouver, British Columbia, Canada},
  month =	 jun
}

@InProceedings{flanagan2001predicate,
  author =	 {Cormac Flanagan and Shaz Qadeer},
  title =	 {Predicate Abstraction for Software Verification},
  booktitle =	 cav2001,
  year =	 {2001},
  series =	 lncs,
  address =	 cav2001_a,
  month =	 jul,
  publisher =	 sv,
  annote =	 {Shaz sent me this},
  optpages =	 {FIXME},
  optvolume =	 {FIXME}
}

@InProceedings{flanagan2002extended,
  author =	 {Cormac Flanagan and K. Rustan M. Leino and Mark Lillibridge
		 and Greg Nelson and James B. Saxe and Raymie Stata},
  title =	 {Extended static checking for {Java}},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {234--245},
  address =	 {Berlin, Germany}
}

@InProceedings{flanagan2003type,
  author =	 {Cormac Flanagan and Shaz Qadeer},
  title =	 {A Type and Effect System for Atomicity},
  booktitle =	 pldi,
  year =	 2003,
  pages =	 {338--349},
  address =	 {San Diego, California},
  month =	 jun
}

@InProceedings{flanagan2004atomizer,
  author =	 {Cormac Flanagan and Stephen N. Freund},
  title =	 {Atomizer: A Dynamic Atomicity Checker for Multithreaded
		 Programs},
  booktitle =	 popl,
  year =	 2004,
  pages =	 {256--267},
  address =	 {Venice, Italy},
  month =	 jan
}

@Article{flood1990exact,
  author =	 {Merrill M. Flood},
  title =	 {Exact and Heuristic Algorithms for the Weighted Feedback
		 Arc Set Problem: {A} Special Case of the Skew-Symmetric
		 Quadratic Assignment Problem},
  journal =	 {Networks},
  year =	 {1990},
  volume =	 {20},
  number =	 {1},
  pages =	 {1--23},
  month =	 jan,
  annote =	 {Actually solving the ``Find a permutation matrix P s.t.
		 MASS(P'WP), sum of upper-diagonal elements, is minimized.''
		 Presents some theorems to reduce exact search space. Looks
		 like $O(2^n)$ behavior. Also some some heuristics. Complex,
		 harder than my problem? Could be useful.}
}

@Article{florescu1998database,
  author =	 {Daniela Florescu and Alon Levy and Alberto Mendelzon},
  title =	 {Database techniques for the World-Wide Web: A survey},
  journal =	 {SIGMOD Record},
  year =	 1998,
  volume =	 27,
  number =	 3,
  pages =	 {59--74},
  annote =	 {Found it on citeseer.nj.nec.com.}
}

@Article{flynn1999deep-submicron,
  author =	 {M.J. Flynn and P. Hung and K.W. Rudd},
  title =	 {Deep-Submicron Microprocessor Design Issues},
  journal =	 ieeemicro,
  year =	 1999,
  volume =	 19,
  number =	 4,
  pages =	 {11-13},
  month =	 jul,
  affiliation =	 {Stanford University},
  entered =	 {Luca Carloni,10/23/99},
  keywords =	 {interconnect scaling, deep-submicron, ULSI},
  oldkey =	 {flynn99},
  sedtransform = {s/flynn99/flynn1999deep-submicron/}
}

@InProceedings{fodero2006control,
  author =	 {Kenneth {Fodero II} and H. Hawkeye King and Mitchell J.H.
		 Lum+ and Clint Bland and Jacob Rosen and Mika Sinanan and
		 Blake Hannaford},
  title =	 {Control System Architecture for a Minimally Invasive
		 Surgical Robot},
  booktitle =	 {Proceedings of Medicine Meet Virtual Reality (MMVR)},
  year =	 2006,
  pages =	 {157--159},
  address =	 {Long Beach, California},
  month =	 jan,
  annote =	 {From Blake Hannaford. Really just a sketch: a few block
		 diagrams, mentions that they use RTAI Linux, and a PLC for
		 safety. Blake sent me this.}
}

@PhDThesis{fornari1995optimisation,
  author =	 {Fran\c{c}ois-Xavier Fornari},
  title =	 {Optimisation du Contr\^ole et Implantation en Circuits de
		 Programmes {Esterel} [Optimization of Control and
		 Implemention of Circuits from Esterel Programs]},
  school =	 {\'Ecole des Mines de Paris},
  year =	 {1995},
  month =	 mar,
  annote =	 {Talks about how Esterel programs can be optimized using SIS
		 and implementation issues. Tricky stuff with actions, I
		 imagine.},
  url =		 {ftp://cma.cma.fr/esterel/these-fornari.ps.gz},
  bdsk-url-1 =	 {ftp://cma.cma.fr/esterel/these-fornari.ps.gz}
}

@Book{foster1981real-time,
  author =	 {Caxton C. Foster},
  title =	 {Real-Time Programming: Neglected Topics},
  publisher =	 aw,
  year =	 1981,
  annote =	 {A very practical book about issues in real-time software,
		 e.g., interrupts, the sampling theorem}
}

@InProceedings{foster1999theory,
  author =	 {Jeffrey S. Foster and Manuel F\"ahndrich and Alexander
		 Aiken},
  title =	 {A Theory of Type Qualifiers},
  booktitle =	 pldi,
  year =	 1999,
  pages =	 {192--203},
  address =	 {Atlanta, Georgia},
  month =	 jun,
  annote =	 {Referenced by shankar2001detecting}
}

@InProceedings{foster2002flow-sensitive,
  author =	 {J.S. Foster and T. Terauchi and A. Aiken},
  title =	 {Flow-sensitive type qualifiers},
  booktitle =	 pldi,
  year =	 {2002},
  pages =	 {1--12},
  oldkey =	 {foster02},
  sedtransform = {s/foster02/foster2002flow-sensitive/}
}

@InProceedings{fournet2002join,
  author =	 {Cedric Fournet and Georges Gonthier},
  title =	 {The join calculus: a language for distributed mobile
		 programming},
  booktitle =	 {Applied Semantics. International Summer School (APPSEM)},
  year =	 2002,
  series =	 lncs,
  volume =	 2395,
  pages =	 {268--332},
  address =	 {Caminha, Portugal},
  month =	 aug,
  publisher =	 sv
}

@InProceedings{fournet2004stuck-free,
  author =	 {C\'edric Fournet and Tony Hoare and Sriram K. Rajamani and
		 Jakob Rehof},
  title =	 {Stuck-Free Conformance},
  booktitle =	 cav,
  year =	 2004,
  series =	 lncs,
  volume =	 3114,
  pages =	 {242--254},
  address =	 {Boston, Massachusetts, USA},
  month =	 jul,
  annote =	 {Mentioned by a Memocode reviewer. Looks like a sort of
		 modular deadlock-freedom property. Very hardcore formalism,
		 of course.
		 
		 Looks like it might not be that relevant to SHIM, however,
		 since it considers a non-deterministic formalism that can
		 "block" on multiple channels at once.
		 
		 But it's compositional. Perhaps this is a direction we want
		 to take the deadlock detection in SHIM through a type
		 system.}
}

@Article{frank1981how,
  author =	 {Andr\'as Frank},
  title =	 {How To Make a Digraph Strongly Connected},
  journal =	 {Combinatorica},
  year =	 {1981},
  volume =	 {1},
  number =	 {2},
  pages =	 {145--153},
  annote =	 {Concerned with finding a minimum set of edges to contract
		 (merge the source and destination vertices) to make a
		 digraph strongly connected. Notes that every dicut (edges
		 entering a vertex set without any leaving edges) must
		 contain at least one of these edges. Very complex
		 otherwise.}
}

@Book{franklin2005feedback,
  author =	 {Gene F. Franklin and J. David Powell and Abbas
		 Emami-Naeini},
  title =	 {Feedback Control of Dynmic Systems},
  publisher =	 aw,
  year =	 2005,
  edition =	 {Fifth},
  annote =	 {Earlier edition used in Berkeley's EE 128 in 2003.}
}

@Book{fraser1995retargetable,
  author =	 {Christopher W. Fraser and David R. Hanson and David
		 Hansen},
  title =	 {A Retargetable C Compiler: Design and Implementation},
  publisher =	 aw,
  year =	 1995,
  address =	 aw_a,
  annote =	 {Describes the lcc C compiler in great detail. AT&T and
		 Princeton.},
  url =		 {http://ftp.cs.princeton.edu/software/lcc/},
  bdsk-url-1 =	 {http://ftp.cs.princeton.edu/software/lcc/}
}

@InProceedings{fraser2004safe,
  author =	 {Keir Fraser and Steven Hand and Rolf Neugebauer and Ian
		 Pratt and Andrew Warfield and Mark Williamson},
  title =	 {Safe hardware access with the {Xen} virtual machine
		 monitor},
  booktitle =	 {Proceedings of the Workshop on Operating System and
		 Architectural Support for the on demand IT Infrastructure
		 (OASIS)},
  year =	 2004,
  address =	 {Boston, Massachusetts},
  month =	 oct,
  annote =	 {For the ESAL stuff.}
}

@Article{freeth2008calendars,
  author =	 {Tony Freeth and Alexander Jones and John M. Steele and
		 Yanis Bitsakis},
  title =	 {Calendars with {Olympiad} display and eclipse prediction on
		 the {Antikythera} {Mechanism}},
  journal =	 {Nature},
  year =	 2008,
  volume =	 454,
  number =	 4,
  pages =	 {614--617},
  month =	 jul,
  annote =	 {Nifty result about the enigmatic Antikythera Mechanism --
		 the 100 BC clock that seemed impossible.}
}

@InProceedings{french1995general,
  author =	 {Robert S. French and Monica S. Lam and Jeremy R. Levitt and
		 Kunle Olukotun},
  title =	 {A General Method for Compiling Event-Driven Simulations},
  booktitle =	 dac95,
  year =	 {1995},
  pages =	 {151--156},
  address =	 dac95a,
  month =	 jun,
  annote =	 {Describes VeriSUIF. They statically simulate parts of the
		 system and generate code from the simulation results. When
		 the behavior of the event queue can be predicted a priori
		 like this, execution time is reduced.},
  url =		 {http://suif.stanford.edu/papers/rfrench95.ps},
  bdsk-url-1 =	 {http://suif.stanford.edu/papers/rfrench95.ps}
}

@Article{fridman2000sub-word,
  author =	 {Jose Fridman},
  title =	 {Sub-Word Parallelism in Digital Signal Processing},
  journal =	 {IEEE Signal Processing Magazine},
  year =	 2000,
  volume =	 17,
  number =	 2,
  pages =	 {27--35},
  month =	 mar,
  annote =	 {From Brian. Discusses the TigerSHARC architecture.}
}

@Proceedings{fritzson1993automated,
  title =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  editor =	 {Peter A. Fritzson},
  volume =	 {749},
  series =	 lncs,
  publisher =	 sv,
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings}
}

@Article{fujimoto1980parallel,
  author =	 {R. M. Fujimoto},
  title =	 {Parallel Discrete Event Simulation},
  journal =	 cacm,
  year =	 1980,
  volume =	 33,
  number =	 10,
  pages =	 {30--53},
  month =	 oct,
  annote =	 {I haven't seen this, only its citation in
		 peterson1999high-performance. Simulating discrete event
		 systems on concurrent hardware.}
}

@Article{fuller1976early,
  author =	 {A. T. Fuller},
  title =	 {The Early Development of Control Theory, {I} \& {II}},
  journal =	 {Journal of Dynamic Systems, Measurement, and Control},
  year =	 1976,
  volume =	 {98G},
  number =	 {2, 3},
  pages =	 {109--118, 224--235},
  month =	 {June and September},
  annote =	 {Cited by lewis1992applied}
}

@Article{futamura1971partial,
  author =	 {Y. Futamura},
  title =	 {Partial Evaluation of Computation Process -- An Approach to
		 a Compiler-Compiler},
  journal =	 {Systems, Computers, Controls},
  year =	 1971,
  volume =	 2,
  number =	 5,
  pages =	 {45-50},
  annote =	 {This seminal paper defines partial evaluation and exposes
		 its applications to (among other things) compilation and
		 compiler generation. A brief discussion is given on the
		 feasibility in practice and of some conceptual and
		 engineering issues of partial evaluation. --
		 johns1993partial}
}

@Article{gabriel1996end,
  author =	 {Richard P. Gabriel},
  title =	 {The End of History and the Last Programming Language},
  journal =	 joop,
  year =	 1996,
  volume =	 6,
  number =	 4,
  pages =	 {90--94},
  month =	 jul,
  annote =	 {Lists requirements for a general-purpose programming
		 language: ported, local wizards, minimally acceptable,
		 similar to existing languages. Predicts C is the end,
		 discounts C++ for its sophistication.}
}

@Book{gajski1994specification,
  author =	 {Daniel D. Gajski and Frank Vahid and Sanjiv Narayan and Jie
		 Gong},
  title =	 {Specification and Design of Embedded Systems},
  publisher =	 ph,
  year =	 {1994},
  annote =	 {SpecCharts, etc. Saw it at ICCAD 95.}
}

@Book{gajski2000specc,
  author =	 {Daniel D. Gajski and Jianwen Zhu and Rainer D\"omer and
		 Andreas Gerstlauer and Shuqing Zhao},
  title =	 {{SpecC:} Specification Language and Methodology},
  publisher =	 kl,
  year =	 2000,
  address =	 kl_a,
  annote =	 {Loosy-goosey about semantics. Some interesting ideas, such
		 as built-in pipelining. Some of Dan's students gave me this
		 copy when I visited Irvine.}
}

@Article{gall1991mpeg,
  author =	 {Didier Le Gall},
  title =	 {{MPEG}: {A} Video Compression Standard for Multimedia
		 Applications},
  journal =	 cacm,
  year =	 {1991},
  volume =	 {34},
  number =	 {4},
  pages =	 {46--58},
  month =	 apr,
  abstract =	 {The development of digital video technology has made it
		 possible to use digital video compression for a variety of
		 telecommunication applications: teleconferencing, digital
		 broadcast codec and video telephony. Moving Picture Experts
		 Group activities cover more than video compression, since
		 the compression of the associated audio and the issue of
		 audio-visual synchronization cannot be working independently
		 of the video compression. The article considers the MPEG
		 standard activities, the JPEG standard, CCITT expert group
		 on visual telephony, MPEG video requirements, applications
		 of compressed video on digital storage media and the various
		 features of the video compression algorithm.}
}

@InProceedings{gallagher1993software,
  author =	 {Keith Brian Gallagher and James R. Lyle},
  title =	 {Software Safety and Program Slicing},
  booktitle =	 {COMPASS '93: Proceedings of the Eighth Annual Conference on
		 Computer Assurance: June 14-17, 1993, National Institute of
		 Standards and Technology, Gaithersburg, MD: Practical paths
		 to assurance},
  year =	 {1993},
  pages =	 {71--80},
  publisher =	 {{IEEE}}
}

@Book{gallmeister1995posix-4,
  author =	 {Bill O. Gallmeister},
  title =	 {{POSIX.4}: Programming for the Real World},
  publisher =	 ora,
  year =	 1995,
  address =	 ora_a,
  annote =	 {Wayne Wolf's book recommended this as an introduction to
		 real-time operating system behavior. It's actually not that
		 good.}
}

@InProceedings{galloway1995transmogrifier,
  author =	 {David Galloway},
  title =	 {The {Transmogrifier} {C} Hardware Description Language and
		 Compiler for {FPGAs}},
  booktitle =	 fccm,
  year =	 1995,
  pages =	 {136--144},
  address =	 {Napa, California},
  month =	 apr,
  annote =	 {Nice description of the Transmogrifier C compiler. Fairly
		 simple -- clocks at the top of each while loop and at
		 function calls, no concurrency, recursion, arrays, pointers,
		 etc.}
}

@Misc{galloway1997transmogrifier,
  author =	 {David Galloway},
  title =	 {Transmogrifier C},
  year =	 1997,
  month =	 sep,
  url =		 {citeseer.nj.nec.com/galloway97transmogrifier.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/galloway97transmogrifier.html}
}

@Book{gamma1995design,
  author =	 {Erich Gamma and Richard Helm and Ralph Johnson and John
		 Vlissides},
  title =	 {Design Patterns: Elements of Reusable Object-Oriented
		 Software},
  publisher =	 aw,
  year =	 1995,
  address =	 aw_a,
  annote =	 {Excellent reference for advanced OO structuring.}
}

@TechReport{ganapathi2008shim,
  author =	 {Ravindra Babu Ganapathi and Stephen A. Edwards},
  title =	 {{SHIM} Optimization: Elimination Of Unstructured Loops},
  institution =	 cucs,
  year =	 2008,
  number =	 {CUCS--054--08},
  address =	 nyny,
  month =	 dec,
  annote =	 {Nice little project where we discovered that gotos broke
		 IBM's SIMDing compiler for the Cell.}
}

@InProceedings{gannod1999framework,
  author =	 {Gerald C. Gannod and Betty H. C. Cheng},
  title =	 {A Framework for Classifying and Comparing Software Reverse
		 Engineering and Design Recovery Techniques},
  booktitle =	 {Proceedings of the Sixth Working Conference on Reverse
		 Engineering (WCRE)},
  year =	 1999,
  pages =	 {77--88},
  address =	 {Atlanta, Georgia},
  month =	 oct,
  annote =	 {Cites ward1993abstracting. Looks like a nice summary of
		 what's going on in the field, although the bibliography is
		 not endless. Gannod has done a lot of this sort of work.
		 
		 Pretty good bibiography, but rather hokey comparison
		 criteria. Worth tracking down its references, though.
		 
		 Looks like Communications of the ACM 37(5), May 1994 had a
		 whole issue on this topic.},
  url =		 {http://www.public.asu.edu/~gannod/research.html},
  bdsk-url-1 =	 {http://www.public.asu.edu/~gannod/research.html}
}

@Article{gansner1993technique,
  author =	 {Emden R. Gansner and Eleftherious Koutsofios and Stephen C.
		 North and Kiem-Phong Vo},
  title =	 {A Technique for Drawing Directed Graphs},
  journal =	 transse,
  year =	 1993,
  volume =	 19,
  number =	 3,
  pages =	 {214--230},
  month =	 mar,
  annote =	 {Algorithms used in graphviz's dot program. Assigns ranks to
		 vertices (reverses some edges to make graph acyclic). Then
		 orders vertices in each rank to minimize crossings. Then
		 routes edges.}
}

@Book{ganssle1992art,
  author =	 {Jack G. Ganssle},
  title =	 {The Art of Programming Embedded Systems},
  publisher =	 {Academic Press},
  year =	 1992,
  address =	 {San Diego},
  annote =	 {Cited by simon1999embedded. Broad coverage of the issues,
		 including buying tools.}
}

@Article{ganssle2004shifting,
  author =	 {Jack G. Ganssle},
  title =	 {A Shifting Landscape},
  journal =	 {Embedded.com},
  year =	 2004,
  month =	 {July 8},
  annote =	 {Cites a "9 billion CPUs per year" number compared with 100
		 million PCs.},
  url =		 {http://www.embedded.com/showArticle.jhtml?articleID=22104403}
		 ,
  bdsk-url-1 =	 {http://www.embedded.com/showArticle.jhtml?articleID=22104403}
		 
}

@Article{gardner1991parallel,
  author =	 {Carl L. Gardner and Paul J. Lanzkron and Donald J. Rose},
  title =	 {A Parallel Block Iterative Method for the Hydrodynmic
		 Device Model},
  journal =	 transcad,
  year =	 {1991},
  volume =	 {10},
  number =	 {9},
  pages =	 {1187--1192},
  month =	 sep,
  annote =	 {Very specific use of block successive under-relaxation.
		 Uses a scheme to balance how close to bring the inner linear
		 solution to convergence versus taking another step of
		 Newton's iteration by looking at differences and the
		 Jacobian.}
}

@Book{garey1979computers,
  author =	 {Michael R. Garey and David S. Johnson},
  title =	 {Computers and Intractability: {A} Guide to the Theory of
		 {NP}-Completeness},
  publisher =	 {W. H. Freeman and Company},
  year =	 {1979}
}

@InProceedings{garland1990using,
  author =	 {Stephen J. Garland and John V. Guttag},
  title =	 {Using {LP} to Debug Specifications},
  editor =	 {M. Broy and C. B. Jones},
  booktitle =	 {Programming Concepts and Methods:},
  year =	 {1990},
  pages =	 {369--386},
  publisher =	 nh
}

@Book{gaur1984history,
  author =	 {Albertine Gaur},
  title =	 {A History of Writing},
  publisher =	 {The British Library},
  year =	 {1984},
  address =	 {London}
}

@InProceedings{gay2001language,
  author =	 {David Gay and Alex Aiken},
  title =	 {Language Support for Regions},
  booktitle =	 pldi,
  year =	 2001,
  pages =	 {FIXME},
  address =	 {Snowbird, Utah},
  month =	 jun,
  annote =	 {Idea is to add a library and type arguments to C that
		 support memory regions that are created and freed as a
		 whole. They use reference counting, but distinguish between
		 inter-region pointers, which require it, and intra-region
		 pointers, which don't. This saves them a lot, and they don't
		 have to worry about cyclic structures in may cases.
		 
		 A couple of references on memory management technique
		 surveys.
		 
		 Inter-region pointers are reference counted, so destroying a
		 region is non-trivial.
		 
		 Looks like reasonable performance to achieve safety. Is this
		 better than full garbage collection? In some sense, it's
		 just garbage collection on larger chunks of data. }
}

@InProceedings{gay2003nesc,
  author =	 {David Gay and Phil Levis and Rob von Behren and Matt Welsh
		 and Eric Brewer and David Culler},
  title =	 {The {nesC} Language: A Holistic Approach to Networked
		 Embedded Systems},
  booktitle =	 pldi,
  year =	 2003,
  pages =	 {1--11},
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {nesC is the languagge for TinyOS}
}

@Book{gayler1983apple-ii,
  author =	 {Winston Gayler},
  title =	 {The {Apple II} Circuit Description},
  publisher =	 {Howard W. Sams \& Co.},
  year =	 1983,
  annote =	 {Copied for me ages ago by Cary Sandvig.}
}

@Book{geddes1992algorithms,
  author =	 {Keith O. Geddes},
  title =	 {Algorithms for Computer Algebra},
  publisher =	 kl,
  year =	 {1992},
  address =	 kl_a,
  annote =	 {Saw it at ICCAD 96}
}

@InProceedings{gedik2007cellsort,
  author =	 {Bu\v{g}ra Gedik and Rajesh R. Bordawekar and Philip S. Yu},
  title =	 {{CellSort}: High Performance Sorting on the {Cell}
		 Processor},
  booktitle =	 {Proceedings of Very Large Data Bases (VLDB)},
  year =	 2007,
  pages =	 {1286--1297},
  address =	 {Vienna, Austria},
  month =	 sep,
  annote =	 {From Rebecca}
}

@InProceedings{geilen2005minimising,
  author =	 {Marc Geilen and Twan Basten and Sander Stuijk},
  title =	 {Minimising buffer requirements of synchronous dataflow
		 graphs with model checking},
  booktitle =	 dac05,
  year =	 2005,
  pages =	 {819--824},
  address =	 dac05a,
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/1065579.1065796},
  isbn =	 {1-59593-058-2},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1065579.1065796}
}

@Book{gelb1963study,
  author =	 {I. J. Gelb},
  title =	 {A Study of Writing: Revised Edition},
  publisher =	 {University of Chicago Press},
  year =	 {1963},
  annote =	 {Recommended by SED:sampson:85a}
}

@InProceedings{gelsinger2001microprocessors,
  author =	 {Patrick P. Gelsinger},
  title =	 {Microprocessors for the New Millennium: Challenges,
		 Opportunities, and New Frontiers},
  booktitle =	 isscc,
  year =	 2001,
  pages =	 {22--25},
  address =	 {San Francisco, California},
  annote =	 {Cites Pollack's rule -- his keynote at MICRO.
		 
		 Perhaps the most crisp observation and include a graph.
		 Compares a next-generation processor with a compacted
		 version of the previous generation -- real data.
		 
		 A plenary talk, it appears.}
}

@InProceedings{genest2003message,
  author =	 {Blaise Genest and Anca Muscholl and Doron Peled},
  title =	 {Message Sequence Charts},
  booktitle =	 {Lectures on Concurrency and Petri Nets},
  year =	 {2003},
  series =	 lncs,
  volume =	 {3098},
  pages =	 {537-558},
  publisher =	 sv,
  annote =	 {A nice tutorial on message sequence charts and their
		 difficulties.},
  bibsource =	 {DBLP, http://dblp.uni-trier.de},
  ee =		 {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=3098{\&}spage=537}
		 
}

@InProceedings{genin1990dsp,
  author =	 {D. Genin and Jan M. Rabaey and Paul Hilfinger and C.
		 Scheers and Hugo {De Man}},
  title =	 {{DSP} specification using the {Silage} language},
  booktitle =	 icassp,
  year =	 1990,
  volume =	 2,
  pages =	 {1056-1060},
  address =	 {Albequerque, New Mexico},
  month =	 apr,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{genser2009low-power,
  author =	 {Andreas Genser and Christian Bachmann and Christian Steger
		 and Jos Hulzink and Mladen Berekovic},
  title =	 {Low-Power {ASIP} Architecture Exploration and Optimization
		 for Reed-Solomon Processing},
  booktitle =	 {Proceedings of the IEEE International Conference on
		 Application-Specific Systems},
  year =	 2009,
  pages =	 {177--182},
  address =	 {Boston, Massachusetts},
  month =	 jul,
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/ASAP.2009.15}
}

@Article{george-w-smith1975identification,
  author =	 {George W. {Smith, Jr.} and Robert B. Walford},
  title =	 {The Identification of a Minimal Feedback Vertex Set of a
		 Directed Graph},
  journal =	 {IEEE Transactions on Circuits and Systems},
  year =	 {1975},
  volume =	 {CAS-22},
  number =	 {1},
  pages =	 {9--15},
  month =	 jan,
  annote =	 {Done before the NP-completeness result was known. Concerned
		 with the removal of feedback vertices, not arcs. Ellen
		 Sentovitch's favorite.}
}

@InProceedings{gerin2001scalable,
  author =	 {Patrice Gerin and Sungjoo Yoo and Gabriela Nicolescu and
		 Ahmed A. Jerraya},
  title =	 {Scalable and Flexible Cosimulation of {SoC} Designs with
		 Heterogeneous Multi-Processor Target Architectures},
  booktitle =	 asp-dac,
  year =	 2001,
  pages =	 {63--68},
  address =	 {Yokohama, Japan},
  month =	 feb,
  annote =	 {References ghosh1995hardware-software. Uses SystemC, an
		 ISS, and various other things.}
}

@TechReport{geser1994chaotic,
  author =	 {Alfons Geser and Jens Knoop and Gerald L\"uttgen and
		 Bernhard Steffen and Oliver R\"uthing},
  title =	 {Chaotic Fixed Point Iterations},
  institution =	 {Passau University, Germany},
  year =	 1994,
  number =	 {MIP-9403},
  month =	 oct,
  annote =	 {Found it in citeseer.
		 
		 In the related work section, they talk of "vector chaotic
		 iterations" which are exactly the sort of relaxations my
		 thesis work performs.
		 
		 Their contribution is relaxing the monotonic constraint to
		 be "locally monotonic."}
}

@InProceedings{geser1996non-monotone,
  author =	 {Alfons Geser and Jens Knoop and Gerald L\"uttgen and Oliver
		 R\"uthing and Bernhard Steffen},
  title =	 {Non-monotone Fixpoint Iterations to Resolve Second Order
		 Effects},
  booktitle =	 {Proceedings of the 6th International Conference on Compiler
		 Construction},
  year =	 1996,
  series =	 lncs,
  volume =	 1060,
  pages =	 {106--120},
  address =	 {Linkoping, Sweden},
  month =	 apr,
  annote =	 {Similar to their technical report, but better
		 bibliography.}
}

@InProceedings{ghamarian2006throughput,
  author =	 {Amir Hossein Ghamarian and Marc Geilen and Sander Stuijk
		 and Twan Basten and Arno J. M. Moonen and Marco Bekooij and
		 Bart D. Theelen and Mohammad Resa Mousavi},
  title =	 {Throughput Analysis of Synchronous Data Flow Graphs},
  booktitle =	 acsd,
  year =	 2006,
  address =	 {Turku, Finland},
  month =	 jun,
  annote =	 {Cites a bunch of the cycle mean papers by Dasdan et al.},
  optpages =	 {FIXME}
}

@Book{ghenassia2005transaction-level,
  editor =	 {Frank Ghenassia},
  title =	 {Transaction-Level Modeling with {SystemC}},
  publisher =	 {Springer},
  year =	 2005,
  annote =	 {Got this from Mark De Jeong. Matthieu Moy worked on part of
		 this book.}
}

@InProceedings{gheorghiu_refininginterface,
  author =	 {Mihaela Gheorghiu and Dimitra Giannakopoulou and Corina
		 P?s?reanu},
  title =	 {Refining Interface Alphabets for Compositional
		 Verification},
  booktitle =	 {In Proc. of the 19th Int. Conf. on Tools and Algorithms for
		 theConstruction and Analysis of Systems (TACAS'07},
  pages =	 {276--291}
}

@InProceedings{ghiya1998putting,
  author =	 {R. Ghiya and L.J. Hendren},
  title =	 {Putting pointer analysis to work},
  booktitle =	 popl,
  year =	 1998,
  pages =	 {121--133},
  oldkey =	 {ghiya98},
  sedtransform = {s/ghiya98/ghiya1998putting/}
}

@InProceedings{ghosh1995hardware-software,
  author =	 {A. Ghosh and M. Bershteyn and R. Casley and C. Chien and A.
		 Jain and M. Lipsie and D. Tarrodaychik and O. Yamamo},
  title =	 {A hardware-software co-simulator for embedded system design
		 and debugging},
  booktitle =	 asp-dac,
  year =	 1995,
  address =	 {Chiba, Japan},
  month =	 aug,
  annote =	 {ACM owns the copyright, but doesn't have the proceedings
		 online. I only have a copy from the "Readings in
		 Hardware/Software Codesign" book.}
}

@InProceedings{ghosh1999hardware,
  author =	 {A. Ghosh and J. Kunkel and S. Liao},
  title =	 {Hardware Synthesis from {C/C++}},
  booktitle =	 date,
  year =	 1999,
  pages =	 {387--389},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Part of a hot topics section}
}

@InProceedings{giffin2002detecting,
  author =	 {Jonathon T. Giffin and Somesh Jha and Barton P. Miller},
  title =	 {Detecting Manipulated Remote Call Streams},
  booktitle =	 {Proceedings of the 11th USENIX Security Symposium},
  year =	 2002,
  pages =	 {61--79},
  address =	 {San Francisco, California,},
  month =	 aug,
  annote =	 {Extracts an abstract, finite-state-machine-like model of
		 binary code (paying special attention to RPCs), and adds a
		 checker that verifies whether the behavior of the program
		 matches the model (assuming that something malicious has
		 taken over when it deviates).
		 
		 A nice idea both for security and program verification. Does
		 control-flow analysis on SPARC assembly code.
		 
		 From Angelos: Codiva project}
}

@Article{girard2005hybrid,
  author =	 {Anouck R. Girard and Adam S. Howell and J. Karl Hedrick},
  title =	 {Hybrid Supervisory Control for Real-Time Embedded Bus Rapid
		 Transit Applications},
  journal =	 tvt,
  year =	 2005,
  volume =	 {54},
  number =	 {5},
  pages =	 {1684--1696},
  month =	 sep,
  doi =          {http://dx.doi.org/10.1109/TVT.2005.853466},
  annote =	 {From Anouck. Describes their bus control application in
		 great, great detail. They implemented this on a bus they
		 drove in San Diego. It had 25 real-time tasks, the most
		 expensive of which was some signal processing on some
		 in-road magnet sensors. She said something like 50k loc in
		 total, much of it in device drivers.

                 Starts by talking about state machines, composing
                  them, adding a time component, and adding hybrid
                  behavior.

                  But most of the paper is about their model-driven
                  development process and libraries for vehicle (bus)
                  control.

                  They describe all sorts of control algorithms
                  (polynomials for accelerating, etc.) and how they
                  integrate all of these with various states.}
}

@TechReport{girault1998circuit,
  author =	 {Alain Girault and G\'erard Berry},
  title =	 {Circuit Generation for Verification of Esterel Programs},
  institution =	 {INRIA},
  year =	 1998,
  type =	 {Research report},
  number =	 3582,
  month =	 dec,
  annote =	 {Synthesizing more of the datapath for verification.},
  url =		 {http://www.inrialpes.fr/bip/people/girault/Publications/Scdata/}
		 ,
  bdsk-url-1 =	 {http://www.inrialpes.fr/bip/people/girault/Publications/Scdata/}
		 
}

@InProceedings{girault1999circuit,
  author =	 {Alain Girault and G\'erard Berry},
  title =	 {Circuit Generation for Verification of Esterel Programs},
  booktitle =	 {Proceedings of the IEEE International Symposium on Signals,
		 Circuits and Systems (SCS)},
  year =	 1999,
  pages =	 {85--89},
  address =	 {Iasi, Romania},
  month =	 {jul},
  annote =	 {reduced version of girault1998circuit},
  url =		 {http://www.inrialpes.fr/bip/people/girault/Publications/Scs99/}
		 ,
  bdsk-url-1 =	 {http://www.inrialpes.fr/bip/people/girault/Publications/Scs99/}
		 
}

@InProceedings{glenstrup1999cmix,
  author =	 {Arne J. Glenstrup and Henning Makholm and Jens P. Secher},
  title =	 {{C-MIX}: Specialization of {C} Programs},
  booktitle =	 {Partial Evaluation---Practice and Theory, DIKU 1998
		 International Summer School},
  year =	 1999,
  pages =	 {108--154},
  address =	 {London, UK},
  publisher =	 sv,
  isbn =	 {3-540-66710-5}
}

@InProceedings{godefroid1997model,
  author =	 {Patrice Godefroid},
  title =	 {Model Checking for Programming Languages using {Verisoft}},
  booktitle =	 popl,
  year =	 1997,
  pages =	 {174--186},
  address =	 {Paris, France},
  month =	 jan,
  url =		 {citeseer.ist.psu.edu/godefroid97model.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/godefroid97model.html}
}

@InProceedings{godfrey2000evolution,
  author =	 {Michael W. Godfrey and Qiang Tu},
  title =	 {Evolution in Open Source Software: A Case Study},
  booktitle =	 {Proceedings of the International Conference on Software
		 Maintenance (ICSM)},
  year =	 2000,
  pages =	 {131--142},
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {Found after a random search of "Software Evolution." Cites
		 Lehman et al. Lot of graphs, interesting bibliography.}
}

@PhDThesis{golan1994very,
  author =	 {Michael Golan},
  title =	 {A Very High Level Debugging Language},
  school =	 {Princeton},
  year =	 {1994},
  annote =	 {Describes the DUEL language, a debugger extension language
		 that uses generator semantics.},
  url =		 {ftp://ftp.cs.princeton.edu/duel/thesis.ps.Z},
  bdsk-url-1 =	 {ftp://ftp.cs.princeton.edu/duel/thesis.ps.Z}
}

@Book{goldberg1983smalltalk-80,
  author =	 {A. Goldberg and D. Robson},
  title =	 {Smalltalk-80: The Language and its Implementation},
  publisher =	 aw,
  year =	 {1983},
  address =	 aw_a,
  annote =	 {Discussion of the language itself. Berkeley libraries
		 didn't have it. Very in-depth, going so far as to give
		 byte-level details of the compilation scheme, the object
		 store, etc.}
}

@Book{goldberg1984smalltalk-80,
  author =	 {A. Goldberg},
  title =	 {Smalltalk-80: The Interactive Programming Environment},
  publisher =	 aw,
  year =	 {1984},
  address =	 aw_a,
  annote =	 {Discusses just the user-interface design, not the
		 language.}
}

@InProceedings{goldberg1986new,
  author =	 {Andrew V. Goldberg and Robert E. Tarjan},
  title =	 {A New Approach to the Maximum Flow Problem},
  booktitle =	 {Proceedings of the Eighteenth Annual ACM Symposimum on the
		 Theory of Computing},
  year =	 {1986},
  pages =	 {136--134}
}

@Book{goldberg1989smalltalk-80,
  author =	 {A. Goldberg and D. Robson},
  title =	 {Smalltalk-80: The Language},
  publisher =	 aw,
  year =	 {1989},
  address =	 aw_a,
  annote =	 {Updated version of the first smalltalk book. Fewer
		 implementation details.}
}

@InProceedings{goldfeder2009data,
  author =	 {Corey Goldfeder and Matei Ciocarlie and Jaime Peretzman and
		 Hao Dang and Peter K. Allen},
  title =	 {Data-Driven Grasping with Partial Sensor Data},
  booktitle =	 {IEEE/RSJ International Conference on Intelligent Robots and
		 Systems},
  year =	 2009,
  pages =	 {1278--1284},
  month =	 oct
}

@Article{goldstein2005who,
  author =	 {Harry Goldstein},
  title =	 {Who Killed the Virtual Case File?},
  journal =	 {IEEE Spectrum},
  year =	 2005,
  volume =	 42,
  number =	 9,
  pages =	 {24--35},
  month =	 sep,
  annote =	 {Nice story about a prototypical large software system
		 failure -- try to build it all at once, get bad specs.,
		 change them constantly, etc. US\$100 M down the drain.}
}

@Article{gomes2003portals,
  author =	 {Lee Gomes},
  title =	 {PORTALS: Two Men, Two Ways To Speak Computerese And Two Big
		 Successes},
  journal =	 {The Wall Street Journal},
  year =	 2003,
  pages =	 {B1},
  month =	 {21 July},
  annote =	 {Really nice little article comparing the attitudes of Wall
		 vs. von Rossum.},
  text =	 {THEY LIVE A few dozen miles from each other, have
		 strikingly different backgrounds and world views, but in
		 their own separate ways they have created computer languages
		 among the most important in the world. Larry Wall and Guido
		 van Rossum are the driving forces behind Perl and Python,
		 respectively. If you haven't heard of any of them, it's
		 because you don't run a Web site, write server software, or
		 toil in the many other fields where both men and their
		 creations have enormous and very zealous followings. Perl
		 and Python are free and freely modified "open source"
		 software, just like the better-known Linux operating system.
		 Mr. Wall, 48, and Mr. von Rossum, 47, each started working
		 on his language in the 1980s, a few years before Linus
		 Torvalds began Linux. In all three cases, what began as a
		 hobby grew into a global phenomenon. Perl and Python are
		 considered scripting languages, a category whose story has a
		 "Little Engine That Could" quality to it. These languages
		 have been around since the very early days of computers. At
		 first, they were limited to rudimentary tasks, like starting
		 and stopping other much larger programs written in real
		 languages. The most famous example of a scripting language
		 is the autoexec.bat batch file of DOS and Windows fame. OVER
		 THE PAST decade, though, scripting languages have come to
		 rival full-blown languages such as C and Java in power and
		 performance. But they've kept the ease of use that was their
		 main attraction in the first place. Hence their popularity.
		 While they are used for many things, you probably wouldn't
		 write, say, a big graphics-intensive computer game in them
		 because it would probably run too slowly. Be warned, though,
		 that any such statement about the alleged unsuitability of
		 Perl or Python for a particular task is likely to generate
		 instant flame mails, not from Mr. Wall or Mr. van Rossum,
		 who tend to be insouciant about these matters, but from some
		 of their more die-hard followers. Computer-science
		 departments tend to frown on scripting languages, saying
		 they encourage bad programming habits. Their tut-tut
		 attitude is the kind you'd expect from carpentry teachers if
		 someone started selling kits that let people build houses
		 without knowing know how to plumb a door. As the most
		 popular of all the scripting languages, Perl and Python
		 compete with each other for mind share among the same
		 communities of programmers. The competition is good-natured,
		 like the fake-Buddhist Python Web site that tells how "the
		 origin of suffering lies in the use of not-Python." Lay
		 people often don't appreciate it, but computer languages
		 have distinct personalities, much like human languages. Perl
		 is famous for being permissive, with no right or wrong way
		 of accomplishing a task. Python, by contrast, is considered
		 more rigid and exacting. THOSE DESCRIPTIONS are the opposite
		 of what you'd expect from the inventors' bios. The
		 Dutch-born Mr. van Rossum started working on the
		 my-way-or-the-highway Python as a typical resident of the
		 famously freewheeling city of Amsterdam. About his approach
		 to Python, Mr. van Rossum says that if there is a clearly
		 right way of doing something, why mess it up with
		 alternatives? By contrast, Mr. Wall, the gatekeeper of the
		 undogmatic Perl, is a devout evangelical Christian. "God
		 doesn't enforce morality on us, but prefers to let us choose
		 it," he says. "And if we are created in God's image, we
		 ought to extend the same courtesy." Besides choice, Mr. Wall
		 also brings to his work a playful erudition. His yearly
		 reports on the state of Perl development, available at
		 www.perl.com, are known for their Nabokovian wit. Perl and
		 Python aren't the only scripting languages; there are also
		 PHP and Ruby and TCL and many more. That variety is another
		 of the many differences between open source and for-profit
		 software. Most companies will kill a product if it isn't No.
		 1 or No. 2 in a big market. But in open source, software
		 lives on if there are enough believers to keep it alive.
		 Microsoft often likes to question the viability of open
		 source, but the futures of both Python and Perl appear
		 secure, thanks largely to Sugar Daddies who support the
		 inventors. Mr. van Rossum moved to the U.S. in 1995, and
		 married a Texas martial-arts instructor. They have a young
		 son, and have just relocated to Foster City, Calif., 15
		 miles south of San Francisco. Mr. van Rossum recently began
		 work at Elemental Security, a computer-security start-up.
		 Mr. Wall is married with four children, and lives in nearby
		 Mountain View. He just finished a gig at the nonprofit Perl
		 Foundation, and is currently in search of a new patron.
		 These days, his main project is a massive, multiyear
		 reworking of the entire Perl language. "I made some bad
		 decisions early on," he explains. "But then, every language
		 designer does. The trick is to make different mistakes as
		 you get older."}
}

@Book{gonnet1991handbook,
  author =	 {G. H. Gonnet and R. Baeza-Yates},
  title =	 {Handbook of Algorithms and Data Structures},
  publisher =	 aw,
  year =	 {1991},
  address =	 aw_a,
  edition =	 {Second}
}

@PhDThesis{gonthier1988semantiques,
  author =	 {Georges Gonthier},
  title =	 {S\'emantiques et mod\`eles d'ex\'ecution des langages
		 r\'eactifs synchrones; application \`a {Esterel}.
		 [{Semantics} and models of execution of the synchronous
		 reactive languages: application to {Esterel}]},
  school =	 {Universit\'e d'Orsay},
  year =	 1988,
  type =	 {Th\`ese d'informatique},
  annote =	 {Unreadable?}
}

@Article{goodman2000evolution,
  author =	 {Corey S. Goodman and Bridger C. Coughlin},
  title =	 {The Evolution of Evo-Devo Biology},
  journal =	 {Proceedings of the National Academy of Sciences of the
		 United States of America (PNAS)},
  year =	 2000,
  volume =	 97,
  number =	 9,
  pages =	 {4424--4425},
  month =	 apr,
  annote =	 {Found through a random search. Part of a special issue on
		 Evo-Devo.}
}

@Article{goossens1990efficient,
  author =	 {Gert Goossens and Jan Rabaey and Hugo {De Man} and Joos
		 Vandewalle},
  title =	 {An efficient microcode compiler for application specific
		 {DSP} processors},
  journal =	 transcad,
  year =	 1990,
  volume =	 9,
  number =	 9,
  pages =	 {925--937},
  month =	 sep,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@Book{goossens1994companion,
  author =	 {Michel Goossens and Frank Mittelbach and Alexander
		 Samarin},
  title =	 {The {\LaTeX} Companion},
  publisher =	 aw,
  year =	 {1994},
  address =	 aw_a,
  annote =	 {Purchased 950712, Borders books in Emeryville}
}

@Article{goossens2005aethereal,
  author =	 {K. Goossens and J. Dielissen and A. Radulescu},
  title =	 {{AE}thereal Network on Chip: Concepts, Architectures, and
		 Implementations},
  journal =	 ieeedtc,
  year =	 {2005},
  volume =	 {22},
  number =	 {5},
  pages =	 {414--421},
  oldkey =	 {goossens05},
  sedtransform = {s/goossens05/goossens2005aethereal/}
}

@InProceedings{gordon1995semantic,
  author =	 {Michael J. C. Gordon},
  title =	 {The Semantic Challenge of {Verilog} {HDL}},
  booktitle =	 {Proceedings of the Tenth Annual IEEE Symposium on Logic in
		 Computer Science (LICS)},
  year =	 1995,
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {Discusses some of the oddities of the Verilog language.
		 Mostly simulation-oriented. Part of the work with Monica.},
  url =		 {http://www.cl.cam.ac.uk/~mjcg},
  bdsk-url-1 =	 {http://www.cl.cam.ac.uk/~mjcg}
}

@InProceedings{gordon1998language,
  author =	 {Michael J. C. Gordon and Abhijit Ghosh},
  title =	 {Language Independent {RTL} Semantics},
  booktitle =	 {Proceedings of the 1998 IEEE CS Annual Workshop on VLSI:
		 System Level Design},
  year =	 1998,
  address =	 {Orlando, Florida},
  annote =	 {Part of the study for the Monica project. Proposes a
		 predicated action style of defining semantics. Not very
		 interesting.},
  url =		 {http://www.cl.cam.ac.uk/~mjcg},
  bdsk-url-1 =	 {http://www.cl.cam.ac.uk/~mjcg}
}

@Article{gordon2006exploiting,
  author =	 {Michael I. Gordon and W. Thies and S. Amarasinghe},
  title =	 {Exploiting coarse-grained task, data, and pipeline
		 parallelism in stream programs},
  journal =	 {SIGOPS Operating Systems Review},
  year =	 2006,
  volume =	 40,
  number =	 5,
  pages =	 {151--162},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/1168917.1168877},
  issn =	 {0163-5980},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1168917.1168877}
}

@InProceedings{gorjiara2005design,
  author =	 {Bita Gorjiara and Dan Gajski},
  title =	 {Design Space Exploration of {C} Programs Using {NISC}: A
		 Case-Study on {DCT} algorithm},
  booktitle =	 {Proceedings of the Workshop on Embedded Systems for
		 Real-time Multimedia (ESTIMEDIA)},
  year =	 2005,
  pages =	 {21--26},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {NISC stuff. The first? A case study, but lays out the
		 methodology clearly Relevant for the SHIM-to-hardware
		 project.}
}

@InProceedings{gorjiara2006desiging,
  author =	 {Bita Gorjiara and Mehrdad Reshadi and Dan Gajski},
  title =	 {Designing a Custom Architecture for {DCT} Using {NISC}
		 Technology},
  booktitle =	 asp-dac,
  year =	 2006,
  pages =	 {116--117},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Part of the NISC work.}
}

@InProceedings{gorjiara2006generic-architecture,
  author =	 {Bita Gorjiara and Mehrdad Reshadi and Dan Gajski},
  title =	 {Generic Architecture Description for Retargetable
		 Compilation and Synthesis of Application-Specific Pipelined
		 {IPs}},
  booktitle =	 iccd,
  year =	 2006,
  pages =	 {356--361},
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {Part of the NISC project. Describes their GNR
		 representation.}
}

@InProceedings{gorjiara2006generic-netlist,
  author =	 {Bita Gorjiara and Mehrdad Reshadi and Pramod Chandraiah and
		 Daniel Gajski},
  title =	 {Generic Netlist Representation for System and {PE} Level
		 Design Exploration},
  booktitle =	 codesisss,
  year =	 2006,
  pages =	 {282--287},
  address =	 {Seoul, Korea},
  month =	 oct,
  doi =		 {http://doi.acm.org/10.1145/1176254.1176323},
  annote =	 {Part of the NISC project. Describes their GNR
		 representation. Very much like
		 gorjiara2006generic-architecture}
}

@InProceedings{gorjiara2007fpga-friendly,
  author =	 {Bita Gorjiara and Daniel Gajski},
  title =	 {{FPGA}-friendly Code Compression for Horizontal Microcoded
		 Custom {IPs}},
  booktitle =	 fpga,
  year =	 2007,
  pages =	 {108--115},
  address =	 {Monterey, California},
  month =	 feb,
  doi =		 {http://doi.acm.org/10.1145/1216919.1216935},
  annote =	 {Part of the NISC work.}
}

@Book{gosling2000java,
  author =	 {James Gosling and Bill Joy and Guy Steele and and Gilad
		 Bracha},
  title =	 {The Java Language Specification},
  publisher =	 aw,
  year =	 2000,
  address =	 aw_a,
  edition =	 {Second},
  annote =	 {Java language reference. See arnold2000java.}
}

@Misc{goto2004,
  author =	 {Satoshi Goto},
  howpublished = {Personal communication},
  year =	 2004,
  month =	 jul,
  annote =	 {He was the director of the Cyber project at NEC. Cyber is C
		 with extensions. No explicit clock. No pointers or recursive
		 functions allowed.}
}

@InProceedings{goudarzi2003object,
  author =	 {M. Goudarzi and S. Hessabi and A. Mycroft},
  title =	 {Object-oriented ASIP design and synthesis},
  booktitle =	 {Forum on Specification and Design Languages (FDL'03)},
  year =	 2003,
  address =	 {Frankfurt, Germany},
  url =		 {http://www.cl.cam.ac.uk/~am21/papers/fdl03.pdf},
  bdsk-url-1 =	 {http://www.cl.cam.ac.uk/~am21/papers/fdl03.pdf}
}

@Article{govindarajan2002minimizing,
  author =	 {R. Govindarajan and Guang R. Gao and Palash Desai Y},
  title =	 {Minimizing Buffer Requirements under Rate-Optimal Schedule
		 in Regular Dataflow Networks},
  journal =	 {Journal of VLSI Signal Processing Systems},
  year =	 2002,
  volume =	 31,
  number =	 3,
  pages =	 {207--209},
  month =	 jul
}

@InProceedings{graf1997construction,
  author =	 {Susanne Graf and Hassen Saidi},
  title =	 {Construction of abstract state graphs with {PVS}},
  booktitle =	 cav1997,
  year =	 1997,
  series =	 lncs,
  volume =	 1254,
  pages =	 {72--83},
  address =	 cav1997_a,
  month =	 jun,
  publisher =	 sv,
  annote =	 {From Ed Clarke: a fundamental predicate abstraction paper.
		 
		 Basic idea is to use a Theorem prover (automatic, they say)
		 to show for a set of predicates, the successor states that
		 can arise from a particular assignment of truth values to
		 these predicate (i.e., the abstract state). Works on
		 concurrent guarded-command langauges.}
}

@Book{grama2003introduction,
  author =	 {Ananth Grama and Anshul Gupta and George Karypis and Vipin
		 Kumar},
  title =	 {Introduction to Parallel Computing},
  publisher =	 aw,
  year =	 2003,
  edition =	 {Second},
  annote =	 {One of the better textbook introductions to parallel
		 computing. Describes MPI, Pthreads, and OpenMP.}
}

@InProceedings{grandpierre2003from,
  author =	 {Thierry Grandpierre and Yves Sorel},
  title =	 {From Algorithm and Architecture Specification to Automatic
		 Generation of Distributed Real-Time Executives: a Seamless
		 Flow of Graph Transformations},
  booktitle =	 memocode,
  year =	 2003,
  address =	 {Mont St. Michel, France},
  month =	 jun,
  annote =	 {Took it from their webpage. Talks about code generation for
		 distributed processors.}
}

@InProceedings{greef1997array,
  author =	 {Eddy {de Greef} and Francky Catthoor and Hugo de Man},
  title =	 {Array Placement for Storage Size Reduction in Embedded
		 Multimedia Systems},
  booktitle =	 {ASAP '97: Proceedings of the IEEE International Conference
		 on Application-Specific Systems, Architectures and
		 Processors},
  year =	 {1997},
  pages =	 {66},
  address =	 {Washington, DC, USA},
  publisher =	 {IEEE Computer Society},
  isbn =	 {0-8186-7958-1}
}

@Article{greengard1987fast,
  author =	 {L. Greengard and V. Rokhlin},
  title =	 {A Fast Algorithm for Particle Simulations},
  journal =	 {Journal of Computational Physics},
  year =	 {1987},
  volume =	 {73},
  pages =	 {325--348},
  annote =	 {Uses a multipole approximation to acheive O(N)
		 performance}
}

@Book{grehan1998real-time,
  author =	 {Moore Grehan and Cyliax},
  title =	 {Real-Time Programming; A Guide to 32-Bit Embedded
		 Development},
  publisher =	 {aw},
  year =	 1998,
  address =	 aw_a,
  annote =	 {Cited by simon1999embedded. More sophisticated RTOS and
		 tools.}
}

@Book{griswold1986implementation,
  author =	 {Ralph E. Griswold and Madge T. Griswold},
  title =	 {The Implementation of the {Icon} Programming Language},
  publisher =	 {Princeton University Press},
  year =	 1986,
  address =	 {Princeton, New Jersey},
  annote =	 {Out of print, now available electronically from the Icon
		 webpage. Describes a virtual-machine-based implementation
		 that does a lot of funny things to make generators work.
		 Griswold worked on SNOBOL, so Icon is a direct descendent.}
}

@Book{griswold1996icon,
  author =	 {Ralph E. Griswold and Madge T. Griswold},
  title =	 {The {Icon} Programming Language},
  publisher =	 {Peer-to-Peer Communications},
  year =	 1996,
  edition =	 {Third},
  annote =	 {Out of print, available electronically on the Icon
		 webpage.}
}

@Article{grochowski2003technological,
  author =	 {E. Grochowski and R. D. Halem},
  title =	 {Technological impact of magnetic hard disk drives on
		 storage systems},
  journal =	 {IBM Systems Journal},
  year =	 2003,
  volume =	 42,
  number =	 2,
  pages =	 {338--346},
  month =	 apr,
  annote =	 {Nice chart on trends in disk drive density.}
}

@Book{groetker2002system,
  author =	 {Thorsten Gr\"otker and Stan Liao and Grant Martin and
		 Stuart Swan},
  title =	 {System Design with {SystemC}},
  publisher =	 kl,
  year =	 2002,
  address =	 kl_a,
  annote =	 {Overall description of SystemC 2.0}
}

@InProceedings{gropl1998size,
  author =	 {Clemens Gr\"opl and Hans J\"urgen Pr\"omel and Anand
		 Srivastav},
  title =	 {Size and Structure of Random Ordered Binary Decision
		 Diagrams (Extended Abstract)},
  booktitle =	 {Proceedings of the 15th Symposium on Theoretical Aspects of
		 Computer Science (STACS)},
  year =	 1998,
  series =	 lncs,
  volume =	 1373,
  pages =	 {238--248},
  address =	 {Paris, France},
  month =	 feb,
  publisher =	 sv,
  annote =	 {References liaw1992on. The extended version (unpublished)
		 is 30 pages and much more detailed. Includes a discussion on
		 the expected size of OBDDs.}
}

@Article{gropl2001on,
  author =	 {Clemens Gr\"opl and Hans J\"urgen Pr\"omel and Anand
		 Srivastav},
  title =	 {On the Evolution of the Worst-Case {OBDD} Size},
  journal =	 ipl,
  year =	 2001,
  volume =	 77,
  number =	 1,
  pages =	 {1--7},
  annote =	 {Journal version of gropl1999size?. Much reduces. Very
		 high-powered mathematics on the behavior of the upper bound
		 on BDD sizes. Apparently, there's some non-smooth
		 convergence behavior.}
}

@Article{gross1996algebraic,
  author =	 {Jonathan L. Gross and Jianer Chen},
  title =	 {Algebraic Specification of Interconnection Network
		 Relationships by Permutation Voltage Graph Mappings},
  journal =	 {Mathematical Systems Theory},
  year =	 1996,
  volume =	 29,
  pages =	 {451--470},
  annote =	 {From Jonathan}
}

@Book{grossman1993hybrid,
  editor =	 {Robert L. Grossman and Anil Nerode and Anders P. Ravn and
		 Hans Rischel},
  title =	 {Hybrid Systems},
  publisher =	 sv,
  year =	 {1993},
  volume =	 {736},
  series =	 lncs,
  annote =	 {Mentioned at Dagstuhl 96. Contains mentions of bialgebras,
		 discrete and continuous systems. See the Grossman and Larson
		 paper, P 357}
}

@Article{grumberg1994model,
  author =	 {Orna Grumberg and David E. Long},
  title =	 {Model checking and modular verification},
  journal =	 toplas,
  year =	 1994,
  volume =	 16,
  number =	 3,
  pages =	 {843--871},
  annote =	 {Part of our Emsoft Deadlock paper},
  publisher =	 {ACM}
}

@Article{grumberg91modelchecking,
  author =	 {Orna Grumberg and David E. Long},
  title =	 {Model Checking and Modular Verification},
  journal =	 {ACM Transactions on Programming Languages and Systems},
  year =	 {1991},
  volume =	 {16}
}

@InProceedings{guerrier2000generic,
  author =	 {P. Guerrier and A. Greiner},
  title =	 {A generic architecture for on-chip packet-switched
		 interconnections},
  booktitle =	 date,
  year =	 2000,
  pages =	 {250--256},
  oldkey =	 {guerrier00},
  sedtransform = {s/guerrier00/guerrier2000generic/}
}

@Book{gunter1992semantics,
  author =	 {Carl A. Gunter},
  title =	 {Semantics of Programming Languages},
  publisher =	 mit,
  year =	 {1992},
  address =	 mit_a
}

@InProceedings{guo2004quantitative,
  author =	 {Zhi Guo and Walid Najjar and Frank Vahid},
  title =	 {A quantitative analysis of the speedup factors of {FPGAs}
		 over processors},
  booktitle =	 fpga,
  year =	 2004,
  pages =	 {162--170},
  address =	 {Monterey, California},
  month =	 feb,
  publisher =	 {ACM Press}
}

@InProceedings{gupta1985efficiency,
  author =	 {Rajiv Gupta and Mary Lou Soffa},
  title =	 {The Efficiency of Storage Management Schemes for {Ada}
		 Programs},
  booktitle =	 {Proceedings of the ACM SIGAda International Conference on
		 Ada},
  year =	 1985,
  pages =	 {164--172},
  address =	 {Paris, France},
  month =	 may,
  annote =	 {Compares various cactus stack implementations. Heap-managed
		 activation records work fine.}
}

@Article{gupta1989object-oriented,
  author =	 {R. Gupta and W. H. Cheng and R. Gupta and I. Hardonag and
		 M. Breuer},
  title =	 {An Object-Oriented {VLSI} {CAD} Framework},
  journal =	 {{IEEE} Computer},
  year =	 {1989},
  volume =	 {22},
  number =	 {5},
  pages =	 {28--37},
  month =	 may
}

@Article{gupta1993hardware,
  author =	 {Rajesh K. Gupta and Giovanni {De Micheli}},
  title =	 {Hardware-Software Cosynthesis for Digital Systems},
  journal =	 ieeedtc,
  year =	 1993,
  volume =	 10,
  number =	 3,
  pages =	 {29--41},
  month =	 oct,
  annote =	 {Popular reference.
		 
		 "In this article, we demonstrate the feasibility of
		 achieving synthesis of heterogeneous systems which uses
		 timing constraints to delegate tasks between hardware and
		 software such that the final implementation meets required
		 performance constraints."
		 
		 Worried more about synthesis and timing constraints as
		 opposed to system integration. Talks about HardwareC,
		 constraint satisfaction, automatic partitioning. Example is
		 an Ethernet-based network coprocessor modeled as 13
		 concurrent processes in HardwareC.
		 
		 Main focus is on automatic optimization of partitioning.}
}

@Article{gupta1994program,
  author =	 {Rajesh K. Gupta and Claudionor N. Coelho Jr. and Giovanni
		 {De Micheli}},
  title =	 {Program Implementation Schemes for Hardware-Softare
		 Systems},
  journal =	 computer,
  year =	 {1994},
  volume =	 {27},
  number =	 {1},
  pages =	 {48--55},
  month =	 jan,
  annote =	 {Threads, FIFOs. Interesting.}
}

@InProceedings{gupta1997auditdraw,
  author =	 {Neeraj K. Gupta and Lalita J. Jagadeesan and Eleftherios E.
		 Koutsofios and David M. Weiss},
  title =	 {Auditdraw: Generating Audits the {FAST} Way},
  booktitle =	 {International Symposium on Requirements Engineering (RE)},
  year =	 {1997},
  pages =	 {188--197},
  address =	 {Annapolis, Maryland},
  month =	 jan,
  url =		 {citeseer.ist.psu.edu/gupta97auditdraw.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/gupta97auditdraw.html}
}

@InProceedings{gupta2000sat-based,
  author =	 {Aarti Gupta and Zijiang Yang and Pranav Ashar and Anubhav
		 Gupta},
  title =	 {{SAT-Based} Image Computation with Application in
		 Reachability Analysis},
  booktitle =	 fmcad,
  year =	 2000,
  series =	 lncs,
  volume =	 1954,
  pages =	 {354--371},
  address =	 {Austin, Texas},
  month =	 nov,
  annote =	 {Cited by mcmillan2003interpolation. Actually, a BDD/SAT
		 hybrid. Uses BDDs to represent input and image sets, and CNF
		 for the relations.
		 
		 Rather awkward, complex thing. Represents BDDs with SAT
		 instances at their roots (or vice versa?). Very
		 complicated.}
}

@InProceedings{gupta2002compiler-directed,
  author =	 {T. Vinod Kumar Gupta and Roberto E. Ko and Rajeev Barua},
  title =	 {Compiler-directed customization of {ASIP} cores},
  booktitle =	 {Proceedings of the Tenth International Workshop on
		 Hardware/Software Codesign (CODES)},
  year =	 2002,
  pages =	 {97--102},
  address =	 {Estes Park, Colorado},
  month =	 may,
  doi =		 {http://doi.acm.org/10.1145/774789.774810},
  annote =	 {Martha found this.}
}

@InProceedings{gupta2003spark,
  author =	 {Sumit Gupta and Rajesh K. Gupta and Nikil D. Dutt and Alex
		 Nicolau},
  title =	 {{SPARK}: A High-Level Synthesis Framework For Applying
		 Parallelizing Compiler Transformations},
  booktitle =	 {Proceedings of the 16th International Conference on VLSI
		 Design},
  year =	 2003,
  pages =	 {461--466},
  address =	 {New Delhi, India},
  month =	 jan,
  annote =	 {More on the SPARK stuff. Relevant to the SHIM-to-hardware
		 work.}
}

@InProceedings{gupta2005acyclic,
  author =	 {Amit Gupta and Charley Selvidge},
  title =	 {Acyclic Modeling of Combinational Loops},
  booktitle =	 iccad,
  year =	 2005,
  pages =	 {343--347},
  address =	 {San Jose, California},
  month =	 nov,
  annote =	 {Loop-at-a-time restructuring of combinational cycles.
		 References my 2003 DAC paper. Relevant for the work with
		 Osama.}
}

@Book{gupta2005spark,
  author =	 {Sumit Gupta and Rajesh K. Gupta and Nikil D. Dutt and Alex
		 Nicolau},
  title =	 {{SPARK}: A Parallelizing Approach to the High-Level
		 Synthesis of Digital Circuits},
  publisher =	 {Springer},
  year =	 2005,
  annote =	 {Their high-level synthesis system. Uses the EDG frontend
		 followed by lots of optimizations (their main contribution)
		 to build hardware. Relevant to the SHIM-to-hardware stuff.
		 Got the book in 2006, chatted to Rajesh about it in Germany.
		 Mostly about optimizing loops for hardware; little or
		 nothing on inter-process communication.}
}

@InProceedings{gupta2006enforcing,
  author =	 {Diwaker Gupta and Ludmila Cherkasova and Rob Gardner and
		 Amin Vahdat},
  title =	 {Enforcing Performance Isolation Across Virtual Machines in
		 {Xen}},
  booktitle =	 {Proceedings of the ACM/IFIP/USENIX International Conference
		 on Middleware},
  year =	 2006,
  pages =	 {342--362},
  address =	 {Melbourne, Australia},
  month =	 nov,
  annote =	 {Cited by nesbit2007virtual}
}

@InProceedings{gurr1998software,
  author =	 {C. A. Gurr},
  title =	 {Software architectures in industrial systems: an empirical
		 study},
  booktitle =	 {Proceedings of the third international workshop on Software
		 architecture},
  year =	 1998,
  pages =	 {57--60},
  address =	 {Orlando, Florida},
  month =	 nov,
  annote =	 {Found at random. Part of a project at Univ. Edinburgh.
		 Almost nothing here.}
}

@InProceedings{gustafsson2003tool,
  author =	 {Jan Gustafsson and Bj\"orn Lisper and Christer Sandberg and
		 Nerina Bermudo},
  title =	 {A tool for automatic flow analysis of {C}-programs for
		 {WCET} calculation},
  booktitle =	 {Proceedings of the Eighth International Workshop on
		 Object-Oriented Real-Time Dependable Systems (WORDS)},
  year =	 2003,
  pages =	 {106--112},
  address =	 {Guadalajara, Mexico},
  month =	 jan,
  annote =	 {Part of the WCET analysis paper.}
}

@Article{gustafston1988reevaluating,
  author =	 {John L. Gustafston},
  title =	 {Reevaluating {Amdahl's} Law},
  journal =	 cacm,
  year =	 1988,
  volume =	 31,
  number =	 5,
  pages =	 {532--533},
  month =	 may,
  annote =	 {Cited by hill2008amdahls}
}

@InProceedings{ha2007improved,
  author =	 {Jungwoo Ha and Christopher J. Rossbach and Jason V. Davis
		 and Indrajit Roy and Hany E. Ramadan and Donald E. Porter
		 and David L. Chen and Emmett Witchel},
  title =	 {Improved Error Reporting for Software that Uses Black-Box
		 Components},
  booktitle =	 {pldi},
  year =	 2007,
  pages =	 {101--111},
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {Referenced by su2007autobash. Describes Clarify, a system
		 that classifies application behavior. Idea is to monitor
		 application behavior, then train a classifier to identify
		 wanted and unwanted behavior.
		 
		 Characterizes features such as which functions are called,
		 how many times, how many times each path in a function is
		 traversed, call-tree profiling, return values, etc.
		 
		 Uses machine learning to understand what's going on.
		 
		 Machine-learning-based descriptions are necessarily vague
		 and not the sort of thing I want to go after, but this is a
		 good start for the sort of information that might be
		 collected dynamically from a program. The bibliography has
		 some things about collecting data from a running program.}
}

@InProceedings{hachtel1991exact,
  author =	 {Gary D. Hachtel and June-Kyung Rho and Fabio Somenzi and R.
		 Jacoby},
  title =	 {Exact and heuristic algorithms for the minimization of
		 incompletely specified state machines},
  booktitle =	 {Proceedings of European Design Automation (EDAC)},
  year =	 1991,
  pages =	 {184--191},
  address =	 {Amsterdam, The Netherlands},
  month =	 feb,
  annote =	 {Stamina reference}
}

@Article{hachtel1994exact,
  author =	 {Gary D. Hachtel and June-Kyung Rho and Fabio Somenzi and R.
		 Jacoby},
  title =	 {Exact and heuristic algorithms for the minimization of
		 incompletely specified state machines},
  journal =	 transcad,
  year =	 1994,
  volume =	 13,
  number =	 2,
  pages =	 {167--177},
  month =	 feb,
  annote =	 {Stamina}
}

@Book{hachtel1996logic,
  author =	 {Gary D. Hachtel and Fabio Somenzi},
  title =	 {Logic Synthesis and Verification Algorithms},
  publisher =	 kl,
  year =	 {1996},
  address =	 kl_a,
  annote =	 {Saw it at ICCAD '96}
}

@InProceedings{hadjiyiannis1997isdl,
  author =	 {George Hadjiyiannis and Silvina Hanono and Srinivas
		 Devadas},
  title =	 {{ISDL}: An Instruction Set Description Language for
		 Retargetability},
  booktitle =	 dac97,
  year =	 1997,
  pages =	 {299--302},
  address =	 dac97a,
  annote =	 {Instruction set description language. Cited in Sean Gibb's
		 thesis. Hanono later produced a retargetable code generator
		 called Aviv for her thesis under Srini.}
}

@InProceedings{halbwachs1991generating,
  author =	 {Nicholas Halbwachs and Pascal Raymond and Christophe
		 Ratel},
  title =	 {Generating Efficient Code From Data-Flow Programs},
  booktitle =	 {Proceedings of the Third International Symposium on
		 Programming Language Implementation and Logic Programming
		 (PLILP)},
  year =	 1991,
  series =	 lncs,
  volume =	 528,
  address =	 {Passau, Germany},
  month =	 aug,
  publisher =	 sv,
  annote =	 {How to compile a simplified (clock-free) version of Lustre:
		 The V3 compiler:
		 
		 Can simply topologically sort it, but this is not the most
		 efficient. Think instead of it as an automaton: its state is
		 the values of all the variables at any step in time. Just
		 worry about Boolean variables, not integers. This tends to
		 have many more states than necessary since more variables
		 are generated than necessary. They propose a simplification
		 scheme that discards variables not used as part of the next
		 state or the output.},
  optpages =	 {FIXME},
  url =		 {http://www-verimag.imag.fr/PEOPLE/Nicolas.Halbwachs/lustre:plilp.html}
		 ,
  url2 =	 {http://www-verimag.imag.fr/SYNCHRONE/lustre-english.html},
  bdsk-url-1 =	 {http://www-verimag.imag.fr/PEOPLE/Nicolas.Halbwachs/lustre:plilp.html}
		 
}

@Article{halbwachs1991synchronous,
  author =	 {Nicholas Halbwachs and Paul Caspi and Pascal Raymond and
		 Daniel Pilaud},
  title =	 {The Synchronous Data Flow Programming Language {LUSTRE}},
  journal =	 procieee,
  year =	 {1991},
  volume =	 {79},
  number =	 {9},
  pages =	 {1305--1320},
  month =	 sep,
  annote =	 {Part of a special issue on synchronous real time systems. A
		 key Lustre reference.},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/LUSTRE/PAPERS/lustre.ieee.ps.gz}
		 ,
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/LUSTRE/PAPERS/lustre.ieee.ps.gz}
		 
}

@Article{halbwachs1992programming,
  author =	 {Nicholas Halbwachs and Fabienne Lagnier and Christophe
		 Ratel},
  title =	 {Programming and Verifying Real-Time Systems by Means of the
		 Synchronous Data-Flow Languages {LUSTRE}},
  journal =	 transse,
  year =	 {1992},
  volume =	 {18},
  number =	 {9},
  pages =	 {786--793},
  month =	 sep,
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/LUSTRE/PAPERS/lustre.tse.ps.gz}
		 ,
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/LUSTRE/PAPERS/lustre.tse.ps.gz}
		 
}

@Book{halbwachs1993synchronous,
  author =	 {Nicholas Halbwachs},
  title =	 {Synchronous Programming of Reactive Systems},
  publisher =	 kl,
  year =	 {1993},
  address =	 kl_a,
  annote =	 {Buggy. Include Esterel, Lustre, and Argos.}
}

@InProceedings{halbwachs1995symbolic,
  author =	 {Nicholas Halbwachs and Florence Maraninchi},
  title =	 {On the symbolic analysis of combinational loops in circuits
		 and synchronous programs},
  booktitle =	 {Proceedings of the 21st Euromicro Conference},
  year =	 1995,
  address =	 {Como, Italy},
  month =	 sep,
  annote =	 {Osama noticed this. It's a BDD-based procedure for checking
		 things. An early way of analyzing things, seems to predate
		 the stuff Berry did on the V5 compiler.},
  optpages =	 {FIXME}
}

@Article{halfhill1999intel,
  author =	 {Tom R. Halfhill},
  title =	 {Intel Network Processor Targets Routers},
  journal =	 {Microprocessor Report},
  year =	 1999,
  volume =	 13,
  number =	 12,
  month =	 {September 13},
  annote =	 {Cited by the MESCAL project in keutzer2000system-level.
		 
		 About the Intel IXP1200, which was originally being
		 developed at DEC before they got it in a lawsuit settlement.
		 
		 24 independent threads. 166 MHz can perform layer-3 routing
		 for 2.5 million 64-byte packets per second.
		 
		 SA-1100 StrongARM core plus six new custom RISC cores.
		 On-chip shared scratchpad RAM, four integrated bus
		 controllers: PCI, SRAM, SDRAM, and IX bus for connection to
		 other chips.
		 
		 A contrast to traditional design: general-purpose RISC
		 processor with ASICs for packet processing, route-table
		 management, and I/O.
		 
		 High-end line cards might have a dozen ASICs and cost USD
		 50,000.
		 
		 Summary of the instruction set for the six RISC processors.
		 They're probably designed to perform forwarding tasks. },
  optpages =	 {FIXME}
}

@InProceedings{hall1995detecting,
  author =	 {Mary W. Hall and Saman P. Amarasinghe and Brian R. Murphy
		 and Shih-Wei Liao and Monica S. Lam},
  title =	 {Detecting Coarse-Grain Parallelism Using an Interprocedural
		 Parallelizing Compiler},
  booktitle =	 {Proceedings of Supercomputing '95},
  year =	 1995,
  month =	 dec,
  annote =	 {A pile of algorithms and ideas for locating program-level
		 (rather than statement-level) parallelism. According to
		 Monica Lam, rather old.},
  url =		 {http://suif.stanford.edu},
  bdsk-url-1 =	 {http://suif.stanford.edu}
}

@InProceedings{hallem2002system,
  author =	 {Seth Hallem and Benjamin Chelf and Yichen Xie and Dawson
		 Engler},
  title =	 {A System and Language for Building System-Specific, Static
		 Analyses},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {69--82},
  address =	 {Berlin, Germany},
  month =	 jun,
  annote =	 {Language for writing static analysis.
		 
		 Proposes a simple but fairly powerful little language for
		 describing finite-state checkers whose state evolves along a
		 control-path. Then proposes some very complicated, clever,
		 inter-procedural analysis algorithms for checking whether
		 "bad" states can be reached. Neither sound nor complete, but
		 a really good idea. Seems really practical. See also
		 engler2000checking. }
}

@Book{halmos1959boolean,
  author =	 {Paul R. Halmos},
  title =	 {Boolean Algebras},
  publisher =	 {Stevens \& co.},
  year =	 {1959},
  annote =	 {Adnan's favorite}
}

@Manual{hambrecht1998microsoft,
  title =	 {Microsoft, Java, and the Evolving Embedded Ecosystem},
  organization = {Hambrect \& Quist},
  address =	 {San Francisco, California},
  month =	 apr,
  year =	 1998,
  annote =	 {Has a chart listing the number of programmers of each
		 language:
		 
		 26% Visual Basic 23% COBOL 18% C++/C 7% Java 5% Delphi 5%
		 Powerbuilder 16% Other }
}

@InProceedings{hansen1988hardware,
  author =	 {Craig Hansen},
  title =	 {Hardware Logic Simulation by Compilation},
  booktitle =	 dac88,
  year =	 1988,
  pages =	 {712--716},
  address =	 dac88a,
  month =	 jun,
  annote =	 {Cited by liao1997efficient.
		 
		 Describes a dataflow language for modeling digital hardware.
		 Basically a collection of equations that may be enabled by
		 clocks. Describes a bunch of optimizations that can be made
		 on the dataflow graph. No source code example.}
}

@Book{hansen2002origin,
  editor =	 {P. B. Hansen},
  title =	 {The origin of concurrent programming: from semaphores to
		 remote procedure calls},
  publisher =	 {Springer-Verlag New York, Inc.},
  year =	 2002,
  address =	 {New York, NY, USA},
  isbn =	 {0-387-95401-5}
}

@Book{haque2001art,
  author =	 {Faisal Haque and Jonathan Michelson and Khizar Khan},
  title =	 {The Art of Verification with {Vera}},
  publisher =	 {Verification Central},
  year =	 2001,
  address =	 {www.verificationcentral.com},
  annote =	 {Grant liked this.}
}

@InProceedings{hara1998development,
  author =	 {Masahiro Hara and Masashi Ohta and Atsushi Yamamoto and
		 Hiroaki Yoshida},
  title =	 {Development of the Brake Assist System},
  booktitle =	 {Proceedings of the International Conference on the Enhanced
		 Safety of Vehicles (ESV)},
  year =	 1998,
  pages =	 {497--501},
  address =	 {Winsdor, Ontario, Canada},
  month =	 may,
  note =	 {Also Toyota Motor Corporation paper 98--S2--P--17},
  annote =	 {http://www-nrd.nhtsa.dot.gov/database/nrd-01/esv/asp/esvpdf.asp}
		 
}

@Book{harbison1994c,
  author =	 {Samuel P. Harbison and Guy L. Steele},
  title =	 {C: A Reference Manual},
  publisher =	 ph,
  year =	 1994,
  address =	 ph_a,
  edition =	 {Fourth},
  annote =	 {The main reference on the C language. Dryer than K&R.}
}

@InProceedings{hardekopf2007ant,
  author =	 {Ben Hardekopf and Calvin Lin},
  title =	 {The ant and the grasshopper: fast and accurate pointer
		 analysis for millions of lines of code},
  booktitle =	 pldi,
  year =	 2007,
  pages =	 {290--299},
  address =	 {San Diego, California, USA}
}

@InProceedings{hardin2001real-time,
  author =	 {David S. Hardin},
  title =	 {Real-Time Objects on the Bare Metal: An Efficient Hardware
		 Realization of the {Java} Virtual Machine},
  booktitle =	 {Proceedings of the Fourth International Symposium on
		 Object-Oriented Real-Time Distributed Computing (ISORC)},
  year =	 2001,
  pages =	 {53--59},
  address =	 {Magdeburg, Germany},
  month =	 may,
  annote =	 {Cited by schoeberl2005design. Includes hardware support for
		 threads. A commercial venture (aJile Systems), but fairly
		 nicely described. Very Java-centric bibliography. Claims no
		 need for an RTOS, but doesn't talk about the scheduling
		 mechanism. Explicitly does handle interrupts.
		 
		 Fairly straightforward architecture. Interrupt controller,
		 16-bit timer/counters 5 8-bit GPIO, two UARTS, and memory.
		 The aJ-100 chip.}
}

@InProceedings{hardwick1988rose,
  author =	 {M. Hardwick and D. L. Spooner},
  title =	 {{ROSE}: An Object-Oriented Database System for Interactive
		 Computer Graphics Applications},
  year =	 1988,
  pages =	 {340--345},
  crossref =	 {dittrich1988advances}
}

@InBook{harel1985on,
  author =	 {David Harel and Amir Pnueli},
  title =	 {On the Development of Reactive Systems},
  pages =	 {477--498},
  publisher =	 sv,
  year =	 {1985},
  volume =	 {13},
  series =	 {NATO ASI Series. Series F, Computer and Systems Sciences},
  annote =	 {Describes the contrast between transformational and
		 reactive systems.},
  opteditor =	 {Krzysztof R. Apt}
}

@Article{harel1987statecharts,
  author =	 {David Harel},
  title =	 {Statecharts: {A} Visual Formalism for Complex Systems},
  journal =	 scicompprog,
  year =	 {1987},
  volume =	 {8},
  number =	 {3},
  pages =	 {231--274},
  month =	 jun,
  annote =	 {The defining document for Statecharts. Lengthy watch
		 example.}
}

@Article{harel1990statemate-,
  author =	 {David Harel and H. Lachover and A. Naamad and Amir Pnueli
		 and M. Polati and R. Sherman and A. Shtull-Trauring and M.
		 Trakhtenbrot},
  title =	 {{STATEMATE:} {A} Working Environment for the Development of
		 Complex Reactive Systems},
  journal =	 transse,
  year =	 {1990},
  volume =	 {16},
  number =	 {4},
  pages =	 {403--414},
  month =	 apr
}

@Article{harel1996statemate,
  author =	 {David Harel and Amnon Naamad},
  title =	 {The {Statemate} semantics of {Statecharts}},
  journal =	 tosem,
  year =	 1996,
  volume =	 5,
  number =	 4,
  pages =	 {293--333},
  month =	 oct,
  annote =	 {Describes the definitive, wait-a-cycle semantics for
		 Statecharts. Ed Clarke told me about this paper.},
  url =		 {http://www.wisdom.weizmann.ac.il/Papers/CSreports/reps95/95-31.ps.Z}
		 ,
  bdsk-url-1 =	 {http://www.wisdom.weizmann.ac.il/Papers/CSreports/reps95/95-31.ps.Z}
		 
}

@Book{harlin-iii1987climbers,
  author =	 {J. {Harlin III}},
  title =	 {The Climber's Guide to North America},
  publisher =	 {Chockstone Press},
  year =	 {1987},
  volume =	 {1: West Coast Rock Climbs},
  address =	 {Evergreen, Colorado},
  edition =	 {Second}
}

@InProceedings{harnett1992towards,
  author =	 {S. Harnett and M. Montenyohl},
  title =	 {Towards Efficient Compilation of a Dynamic Object-Oriented
		 Language},
  booktitle =	 pepm,
  year =	 1992,
  pages =	 {82--89},
  address =	 {San Francisco, California},
  month =	 jun,
  note =	 {Yale Technical Report YALEU/DCS/RR-909}
}

@Book{harr1991applications,
  editor =	 {Randolph E. Harr and Alec G. Stanculescu},
  title =	 {Applications of {VHDL} to Circuit Design},
  publisher =	 kl,
  year =	 1991,
  address =	 kl_a,
  annote =	 {Randy showed this to me. It discusses advanced topics, such
		 as modeling transmission lines, style issues for synthesis,
		 switch-level modeling, and analog issues.}
}

@InProceedings{harris2005composable,
  author =	 {Tim Harris and Simon Marlow and Simon Peyton Jones and
		 Maurice Herlihy},
  title =	 {Composable Memory Transactions},
  booktitle =	 ppopp,
  year =	 2005,
  pages =	 {48--60},
  address =	 {Chicago, Illinois, USA},
  month =	 jun,
  url =		 {http://www.haskell.org/~simonmar/papers/stm.pdf},
  bdsk-url-1 =	 {http://www.haskell.org/~simonmar/papers/stm.pdf}
}

@Article{harrison1990electronic,
  author =	 {D. S. Harrison and A. R. Newton and R. L. Spickelmier and
		 T. J. Barnes},
  title =	 {Electronic {CAD} Frameworks},
  journal =	 procieee,
  year =	 {1990},
  volume =	 {78},
  number =	 {2},
  pages =	 {393--417},
  month =	 feb,
  note =	 {Later turned into \cite{barnes1992electronic}.}
}

@Article{harrold1996separate,
  author =	 {Mary Jean Harrold and Gregg Rothermel},
  title =	 {Separate Computation of Alias Information for Reuse},
  journal =	 {IEEE Transactions of Software Engineering},
  year =	 1996,
  volume =	 22,
  number =	 7,
  pages =	 {442--460},
  oldkey =	 {mjean1},
  sedtransform = {s/mjean1/harrold1996separate/}
}

@Book{hartenstein1987hardware,
  editor =	 {R. W. Hartenstein},
  title =	 {Hardware Description Languages},
  publisher =	 nh,
  year =	 {1987},
  volume =	 {7},
  series =	 {Advances in {CAD} for {VLSI}},
  annote =	 {Discusses how there are so many of them.}
}

@InProceedings{hartley1990synthesis,
  author =	 {Richard Hartley and Kenneth {Welles II} and Michael
		 Hartman},
  title =	 {A Synthesis, Test and Debug Environment for Rapid
		 Prototyping of {DSP} Designs},
  booktitle =	 {First International Workshop on Rapid System Prototyping},
  year =	 {1990},
  pages =	 {205--214},
  publisher =	 ieeecs
}

@Article{hartmann1993finding,
  author =	 {M. Hartmann and J. B. Orlin},
  title =	 {Finding Minimum Cost to Time Ratio Cycles with Small
		 Integral Transit Times},
  journal =	 {Networks},
  year =	 1993,
  volume =	 23,
  pages =	 {567--574},
  entered =	 {Luca Carloni,1/21/99},
  keywords =	 {cycle mean, cycle time, discrete event systems}
}

@Article{hashimoto2002increase,
  author =	 {M. Hashimoto and H. Onodera},
  title =	 {Increase in Delay Uncertainty by Performance Optimization},
  journal =	 {IEICE Transactions on Fundamentals},
  year =	 2002,
  volume =	 85,
  number =	 12,
  pages =	 {2799-2802},
  month =	 apr,
  oldkey =	 {hashimoto02},
  sedtransform = {s/hashimoto02/hashimoto2002increase/}
}

@InProceedings{hassoun1996architectural,
  author =	 {Soha Hassoun and Carl Ebeling},
  title =	 {Architectural retiming: pipelining latency-constrained
		 circuits},
  booktitle =	 {DAC '96: Proceedings of the 33rd annual conference on
		 Design automation},
  year =	 {1996},
  pages =	 {708--713},
  address =	 {New York, NY, USA},
  publisher =	 {ACM Press},
  doi =		 {http://doi.acm.org/10.1145/240518.240652},
  isbn =	 {0-89791-779-0},
  location =	 {Las Vegas, Nevada, United States},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/240518.240652}
}

@Article{hassoun2003optimal,
  author =	 {S. Hassoun and C. J. Alpert},
  title =	 {Optimal Path Routing in Single and Multiple Clock Domain
		 Systems},
  journal =	 transcad,
  year =	 2003,
  volume =	 22,
  number =	 11,
  pages =	 {1580-1588},
  month =	 nov,
  affiliation =	 {Tufts University, IBM Austin Research Labs},
  annote =	 {Citing my ICCAD99 paper.},
  entered =	 {Luca Carloni, 11/5/03}
}

@InProceedings{hasti1998using,
  author =	 {Rebecca Hasti and Susan Horwitz},
  title =	 {Using Static Single Assignment Form to Improve
		 Flow-Insensitive Pointer Analysis},
  booktitle =	 pldi,
  year =	 1998,
  pages =	 {97--105},
  oldkey =	 {hasti},
  sedtransform = {s/hasti/hasti1998using/}
}

@InProceedings{hauser1997garp,
  author =	 {John R. Hauser and John Wawrzynek},
  title =	 {Garp: {A} {MIPS} Processor with a Reconfigurable
		 Coprocessor},
  booktitle =	 {Proceedings of the IEEE Symposium on Field-Programmable
		 Custom Computing Machines},
  year =	 {1997},
  pages =	 {12--21},
  month =	 apr
}

@TechReport{haveliawa1999efficient,
  author =	 {Taher H. Haveliwala},
  title =	 {Efficient Computation of PageRank},
  institution =	 {Stanford},
  year =	 1999,
  number =	 {1999-31},
  month =	 oct,
  annote =	 {What Google uses? From Ed Clarke.},
  url =		 {http://www.tik.ee.ethz.ch/tik/education/lectures/irweb/},
  bdsk-url-1 =	 {http://www.tik.ee.ethz.ch/tik/education/lectures/irweb/}
}

@Article{havelund2000model,
  author =	 {Klaus Havelund and Thomas Pressburger},
  title =	 {Model Checking {Java} Programs using {Java} {PathFinder}},
  journal =	 {International Journal on Software Tools for Technology
		 Transfer},
  year =	 2000,
  volume =	 2,
  number =	 4,
  pages =	 {366-381},
  month =	 apr,
  annote =	 {Like the Bandera work. The PathFinder tool transforms
		 concurrent Java programs into Promela, the input language
		 for the SPIN model checker. Seems to be a bit more formal
		 than holzmann1999software, but relies heavily on the
		 semantics of Promela.}
}

@InCollection{he1990theory,
  author =	 {Jifeng He and Mark B. Josephs and C. A. R. Hoare},
  title =	 {A Theory of Synchrony and Asynchrony},
  editor =	 {M. Broy and C. B. Jones},
  booktitle =	 {Programming Concepts and Methods},
  publisher =	 nh,
  year =	 1990,
  pages =	 {459--478},
  annote =	 {Borrowed from the Columbia Engineering library. Synchrony,
		 by their definition, is more like OCCAM-like rendezvous
		 communication, where both sender and received agree on a
		 time to exchange data. Asynchrony is when you have
		 unlimited-length buffers.
		 
		 Based on CSP reasoning. Really just formalism for reasoning
		 about these systems. Nothing breathtaking. Cites Kahn, but
		 doesn't make any sort of more serious connections, at least
		 it's not clear that it does.}
}

@InProceedings{he1996deriving,
  author =	 {Jifeng He and Geoffrey Brown and Wayne Luk and John
		 O'Leary},
  title =	 {Deriving Two-Phase Modules for a Multi-Target Hardware
		 Compiler},
  booktitle =	 {Proceedings of the 3rd Workshop on Designing Correct
		 Circuits},
  year =	 1996,
  address =	 {B\a{}astad, Sweden},
  month =	 sep,
  annote =	 {From a CSP-like language called Joy to two-phase handshake
		 circuits, i.e., asynchronous hardware. Not an especially
		 interesting paper, but an interesting start with its
		 bibliography. Apparently many people have used OCCAM/CSP as
		 a starting point for hardware, not just Alain Martin}
}

@Article{healy1999bounding,
  author =	 {Christopher A. Healy and Robert D. Arnold and Frank Mueller
		 and Marion G. Harmon and David B. Walley},
  title =	 {Bounding Pipeline and Instruction Cache Performance},
  journal =	 {IEEE Transactions on Computers},
  year =	 1999,
  volume =	 48,
  number =	 1,
  pages =	 {53--70},
  month =	 jan,
  annote =	 {WCET paper. Static cache simulation.}
}

@Article{heap1994least,
  author =	 {Mark A. Heap and M. R. Mercer},
  title =	 {Least Upper Bounds on {OBDD} Sizes},
  journal =	 transcomp,
  year =	 1994,
  volume =	 43,
  number =	 6,
  pages =	 {764--767},
  month =	 jun,
  annote =	 {Cited by gropl. Constructive bound on BDD sizes. Refutes
		 the conclusion of Liaw and and Lin that suggests deleting
		 nodes. They say this only makes sense for worst-case BDDs,
		 and in practice it is valuable.}
}

@Book{heath1997embedded,
  author =	 {Steve Heath},
  title =	 {Embedded Systems Design},
  publisher =	 {Newnes},
  year =	 1997,
  address =	 {Oxford},
  annote =	 {Cited by simon1999embedded. Similar?}
}

@Article{heckmann2003influence,
  author =	 {Reinhold Heckmann and Marc Langenbach and Stephan Thesing
		 and Reinhard Wilhelm},
  title =	 {The Influence of Processor Architecture on the Design and
		 the Results of {WCET} Tools},
  journal =	 procieee,
  year =	 2003,
  volume =	 91,
  number =	 7,
  pages =	 {1038--1054},
  month =	 jul,
  annote =	 {For the WCET paper}
}

@Article{heering1994lazy,
  author =	 {J. Heering and P. Kint and J. Rekers},
  title =	 {Lazy and Incremental Program Generation},
  journal =	 toplas,
  year =	 {1994},
  volume =	 {16},
  number =	 {3},
  pages =	 {1010--1023},
  month =	 may
}

@InProceedings{heinrich2001monte_carlo,
  author =	 {Stefan Heinrich},
  title =	 {From {Monte} {Carlo} to Quantum Computation},
  booktitle =	 {Proceedings of the 3rd IMACS Seminar on Monte Carlo
		 Methods},
  year =	 2001,
  address =	 {Salzburg},
  annote =	 {Did this really get published?}
}

@InProceedings{heintze2001ultra-fast,
  author =	 {Nevin Heintze and Olivier Tardieu},
  title =	 {Ultra-fast aliasing analysis using {CLA}: a million lines
		 of {C} code in a second},
  booktitle =	 pldi,
  year =	 2001,
  pages =	 {254--263},
  oldkey =	 {heintze02},
  sedtransform = {s/heintze02/heintze2001ultra-fast/}
}

@InProceedings{hemani2000network,
  author =	 {A. Hemani and A. Jantsch and S. Kumar and A. Postula and J.
		 Oberg and M. Millberg and D. Lindqvist},
  title =	 {Network on chip: An architecture for billion transistor
		 era},
  booktitle =	 {Proceeding of the IEEE NorChip Conference},
  year =	 2000,
  month =	 nov,
  affiliation =	 {Columbia University},
  annote =	 {Cites my ICCAD 99 paper},
  entered =	 {Luca Carloni, 5/5/01},
  keywords =	 {synchrony,asynchrony},
  oldkey =	 {hemani00},
  sedtransform = {s/hemani00/hemani2000network/}
}

@Article{henglein1993type,
  author =	 {Fritz Henglein},
  title =	 {Type Inference with Polymorphic Recursion},
  journal =	 toplas,
  year =	 1993,
  volume =	 15,
  number =	 2,
  pages =	 {253--289},
  month =	 apr,
  annote =	 {Part of Monica's reading group. Nearly opaque. Concerned
		 with an overconstraint in the ML type system: mutually
		 recursive polymorphic functions have restricted types, e.g.,
		 map and squarelist defined together overly restricts map to
		 operate only on integer lists. Proposes Semiunification as a
		 solution: rather than using quantifiers in the type scheme,
		 semiunification defines a relationship in which there is a
		 substitution such that expressions composed of nested
		 uninterpreted functions can be made equal. Shows how a type
		 inference system can be expressed as a semiunification
		 problem and provides an algorithm for solving such systems.
		 The basic idea is to look for a semiuninfication with the
		 freedom you have. If you convince yourself this is not
		 possible, add some freedom and continue. This is apparently
		 undecidable, but it works for practical systems.}
}

@Book{hennessy1996computer,
  author =	 {John L. Hennessy and David A. Patterson},
  title =	 {Computer Architecture: A Quantitative Approach},
  publisher =	 mk,
  year =	 1996,
  address =	 mk_a,
  edition =	 {Second},
  annote =	 {A classic. I own the first edition}
}

@Book{hennessy2003computer,
  author =	 {John L. Hennessy and David A. Patterson},
  title =	 {Computer Architecture: A Quantitative Approach},
  publisher =	 mk,
  year =	 2003,
  address =	 mk_a,
  edition =	 {Third}
}

@Book{hennessy2007computer,
  author =	 {John L. Hennessy and David A. Patterson},
  title =	 {Computer Architecture: A Quantitative Approach},
  publisher =	 mk,
  year =	 2007,
  edition =	 {Fourth},
  annote =	 {Still a classic.}
}

@InProceedings{henriksson2002novel,
  author =	 {Tomas Henriksson and Dake Liu},
  title =	 {Novel {ASIP} and Processor Architecture for Packet
		 Decoding},
  booktitle =	 {Proceedings of the Workshop on Application Specific
		 Processors (WASP)},
  year =	 2002,
  pages =	 {25--31},
  address =	 {Istanbul, Turkey},
  month =	 nov
}

@TechReport{henzinger2000giotto,
  author =	 {Thomas A. Henzinger and Benjamin Horowitz and Christoph
		 Meyer Kirsch},
  title =	 {Giotto: A Time-Triggered Language for Embedded
		 Programming},
  institution =	 ucb,
  year =	 2000,
  number =	 {UCB/CSD--00--1121},
  annote =	 {From Henzinger's web page.},
  url =		 {http://www-cad.eecs.berkeley.edu/~fresco/giotto/refs/},
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/~fresco/giotto/refs/}
}

@InProceedings{henzinger2000masaccio,
  author =	 {Thomas A. Henzinger},
  title =	 {Masaccio: A Formal Model for Embedded Components},
  booktitle =	 {Proceedings of the First IFIP International Conference on
		 Theoretical Computer Science},
  year =	 2000,
  series =	 lncs,
  pages =	 {549--563},
  address =	 {Sendai, Japan},
  month =	 aug,
  publisher =	 sv,
  annote =	 {Hybrid dynamical systems: discrete control and differential
		 equations. Very theoretical, not very interesting.},
  number =	 1872
}

@Misc{henzinger2001embedded,
  author =	 {Thomas A. Henzinger and Benjamin Horowitz and Christoph
		 Meyer Kirsch},
  title =	 {Embedded Control Systems Development with Giotto},
  year =	 {2001},
  month =	 mar,
  annote =	 {From Henzinger's web page. He conducted a class on embedded
		 software systems, spring 2001.
		 
		 Precisely specified periodic tasks (periods, phases
		 defined), ability to switch between modes. Targets
		 distributed real-time implementations. Assumes worst-case
		 execution time is known for these tasks.
		 
		 Base language describes tasks and rules for switching
		 between. Also has an annotation language for controlling
		 mapping to distributed implementations, scheduling details,
		 etc.
		 
		 Implements a TDMA scheme on Ethernet, but also considers the
		 CAN bus or the Byteflight network.
		 
		 Interesting, relevant bibliography.
		 
		 Cites kopetz1997real-time.},
  url =		 {http://www-cad.eecs.berkeley.edu/~fresco/giotto/refs/},
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/~fresco/giotto/refs/}
}

@InProceedings{henzinger2002embedded,
  author =	 {Thomas A. Henzinger and Christoph M. Kirsch},
  title =	 {The Embedded Machine: Predictable, Portable Real-time
		 Code},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {315--326},
  address =	 {Berlin, Germany},
  month =	 jun,
  annote =	 {More on Giotto. Abstract machine on which Giotto is
		 implemented.}
}

@Article{henzinger2003giotto,
  author =	 {Thomas A. Henzinger and Benjamin Horowitz and Christoph M.
		 Kirsch},
  title =	 {Giotto: a time-triggered language for embedded
		 programming},
  journal =	 procieee,
  year =	 2003,
  volume =	 91,
  number =	 1,
  pages =	 {84--99},
  month =	 jan,
  annote =	 {Another Giotto reference. Seminal? Has a nice diagram of a
		 collection of real-time processes in an avionics system.}
}

@InProceedings{henzinger2003thread-modular,
  author =	 {Thomas A. Henzinger and Ranjit Jhala and Rupak Majumdar and
		 Shaz Qadeer},
  title =	 {Thread-modular Abstraction Refinement},
  booktitle =	 cav,
  year =	 2003,
  series =	 lncs,
  volume =	 2725,
  pages =	 {262--274},
  publisher =	 sv
}

@InProceedings{henzinger2006embedded,
  author =	 {Thomas A. Henzinger and Joseph Sifakis},
  title =	 {The Embedded Systems Design Challenge},
  booktitle =	 {Proceedings of the 14th International Symposium on Formal
		 Methods (FM)},
  year =	 2006,
  series =	 lncs,
  volume =	 4085,
  pages =	 {1--15},
  address =	 {Ontario, Canada},
  month =	 aug,
  annote =	 {Suggested reading for the Dagstuhl workshop on quantitative
		 aspects of Embedded Systems. Mostly arguing for more careful
		 attention to be paid to the problem of designing these
		 things.}
}

@Article{henzinger2007discipline,
  author =	 {Tom A. Henzinger and Joseph Sifakis},
  title =	 {The Discipline of Embedded Systems Design},
  journal =	 computer,
  year =	 2007,
  volume =	 40,
  number =	 10,
  pages =	 {32--40},
  month =	 oct,
  annote =	 {Mentioned by Ragesh in the first IEEE Embedded Systems
		 Letters editorial. Nice overview of the field and what needs
		 to be done.},
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/MC.2007.364}
}

@InProceedings{henzinger2009distributed,
  author =	 {Thomas A. Henzinger and Christoph M. Kirsch and Eduardo R.
		 B. Marques and Ana Sokolova},
  title =	 {Distributed, Modular {HTL}},
  booktitle =	 rtss,
  year =	 2009,
  address =	 {Washington DC},
  month =	 dec,
  optpages =	 {FIXME},
  annote =	 {PRET-related. Hardcore semantics of a real-time language,
		 somewhat Giotto-like (from Emsoft 2006)}
}

@Book{herman1997phoenix,
  author =	 {Leonard Herman},
  title =	 {Phoenix: The Fall \& Rise of Videogames},
  publisher =	 {Rolenta Press, Union, New Jersey},
  year =	 1997,
  edition =	 {Second},
  annote =	 {Very amaturish typography, but wonderful history of video
		 games, focusing more on home machines. Rolenta press only
		 publishes these books. }
}

@Book{hersch1993visual,
  editor =	 {Roger D. Hersch},
  title =	 {Visual and Technical Aspects of Type},
  publisher =	 cup,
  year =	 {1993},
  annote =	 {Found it at the library at Schloss Dagstuhl, 1996}
}

@Misc{hicks2004gm,
  author =	 {Matthew Hicks},
  title =	 {{GM} to Software Vendors: Cut the Complexity},
  howpublished = {http://www.eweek.com/c/a/Enterprise-Applications/GM-to-Software-Vendors-Cut-the-Complexity/}
		 ,
  year =	 2004,
  month =	 oct
}

@Book{hilfinger1983abstraction,
  author =	 {Paul N. Hilfinger},
  title =	 {Abstraction Mechanisms and Language Design},
  publisher =	 mit,
  year =	 {1983},
  series =	 {ACM Distinguished Dissertations},
  address =	 mit_a,
  annote =	 {Discusses type abstraction in Ada.}
}

@Article{hill1953early,
  author =	 {Roger B. Hill},
  title =	 {The Early Years of the {Strowger} System},
  journal =	 {Bell Laboratories Record},
  year =	 1953,
  volume =	 {XXXI},
  number =	 3,
  pages =	 {95--},
  month =	 mar,
  annote =	 {Found a transcription here:
		 http://www.privateline.com/Switching/EarlyYears.html}
}

@Article{hill1998multiprocessors,
  author =	 {Mark D. Hill},
  title =	 {Multiprocessors Should Support Simple Memory-Consistency
		 Models},
  journal =	 computer,
  year =	 1998,
  volume =	 31,
  number =	 8,
  pages =	 {28--34},
  month =	 aug,
  annote =	 {Nice early article on how confusing memory consistency
		 models are. }
}

@InProceedings{hill2000system,
  author =	 {Jason Hill and Robert Szewczyk and Alec Woo and Seth Hollar
		 and David Culler and Kristofer Pister},
  title =	 {System architecture directions for networked sensors},
  booktitle =	 asplos,
  year =	 2000,
  pages =	 {93--104},
  address =	 {Cambridge, Massachusetts},
  month =	 nov,
  annote =	 {TinyOS reference according to gay2003nesc}
}

@Article{hill2008amdahls,
  author =	 {Mark D. Hill and Michael R. Marty},
  title =	 {{Amdahl's} Law in the Multicore Era},
  journal =	 computer,
  year =	 2008,
  volume =	 41,
  number =	 7,
  pages =	 {33--38},
  month =	 jul,
  annote =	 {Nice argument for heterogeneous multicores, especially the
		 Cell, with one big sequential core and a bunch of small
		 parallel ones.},
  doi =		 {10.1109/MC.2008.209},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/MC.2008.209}
}

@InProceedings{hind1998assessing,
  author =	 {M. Hind and A. Pioli},
  title =	 {Assessing the Effects of Flow-Sensitivity on Pointer Alias
		 Analyses},
  booktitle =	 sas,
  year =	 {1998},
  series =	 lncs,
  volume =	 1503,
  pages =	 {57--81},
  address =	 {Pisa, Italy},
  month =	 sep,
  publisher =	 sv,
  oldkey =	 {pioli98},
  sedtransform = {s/pioli98/hind1998assessing/}
}

@Article{hind1999interprocedural,
  author =	 {Michael Hind and Michael Burke and Paul Carini and
		 Jong-Deok Choi},
  title =	 {Interprocedural Pointer Alias Analysis},
  journal =	 {ACM Transactions on Programming Languages and Systems},
  year =	 {1999},
  volume =	 {21},
  number =	 {4},
  pages =	 {848--894},
  oldkey =	 {hind1999interprocedural},
  sedtransform = {s/hind1999interprocedural/hind1999interprocedural/}
}

@InProceedings{hind2001pointer,
  author =	 {Michael Hind},
  title =	 {Pointer analysis: haven't we solved this problem yet?},
  booktitle =	 {PASTE '01: Proceedings of the 2001 ACM SIGPLAN-SIGSOFT
		 workshop on Program analysis for software tools and
		 engineering},
  year =	 2001,
  pages =	 {54--61},
  location =	 {Snowbird, Utah, United States},
  oldkey =	 {hind01},
  sedtransform = {s/hind01/hind2001pointer/}
}

@Book{hirsch1974differential,
  author =	 {Morris W. Hirsch and Stephen Smale},
  title =	 {Differential Equations, Dynamical Systems, and Linear
		 Algebra},
  publisher =	 ap,
  year =	 {1974},
  annote =	 {Adnan's suggestion--a well-written book covering all of
		 dynamical system theory. Described in real numbers.}
}

@InProceedings{hirschberg2005distinguishing,
  author =	 {Julia Hirschberg and Stefan Benus and Jason M. Brenier and
		 Frank Enos and Sarah Friedman and Sarah Gilman and Cynthia
		 Girand and Martin and Andreas Kathol and Laura Michaelis and
		 Bryan Pellom and Elizabeth Shriberg and Andreas Stolcke},
  title =	 {Distinguishing Deceptive from Non-Deceptive Speech},
  booktitle =	 {Proceedings of INTERSPEECH},
  year =	 2005,
  pages =	 {1833--1836}
}

@InProceedings{hirzel2005fast,
  author =	 {M. Hirzel and D. von Dincklage and A. Diwan and M. Hind},
  title =	 {Fast Online Pointer Analysis},
  booktitle =	 {Technical Report, IBM Research RC23638},
  year =	 2005,
  month =	 {June},
  oldkey =	 {hirzel1},
  sedtransform = {s/hirzel1/hirzel2005fast/}
}

@InProceedings{ho1998formal,
  author =	 {Pei-Hsin Ho and Adrian J. Isles and Timothy Kam},
  title =	 {Formal Verification of Pipeline Control Using Controlled
		 Token Nets and Abstract Interpretation},
  booktitle =	 iccad,
  year =	 1998,
  pages =	 {529--536},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Pipeline datapath abstraction. Brought the house down.
		 Starts with control signals and partitions the design along
		 them. Next, groups gates on the datapath side to build a
		 token network (distinguishes muxes, latches). Finally,
		 verifies the token network + control model. Abstracts the
		 infinite-alphabet token net model into a finite-alphabet
		 version. Mux selection variables are considered seeds.
		 Transitive fan-in of primary data outputs that doesn't cross
		 seeds is marked as data.}
}

@InProceedings{ho2000smart,
  author =	 {Pei-Hsin Ho and Thomas Shiple and Kevin Harer and James
		 Kukula and Robert Damiano and Valeria Bertacco and Jerry
		 Taylor and Jiang Long},
  title =	 {Smart Simulation using Collaborative Formal Simulation
		 Engines},
  booktitle =	 iccad,
  year =	 2000,
  pages =	 {120--126},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Describes Ketchum.}
}

@Article{ho2001future,
  author =	 {R. Ho and K. W. Mai and M. A. Horowitz},
  title =	 {The future of wires},
  journal =	 {Proceedings of the IEEE},
  year =	 {2001},
  pages =	 {490--504},
  month =	 {April},
  oldkey =	 {ho01},
  sedtransform = {s/ho01/ho2001future/}
}

@InProceedings{ho2003managing,
  author =	 {R. Ho and K. Mai and M. Horowitz},
  title =	 {Managing Wire Scaling: A Circuit Perspective},
  booktitle =	 {IEEE Interconnect Technology Conference},
  year =	 2003,
  month =	 jun,
  annote =	 {Updated study with respect to IEEE Proc. paper. Mow "we see
		 both local and global wires degrading relative to gates, by
		 one and three orders of magnitude respectively. Using
		 repeaters improve things significatevely},
  entered =	 {Luca Carloni,05/15/03},
  oldkey =	 {ho03_itc},
  sedtransform = {s/ho03_itc/ho2003managing/}
}

@Article{hoare1974monitors,
  author =	 {C. A. R. Hoare},
  title =	 {Monitors: An Operating System Structuring Concept},
  journal =	 cacm,
  year =	 1974,
  volume =	 17,
  number =	 10,
  pages =	 {549--557},
  month =	 oct,
  annote =	 {Cited by brinch-hansen1975programming as a description of
		 monitors. Both he and Hoare seem to have invented it at
		 nearly the same time, largely from talking with each other.
		 
		 This paper uses a Pascal-like syntax to introduce the notion
		 of a monitor (in Java, it is a synchronized class).}
}

@Article{hoare1978communicating,
  author =	 {C. A. R. Hoare},
  title =	 {Communicating Sequential Processes},
  journal =	 cacm,
  year =	 1978,
  volume =	 21,
  number =	 8,
  pages =	 {666--677},
  month =	 aug,
  annote =	 {The first on CSP? Mostly describes the language and lists a
		 number of problems and their solutions in his formalism.
		 Cites a lot of Dijkstra's work.}
}

@Book{hoare1985communicating,
  author =	 {C. A. R. Hoare},
  title =	 {Communicating Sequential Processes},
  publisher =	 ph,
  year =	 1985,
  address =	 ph_a,
  annote =	 {The seminal CSP book. Charles Antony Richard Hoare.}
}

@InProceedings{hoare2001tackling,
  author =	 {Tony Hoare and Manfred Broy and Ralf Steinbruggen},
  title =	 {Tackling the awkward squad: monadic input/output,
		 concurrency, exceptions, and foreign-language calls in
		 {Haskell}},
  booktitle =	 {Engineering theories of software construction},
  year =	 2001,
  pages =	 {47--96},
  publisher =	 {IOS Press},
  annote =	 {Focuses on Haskell Semantics},
  isbn =	 {1 58603 1724}
}

@InProceedings{hoe1999hardware,
  author =	 {James C. Hoe and Arvind},
  title =	 {Hardware Synthesis from Term Rewriting Systems},
  booktitle =	 {VLSI '99: Proceedings of the IFIP TC10/WG10.5 Tenth
		 International Conference on Very Large Scale Integration},
  year =	 2000,
  pages =	 {595--619},
  address =	 {Deventer, The Netherlands},
  publisher =	 {Kluwer, B.V.},
  isbn =	 {0-7923-7731-1}
}

@MastersThesis{hoehrmann2006entwicklung,
  author =	 {Stephen H\"ohrmann},
  title =	 {Entwicklung eines modularen Feldbussystems zur Steuerung
		 einer Modellbanhanlage},
  school =	 {Christian Albrects Universit\"at zu Kiel},
  year =	 2006,
  address =	 {Germany},
  month =	 mar,
  annote =	 {From Reinhard von Hanxleden. Describes their amazing model
		 railroad system, how he built the distributed controllers
		 (CAN bus, TTP, and Ethernet) and the general structure of
		 it. Really nice photos and PC board layouts throughout.}
}

@Book{hofstadter1979godel,
  author =	 {Douglas R. Hofstadter},
  title =	 {G\"odel, Escher, Bach: An Eternal Golden Braid},
  publisher =	 {Vintage Books},
  year =	 {1979},
  annote =	 {Borrowed from parents, Christmas 1994}
}

@InProceedings{hojati1995automatic,
  author =	 {Ramin Hojati and Robert K. Brayton},
  title =	 {Automatic Datapath Abstraction in Hardware Systems},
  booktitle =	 cav1995,
  year =	 1995,
  series =	 lncs,
  volume =	 989,
  pages =	 {98--113},
  address =	 cav1995_a,
  month =	 jul,
  publisher =	 sv,
  annote =	 {David Cyrluk gave a copy (early?) of this to me. It worries
		 about abstracting away datapaths. It relies partially on the
		 existence of data-insensitive controllers, such as
		 communication protocols. Part of the work with Monica.}
}

@InProceedings{hojati1996verification,
  author =	 {Ramin Hojati and Adrian Isles and Desmond Kirppatrick and
		 Robert K. Brayton},
  title =	 {Verification Using Uninterpreted Functions and Finite
		 Instantiations},
  booktitle =	 fmcad,
  year =	 1996,
  series =	 lncs,
  pages =	 {218--232},
  address =	 {Palo Alto, California},
  month =	 nov,
  publisher =	 sv,
  annote =	 {Datapath abstraction, from Tom Shiple.},
  number =	 1166
}

@Article{holgaard2000symbolic,
  author =	 {Henrik Holgaard and Tod Amon},
  title =	 {Symbolic timing analysis of asynchronous systems},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 10,
  pages =	 {1093--1104},
  month =	 oct,
  annote =	 {Cited by venkataramani2007global. Going after parametric
		 (symbolic) delays where you have constraints and ranges.
		 "The algorithm applies to asynchronous circuits without
		 conditional behavior." This seems to contradict the comment
		 made in the related work section of
		 venkataramani2007global.},
  doi =		 {http://dx.doi.org/10.1109/43.875262},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/43.875262}
}

@Article{holm1992understanding,
  author =	 {Frode Holm},
  title =	 {Understanding {FM} Implmentations: {A} Call for Common
		 Standards},
  journal =	 {Computer Music Journal},
  year =	 {1992},
  volume =	 {16},
  number =	 {1},
  pages =	 {34--42},
  annote =	 {Suggested by Michael Goodwin, the main result here is that
		 the function generators published in many papers don't
		 exactly compute the standard FM formula. Effectively, a
		 phase offset in the modulating function is introduced,
		 greatly affecting the spectrum.}
}

@InProceedings{holsti2002status,
  author =	 {Niklas Holsti and Sami Saarinen},
  title =	 {Status of the {Bound-T} tool},
  booktitle =	 {Proceedings of the 2nd IEEE International Workshop on
		 Worst-Case Execution Time Analysis},
  year =	 2002,
  pages =	 {36--41},
  address =	 {Vienna, Austria},
  month =	 jun,
  annote =	 {Part of the WCET paper (Bound-T tool)}
}

@Article{holt1971comments,
  author =	 {Richard C. Holt},
  title =	 {Comments on prevention of system deadlocks},
  journal =	 cacm,
  year =	 1971,
  volume =	 14,
  number =	 1,
  pages =	 {36--38},
  month =	 jan,
  address =	 {New York, NY, USA},
  annote =	 {Cites dijkstra1965solution. References a Habermann
		 article.},
  doi =		 {http://doi.acm.org/10.1145/362452.362486},
  issn =	 {0001-0782},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/362452.362486}
}

@Article{holzmann1997model,
  author =	 {Gerard J. Holzmann},
  title =	 {The model checker {SPIN}},
  journal =	 transse,
  year =	 1997,
  volume =	 23,
  number =	 5,
  pages =	 {279--294},
  month =	 may,
  annote =	 {A general description. SPIN uses interleaved concurrency.
		 This paper does not describe Promela in any detail.
		 
		 Specifically designed for asynchronous software. Promela
		 language as input. Includes a simulator for debugging the
		 model. Actual verifier is synthesized into C and compiled
		 before being run.
		 
		 Description consists of process definitions and
		 instantiations. Processes can spawn other processes. Each
		 process is translated into a finite automaton, and global
		 system behavior is an asychronous interleaving of automaton.
		 
		 Takes a property as a temporal logic formula (LTL) and
		 compiles it to an automaton.
		 
		 Depth-first search: looking for cycles in the graph. Trick
		 to avoid having to keep track of state numbers as in
		 Tarjan's depth-first traversal.
		 
		 Partial order reduction attempts to reduce the number of
		 states visited by identifying cases where the order in which
		 different asynchronous processes run. He uses a static
		 reduction technique that identifies places where he can
		 avoid traversing states during the verification.
		 
		 State compression to store state data more compactly. Stores
		 pointers to values rather than actual values.},
  url =		 {http://cm.bell-labs.com/cm/cs/who/gerard/abs.html},
  bdsk-url-1 =	 {http://cm.bell-labs.com/cm/cs/who/gerard/abs.html}
}

@InProceedings{holzmann1999software,
  author =	 {Gerard J. Holzmann and Margaret H. Smith},
  title =	 {Software Model Checking: Extracting Verification Models
		 from Source Code},
  booktitle =	 {Proceedings of the FORTE/PSTV Conferencej},
  year =	 1999,
  pages =	 {481--497},
  address =	 {Beijing, China},
  month =	 oct,
  publisher =	 {Kluwer},
  annote =	 {Referenced in engler2000checking. Very ad-hoc approach to
		 translating C into Promela for the SPIN model checker.
		 User-specified, template-based translation aimed at C code
		 written in a particular idiom.},
  url =		 {http://cm.bell-labs.com/cm/cs/who/gerard/abs.html},
  bdsk-url-1 =	 {http://cm.bell-labs.com/cm/cs/who/gerard/abs.html}
}

@InProceedings{holzmann2000logic,
  author =	 {Gerard J. Holzmann},
  title =	 {Logic Verification of {ANSI-C} Code with {SPIN}},
  booktitle =	 {SPIN Model Checking and Software Verification (Proceedings
		 of the 7th International SPIN Workshop)},
  year =	 2000,
  series =	 lncs,
  volume =	 1885,
  pages =	 {131--147},
  address =	 {Stanford, California},
  month =	 aug,
  publisher =	 sv,
  annote =	 {Checking a switch by automatically building abstractions.
		 Mostly a paper about a rule-driven abstractor. The user
		 enters the rules, the tools checks them for soundness and
		 uses them to build an abstract model of a very big piece of
		 C code.},
  url =		 {http://cm.bell-labs.com/cm/cs/who/gerard/},
  bdsk-url-1 =	 {http://cm.bell-labs.com/cm/cs/who/gerard/}
}

@InProceedings{hong1998dont,
  author =	 {Youpyo Hong and Peter A. Beerel and Luciano Lavagno and
		 Ellen M. Sentovich},
  title =	 {Don't care-based {BDD} Minimization for Embedded Software},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {506--509},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Pointed out by an IWLS reviewer. They're doing minimization
		 in the CFSM-to-BDD-to-code setting and using don't-cares to
		 minimize the BDD. Very few results, and not directly
		 relevant to hardware synthesis from Esterel. Interesting,
		 perhaps, for later optimizing generated software code.}
}

@InProceedings{hopcroft1971n--n,
  author =	 {John Hopcroft},
  title =	 {An {$n \log n$} Algorithm for Minimizing States in a Finite
		 Automaton},
  editor =	 {Zvi Kohavi and Azaria Paz},
  booktitle =	 {Theory of Machines and Computations. Proceedings of an
		 International Symposium on the Theory of Machines and
		 Computations.},
  year =	 {1971},
  pages =	 {189--196},
  address =	 {Haifa, Isreal},
  publisher =	 ap,
  annote =	 {Referenced in SED:Aho:74a, section 4.16}
}

@Article{hopcroft1974efficient,
  author =	 {J. Hopcroft and R. Tarjan},
  title =	 {Efficient Planarity Testing},
  journal =	 jacm,
  year =	 {1974},
  volume =	 {21},
  number =	 {4},
  pages =	 {549--568},
  month =	 oct,
  annote =	 {Long, confusing algorithm, but linear-time.}
}

@Book{hopcroft1979introduction,
  author =	 {J. Hopcroft and J. Ullman},
  title =	 {Introduction to Automata Theory, Languages, and
		 Computation},
  publisher =	 aw,
  year =	 {1979},
  address =	 aw_a,
  annote =	 {Bought 950109, Campus Textbook Exchange, \$47. The basic
		 reference on state machines and automata.}
}

@Book{horowitz1989art,
  author =	 {Paul Horowitz and Winfield Hill},
  title =	 {The Art of Electronics},
  publisher =	 cup,
  year =	 1989,
  edition =	 {Second},
  annote =	 {A classic.}
}

@InProceedings{horwitz1990identifying,
  author =	 {Susan Horwitz},
  title =	 {Identifying the Semantic and Textual Differences Between
		 Two Versions of a Program},
  booktitle =	 pldi,
  year =	 {1990},
  series =	 {SIGPLAN Notices},
  volume =	 {25(6)},
  pages =	 {234--245},
  address =	 {White Plains, New York},
  month =	 jun,
  annote =	 {Uses something like the program dependence graph and a
		 partitioning algorithm to compute the differences. Uses a
		 backtracking-based scheme to minimize the number of new
		 edges when resolving ambiguity.},
  keywords =	 {program dependence graph}
}

@Article{horwitz1991efficient,
  author =	 {Susan Horwitz and Thomas Reps},
  title =	 {Efficient Comparison of Program Slices},
  journal =	 {Acta Informatica},
  year =	 {1991},
  volume =	 {28},
  number =	 {8},
  pages =	 {713--732}
}

@InProceedings{hoschka1993control,
  author =	 {Philipp Hoschka and Christian Huitema},
  title =	 {Control flow graph analysis for automatic fast path
		 implementation},
  booktitle =	 {Proceedings of the Second IEEE Workshop on the Architecture
		 and Implementation of High Preformance Communication
		 Subsystems},
  year =	 1993,
  address =	 {Williamsburg, Virginia},
  month =	 sep,
  annote =	 {Cites abbott1993language-based.
		 
		 Idea is to automate the analysis and resynthesis of programs
		 based on the expected cast. They perform a trade-off between
		 procedure-driven and table-driven implementations (a
		 traditional size/speed tradeoff).
		 
		 There's a nifty synthesis problem here of trying to meet a
		 speed requirement within a space constraint.
		 
		 This paper has no meat: no examples, no diagrams, no
		 concrete information!}
}

@InProceedings{hsieh1997controldata-flow,
  author =	 {Yee-Wing Hsieh and Steven P. Levitan},
  title =	 {Control/Data-flow Analysis for {VHDL} Semantic Extraction},
  booktitle =	 {Proceedings of the 4th Asia-Pacific Conference on Hardware
		 Description Languages},
  year =	 1997,
  pages =	 {68--75}
}

@Article{hsieh1998controldata-flow,
  author =	 {Yee-Wing Hsieh and Steven P. Levitan},
  title =	 {Control/Data-flow Analysis for {VHDL} Semantic Extraction},
  journal =	 {Journal of Information Science and Enginnering},
  year =	 1998,
  volume =	 14,
  number =	 3,
  pages =	 {547--565}
}

@InProceedings{hsieh1998model,
  author =	 {Yee-Wing Hsieh and Steven P. Levitan},
  title =	 {Model Abstraction for Formal Verification},
  booktitle =	 date,
  year =	 1998,
  pages =	 {140--147},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Referenced in SED:hsieh:99a}
}

@InProceedings{hsieh1999nfsm,
  author =	 {Yee-Wing Hsieh and Steven P. Levitan},
  title =	 {{NFSM} Generation for Semantics Based Model Abstraction},
  booktitle =	 {Procedings of the High-Level Design Validation and Test
		 Workshop},
  year =	 1999,
  pages =	 {138--145},
  address =	 {San Diego, California},
  month =	 nov,
  annote =	 {From Tom. Working on behavioral VHDL. Abstracting the
		 behavior of counters by dividing their count spaces into
		 non-deterministic FSMs that hold just the important values
		 (e.g., reset value, constant comparison, etc.) },
  url =		 {http://kona.ee.pitt.edu/pittcad/},
  bdsk-url-1 =	 {http://kona.ee.pitt.edu/pittcad/}
}

@InProceedings{hsieh1999synchronous,
  author =	 {Harry Hsieh and Felice Balarin and Alberto
		 Sangiovanni-Vincentelli and Luciano Lavagno},
  title =	 {Synchronous Equivalence for Embedded Systems: A Tool for
		 Design Exploration},
  booktitle =	 iccad,
  year =	 1999,
  pages =	 {505--509},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Idea is to symbolically simulate two network of CFSMs
		 running under a particular scheduling policy. If the
		 simulation trace (a graph) matches, the systems are the
		 same. A way to compare two asynchronous implementations of
		 the same synchronous system. I reviewed their TransCAD paper
		 on the same subject. Probably Harry's thesis.}
}

@TechReport{hsu2006embedded,
  author =	 {Wei-Chung Hsu and David Lariviere and Stephen A. Edwards},
  title =	 {Embedded {uClinux}, the Altera {DE2}, and the {SHIM}
		 Compiler},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--049--06},
  address =	 nyny,
  month =	 dec,
  annote =	 {Discussion of running uClinux on the DE2 board with an eye
		 toward building a SHIM compiler that generates this code.}
}

@Article{hu2005energy-,
  author =	 {J. Hu and R. Marculescu},
  title =	 {Energy- and Performance-Aware Mapping for Regular {NoC}
		 Architectures},
  journal =	 transcad,
  year =	 2005,
  volume =	 24,
  number =	 4,
  pages =	 {551-562},
  month =	 nov,
  affiliation =	 {CMU},
  annote =	 {Citing the DAC'02 paper.},
  entered =	 {Luca Carloni, 11/5/03},
  oldkey =	 {hu_tcad05},
  sedtransform = {s/hu_tcad05/hu2005energy-/}
}

@InProceedings{huang1993tree-based,
  author =	 {S. H. Huang and Y. L. Jeang and C. T. Hwang and Y. C. Hsu
		 and J. F. Wang},
  title =	 {A tree-based scheduling algorithm for control-dominated
		 circuits},
  booktitle =	 dac93,
  year =	 1993,
  pages =	 {578--582},
  address =	 dac93a,
  month =	 jun,
  annote =	 {FIXME}
}

@InProceedings{huang2000assertion,
  author =	 {Chung-Yang (Ric) Huang and Kwang-Ting (Tim) Cheng},
  title =	 {Assertion Checking by Combined Word-Level {ATPG} and
		 Modular Arithmetic Constraint-Solving Techniques},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {118--123},
  address =	 dac00a,
  month =	 jun,
  annote =	 {Simple datapath/control model of the circuit, word-level
		 ATPG (straightforward), plus a way to propagate constraints
		 backwards across pure datapath components using Gaussian
		 Elimination with modular arithmetic.},
  url =		 {http://www.dac.com/37/proceedings/07_02.pdf},
  bdsk-url-1 =	 {http://www.dac.com/37/proceedings/07_02.pdf}
}

@TechReport{huang2006implementation,
  author =	 {Chen-Chun Huang and Javier Coca and Yashket Gupta and
		 Stephen A. Edwards},
  title =	 {An Implementation of a {Renesas} {H8/300} Microprocessor
		 with a Cycle-Level Timing Extension},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--051--06},
  address =	 nyny,
  month =	 dec,
  annote =	 {Describes their H8 implemented in VHDL.}
}

@Unpublished{hudak1994haskell,
  author =	 {Paul Hudak and Mark P. Jones},
  title =	 {Haskell vs. {Ada} vs. {C++} vs. {Awk} vs. ... An Experiment
		 in Software Prototyping Productivity},
  year =	 1994,
  month =	 jul,
  note =	 {http://www.cs.yale.edu/homes/hudak-paul.html},
  annote =	 {A rather sloppy experiment to compare how big and quickly a
		 prototype describing a small part of the AEGIS defense
		 system (essentially, map queries) can be written. The result
		 was heavily pro-Haskell, but then the example was written by
		 a fairly clever programmer. Not very good experimental
		 design: just about every number was biased in some way.
		 
		 Tried to publish in a journal, but was rejected.}
}

@InProceedings{hudak1998modular,
  author =	 {Paul Hudak},
  title =	 {Modular Domain Specific Languages and Tools},
  booktitle =	 {Proceedings of the Fifth International Conference on
		 Software Reuse (ICSR)},
  year =	 1998,
  pages =	 {134--132},
  address =	 {Victoria, Canada},
  month =	 jun,
  annote =	 {Embedding in Haskell? Cited by elliott1999embedded.
		 
		 Argues for domain-specific embedded languages or DSELs,
		 which piggy-back on an existing general-purpose language for
		 syntax and general language machinery.
		 
		 Also uses the partial evaluation trick to speed up
		 interpreted languages.
		 
		 Talks more about hudak1994haskell. One of the main tricks is
		 to use functions to represent complex data structures, in
		 this case geometric regions, in terms of queries on them.
		 Object-oriented in a funny sort of way...
		 
		 He describes Haskell, and this seems right, as "A DSL for
		 Denotational semantics," which makes it an excellent choice
		 for describing interpreters.
		 
		 Of course, it's hideously inefficient. He says he needs a
		 partial evaluator to make it reasonable, but says there
		 isn't a good one for Haskell. Instead, he translates things
		 into Scheme, partially evaluates that, then translates it
		 back into Haskell, getting three-orders-of-magnitude
		 speedups in some cases.
		 
		 The flaw with this embedded approach, in my opinion, is that
		 it often restricts you to the underlying semantics of the
		 host language. For sequential applications this may be fine,
		 but concurrency, say, would be difficult. Embed something in
		 Haskell and it tends to look like a functional language, not
		 surprisingly. }
}

@Article{hudson1976elementary,
  author =	 {R. R. Hudson and W. Johnson},
  title =	 {Elementary Rock Climbing Mechanics},
  journal =	 {International Journal of Mechanical Engineering Education},
  year =	 {1976},
  volume =	 {4},
  number =	 {4},
  pages =	 {123--367}
}

@Article{huffman1954synthesis,
  author =	 {David A. Huffman},
  title =	 {The Synthesis of Sequential Switching Circuits},
  journal =	 {Journal of the Franklin Institute},
  year =	 1954,
  volume =	 257,
  number =	 {3 and 4},
  pages =	 {161--190, 275--303},
  month =	 {March and April},
  note =	 {Also MIT RLE-TR-274 (Jan 10, 1954)},
  annote =	 {Huffman's thesis. We would call it asynchronous logic.
		 Issue is dealing with races and hazards. Thinks about
		 relays, tubes, diodes. Flow tables.
		 
		 Does not appear to discuss three-valued simulation
		 directly.}
}

@Article{huffman1957design,
  author =	 {David A. Huffman},
  title =	 {The Design and Use of Hazard-Free Switching Networks},
  journal =	 jacm,
  year =	 1957,
  volume =	 4,
  number =	 1,
  pages =	 {47--62},
  month =	 jan,
  annote =	 {Cited by josephs2003analysis, just to be complete.
		 
		 Relay networks and the challenges of covering all
		 transitions in a Karnaugh map to avoid switching hazards.
		 Includes a circuit with tubes at the end.}
}

@Article{hughes1989why,
  author =	 {John Hughes},
  title =	 {Why Functional Programming Matters},
  journal =	 {Computer Journal},
  year =	 1989,
  volume =	 32,
  number =	 2,
  pages =	 {98--107},
  month =	 apr,
  doi = {10.1093/comjnl/32.2.98},
  annote =	 {Mary Sheeran pointed this out to me while at Dagstuhl. "His
		 most widely cited paper."  Satnam mentioned this as
                  well.  Part of a special issue on lazy functional programming.

                 Central idea is promoting modularity: higher-order
                  functions and lazy evaluation make it easier to
                  modularize things.

                  Written with Miranda syntax.  (Miranda was the first
                  commercial functional language: lazy; list comprehensions.  Haskell was
                  inspired by it.)

                  Uses reduce (List.fold_left, etc.) as a compelling
                  example: polymorphism plus higher-order functions
                  lead to better abstractions.

                  Lazy evaluation as a way to isolate control from
                  operations.  Basically, a way to talk about infinite
                  things (more convenient), then stop them.}
}

@InProceedings{huizing1988modelling,
  author =	 {C. Huizing and R. Gerth and W. P. de Roever},
  title =	 {Modelling {Statecharts} Behavior in a Fully Abstract Way},
  booktitle =	 {CAAP '88: 13th Colloquium on Trees in Algebra and
		 Programming},
  year =	 {1988},
  series =	 lncs,
  volume =	 {299},
  pages =	 {271--294},
  address =	 {Nancy, France},
  month =	 mar,
  publisher =	 sv,
  annote =	 {Shoots for a denotational specification. Simplifies the
		 language first.}
}

@InProceedings{huizing1992semantics,
  author =	 {C. Huizing and R. Gerth},
  title =	 {Semantics of Reactive Systems in Abstract Time},
  booktitle =	 {Real-Time, Theory in Practice. REX Workshop Proceedings,
		 Mook, Netherlands, June 3--7, 1991},
  year =	 {1992},
  series =	 lncs,
  volume =	 {600},
  pages =	 {291--314},
  publisher =	 sv,
  annote =	 {Source of Wendell's RMC barrier proof. Describes five
		 different semantics, classifies them on the R, M, and C
		 directions, and proposes a new, two-level semantics that is
		 modular at a high level, causal at the low.}
}

@Book{hunter1996introduction,
  author =	 {R. D. M. Hunter and T. T. Johnson},
  title =	 {Introduction to {VHDL}},
  publisher =	 kl,
  year =	 1996,
  address =	 kl_a,
  note =	 {Formerly published by Chapman \& Hall},
  annote =	 {Got from Kluwer while writing the book.}
}

@Article{hutchinson1991x-kernel,
  author =	 {Norman C. Hutchinson and Larry L. Peterson},
  title =	 {The $x$-Kernel: An Architecture for Implementing Network
		 Protocols},
  journal =	 transse,
  year =	 1991,
  volume =	 17,
  number =	 1,
  pages =	 {64--76},
  month =	 jan,
  annote =	 {Cited by abbott1993language-based.
		 
		 Lengthy discussion of the protocol aspects of their
		 operating system. Basic idea is to provide kernel-level
		 abstractions (protocols, multiplexors) for implementing
		 protocols. Use one process per message, not per protocol to
		 cut down on context switching. Some concrete ideas about the
		 sorts of interface protocol pieces should have. Protocols
		 are classes; sessions are instances of these classes. Buffer
		 management routines, etc. Not enough details in this paper
		 to go off and implement something.
		 
		 Lots of experimental results comparing their performance
		 with BSD Unix and the Sprite operating system, showing that
		 their structured approach is more efficient than the
		 unstructured stuff in either of these.}
}

@Article{hybrid2006annual,
  author =	 {CHESS: Center for Hybrid and Embedded Software Systems},
  title =	 {Annual Report - Foundations of Hybrid and Embedded Systems
		 and Software},
  journal =	 {Available at {http://chess.eecs.berkeley.edu/}},
  year =	 2006,
  affiliation =	 {UCB},
  entered =	 {Luca Carloni,7/3/06},
  keywords =	 {hybrid and embedded systems},
  oldkey =	 {chessannualreport06},
  sedtransform = {s/chessannualreport06/hybrid2006annual/}
}

@Manual{ibm1983ibm,
  title =	 {IBM Personal Computer Technical Reference manual},
  organization = {IBM},
  month =	 apr,
  year =	 1983,
  note =	 {Revised Edition, part number 6322507},
  annote =	 {I found a copy at http://www.vintageibm.net}
}

@Misc{ibm2006wala,
  author =	 {IBM and others},
  title =	 {{T. J. Watson} Libraries for Analysis},
  year =	 2006,
  note =	 {http://wala.sourceforge.net}
}

@Manual{ibm2007cc++,
  title =	 {{C/C++} Language Extensions for Cell Broadband Engine
		 Architecture},
  organization = {IBM},
  month =	 feb,
  year =	 2007,
  note =	 {Version 2.5},
  annote =	 {Information about things like __attribute__.}
}

@Manual{ibm2007cell,
  title =	 {Cell Broadband Engine Architecture},
  organization = {IBM},
  month =	 oct,
  year =	 2007,
  note =	 {Version 1.02},
  annote =	 {A comprehensive, low-level reference on what's going on
		 inside the Cell processor. Good discussion, for example, of
		 DMA alignment restrictions.},
  url =		 {http://www-128.ibm.com/developerworks/power/cell/documents.html}
		 ,
  bdsk-url-1 =	 {http://www-128.ibm.com/developerworks/power/cell/documents.html}
		 
}

@Manual{ibm2007example,
  title =	 {Example Library {API} Reference},
  organization = {IBM},
  month =	 sep,
  year =	 2007,
  note =	 {Version 3.0},
  annote =	 {Describes a rather bizarre library of questionable utility,
		 at least the synchronization primitives. The mutexes and
		 condition variable spin, rather than yielding the thread.},
  url =		 {http://www-128.ibm.com/developerworks/power/cell/documents.html}
		 ,
  bdsk-url-1 =	 {http://www-128.ibm.com/developerworks/power/cell/documents.html}
		 
}

@Article{ichbiah1979rationale,
  author =	 {Jean D. Ichbiah and Bernd Krieg-Brueckner and Brian A.
		 Wichmann and John G. P. Barnes and Olivier Roubine and
		 Jean-Claude Heliard},
  title =	 {Rationale for the design of the {Ada} programming
		 language},
  journal =	 {SIGPLAN Notices},
  year =	 1979,
  volume =	 14,
  number =	 {6b},
  pages =	 {1--261},
  month =	 jun,
  annote =	 {A seminal Ada reference. Really a nice description of why
		 it is the way it is. Number 6a is the LRM. The text calls it
		 the "Green" language.
		 
		 Very nice description of the task model. The "accept"
		 statement looks very much like the equivalent in SHIM,
		 although at a higher level. However, it also provides the
		 "select" statement, which is a nondeterministic wait on
		 multiple events. An "entry," the name of an input event, is
		 accepted by an "accept" statement. "Each entry potentially
		 has a queue of tasks calling it. This queue is processed in
		 a strictly first in first out manner" (p 11-6).
		 
		 A task can only be calling one entry at a time.
		 
		 There's also a delay statement.}
}

@Manual{ieee-computer-society1994ieee,
  title =	 {{IEEE} Standard {VHDL} Language Reference Manual
		 (1076--1993)},
  organization = {{IEEE Computer Society}},
  address =	 ieee_a,
  year =	 1994,
  url =		 {http://www.ieee.org/},
  bdsk-url-1 =	 {http://www.ieee.org/}
}

@Manual{ieee-computer-society1996ieee,
  title =	 {{IEEE} Standard Hardware Description Language Based on the
		 Verilog Hardware Description Language (1364--1995)},
  organization = {{IEEE Computer Society}},
  address =	 ieee_a,
  year =	 1996,
  url =		 {http://www.ieee.org/},
  bdsk-url-1 =	 {http://www.ieee.org/}
}

@Manual{ieee-computer-society2001ieee,
  title =	 {{IEEE} Standard {Verilog} Hardware Description Language
		 (1364--2001)},
  organization = {IEEE Computer Society},
  address =	 ieee_a,
  month =	 sep,
  year =	 2001,
  annote =	 {Minor changes to the language: always @*, things like that.
		 SystemVerilog (Verilog 3.0) a much bigger change.}
}

@Manual{ieee1003.1-2004,
  title =	 {Standard for Information Technology---Portable Operating
		 System Interface (POSIX): System Interfaces (1003.1)},
  organization = ieee,
  address =	 ieee_a,
  year =	 2004,
  annote =	 {POSIX threads, etc.}
}

@Manual{ieee1076.6-1999,
  title =	 {{IEEE} Standard for {VHDL} Register Transfer Level {(RTL)}
		 Synthesis (1076.6--1999)},
  organization = {IEEE Computer Society},
  address =	 ieee_a,
  month =	 sep,
  year =	 1999
}

@Manual{ieee1284-2000,
  title =	 {{IEEE} Standard Signaling Method for a Bidirectional
		 Parallel Peripheral Interface for Personal Computers
		 (1284--2000)},
  organization = ieee,
  address =	 ieee_a,
  year =	 2000,
  annote =	 {The extended parallel printer port, as well as
		 "compatibility mode" that is the original Centronics
		 interface.}
}

@Manual{ieee1987vhdl,
  title =	 {{IEEE} Standard {VHDL} Reference Manual (1076--1987)},
  organization = ieee,
  address =	 ieee_a,
  year =	 1988,
  annote =	 {The first VHDL standard.}
}

@Manual{ieee1993-1164,
  title =	 {{IEEE} Standard Multivalue Logic System for {VHDL} Model
		 Interoperability (Std\_logic\_1164)},
  organization = ieee,
  address =	 ieee_a,
  year =	 1993,
  annote =	 {Definition of std_logic_1164 for VHDL: std_logic,
		 std_ulogic, etc.}
}

@Manual{ieee1997-1076.3,
  title =	 {{IEEE} Standard {VHDL} Synthesis Packages (1076.3--1997)},
  organization = ieee,
  address =	 ieee_a,
  year =	 1997,
  annote =	 {Describes NUMERIC_BIT, among others.}
}

@Misc{ieee802_1_q,
  title =	 {Virtual Bridged Local Area Networks},
  howpublished = {IEEE Std. 802.1Q-2005},
  year =	 2006,
  month =	 may,
  key =		 {IEEE802.1Q}
}

@Misc{ieee802_3,
  title =	 {Carrier Sense Multiple Access with Collision Detection
		 {(CSMA/CD)} Access Method and Physical Layer Specification},
  howpublished = {IEEE Std. 802.3-2005},
  year =	 2005,
  month =	 may,
  key =		 {IEEE802.3}
}

@InProceedings{iida2004design,
  author =	 {Yoshihiro Iida and Naohiko Shimizu},
  title =	 {Design of {POP--11} ({PDP--11} on programmable chip)},
  booktitle =	 asp-dac,
  year =	 2004,
  pages =	 {571--572},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {More from Shimizu,
		 http://shimizu-lab.dt.u-tokai.ac.jp/pop11.html
		 
		 http://shimizu-lab.dt.u-tokai.ac.jp/papers.html
		 
		 http://shimizu-lab.dt.u-tokai.ac.jp/}
}

@Book{iman2004hardware,
  author =	 {Sasan Iman and Sunita Joshi},
  title =	 {The e Hardware Verification Langauge},
  publisher =	 kl,
  year =	 2004,
  address =	 kl_a,
  annote =	 {Don't know it: saw it on Amazon.}
}

@Manual{ingenierie1988esterel-v3,
  title =	 {The {Esterel V3} Language Reference Manual},
  organization = {CISI INGENIERIE},
  year =	 {1988}
}

@Book{inmos1988occam2,
  author =	 {{INMOS Limited}},
  title =	 {occam 2 Reference Manual},
  publisher =	 ph,
  year =	 1988,
  annote =	 {Language reference manual. I got my copy from Christopher
		 Vickery at CUNY Queens.}
}

@InProceedings{ip2006processor,
  author =	 {Nicholas Jun Hao Ip and Stephen A. Edwards},
  title =	 {A Processor Extension for Cycle-Accurate Real-Time
		 Software},
  booktitle =	 {Proceedings of the IFIP International Conference on
		 Embedded and Ubiquitous Computing (EUC)},
  year =	 2006,
  series =	 lncs,
  volume =	 4096,
  pages =	 {449--458},
  address =	 {Seoul, Korea},
  month =	 aug,
  annote =	 {Accepted after being rejected by RTAS. Held at Konkuk
		 University. Rather a big event, it seems. 1170 pages in the
		 proceedings. Four tracks.},
  selectivity =	 {approx. 125/500 = 25\%},
  url =		 {http://dx.doi.org/10.1007/11802167_46},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/11802167_46}
}

@InProceedings{irick2008hardware,
  author =	 {Kevin M. Irick and Michael DeBole and Vijaykrishnan
		 Narayanan and Aman Gayasen},
  title =	 {A Hardware Efficient Support Vector Machine Architecture
		 for {FPGA}},
  booktitle =	 fccm,
  year =	 2008,
  pages =	 {304--305},
  address =	 {Palo Alto, California},
  month =	 apr,
  doi =		 {http://dx.doi.org/10.1109/FCCM.2008.40},
  annote =	 {Random search of SVN accelerators. Very short. Not all
		 references mentioned in the paper?}
}

@InProceedings{ismail1994cosmos,
  author =	 {Tarek Ben Ismail and Mohamed Abid and Ahmed Jerraya},
  title =	 {{COSMOS}: A CoDesign Approach for Communicating Systems},
  booktitle =	 {Proceedings of the 3rd International Workshop on
		 Hardware/software Co-Design},
  year =	 1994,
  pages =	 {17--24},
  address =	 {Grenoble, France},
  month =	 sep,
  annote =	 {Cited by ernst1996cosyma as the source of their
		 communication primitives. "The ChannelUnit combines the
		 principles of monitors and message passing. The model is
		 known as the Remote Procedure Call or RPC."
		 
		 Their system starts from SDL and translates it into their
		 grand unified representation called SOLAR. Again, they
		 synthesize hardware/software interfaces, but take an RPC
		 model.}
}

@InProceedings{italiano1993fully,
  author =	 {Giuseppe F. Italiano and Johannes A. {La Poutr\'{e}} and
		 Monika H. Rauch},
  title =	 {Fully Dynamic Planarity Testing in Planar Embedded Graph},
  booktitle =	 {Algorithms - ESA'93. First Annual European Symposium
		 Proceedings},
  year =	 {1993},
  month =	 sep,
  publisher =	 sv
}

@Article{itrs1999international,
  author =	 {ITRS},
  title =	 {The International Technology Roadmap for Semiconductors -
		 1999 Edition},
  journal =	 {Available at {http://www.public.itrs.net}},
  year =	 1999,
  affiliation =	 {ITRS},
  entered =	 {Luca Carloni,2/3/04},
  keywords =	 {interconnect scaling, deep-submicron, technology process},
  oldkey =	 {itrs99},
  sedtransform = {s/itrs99/itrs1999international/}
}

@Misc{itrs2001design,
  author =	 {Semiconductor Industry Association},
  title =	 {The International Technology Roadmap for Semiconductors:
		 Design},
  year =	 2001,
  note =	 {public.itrs.net},
  annote =	 {Design is the hardest thing.},
  url =		 {http://public.itrs.net/},
  bdsk-url-1 =	 {http://public.itrs.net/}
}

@Article{itrs2003,
  author =	 {ITRS},
  title =	 {The International Technology Roadmap for Semiconductors -
		 2003 Edition},
  journal =	 {Available at {http://www.public.itrs.net}},
  year =	 2003,
  affiliation =	 {ITRS},
  entered =	 {Luca Carloni,2/3/04},
  keywords =	 {interconnect scaling, deep-submicron, technology process}
}

@Article{itrs2003international,
  author =	 {ITRS},
  title =	 {The International Technology Roadmap for Semiconductors -
		 2003 Edition},
  journal =	 {Available at {http://www.public.itrs.net}},
  year =	 2003,
  affiliation =	 {ITRS},
  entered =	 {Luca Carloni,2/3/04},
  keywords =	 {interconnect scaling, deep-submicron, technology process},
  oldkey =	 {itrs03},
  sedtransform = {s/itrs03/itrs2003international/}
}

@Manual{itu1992jpeg,
  title =	 {ITU-T Recommendation T.81: Digital Compression and Coding
		 of Continuous-Tone Still Images (JPEG)},
  organization = {International Telecommunication Union},
  month =	 sep,
  year =	 1992,
  note =	 {Also ISO standard 10918-1.},
  annote =	 {The JPEG standard.}
}

@Misc{itu_g_984_3,
  title =	 {Gigabit-capable Passive Optical Networks (G-PON):
		 Transmission convergence layer specification},
  howpublished = {ITU-T Recommendation G.984.3},
  year =	 {2004},
  month =	 {February},
  key =		 {ITU-T_G.984.3}
}

@InProceedings{iwaihara1996program,
  author =	 {Mizuho Iwaihara and Masaya Nomura and Shigeru Ichinose and
		 Hiroto Yasuura},
  title =	 {Program Slicing on {VHDL} Descriptions and its
		 Applications},
  booktitle =	 {Proceedings of the Third Asian Pacific Conference on
		 Hardware Description Languages (APCHDL)},
  year =	 1996,
  pages =	 {132--139},
  address =	 {Bangalore, India},
  month =	 jan,
  annote =	 {Referenced by SED:clarke:99a},
  url =		 {http://kasuga.csce.kyushu-u.ac.jp/~iwaihara/research.html},
  bdsk-url-1 =	 {http://kasuga.csce.kyushu-u.ac.jp/~iwaihara/research.html}
}

@InProceedings{iwasaki2003single,
  author =	 {Hiroe Iwasaki and Jiro Naganuma and Koyo Nitta and Ken
		 Nakamura and Takeshi Yoshitome and Mitsuo Ogura and Yasuyuki
		 Nakajima and Yutaka Tashiro and Takayuki Onishi and Mitsuo
		 Ikeda and Makoto Endo},
  title =	 {Single-Chip {MPEG-2} {422P@HL} {CODEC} {LSI} with
		 Multi-Chip Configuration for Large Scale Processing beyond
		 {HDTV} Level},
  booktitle =	 date,
  year =	 2003,
  pages =	 {2--7},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Overkill for our stuff.}
}

@InProceedings{jackson2000software,
  author =	 {Daniel Jackson and Martin Rinard},
  title =	 {Software Analysis: A Roadmap},
  booktitle =	 {chapter in "The Future of Software Engineering", ACM
		 Press},
  year =	 2000,
  oldkey =	 {roadmap},
  sedtransform = {s/roadmap/jackson2000software/}
}

@Book{jacob2007memory,
  author =	 {Bruce Jacob and Spencer W. Ng and David T. Wang},
  title =	 {Memory Systems: Cache, {DRAM}, Disk},
  publisher =	 mk,
  year =	 2007,
  annote =	 {Nice stuff about DRAM, etc.}
}

@InProceedings{jacobson2005stretching,
  author =	 {H. Jacobson and P. Bose and Z. Hu and R. Eickemeyer and
		 L.Eisen and J. Griswell and A. Buyuktosunoglu and V. Zyuban
		 and D. Logan and B. Sinharoy and J. Tendler},
  title =	 {Stretching the Limits of Clock-Gating Efficiency in
		 Server-Class Processors},
  booktitle =	 hpca,
  year =	 {2005},
  month =	 feb,
  oldkey =	 {jacobson05},
  sedtransform = {s/jacobson05/jacobson2005stretching/}
}

@InProceedings{jagadeesan1995formal,
  author =	 {Lalita Jategaonkar Jagadeesan and Carlos Puchol and James
		 E. Von Olnhausen},
  title =	 {A Formal Approach to Reactive Systems Software: {A}
		 Telecommunications Application in {Esterel}},
  booktitle =	 {Proceedings of the Workshop on Industrial-Strength Formal
		 Specification Techniques},
  year =	 {1995},
  month =	 apr,
  url =		 {http://www.cs.utexas.edu/users/cpg/TempEst},
  bdsk-url-1 =	 {http://www.cs.utexas.edu/users/cpg/TempEst}
}

@InProceedings{jagadeesan1995safety,
  author =	 {Lalita Jategaonkar Jagadeesan and Carlos Puchol and James
		 E. Von Olnhausen},
  title =	 {Safety Property Verification of {Esterel} programs and
		 Applications to Telecommunications Software},
  booktitle =	 {Proceedings of the Seventh Conference on Computer-Aided
		 Verification},
  year =	 {1995},
  month =	 jul
}

@Article{jagannathan1994analyzing,
  author =	 {Suresh Jagannathan and Stephen Weeks},
  title =	 {Analyzing stores and references in a parallel symbolic
		 language},
  journal =	 {SIGPLAN Lisp Pointers},
  year =	 {1994},
  volume =	 {VII},
  number =	 {3},
  pages =	 {294--305},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/182590.182493},
  issn =	 {1045-3563},
  publisher =	 {ACM},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/182590.182493}
}

@InProceedings{jalabert2004pipescompiler,
  author =	 {A. Jalabert and Luca Benini and S. Murali and G. De
		 Micheli},
  title =	 {{\em $\times$pipesCompiler}: a Tool for Instantiating
		 Application-Specific {NoC}s},
  booktitle =	 date,
  year =	 2004,
  month =	 feb,
  affiliation =	 {IBM},
  annote =	 {Citing my TCAD'01 paper},
  entered =	 {Luca Carloni,03/12/04},
  keywords =	 {soc design, noc, deep submicron},
  oldkey =	 {jalabert04},
  sedtransform = {s/jalabert04/jalabert2004pipescompiler/}
}

@InProceedings{jalabert2004xpipes,
  author =	 {A. Jalabert and Luca Benini and S. Murali and G. De
		 Micheli},
  title =	 {$\times$pipesCompiler: a Tool for Instantiating
		 Application-Specific {NoC}s},
  booktitle =	 date,
  year =	 2004,
  month =	 feb,
  affiliation =	 {IBM},
  annote =	 {Citing my TCAD'01 paper},
  entered =	 {Luca Carloni,03/12/04},
  keywords =	 {soc design, noc, deep submicron}
}

@InProceedings{jan2003porting,
  author =	 {Stephen Jan and Paolo de Dios and Stephen A. Edwards},
  title =	 {Porting a Network Cryptographic Service to the {RMC2000}: A
		 Case Study in Embedded Software Development},
  booktitle =	 {Designers' Forum: Design Automation and Test in Europe
		 Conference and Exhibition},
  year =	 2003,
  pages =	 {150--155},
  address =	 {Munich, Germany},
  month =	 mar,
  note =	 {Also appears as Chapter 13 of \emph{Embedded Software for
		 SoC}, Jerraya, Yoo, Verkest and Wehn eds., Kluwer, 2003},
  annote =	 {Paper from 2001's Languages for Embedded System Design.
		 Best suggestion I got during the presentation: do it the
		 other way. Move something from an eight-bit environment to a
		 more complicated one.},
  selectivity =	 {98 long + 54 short + 36 designer's forum/590 = 32\%},
  url =		 {http://dx.doi.org/10.1109/DATE.2003.1253821},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/DATE.2003.1253821}
}

@InCollection{jan2003porting1,
  author =	 {Stephen Jan and Paolo de Dios and Stephen A. Edwards},
  title =	 {Porting a Network Cryptographic Service to the {RMC2000}: A
		 Case Study in Embedded Software Development},
  editor =	 {Ahmed Amine Jerraya and Sungjoo Yoo and Diederik Verkest
		 and Norbert Wehn},
  booktitle =	 {Embedded Software for {SoC}},
  publisher =	 kl,
  year =	 2003,
  chapter =	 13,
  pages =	 {165--176},
  annote =	 {Anthology version of our 2003 DATE paper}
}

@Article{janin2003simulation,
  author =	 {Lilian Janin and Andrew Bardsley and Doug A. Edwards},
  title =	 {Simulation and Analysis of Synthesised Asynchronous
		 Circuits},
  journal =	 {International Journal of Simulation Systems, Science \&
		 Technology},
  year =	 2003,
  volume =	 4,
  number =	 {3--4},
  pages =	 {31--43},
  month =	 sep,
  annote =	 {Describes simulating Balsa. They claim that only the
		 arbiter handshake component is nondeterministic.
		 
		 They provide a mechanism that identifies when arbiters make
		 nondeterministic choices and a checkpointing system that can
		 roll the simulation back and check multiple such choices.
		 Rather a novel idea. Mention that the number of choices
		 might swell exponentially so that you'd want something that
		 can re-merge them to do true simulation, but nothing has
		 been done on that level.
		 
		 Finally, an answer to my "is Balsa nondeterministic"
		 question. It is, but in a fairly controlled way.}
}

@Book{jantsch2004modeling,
  author =	 {Axel Jantsch},
  title =	 {Modeling Embedded Systems and {SOC's}},
  publisher =	 mk,
  year =	 2004,
  annote =	 {Models of computation.}
}

@Article{jephson1969three-value,
  author =	 {J. S. Jephson and R. P. McQuarrie and R. E. Vogelsberg},
  title =	 {A three-value computer design verification system},
  journal =	 {IBM Systems Journal},
  year =	 1969,
  volume =	 8,
  number =	 3,
  pages =	 {178--188},
  annote =	 {Cited by a number as using Eichelberger's ternary
		 simulation ideas.
		 
		 Cites the eichelberger paper as well as Muller (1959) and
		 Yoeli and Rinon (JACM 1964).
		 
		 Four volumes in 1969. Not clear in which month this
		 appeared, but is easy to find anyway.}
}

@Book{jerraya2003embedded,
  editor =	 {Ahmed Amine Jerraya and Sungjoo Yoo and Diederik Verkest
		 and Norbert Wehn},
  title =	 {Embedded Software for {SoC}},
  publisher =	 kl,
  year =	 2003,
  annote =	 {Very high-level. A collection of chapters.}
}

@Article{jess2000designing,
  author =	 {J A G Jess},
  title =	 {Designing electronic engines with electronic engines: 40
		 years of bootstrapping of a technology upon itself},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1404--1427},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@Article{jezequel1997design,
  author =	 {Jean-Marc J\'ez\'equel and Bertrand Meyer},
  title =	 {Design by contract: the lessons of {Ariane}},
  journal =	 computer,
  year =	 1997,
  volume =	 30,
  number =	 1,
  pages =	 {129--130},
  month =	 jan,
  annote =	 {Ariane 5 disaster}
}

@InProceedings{jha2001low,
  author =	 {N. Jha},
  title =	 {Low power system scheduling and synthesis},
  booktitle =	 iccad,
  year =	 2001,
  pages =	 {259-263},
  month =	 nov,
  oldkey =	 {jha01},
  sedtransform = {s/jha01/jha2001low/}
}

@InProceedings{jiang2000dont,
  author =	 {Yunjian Jiang and Robert K. Brayton},
  title =	 {Don't cares and multi-valued logic network minimization},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {520--525},
  address =	 dac00a,
  month =	 jun,
  annote =	 {More on don't-cares. Extending the idea to multiple-valued
		 functions.}
}

@InProceedings{jiang2001logic,
  author =	 {Yunjian Jiang and Robert K. Brayton},
  title =	 {Logic optimization and code generation for embedded control
		 applications},
  booktitle =	 {Proceedings of the International Symposium of
		 Hardware/Software Codesign (CODES)},
  year =	 2001,
  address =	 {Copenhagen, Denmark},
  month =	 apr,
  annote =	 {Luciano pointed Jiang to me. Really a hardware-oriented
		 view of things: generated code seems to be little more than
		 a multi-valued logic simulator.},
  url =		 {http://www-cad.eecs.berkeley.edu/~wjiang/},
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/~wjiang/}
}

@InProceedings{jim2002cyclone,
  author =	 {Trevor Jim and Greg Morrisett and Dan Grossman and Michael
		 Hicks and James Cheney and Yanling Wang},
  title =	 {Cyclone: A Safe Dialect of {C},},
  booktitle =	 usenix,
  year =	 2002,
  pages =	 {275--288},
  address =	 {Monterey, California},
  month =	 jun,
  annote =	 {A C Dialect that checks for null pointer dereferences,
		 specific regions, etc.}
}

@Article{joel1984past,
  author =	 {Amos E. {Joel, Jr.}},
  title =	 {The Past 100 Years in Telecommunications Switching},
  journal =	 {IEEE Communications Magazine},
  year =	 1984,
  volume =	 22,
  number =	 3,
  pages =	 {64--83},
  month =	 may,
  annote =	 {Found at random. He also wrote some books:
		 
		 # Electronic Switching: Central Office Systems of the World
		 (IEEE Press, 1976)
		 
		 # With Robert J. Chapuis (eds.): 100 Years of Telephone
		 Switching (1878-1978: Part 1: Manual and Electromechanical
		 Switching), Elsevier 1982. Part 2: Electronics, Computers
		 and Telephone Switching (Elsevier, 1990).
		 
		 # A History of Engineering and Science in the Bell System
		 the Early Years 1875-1925 (Bell Labs, 1985)
		 
		 Cites Miller's third volume on automatic switching.
		 
		 Nice bibliography. }
}

@InProceedings{joergensen1991generating,
  author =	 {J. J{\o}rgensen},
  title =	 {Generating a Pattern Matching Compiler by Partial
		 Evaluation},
  editor =	 {Peyton Jones, S.L. and G. Hutton and Kehler Holst, C.},
  booktitle =	 {Functional Programming, Glasgow 1990},
  year =	 1991,
  pages =	 {177-195},
  publisher =	 sv
}

@Article{johannessen2004time,
  author =	 {Svein Johannessen},
  title =	 {Time Synchronization in a Local Area Network},
  journal =	 {IEEE Control Systems Magazine},
  year =	 2004,
  volume =	 24,
  number =	 2,
  pages =	 {61--69},
  month =	 apr,
  annote =	 {Cited in the 2007 PRET paper}
}

@InCollection{john2001performance,
  author =	 {Lizy Kurian John},
  title =	 {Performance Evaluation: Techniques, Tools, and Benchmarks},
  editor =	 {Vojin Oklobdzija},
  booktitle =	 {The Computer Engineering Handbook},
  publisher =	 {CRC Press},
  year =	 2001,
  volume =	 25,
  series =	 {Electrical Engineering Handbook},
  annote =	 {Example for the book chapter I'll write.},
  optpages =	 {FIXME}
}

@Article{johnson1975finding,
  author =	 {Donald B. Johnson},
  title =	 {Finding All the Elementary Circuits of a Directed Graph},
  journal =	 {SIAM Journal on Computing},
  year =	 1975,
  volume =	 4,
  number =	 1,
  pages =	 {77--84},
  month =	 mar,
  annote =	 {Luca mentioned this as an algorithm that enumerates all
		 loops in a graph.}
}

@TechReport{johnson1981tour,
  author =	 {S. C. Johnson},
  title =	 {A Tour through the portable {C} Compiler},
  institution =	 {Bell Laboratories},
  year =	 1981,
  address =	 {Murry Hill, New Jersey},
  annote =	 {Describes an early C compiler used in Unix systems.},
  url =		 {http://www.cs.bell-labs.com/7thEdMan/},
  bdsk-url-1 =	 {http://www.cs.bell-labs.com/7thEdMan/}
}

@InProceedings{johnson1993dependence-based,
  author =	 {Richard Johnson and Keshav Pingali},
  title =	 {Dependence-Based Program Analysis},
  booktitle =	 pldi,
  year =	 {1993},
  pages =	 {78--89},
  address =	 {Albuquerque, New Mexico},
  month =	 jun,
  annote =	 {Suggested to me by Dan Engels. A good representation for
		 synthesis? They present the Dependence Flow graph, a hybrid
		 of def-use chains and static single-assignment. The paper
		 rests on the idea of single-entry, single-exit regions of
		 the CFG, which are a hierarchical paritition. Variables can
		 bypass these regions, making it and O(VE) rather than O(V^2
		 E). The graph is inherently sequential, however.}
}

@Book{johnson1993high-speed,
  author =	 {Howard W. Johnson},
  title =	 {High-Speed Digital Design: {A} Handbook of Black Magic},
  publisher =	 ph,
  year =	 {1993},
  annote =	 {Saw it at ICCAD 96}
}

@PhDThesis{johnson1994efficient,
  author =	 {Richard Johnson},
  title =	 {Efficient Program Analysis Using Dependence Flow Graphs},
  school =	 {Cornell},
  year =	 {1994},
  note =	 {Cornell TR94-1464},
  annote =	 {From Dan. Has the linear-time algorithm for cycle
		 equivalence.},
  url =		 {http://simon.cs.cornell.edu/Info/Projects/Bernoulli/home.html}
		 ,
  bdsk-url-1 =	 {http://simon.cs.cornell.edu/Info/Projects/Bernoulli/home.html}
		 
}

@Article{johnson1997frameworks,
  author =	 {Ralph E. Johnson},
  title =	 {Frameworks = (Components + Patterns)},
  journal =	 cacm,
  year =	 1997,
  volume =	 40,
  number =	 10,
  pages =	 {39--42},
  month =	 oct,
  annote =	 {Mentioned by SED:lee:99a. Describes object-oriented
		 frameworks: enviroments for combining software components.
		 Visual Basic is a primary example.}
}

@InProceedings{jones1981flow,
  author =	 {Neil D. Jones and Steven S. Muchnick},
  title =	 {Flow Analysis and Optimization of Lips-Like Structures},
  booktitle =	 {Steven S. Muchnick and Neil D. Jones, editors. Program Flow
		 Analysis: Theory and Applications},
  year =	 1981,
  pages =	 {102--131},
  oldkey =	 {jones1},
  sedtransform = {s/jones1/jones1981flow/}
}

@Article{jones1989mix,
  author =	 {N. D. Jones and P. Sestoft and H. S{\o}ndergaard},
  title =	 {Mix: A Self-Applicable Partial Evaluator for Experiments in
		 Compiler Generation},
  journal =	 {Lisp and Symbolic Computation},
  year =	 1989,
  volume =	 2,
  number =	 1,
  pages =	 {9-50},
  annote =	 {A comprehensive discussion of partial evaluation, its
		 applications to generation of compilers and compiler
		 generators, and of engineering problems is given. A fully
		 automatic version of the partial evaluator discussed in
		 \cite{Jones:1985:AnExperiment} is described and results from
		 its use are reported.--jones1993partial}
}

@Article{jones1990efficient,
  author =	 {Larry G. Jones},
  title =	 {Efficient Evaluation of Circular Attribute Grammars},
  journal =	 toplas,
  year =	 {1990},
  volume =	 {12},
  number =	 {3},
  pages =	 {429--462},
  month =	 jul,
  annote =	 {Uses the decompose into topologically-sorted
		 strongly-connected components approach. Suggested by
		 Bourdoncle's paper. Evaluates strongly-connected components
		 in a depth-first manner.}
}

@Book{jones1993partial,
  author =	 {Neil D. Jones and Carsten K. Gomard and Peter Sestoft},
  title =	 {Partial Evaluation and Automatic Program Generation},
  publisher =	 ph,
  year =	 1993,
  address =	 ph_a,
  month =	 jun,
  annote =	 {A standard reference on partial evaluation. The copyright
		 reverted to the authors in 1999 and they now distribute it
		 in Postscript form.},
  url =		 {http://www.dina.kvl.dk/~sestoft/pebook/pebook.html},
  bdsk-url-1 =	 {http://www.dina.kvl.dk/~sestoft/pebook/pebook.html}
}

@InProceedings{jones1996concurrent,
  author =	 {Simon Peyton Jones and Andrew Gordon and Sigbjorn Finne},
  title =	 {Concurrent {Haskell}},
  booktitle =	 popl,
  year =	 1996,
  pages =	 {295--308},
  address =	 {St. Petersburg Beach, Florida},
  month =	 jan,
  annote =	 {Describes forkIO, MVar, and friends.},
  url =		 {http://www.haskell.org/ghc/docs/papers/concurrent-haskell.ps.gz}
		 ,
  bdsk-url-1 =	 {http://www.haskell.org/ghc/docs/papers/concurrent-haskell.ps.gz}
		 
}

@Article{jones1996introduction,
  author =	 {Neil D. Jones},
  title =	 {An Introduction to Partial Evaluation},
  journal =	 surveys,
  year =	 1996,
  volume =	 28,
  number =	 3,
  pages =	 {480--504},
  month =	 sep,
  annote =	 {Cited by thibault1999domain-specific.
		 
		 Broad, but very abstract and not that informative.}
}

@InProceedings{jones1996what,
  author =	 {Neil D. Jones},
  title =	 {What \emph{not} to Do When Writing an Interpreter for
		 Specialisation},
  booktitle =	 {Partial Evaluation},
  year =	 1996,
  series =	 lncs,
  volume =	 1110,
  pages =	 {216--237},
  month =	 feb,
  annote =	 {Cited by le-meur2004specialization.}
}

@TechReport{jones2000jpeg,
  author =	 {John P. Jones},
  title =	 {{JPEG} Decoder Design},
  institution =	 {Electrical Engineering Dept., University of California,
		 Riverside},
  year =	 2000,
  number =	 {Sr. Design Document EE175WS00-11},
  annote =	 {Nalini found this as part of her JPEG work.}
}

@Article{jones2004transformation,
  author =	 {Niel D. Jones},
  title =	 {Transformation by Interpreter Specialisation},
  journal =	 scicompprog,
  year =	 2004,
  volume =	 52,
  number =	 {1--3},
  pages =	 {307--339},
  month =	 aug,
  annote =	 {Recommended by one of the PEPM reviewers.}
}

@Article{jones2006vliw,
  author =	 {Alex K. Jones and Raymond Hoare and Dara Kusic and Justin
		 Stander and Gayatri Mehta and Josh Fazekas},
  title =	 {A {VLIW} Processor With Hardware Functions: Increasing
		 Performance While Reducing Power},
  journal =	 {IEEE Transactions on Circuits and Systems II: Express
		 Briefs},
  year =	 2006,
  volume =	 53,
  number =	 11,
  pages =	 {1250--1254},
  month =	 nov
}

@InProceedings{jose2005near,
  author =	 {A. P. Jose and G. Patounakis and K. L. Shepard},
  title =	 {Near Speed-of-Light On-Chip Interconnects Using Pulsed
		 Current-Mode Signalling},
  booktitle =	 vlsicircuits,
  year =	 2005,
  month =	 jun,
  affiliation =	 {Stanford Univ.},
  entered =	 {Luca Carloni,5/15/05},
  keywords =	 {on-chip communication},
  oldkey =	 {jose05},
  sedtransform = {s/jose05/jose2005near/}
}

@Article{josephs1992receptive,
  author =	 {Mark B. Josephs},
  title =	 {Receptive Process Theory},
  journal =	 {Acta Informatica},
  year =	 1992,
  volume =	 29,
  number =	 1,
  pages =	 {17--31},
  month =	 feb,
  annote =	 {A definition of receptive processes, the basis for work
		 such as josephs2003analysis, but what may be a cleaner set
		 of definitions.
		 
		 A process is a triple (I, O, F), inputs, outputs, and a set
		 of failure traces. I and O are disjoint. F is characterized
		 by five closure conditions applied to divergences(F) and
		 traces(F), the set of divergent traces in F and the set of
		 all traces (i.e., also quiescent ones) in F. Proves a number
		 of lemmas about the relationships between these sets.
		 
		 Goes on to give a pile of algebraic operators much like
		 those in Hoare's CSP. Mentions dataflow, but only refers
		 readers to he1990theory (which doesn't talk much about Kahn
		 dataflow) and an Oxford technical report by him, He, and
		 Hoare.
		 
		 At the end, says that dataflow is something like requiring
		 the order of inputs and outputs to not matter, and
		 delay-insensitive circuits to prohibit two events on the
		 same wire. }
}

@InProceedings{josephs1993overview,
  author =	 {Mark B. Josephs and Jan Tijmen Udding},
  title =	 {An Overview of {D-I} Algebra},
  booktitle =	 {Proceedings of the 26th Hawaii International Conference on
		 System Sciences},
  year =	 1993,
  volume =	 {I},
  pages =	 {329--338},
  address =	 {Hawaii},
  month =	 jan,
  annote =	 {Cited by josephs1999modeling.
		 
		 One big difference between this and udding1986formal: the
		 earlier work effectively prohibits the environment from
		 sending input signals at particular times, but this work
		 allows it (more like the receptive process work of Josephs)
		 and says the process ignores it.
		 
		 Uses a CSP-like notation a!;c? as well as the mu operator
		 for least fixpoint.
		 
		 Explicitly includes a choice operator (e.g., the process may
		 behave like this or like that). Also input-guarded choice.
		 
		 Has a lot of nondeterministic choice-like operators, such as
		 "skip guards" -- defaults for multi-way choices that can be
		 taken at any time. Also, you can make two guards the same
		 and either can be chosen.
		 
		 Interesting rewrite rules that talk about how things evolve
		 in time.
		 
		 They observe that the criteria in Udding's thesis make it
		 difficult to talk about when processes can be composed at
		 all. They claim that this formalism makes it much easier.
		 
		 A little disappointing, really. Just a pile of laws about
		 how their algebra behaves (e.g., if you emit a signal and
		 apply it to the parallel composition, you get...) and no
		 theorems. In particular, they don't address why their
		 algebra is delay-insensitive.}
}

@Article{josephs1999modeling,
  author =	 {Mark B. Josephs and Steven M. Nowick and C. H. (Kees) {van
		 Berkel}},
  title =	 {Modeling and design of asynchronous circuits},
  journal =	 procieee,
  year =	 1999,
  volume =	 87,
  number =	 2,
  pages =	 {232--242},
  month =	 feb,
  annote =	 {Survey of Asynchronous styles.}
}

@InProceedings{josephs2000delay-insensitive,
  author =	 {Mark B. Josephs and Dennis Furey},
  title =	 {Delay-insensitive interface specification and synthesis},
  booktitle =	 date,
  year =	 2000,
  pages =	 {169--175},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Randomly located delay-insensitive paper. Based on
		 DI-Algebra due to Josephs and J. T. Udding (in their
		 bibliography).
		 
		 Defines a concrete syntax for DI-Algebra, describes a
		 translation of it into Petri nets.}
}

@InProceedings{josephs2003analysis,
  author =	 {Mark B. Josephs},
  title =	 {An analysis of determinacy using a trace-theoretic model of
		 asynchronous circuits},
  booktitle =	 async,
  year =	 2003,
  pages =	 {121--130},
  address =	 {Vancouver, BC, Canada},
  month =	 may,
  annote =	 {Random search of Josephs found this. Specifically addresses
		 the determinism issue.
		 
		 Interesting stuff: a class of processes that, when combined,
		 remain deterministic. "Future work" explicitly mentions Kahn
		 networks and how the relationship isn't fully understood.
		 
		 Trick is to add a different operator that is concurrent
		 without parallelism.
		 
		 Starts from his receptive process theory.
		 
		 Traces, much like van Schepshut or Udding, but requires
		 processes to always accept more input. Divergence occurs
		 when the environment gives it something it doesn't like.
		 Language accepted by a process is the set of traces minus
		 the diverging ones. Not quite.
		 
		 Basic idea is to define a composition operator that both
		 composes two processes in parallel and conceals their
		 communication.
		 
		 Very nicely written.
		 
		 Receptive: any input is allowed at any time. Set of traces
		 mostly restricts the possible outputs. However, not all
		 inputs are desired. Divergent traces are those in which an
		 unacceptable input is received, then anything can happen
		 (any sequence of inputs and outputs may follow).
		 
		 Failure traces are oddly named: they correspond to points
		 where the process won't emit any more outputs without
		 additional inputs (i.e., quiescent states) or when the
		 process becomes divergent.
		 
		 divergent traces \subseteq failure traces \subseteq traces
		 
		 }
}

@InProceedings{josephs2004models,
  author =	 {Mark B. Josephs},
  title =	 {Models for Data Flow Sequential Processes},
  booktitle =	 {25 Years of CSP},
  year =	 2004,
  address =	 {London South Bank University, UK},
  month =	 jul,
  annote =	 {Got this from Josephs directly. He writes
		 
		 I'm attaching a paper that I presented at the "25 Years of
		 CSP" event, 7-8 July 2004. A slightly-revised version will
		 be published by Springer shortly
		 
		 },
  optpages =	 {FIXME},
  url =		 {http://www.lsbu.ac.uk/menass/csp25/},
  bdsk-url-1 =	 {http://www.lsbu.ac.uk/menass/csp25/}
}

@TechReport{joshi2008mpeg,
  author =	 {Keerti Joshi and Delvin Kellebrew},
  title =	 {A {MPEG} Decoder in {SHIM}},
  institution =	 cucs,
  year =	 2008,
  number =	 {CUCS--057--08},
  address =	 nyny,
  month =	 dec,
  annote =	 {About their experiences implementing the StreamIt MPEG
		 decoder in SHIM. Not complete, but fairly close.}
}

@InProceedings{jourdan1993verifying,
  author =	 {M. Jourdan and F. Maraninchi and A. Olivero},
  title =	 {Verifying quantitative real-time properties of synchronous
		 programs},
  booktitle =	 cav1993,
  year =	 {1993},
  series =	 lncs,
  volume =	 {697},
  pages =	 {347--358},
  address =	 cav1993_a,
  month =	 jun,
  publisher =	 sv,
  abstract =	 {We apply the verification-techniques available for timed
		 graphs, and particularly symbolic model-checking algorithm,
		 to the Argos synchronous language. We extend the language
		 with a single delay construct that allows one to express
		 watchdogs and timeouts, at any level in the parallel or
		 hierarchic structure of a program. We define the semantics
		 of this extended language in terms of timed graphs, and show
		 that it is a "convenient" extension of the pure Argos
		 synchronous semantics. Indeed, for discrete time, the two
		 semantics coincide. The timed graph semantics can be viewed
		 as a continuous time semantics for Argos. We extend the
		 Argos compiler and connect it to the KRONOS tool which
		 implements the above mentioned model-checking algorithm.},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/README.html},
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/README.html}
}

@InProceedings{jourdan1994modular,
  author =	 {M. Jourdan and F. Maraninchi},
  title =	 {Modular State/Transition Approach for Programming Real-Time
		 Systems},
  booktitle =	 {ACM SIGPLAN Workshop on Language, Compiler, and Tool
		 Support for Real-time Systems},
  year =	 {1994},
  address =	 {Orlando, Florida},
  month =	 jun,
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/ArgosSIGPLAN94.ps.Z}
		 ,
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/ArgosSIGPLAN94.ps.Z}
		 
}

@InProceedings{jourdan1994multiparadigm,
  author =	 {M. Jourdan and F. Lagnier and F. Maraninchi and P.
		 Raymond},
  title =	 {A Multiparadigm Language for Reactive Systems},
  booktitle =	 {Proceedings of the 1994 International Conference on
		 Computer Languages},
  year =	 {1994},
  address =	 {Toulouse, France},
  month =	 may,
  organization = ieeecs,
  annote =	 {Wan-Teh Chang's pointer},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/Argos-Lustre-ICCL94.ps.gz}
		 ,
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/Argos-Lustre-ICCL94.ps.gz}
		 
}

@Article{jullig1993applying,
  author =	 {Richard K. J\"ullig},
  title =	 {Applying formal software synthesis},
  journal =	 software,
  year =	 1993,
  volume =	 10,
  number =	 3,
  pages =	 {11--22},
  month =	 may,
  annote =	 {Part of a special issue. He's from the Kestrel Institute.
		 
		 Very, very formal approach where they model things, have a
		 hierarchy of domains, and model things with hierarchical
		 finite-state machines. Doesn't apper that practical.
		 
		 IEEE Software special issue on software synthesis
		 
		 Nothing too interesting, actually.
		 
		 May 1993
		 
		 Found from the link:
		 http://www.cs.utexas.edu/users/novak/apbib.html }
}

@Book{jungleib1995general,
  author =	 {Stanley Jungleib},
  title =	 {General {MIDI}},
  publisher =	 {A-R Editions},
  year =	 {1995},
  address =	 {Madison, Wisconsin}
}

@Book{jurafsky2009speech,
  author =	 {Daniel Jurafsky and James H. Martin},
  title =	 {Speech and Language Processing},
  publisher =	 ph,
  year =	 2009,
  edition =	 {Second},
  annote =	 {Julia uses this as a textbook for her speech recognition
		 class.}
}

@Book{kaehler1986taste,
  author =	 {T. Kaehler and D. Patterson},
  title =	 {A Taste of Smalltalk},
  publisher =	 {W. W. Norton},
  year =	 {1986},
  annote =	 {Really `Towers of Hanoi' in Smalltalk.}
}

@Article{kahle2005introduction,
  author =	 {James A. Kahle and Michael N. Day and H. Peter Hofstee and
		 Charles R. Johns and Theodore R. Maeurer and David Shippy},
  title =	 {Introduction to the {Cell} multiprocessor},
  journal =	 {IBM Journal of Research and Development},
  year =	 2005,
  volume =	 49,
  number =	 {4/5},
  pages =	 {589--604},
  month =	 {July/September},
  annote =	 {http://researchweb.watson.ibm.com/journal/rd/494/kahle.html}
		 
}

@InProceedings{kahn1974semantics,
  author =	 {Gilles Kahn},
  title =	 {The Semantics of a Simple Language for Parallel
		 Programming},
  booktitle =	 {Information Processing 74: Proceedings of IFIP Congress
		 74},
  year =	 1974,
  pages =	 {471--475},
  address =	 {Stockholm, Sweden},
  month =	 aug,
  publisher =	 {North-Holland},
  annote =	 {The source for Kahn Process Networks.
		 
		 He writes "Any process written in the simple programming
		 language of section 1 corresponds to a set of continuous
		 functions. The recursive definition of these functions is
		 obtained by the usual method of McCarthy for converting
		 flow-chart programs to recursive definitions."}
}

@InProceedings{kahn1977coroutines,
  author =	 {Gilles Kahn and David B. MacQueen},
  title =	 {Coroutines and Networks of Parallel Processes},
  booktitle =	 {Information Processing 77: Proceedings of IFIP Congress
		 77},
  year =	 {1977},
  pages =	 {993--998},
  address =	 {Toronto, Canada},
  month =	 aug,
  publisher =	 {North-Holland},
  annote =	 {About a proposed language that they implemented based on
		 Kahn's networks.}
}

@Article{kahn1993concrete,
  author =	 {Gilles Kahn and Gordon D. Plotkin},
  title =	 {Concrete Domains},
  journal =	 tcs,
  year =	 1993,
  volume =	 121,
  number =	 {1--2},
  pages =	 {187--277},
  month =	 dec,
  annote =	 {Version of a 1978 technical report. See
		 brookes1993historical. Very long: 91 pages.
		 
		 Starts with the standard definitions of partial orders,
		 chains, etc.
		 
		 Ultimately arrives at the definition of a computation domain
		 as a partial order that has a number of strong
		 well-behavedness properties, shows these are closed under
		 cartesian product, and plenty of other closure results.
		 
		 Information matrices are another construct they define and
		 then prove properties about. Very, very complicated.
		 Abstract enough to make it very confusing; hard to connect
		 to the real world.}
}

@InProceedings{kahng2001design,
  author =	 {A. B. Kahng},
  title =	 {Design Technology Productivity in the {DSM} Era},
  booktitle =	 asp-dac,
  year =	 2001,
  pages =	 {443-448},
  month =	 jan,
  entered =	 {Luca Carloni,11/18/02},
  oldkey =	 {kahng_aspdac01},
  sedtransform = {s/kahng_aspdac01/kahng2001design/}
}

@PhDThesis{kalavade1995system-level,
  author =	 {Asawaree Prabhakar Kalavade},
  title =	 {System-Level Codesign of Mixed Hardware-Software Systems},
  school =	 ucb,
  year =	 {1995},
  note =	 {Available as UCB/ERL M95/88}
}

@Article{kalla2004ibm-power5,
  author =	 {R. Kalla and B. Sinharoy and J. M. Tendler},
  title =	 {{IBM Power5} Chip: A Dual-Core Multithreaded Processor},
  journal =	 ieeemicro,
  year =	 2004,
  volume =	 24,
  number =	 2,
  pages =	 {40-47},
  month =	 mar,
  affiliation =	 {IBM},
  annote =	 {dual core architecture},
  entered =	 {Luca Carloni,10/5/04},
  oldkey =	 {kalla04},
  sedtransform = {s/kalla04/kalla2004ibm-power5/}
}

@Article{kam1976global,
  author =	 {John B. Kam and Jeffrey D. Ullman},
  title =	 {Global Data Flow Analysis and Iterative Algorithms},
  journal =	 {Journal of the ACM},
  year =	 1976,
  volume =	 23,
  number =	 1,
  pages =	 {158--171},
  doi =		 {http://doi.acm.org/10.1145/321921.321938},
  issn =	 {0004-5411},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/321921.321938}
}

@Book{kam1996synthesis,
  author =	 {Timothy Kam and Tiziano Villa and Robert K. Brayton and
		 Alberto Sangiovanni-Vincentelli},
  title =	 {Synthesis of Finite State Machines: Functional
		 Optimization},
  publisher =	 kl,
  year =	 1996,
  address =	 kl_a,
  annote =	 {Functional optimization: choosing states. See also
		 SED:villa:97a}
}

@Article{kam2000eda,
  author =	 {Timothy Kam and Shishpal Rawat and Desmond Kirkpatrick and
		 Rabindra (Rob) Roy and Gregory S. Spirakis and Naveed
		 Sherwani and Craig Peterson},
  title =	 {{EDA} Challenges Facing Future Microprocessor Design},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1498--1506},
  month =	 {dec},
  affiliation =	 {Intel Corporation},
  annote =	 {- In the year 2006 a high-performance microprocessor design
		 team will have an available silicon budget of $2.5$ billion
		 to $5$ billion transistors. - local clock trends to improve
		 performance will force increasing divergence between local
		 and global clock (based on ITRS99 table) - the structural
		 RTL model becomes the golden mode: need for more abstraction
		 - the designer needs the following essential details to make
		 high-level design worthwhile: 1) HLM must capture popular
		 and evolving architecture building blocks 2) HLM should
		 enable effective design exploration, 3) mapping to quality
		 RTL, ...},
  entered =	 {Luca Carloni,05/12/01},
  keywords =	 {dsm, microprocessor design, cad flows},
  oldkey =	 {kam00},
  sedtransform = {s/kam00/kam2000eda/}
}

@Book{kamal2008embedded,
  author =	 {Raj Kamal},
  title =	 {Embedded Systems: Architecture, Programming, and Design},
  publisher =	 mgh,
  year =	 2008,
  annote =	 {A rather awful software-focused embedded software book.}
}

@InProceedings{kambe2001c-based,
  author =	 {Takashi Kambe and Akihisa Yamada and Koichi Nishida and
		 Kazuhisa Okada and Mitsuhisa Ohnishi and Andrew Kay and Paul
		 Boca and Vince Zammit and Toshio Nomura},
  title =	 {A {C}-based synthesis system, {Bach}, and its application},
  booktitle =	 asp-dac,
  year =	 2001,
  pages =	 {151--155},
  address =	 {Yokohama, Japan},
  publisher =	 {ACM Press},
  annote =	 {Cited by takahashi2000thread},
  doi =		 {http://doi.acm.org/10.1145/370155.370309},
  isbn =	 {0-7803-6634-4},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/370155.370309}
}

@InProceedings{kamkar1990bug,
  author =	 {Mariam Kamkar and Nehid Shahmehri and Peter Fritzson},
  title =	 {Bug Localization by Algorithmic Debugging and Program
		 Slicing},
  booktitle =	 {Programming Language Implementation and Logic Programming:
		 Proceedings / International Workshop PLILP '90,
		 {Link\"oping}, Sweden, August 20-22, 1990},
  year =	 {1990},
  series =	 lncs,
  volume =	 {456},
  publisher =	 {sv}
}

@InProceedings{kammler2009designing,
  author =	 {David Kammler and Diandian Zhang and Peter Schwabe and
		 Hanno Scharwaechter and Markus Langenberg and Dominik Auras
		 and Gerd Ascheid and Rudolf Mathar},
  title =	 {Designing an {ASIP} for Cryptographic Pairings over
		 {Barreto-Naehrig} Curves},
  booktitle =	 {Proceedings of the International Workshop on Cryptographic
		 Hardware and Embedded Systems (CHES)},
  year =	 2009,
  series =	 lncs,
  volume =	 5747,
  pages =	 {254--271},
  address =	 {Lausanne, Switzerland},
  publisher =	 sv
}

@InProceedings{kandemir2002compiler-directed,
  author =	 {Mahmut Kandemir and A. Choudhary},
  title =	 {Compiler-directed scratch pad memory hierarchy design and
		 management},
  booktitle =	 dac02,
  year =	 2002,
  pages =	 {628--633},
  address =	 dac02a,
  month =	 jun,
  annote =	 {Scratchpad memory}
}

@InProceedings{kandemir2002exploiting,
  author =	 {Mahmut Kandemir and J. Ramanujam and A. Choudhary},
  title =	 {Exploiting shared scratch-pad memory space in embedded
		 multiprocessor systems},
  booktitle =	 dac02,
  year =	 2002,
  pages =	 {219--224},
  address =	 dac02a,
  month =	 jun,
  annote =	 {Scratchpad memory}
}

@Article{kant1993synthesis,
  author =	 {Elaine Kant},
  title =	 {Synthesis of Mathematical-Modeling Software},
  journal =	 software,
  year =	 1993,
  volume =	 10,
  number =	 3,
  pages =	 {30--41},
  month =	 may,
  annote =	 {Part of a special issue. She's from Schlumberger.
		 
		 Looks like a system for people who don't want to use
		 traditional programming languages. Almost like TurboTax
		 where it asks the users lots of questions.}
}

@Article{kapasi2003programmable,
  author =	 {U. J. Kapasi and S. Rixner and W. J. Dally and B. Khailany
		 and J. H. Ahn and P. Mattson and J. D. Owens},
  title =	 {Programmable Stream Processors},
  journal =	 computer,
  year =	 2003,
  volume =	 36,
  number =	 8,
  pages =	 {54--62},
  address =	 {Los Alamitos, CA, USA},
  doi =		 {http://dx.doi.org/10.1109/MC.2003.1220582},
  issn =	 {0018-9162},
  publisher =	 {IEEE Computer Society Press},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/MC.2003.1220582}
}

@Article{kaplan2003patent,
  author =	 {Jonathan T. Kaplan},
  title =	 {Patent Disclosure Policy and Willful Infringement
		 Doctrine},
  journal =	 {Patent Strategy \& Management},
  year =	 2003,
  volume =	 4,
  number =	 3,
  pages =	 {6--7},
  month =	 jul,
  annote =	 {From my friend Jonathan. Discusses his objections to the
		 willful infringement policy, arguing that this actually
		 guarantees that nobody reads the patent literature.}
}

@TechReport{karger1974multics,
  author =	 {Paul A. Karger and Roger R. Schell},
  title =	 {Multics Security Evaluation: Vulnerability Analysis},
  institution =	 {Information Systems Technology Applications Office, Deputy
		 for Command and Management Systems, Electronic Systems
		 Division (AFSC)},
  year =	 1974,
  number =	 {ESD--TR--74--193 Vol. II},
  address =	 {L. G. Hanscom AFB, Maryland},
  month =	 jun,
  annote =	 {Paul Karger said this inspired Ken Thompson.
		 
		 This is the Air Force Report that inspired Ken Thompson's
		 work:
		 
		 Karger, P.A. and R.R. Schell, Multics Security Evaluation:
		 Vulnerability Analysis, ESD-TR-74-193, Vol. II, June 1974,
		 HQ Electronic Systems Division: Hanscom AFB, MA. URL:
		 http://csrc.nist.gov/publications/history/karg74.pdf
		 
		 This was reprinted at the ACSAC 2002 conference in their
		 historic papers section:
		 
		 Karger, P.A. and R.R. Schell. Thirty Years Later: Lessons
		 from the Multics Security Evaluation. in Proceedings of the
		 18th Annual Computer Security Applications Conference. 2002,
		 Las Vegas, NV: IEEE Computer Society. p. 119-126. URL:
		 http://www.acsac.org/2002/papers/classic-multics.pdf
		 
		 },
  url =		 {http://csrc.nist.gov/publications/history/karg74.pdf},
  bdsk-url-1 =	 {http://csrc.nist.gov/publications/history/karg74.pdf}
}

@TechReport{karger2002thirty,
  author =	 {Paul A. Karger and Roger R. Schell},
  title =	 {Thirty Years Later: Lessons from the Multics Security
		 Evaluation},
  institution =	 {IBM},
  year =	 2002,
  number =	 {RC 22534},
  address =	 {Yorktown Heights, NY},
  month =	 sep,
  annote =	 {From Paul Karger. Tech report version of something that
		 appeared in the ACSAC 2002 conference.}
}

@Article{karim2002interconnect,
  author =	 {F. Karim and A. Nguyen and S. Dey},
  title =	 {An Interconnect Architecture for Networking Systems on
		 Chips},
  journal =	 micro,
  year =	 {2002},
  volume =	 {22},
  number =	 {5},
  pages =	 {36-45},
  issn =	 {36-45},
  oldkey =	 {karim02},
  sedtransform = {s/karim02/karim2002interconnect/}
}

@InProceedings{karnik2002sub-90nm,
  author =	 {T. Karnik and S. Borkar and V. De},
  title =	 {Sub-90nm Technologies Challenges and Opportunities for
		 {CAD}},
  booktitle =	 iccad,
  year =	 2002,
  pages =	 {203-206},
  month =	 nov,
  oldkey =	 {karnik02},
  sedtransform = {s/karnik02/karnik2002sub-90nm/}
}

@Article{karp1966properties,
  author =	 {Richard M. Karp and Raymond E. Miller},
  title =	 {Properties of a Model for Parallel Computations:
		 Determinacy, Termination, and Queueing},
  journal =	 {SIAM Journal on Applied Mathematics},
  year =	 1966,
  volume =	 14,
  number =	 6,
  pages =	 {1390--1411},
  month =	 nov,
  annote =	 {A slightly less restricted form of SDF. Requires a minimum
		 number of tokens on each arc that may be more than the
		 number consumed when the process fires. Determinate, may be
		 statically scheduled, bounded, and decidable.
		 
		 Very nice, mathematical writeup. Associates with each edge
		 four integers: initial buffer contents, number output,
		 number input, and input threshold.
		 
		 Includes a proof of determinancy. Proceeds in two steps:
		 prove that the number of times each process executes and the
		 total number of data values that pass through each queue is
		 fixed, then prove that the sequence of data values is
		 therefore unique. Proof is by contradiction: consider two
		 proper executions and show that if number the of occurrences
		 is different it leads to a contradiction. The proof of the
		 second theorem follows by noting that each process is
		 assumed to be a function.
		 
		 Definition of an execution: a sequence of sets of processes
		 that can be executed concurrently. Such a set is valid if it
		 doesn't underflow a buffer or fire a process before there
		 are enough tokens.
		 
		 A proper execution is a fair one, i.e., that every process
		 that could fire eventually does.}
}

@Article{karp1978characterization,
  author =	 {Richard M. Karp},
  title =	 {A characterization of the minimum cycle mean in a digraph},
  journal =	 {Discrete Mathematics},
  year =	 1978,
  volume =	 23,
  number =	 3,
  pages =	 {309--311},
  month =	 sep,
  annote =	 {Basic discussion of the minimum cycle mean. Points out that
		 any solution to the negative cycle problem can be used.}
}

@InProceedings{kastner2001instruction,
  author =	 {Ryan Kastner and Seda Ogrenci Memik and Elaheh Bozorgzadeh
		 and Majid Sarrafzadeh},
  title =	 {Instruction Generation for Hybrid Reconfigurable Systems},
  booktitle =	 iccad,
  year =	 2001,
  pages =	 {127--139},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Really dumb: "we found MAC"}
}

@InProceedings{katagiri2000hardware,
  author =	 {Hisaaki Katagiri and Keiichi Yasumoto and Akira Kitajima
		 and Teruo Higashino and Kenichi Taniguchi},
  title =	 {Hardware implementation of communication protocols modeled
		 by concurrent {EFSMs} with multi-way synchronization},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {762--767},
  address =	 dac00a,
  month =	 jun,
  annote =	 {Relvant to the SHIM-to-hardware stuff.
		 
		 Cites a bunch of stuff on formal general of hardware from
		 SDL, LOTOS, Estelle, etc. Protocol synthesis seems to be
		 their background.
		 
		 EFSMs to synthesizable RTL VHDL. Multi-way rendezvous.
		 
		 Sort of an interesting multi-way rendezvous, though: they
		 have the ability to synchronize among only subsets of
		 processes. They use a LOTOS-like notation for specifying
		 this (such things are called "gates" in LOTOS).
		 
		 This partial multi-way rendezvous means that many
		 combinations are possible. They enumerate all these
		 combinations (their language allows you to specify exactly
		 when things must synchronize together and when subsets are
		 allowed).
		 
		 They speak of a rendezvous table -- an enumeration of all
		 the ways the processes may communicate. They cite their own
		 reference [15]. They explicitly avoid cases where multiple
		 writers are operating on the same channel (but decide among
		 them nondeterministically?).
		 
		 They use a network switch as an example. Their communication
		 synthesis naturally avoids contention over a shared resource
		 (a FIFO in the network switch example) by avoiding multiple
		 writes to the same channel. They enumerate the possible
		 synchronization behaviors (the rendezvous table) and build
		 the hardware from it.
		 
		 The hardware consists of logic that check whether any rows
		 of the rendezvous table can be fired, logic for doing the
		 actual data movement, and logic for avoiding conflicts
		 (reminds me a little of the Bluespec problem). The
		 difference between this and SHIM is that there are conflicts
		 and predictes on communication that are a lot more complex.
		 
		 Used this stuff to implement switching fabrics in ATM
		 switches. Interesting. Got good performance.
		 
		 Take-away ideas: * Enumerating the conditions under which
		 rendezvous takes place. * Using packet switching circuits as
		 compelling examples.
		 
		 [6] W. Glunz and G. Venzl. Using SDL for hardware design. In
		 Proc. 5th SDL Forum, 1991.
		 
		 [9] Carlos Delgado Kloos, Practical Formal Methods for
		 Hardware Design, Springer-Verlag New York, Inc., Secaucus,
		 NJ, 2001
		 
		 In print, but SpringerLink doesn't know about it?
		 
		 [11] Riccardo Sisto, A method to build symbolic
		 representations of LOTOS specifications, Proceedings of the
		 Fifteenth IFIP WG6.1 International Symposium on Protocol
		 Specification, Testing and Verification XV, p.331-346, June
		 01, 1995
		 
		 [14] Jacek Wytrebowicz, Hardware specification generated
		 from Estelle, Proceedings of the Fifteenth IFIP WG6.1
		 International Symposium on Protocol Specification, Testing
		 and Verification XV, p.435-450, June 01, 1995
		 
		 [15] Keiichi Yasumoto , Akira Kitajima , Teruo Higashino ,
		 Kenichi Taniguchi, Hardware synthesis from protocol
		 specifications in LOTOS, Proceedings of the FIP TC6 WG6.1
		 Joint International Conference on Formal Description
		 Techniques for Distributed Systems and Communication
		 Protocols (FORTE XI) and Protocol Specification, Testing and
		 Verification (PSTV XVIII), p.405-420, November 03-06, 1998
		 
		 Interesting sounding:
		 
		 [4] Wolfgang Ecker, Manfred Huber, VHDL-based communication
		 and synchronization synthesis, Proceedings of the conference
		 on European design automation, p.458-462, September 18-22,
		 1995, Brighton, England
		 
		 ecker1995vhdl-based
		 
		 }
}

@Book{katz1985information,
  author =	 {R. Katz},
  title =	 {Information Management for Engineering Design},
  publisher =	 sv,
  year =	 {1985},
  series =	 {Surveys in Computer Science},
  annote =	 {Good discussion of database issues for CAD systems}
}

@Book{katz1994contemporary,
  author =	 {Randy H. Katz},
  title =	 {Contemporary Logic Design},
  publisher =	 bc,
  year =	 {1994},
  address =	 bc_a,
  annote =	 {Purchased for CS 150, Spring 1995, the main text}
}

@Article{kautz1970necessity,
  author =	 {W. H. Kautz},
  title =	 {The Necessity of Closed Loops in Minimal Combinational
		 Circuits},
  journal =	 transcomp,
  year =	 1970,
  volume =	 {C-19},
  number =	 2,
  pages =	 {162--164},
  month =	 feb,
  annote =	 {Closed loops sometimes necessary: cited by Malik.
		 
		 Uses a simple three-cell loop built from six NOR gates
		 (drawn using an unusual notation) to argue that cycles are
		 sometimes necessary because the minimum non-cyclic
		 implementation of the same circuit must have at least seven
		 gates (uses previous results of all NOR-gate implementations
		 of three-input functions). A simple little paper, but an
		 interesting result. Cites earlier work by Short that showed
		 a similar thing for a transfer-contact network (think
		 relays).}
}

@InProceedings{kc05enexsh,
  author =	 {Gaurav S. Kc and Angelos D. Keromytis},
  title =	 {{e-NeXSh}: Achieving an Effectively Non-Executable Stack
		 and Heap vis System-Call Policing},
  booktitle =	 {Proceedings of the Annual Computer Security Applications
		 Conference (ACSAC)},
  year =	 2005,
  address =	 {Tucson, Arizona},
  month =	 dec,
  annote =	 {Al mentioned this. Monitors function and system calls and
		 checks them against acceptable behavior.}
}

@InProceedings{kc2003casper,
  author =	 {Gaurav S. Kc and Stephen A. Edwards and Gail E. Kaiser and
		 Angelos Keromytis},
  title =	 {{CASPER}: Compiler-Assisted Securing of Programs at
		 Runtime},
  booktitle =	 usenix,
  year =	 2003,
  note =	 {Submitted},
  annote =	 {Describes the XOR technique of obfuscating a stacked return
		 address. Rejected.},
  optaddress =	 {FIXME},
  optmonth =	 {FIXME},
  optpages =	 {FIXME}
}

@InProceedings{keding1998fridge,
  author =	 {Holger Keding and Markus Willems and Martin Coors and
		 Heinrich Meyr},
  title =	 {{FRIDGE}: a fixed-point design and simulation environment},
  booktitle =	 date,
  year =	 1998,
  pages =	 {429--435},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {More on the FRIDGE work. Talks about interpolating types
		 (e.g., how large should intermediate results be). Starts
		 with designer annotations on inputs and outputs and decides
		 everything in between. This version starts with a
		 floating-point C program and specializes things. They add a
		 "fixed" type to the language to represent things explicitly.
		 Looks like SystemC-like templates, but not using them yet.
		 
		 Seems to be mostly superceded by keding2001fast, which is
		 much clearer about the problems and solutions.
		 
		 Says the fixed-point code specialization is described in
		 Willems et al. 1997 (ICSPAT). I couldn't find this.
		 
		 Interpolation is described in detail in Willems et al., DAC
		 1997.}
}

@InProceedings{keding2001fast,
  author =	 {Holger Keding and Martin Coors and Olaf L\"uthje and
		 Heinrich Meyr},
  title =	 {Fast Bit-True Simulation},
  booktitle =	 dac01,
  year =	 2001,
  pages =	 {708--713},
  address =	 dac01a,
  month =	 jun,
  annote =	 {Generating efficient C code from dataflow. Starts with
		 SystemC, then refines. Describes their FRIDGE environment.
		 Very nice work. They do careful dataflow analysis to
		 determine where the binary point should be in each number
		 (intermediate result) using an algorithm Luthje described
		 only in German (luthje2000high, which seems to be
		 unavailable online) and also selects actual data types (int
		 vs. char) for each number. Very good speed-up over SystemC
		 libraries.
		 
		 * Selecting the position of the binary point * Selecting the
		 concrete data types implementing each * Dealing with casting
		 modes (rounding, truncation, etc.)
		 
		 See also luthje2001novel. This may be the English version of
		 the earlier work.
		 
		 }
}

@Book{keeth2007dram,
  author =	 {Brent Keeth and R. Jacob Baker and Brian Johnson and Feng
		 Lin},
  title =	 {DRAM Circuit Design: Fundamental and High-Speed Topics},
  publisher =	 {IEEE Press},
  year =	 2007,
  edition =	 {Second},
  isbn =	 9780470184752,
  annote =	 {Got the first chapter.}
}

@Book{keister1951design,
  author =	 {William Keister and Alistair E. Ritchie and Seth H.
		 Washburn},
  title =	 {The Design of Switching Circuits},
  publisher =	 {Van Nostrand},
  year =	 1951,
  address =	 {New York},
  annote =	 {Cited by huffman1957design as a definition of hazard. A
		 review of a related book mentioned this as a fundamental
		 reference. Part of the Bell Telephone Laboratories Series.
		 Ritchie was the father of C's Dennis Ritchie.
		 
		 Hardcore relay information. Gets into Boolean algebra (they
		 call it switching algebra).
		 
		 Was originally used as a course text at MIT.
		 
		 Doesn't have much history, although does cite
		 shannon1938symbolic as inspiration for using Boolean logic
		 for dealing with such circuits.
		 
		 Mostly relay-based, although tubes, diodes, and even
		 transistors make an appearance. "Specific values are not
		 quoted here since the device [transistor] is still in the
		 comparatively early developmental stage." p. 207
		 
		 Really nice historical book.}
}

@Article{keller1974towards,
  author =	 {Robert M. Keller},
  title =	 {Towards a theory of universal speed-independent modules},
  journal =	 {IEEE Transactions on Computers},
  year =	 1974,
  volume =	 {C--23},
  number =	 1,
  pages =	 {21--33},
  month =	 jan,
  annote =	 {Cited by patra1993building. I haven't seen it.}
}

@Article{keller1976formal,
  author =	 {Robert M. Keller},
  title =	 {Formal Verification of Parallel Programs},
  journal =	 cacm,
  year =	 1976,
  volume =	 19,
  number =	 7,
  pages =	 {371--384},
  month =	 jul,
  annote =	 {Found randomly on Keller's home page:
		 http://www.cs.hmc.edu/~keller/research/
		 
		 He was at Princeton, but now he's at Harvey Mudd.
		 
		 Fairly theoretical and abstract. Proposes a Petri-net-like
		 model. Doesn't appear to be relevant to delay-insensitive
		 things.}
}

@Article{kemerer1999empirical,
  author =	 {Chris F. Kemerer and Sandra Slaughter},
  title =	 {An empirical approach to studying software evolution},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 4,
  pages =	 {493--509},
  month =	 {July/August},
  annote =	 {Cited by mens2005challenges.
		 
		 Very nicely done bit of data collection, but mostly that.
		 Not even trying to build models.
		 
		 "In this paper, we have focused on the processes, design,
		 and structure of our empirical research into software
		 evolution. We began by reviewing the prior research of
		 software evolution. Our review revealed a limited number of
		 studies that have been largely focused in two major areas:
		 understanding and describing the dynamics of software
		 evolution and developing a taxonomy of maintenance
		 categories. These studies have revealed initial insights
		 into software evolution, suggesting that there may be
		 recognizable patterns in the evolution of software systems,
		 and that such patterns may be associated with system entropy
		 and other outcomes.}
}

@Book{kennedy2001optimizing,
  author =	 {Ken Kennedy and Randy Allen},
  title =	 {Optimizing Compilers for Modern Architectures},
  publisher =	 mk,
  year =	 2001,
  annote =	 {Mostly about FORTRAN parallelism?}
}

@Book{kent2001ultimate,
  author =	 {Steven L. Kent},
  title =	 {The Ultimate History of Video Games},
  publisher =	 {Prima Publishing},
  year =	 2001,
  annote =	 {Really comprehensive, with interesting interviews with
		 various people, but Herman has more detail.}
}

@TechReport{keppel1993tools,
  author =	 {David Keppel},
  title =	 {Tools and Techniques for Building Fast Portable Threads
		 Packages},
  institution =	 {University of Washington},
  year =	 {1993},
  number =	 {UWCSE 93--05--06},
  month =	 may,
  url =		 {http://www.cs.washington.edu/research/compiler/papers.d/quickthreads.html}
		 ,
  bdsk-url-1 =	 {http://www.cs.washington.edu/research/compiler/papers.d/quickthreads.html}
		 
}

@InProceedings{kern1999efficient,
  author =	 {Chrisoph Kern and Sreeranga P. Rajan and Masahiro Fujita},
  title =	 {An Efficient Safety Property Model Checker for Hardware and
		 Software Verification},
  booktitle =	 {Procedings of the High-Level Design Validation and Test
		 Workshop},
  year =	 1999,
  pages =	 {157--162},
  address =	 {San Diego, California},
  month =	 nov,
  annote =	 {From Tom. }
}

@Book{kernighan1978c,
  author =	 {Brian W. Kernighan and Dennis M. Ritchie},
  title =	 {The {C} Programming Language},
  publisher =	 ph,
  year =	 1978,
  address =	 ph_a,
  annote =	 {The first version of the C language}
}

@Book{kernighan1984unix,
  author =	 {Brian W. Kernighan and Rob Pike},
  title =	 {The {UNIX} Programming Environment},
  publisher =	 ph,
  year =	 {1984},
  annote =	 {Borrowed from Mike Turner. Mostly about the Bourne Shell.}
}

@Book{kernighan1988c,
  author =	 {Brian W. Kernighan and Dennis M. Ritchie},
  title =	 {The {C} Programming Language},
  publisher =	 ph,
  year =	 1988,
  address =	 ph_a,
  edition =	 {Second},
  annote =	 {The C bible for K&R}
}

@InProceedings{keromytis2002open,
  author =	 {Angelos D. Keromytis and Stephen A. Edwards and Vassilis
		 Prevelakis and Michael W. Hicks},
  title =	 {Open and Survivable Embedded Systems},
  booktitle =	 {Proceedings of the 3rd Annual IEEE Information Assurance
		 Workshop},
  year =	 2002,
  note =	 {Submitted},
  annote =	 {OASES: Contents of NSF proposal.},
  optaddress =	 {FIXME},
  optmonth =	 {FIXME},
  optpages =	 {FIXME}
}

@Article{keshav1998issues,
  author =	 {S. Keshav and Rosen Sharma},
  title =	 {Issues and Trends in Router Design},
  journal =	 {IEEE Communications Magazine},
  year =	 1998,
  volume =	 36,
  number =	 5,
  pages =	 {144-151},
  month =	 may,
  annote =	 {from the Utah site: http://www.cs.utah.edu/~cs6935/
		 
		 Excellent introduction. This plus mckeown1997fast provides
		 an excellent summary to the router world.
		 
		 Basic architecture of a router: input ports, output ports,
		 switching fabric, and a routing processor.
		 
		 Ports are on line cards, which may have 4, 8, or 16 ports
		 each.
		 
		 Switching fabric may be a bus, a crossbar, or shared memory.
		 
		 Routing processor: maintains the forwarding table, and
		 implements routing protocols.
		 
		 Backbone routers must be reliable and fast; price is
		 secondary since it is dwarfed by the communication links
		 they serve. Reliability is usually standard: redundancy,
		 hot-swapability, duplicate paths.
		 
		 Forwarding table: set of (network address/mask -> output
		 port) rules. An address may match multiple rules: one with
		 largest mask (most specific) is chosen. Routing rules are
		 often cached, but this often requires a very efficient cache.
		 
		 Packets on a backbone router: 40% are 40-byte TCP ACK
		 packets.
		 
		 Enterprise routers: must be low-cost, feature filled, and
		 have many ports. More scalable than hubs.
		 
		 Access routers: (i.e., between a DSL modem and a local
		 network). Large number of protocols, high-speed ports.
		 
		 Route lookup: Far more queries than updates. Goal is to
		 minimize the number of memory accesses per lookup. Usually
		 stored as a tree. Content-addressable memory one hardware
		 solution, but it doesn't scale.
		 
		 Brute-force lookup? Addresses are only 32 bits!
		 
		 Switching fabric: improvements in busses made most clever
		 things unnecessary. One approach: use an ATM switch as the
		 fabric (fixed-length packets). Banyan switching fabrics are
		 used sometimes.
		 
		 Scheduling the switching fabric is another big challenge,
		 especially with quality-of-service requirements.
		 
		 Using an ASIC is the usual way to reduce the cost of a port.
		 When they wrote this, it seemed like using processors on the
		 ports made sense for the backbone routers, and ASICs for
		 smaller networks.
		 
		 How much buffering? They suggest a bandwidth delay product.
		 If typical end-to-end communication delays for the backbone
		 are 100 ms, and the greatest bandwidth is 100 Mb/s, then
		 each port needs about 1.125 Mb.
		 
		 Enterprise routers may want their complete routing tables
		 downloaded at once. Backbone routers update theirs
		 dynamically and autonomously.
		 
		 Says that the hardware may become commodity, so the
		 differentiation will come in software. There's some move to
		 have hardware vendors open their hardware and provide APIs
		 that others can access. Telephone companies already do this
		 for PBX hardware through JTAPI.
		 
		 Open problems: Identifying particular flows (e.g., TCP
		 streams) to optimize cache performance. Resource
		 reservation: ensuring quality of service. Simplified
		 configuration and verification. It's easy to configure these
		 things incorrectly, and subtle to determine when that
		 happens. }
}

@Article{keutzer2000system-level,
  author =	 {Kurt Keutzer and Sharad Malik and A. Richard Newton and Jan
		 M. Rabaey and A. Sangiovanni-Vincentelli},
  title =	 {System-Level Design: Orthogonalization of Concerns and
		 Platform-Based Design},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1523--1543},
  month =	 {dec},
  annote =	 {Part of a nice special issue. Talks about a bunch of
		 Polis/VCC case studies, and describes their MESCAL
		 compiler.}
}

@InProceedings{keutzer2002asic,
  author =	 {Kurt Keutzer and Sharad Malik and A. Richard Newton},
  title =	 {From {ASIC} to {ASIP}: The Next Design Discontinuity},
  booktitle =	 iccd,
  year =	 2002,
  pages =	 {84--90},
  address =	 {Freiburg, Germany},
  month =	 sep,
  annote =	 {Martha found this}
}

@InProceedings{kiczales1997aspectoriented,
  author =	 {Gregor Kiczales and John Lamping and Anurag Menhdhekar and
		 Chris Maeda and Cristina Lopes and Jean-Marc Loingtier and
		 John Irwin},
  title =	 {Aspect-Oriented Programming},
  editor =	 {Mehmet Ak\c{s}it and Satoshi Matsuoka},
  booktitle =	 {Proceedings European Conference on Object-Oriented
		 Programming},
  year =	 1997,
  pages =	 {220--242},
  address =	 {Berlin, Heidelberg, and New York},
  publisher =	 {Springer-Verlag}
}

@Article{kiczales2001getting,
  author =	 {Gregor Kiczales and Erik Hilsdale and Jim Hugunin amd Mik
		 Kersten and Jeffrey Palm and William G. Griswold},
  title =	 {Getting Started with {AspectJ}},
  journal =	 cacm,
  year =	 2001,
  volume =	 44,
  number =	 10,
  pages =	 {59--65},
  month =	 oct,
  annote =	 { }
}

@Article{kiczales2001overview,
  author =	 {Gregor Kiczales and Erik Hilsdale and Jim Hugunin and Mik
		 Kersten and Jeffrey Palm and William G. Griswold},
  title =	 {An Overview of {AspectJ}},
  journal =	 {Lecture Notes in Computer Science},
  year =	 2001,
  volume =	 2072,
  pages =	 {327--355}
}

@InProceedings{kienhuis2000compaan,
  author =	 {Bart Kienhuis and Edwin Rijpkema and Ed Deprettere},
  title =	 {Compaan: deriving process networks from {Matlab} for
		 embedded signal processing architectures},
  booktitle =	 {Proceedings of the International Conference on Hardware
		 Software Codesign (CODES)},
  year =	 2000,
  pages =	 {13--17},
  address =	 {San Diego, California},
  month =	 may,
  annote =	 {Kienhuis was a postdoc of Edward Lee's at Berkeley}
}

@InProceedings{kildall1973unified,
  author =	 {G. Kildall},
  title =	 {A Unified Approach to Global Program Optimization},
  booktitle =	 popl,
  year =	 1973,
  pages =	 {194--206}
}

@InProceedings{killeen1993stream-interleaved,
  author =	 {Tim Killeen and Mehmet Celenk},
  title =	 {Stream-interleaved pipelined {RISC} processor design for
		 {SIMD} and {MIMD} system development},
  booktitle =	 {Proceedings of the Southeastern Symposium on System Theory
		 (SSST)},
  year =	 1993,
  pages =	 {452--456},
  address =	 {Tuscaloosa, Alabama},
  month =	 mar,
  annote =	 {Interleaved pipeline in a processor design. Cites
		 McCrackin. The basic idea behind Intel's Hyperthreading:
		 have multiple threads using a pipelined ALU.}
}

@InProceedings{kim1996efficient,
  author =	 {Sung-Kwan Kim and Sang Lyul Min and Rhan Ha},
  title =	 {Efficient Worst Case Timing Analysis of Data Caching},
  booktitle =	 {Proceedings of the {IEEE} Real-Time Technology and
		 Applications Symposium},
  year =	 1996,
  pages =	 {230--240},
  address =	 {Brookline, Massachusetts},
  month =	 jun,
  annote =	 {WCET paper. Data cache analysis.}
}

@InProceedings{kim1998hierarchical,
  author =	 {Wonjong Kim and Hynchul Shin},
  title =	 {Hierarchical {LVS} Based on Hierarchy Rebuilding},
  booktitle =	 asp-dac,
  year =	 1998,
  pages =	 {379--384},
  address =	 {Yokohama, Japan},
  month =	 feb,
  annote =	 {Compares a flat extracted netlist to a hierarchical spec by
		 regenerating the hierarchy.}
}

@InProceedings{kim2000pipeline,
  author =	 {Sangyun Kim and Peter A. Beerel},
  title =	 {Pipeline optimization for asynchronous circuits: complexity
		 analysis and an efficient optimal algorithm},
  booktitle =	 iccad,
  year =	 2000,
  pages =	 {296--302},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Cited by prakash2006slack. More on buffering pipelines.
		 They are worried about choosing the number of pipeline
		 stages. Something like retiming, but not quite. In
		 particular, they create latches.
		 
		 They do no consider pipelines with choice, although they
		 claim that it could be extended.
		 
		 The find the problem to be NP-complete and introduce a
		 branch-and-bound algorithm to attack it.
		 
		 They do allow fan-in and fan-out structures, though.}
}

@InProceedings{kim2005reengineering,
  author =	 {Moonzoo Kim and Jaejoon Lee and Kyo Chul Kang and Youngjin
		 Hong and Seokwon Bang},
  title =	 {Re-engineering software architecture of home service
		 robots: a case study},
  booktitle =	 icse,
  year =	 2005,
  pages =	 {505--513},
  address =	 {New York, NY, USA},
  publisher =	 {ACM Press},
  annote =	 {Used Esterel. Olivier saw a subset of these guys at ATVA.},
  doi =		 {http://doi.acm.org/10.1145/1062455.1062547},
  isbn =	 {1-59593-963-2},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1062455.1062547}
}

@InProceedings{kim2007three,
  author =	 {Jin Soo Kim and M. H. Sunwoo},
  title =	 {Three low power {ASIP} processor designs for
		 communications, video, and audio applications},
  booktitle =	 {Proceedings of the International Conference on Design and
		 Technology of Integrated Systems in Nanoscale Era (DTIS)},
  year =	 2007,
  pages =	 {241--244},
  address =	 {Rabat, Morocco},
  month =	 sep
}

@TechReport{kim2009using,
  author =	 {Sungjun Kim and Hiren D. Patel and Stephen A. Edwards},
  title =	 {Using a Model Checker to Determine Worst-case Execution
		 Time},
  institution =	 cucs,
  year =	 2009,
  number =	 {CUCS--038--09},
  address =	 nyny,
  month =	 sep,
  annote =	 {Rejected paper}
}

@InProceedings{kirner2003simple,
  author =	 {Raimund Kirner and Peter Puschner},
  title =	 {A Simple and Effective Fully Automatic Worst-Case
		 Execution-Time Analysis for Model-Based Application
		 Development},
  booktitle =	 {Proceedings of the First Workshop on Intelligent Solutions
		 in Embedded Systems {(WISES2003)}},
  year =	 2003,
  pages =	 {15--24},
  address =	 {Vienna, Austria},
  month =	 jun,
  annote =	 {Part of the WCET paper (CALC\_WCET\_167)}
}

@InProceedings{kirner2005classification,
  author =	 {Raimund Kirner and Peter Puschner},
  title =	 {Classification of {WCET} Analysis Techniques},
  booktitle =	 {Proceedings of the 8th {IEEE} International Symposium on
		 Object-Oriented Real-time Distributed Computing},
  year =	 2005,
  pages =	 {190--199},
  month =	 may,
  annote =	 {Part of the WCET paper. Formal discussion of WCET analysis
		 methods; classification of some tools (just a table, no
		 discussion).}
}

@InCollection{kirner2005using,
  author =	 {Raimund Kirner and Ingomar Wenzel and Bernhard Rieder and
		 Peter Puschner},
  title =	 {Using Measurements as a Complement to Static Worst-Case
		 Execution Time Analysis},
  booktitle =	 {Intelligent Systems at the Service of Mankind},
  publisher =	 {UBooks Verlag},
  year =	 2005,
  volume =	 2,
  month =	 dec,
  annote =	 {WCET paper. Tackles the question of industry adoption and
		 provides several ideas for using measurement as a complement
		 to static analysis.}
}

@InProceedings{kirsch2005programmable,
  author =	 {Christoph M. Kirsch and Marco A.A. Sanvido and Thomas A.
		 Henzinger},
  title =	 {A Programmable Microkernel for Real-Time Systems},
  booktitle =	 {Proceedings of the ACM/USENIX Conference on Virtual
		 Execution Environments (VEE)},
  year =	 2005,
  pages =	 {35--45},
  address =	 {Chicago, IL},
  month =	 jun,
  annote =	 {More PRET-related stuff.}
}

@InProceedings{kishinevsky1994characterizing,
  author =	 {Mike Kishinevsky and J\o{}rgen Staunstrup},
  title =	 {Characterizing speed-independence of high-level designs},
  booktitle =	 async,
  year =	 1994,
  pages =	 {44--53},
  address =	 {Salt Lake City, Utah},
  month =	 nov,
  annote =	 {Found along with patra1994efficient. Doesn't seem to have
		 anything to do with, say, udding1986formal.}
}

@InProceedings{kishinevsky1997coupling,
  author =	 {Michael Kishinevsky and Jordi Cortadella and Alex
		 Kondratyev and Luciano Lavagno and Alexander Taubin and Alex
		 Yakovlev},
  title =	 {Coupling Asynchrony and Interrupts: Place Chart Nets},
  booktitle =	 {Proceedings of the 18th Internation Conference on
		 Applications and Theory of Petri Nets},
  year =	 {1997},
  series =	 {Lecture Notes on Computer Science},
  pages =	 {328--347},
  address =	 {Toulouse, France},
  month =	 jun,
  publisher =	 {Springer-Verlag},
  annote =	 {Hierarchical preemption in Petri nets},
  number =	 {1248}
}

@Article{kistler2006cell,
  author =	 {Michael Kistler and Michael Perrone and Fabrizio Petrini},
  title =	 {Cell Multiprocessor Communication Network: Built for
		 Speed},
  journal =	 ieeemicro,
  year =	 2006,
  volume =	 26,
  number =	 3,
  pages =	 {10--23},
  month =	 {May-June},
  annote =	 {On Rebecca Collins's reading list.},
  doi =		 {http://dx.doi.org/10.1109/MM.2006.49},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/MM.2006.49}
}

@Article{klarlund1999domain-specific,
  author =	 {Nils Klarlund and Michael I. Schwartzbach},
  title =	 {A domain-specific language for regular sets of strings and
		 trees},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {378--386},
  month =	 may,
  annote =	 {Part of a special issue. UNREAD}
}

@InProceedings{klean1994faster,
  author =	 {Philip Klean and Sat8ish Rao and Monika Rauch and Sairam
		 Subramanian},
  title =	 {Faster Shortest-Path Algorithms for Planar Graphs},
  booktitle =	 {Proceedings of the Twenty-Sixth Annual ACM Symposium on the
		 Theory of Computing},
  year =	 {1994},
  pages =	 {27--37},
  publisher =	 {ACM}
}

@Book{kleene1952introduction,
  author =	 {Stephen Cole Kleene},
  title =	 {Introduction to Metamathematics},
  publisher =	 {Van Nostrand},
  year =	 1952,
  address =	 {Princeton, New Jersey},
  annote =	 {Cited by manna1972fixpoint as containing a proof of the
		 existence of a fixpoint.
		 
		 Seems to be a variety of editions and publishers for this
		 book.
		 
		 It's still in print by North-Holland, 11th reprint, 1996
		 edition. Not cheap.
		 
		 Very dense: mathematical logic and recursive function
		 theory. G\"odel's theorem. May contain some little bit about
		 fixpoints, but not much.}
}

@InCollection{klein2002agere,
  author =	 {Bill Klein and Juan Garza},
  title =	 {Agere Systems---Communications Optimized {PayloadPlus}
		 Network Processor Architecture},
  editor =	 {Mark Franklin and Patrick Crowley and Haldun Hadimioglu and
		 Peter Z. Onufryk},
  booktitle =	 {Network Processor Design: Issues and Practices},
  publisher =	 mk,
  year =	 2002,
  volume =	 1,
  chapter =	 10,
  pages =	 {219--233},
  annote =	 {Mentioned by Ilija.}
}

@Book{klerer1991design,
  author =	 {Melvin Klerer},
  title =	 {Design of Very High-Level Computer Languages: {A}
		 User-Oriented Approach},
  publisher =	 mgh,
  year =	 {1991},
  edition =	 {Second}
}

@Article{kligerman1986real-time,
  author =	 {Eugene Kligerman and Alexander D. Stoyenko},
  title =	 {Real-Time {Euclid}: {A} Language for reliable real-time
		 systems},
  journal =	 tosem,
  year =	 1986,
  volume =	 {SE-12},
  number =	 9,
  pages =	 {941--949},
  month =	 sep,
  annote =	 {Cited by puschner2000review as one of the first attacks on
		 the WCET problem. Cited by stoyenko1991analyzing. This is
		 apparently the seminal paper on Real-Time Euclid. Can't find
		 it online.}
}

@Article{klint1993meta-environment,
  author =	 {Paul Klint},
  title =	 {A Meta-Environment for Generating Programming
		 Environments},
  journal =	 {{ACM} Transactions on Software Engineering and
		 Methodology},
  year =	 {1993},
  volume =	 {2},
  number =	 {2},
  pages =	 {176--201},
  month =	 apr
}

@InProceedings{knapp1995behavioral,
  author =	 {David W. Knapp and Tai Ly and Don MacMillen and Ron
		 Miller},
  title =	 {Behavioral Synthesis Methodology for {HDL}-Based
		 Specification and Validation},
  booktitle =	 dac95,
  year =	 1995,
  pages =	 {286--291},
  address =	 dac95a,
  month =	 jun,
  annote =	 {Description of Synopsys Behavioral Compiler. Focuses on the
		 cycle-fixed, superstate-fixed, and free-floating I/O
		 modes.}
}

@Book{knapp1996behavioral,
  author =	 {David W. Knapp},
  title =	 {Behavioral Synthesis: Digital System Design Using the
		 Synopsys Behavioral Compiler},
  publisher =	 ph,
  year =	 1996,
  address =	 ph_a,
  annote =	 {Describes how to use Behavioral Compiler.}
}

@InProceedings{knight2007compilation,
  author =	 {Timothy J. Knight and Ji Young Park and Manman Ren
                  and Mike Houston and Mattan Erez and Kayvon
                  Fatahalian and Alex Aiken and William J. Dally and
                  Pat Hanrahan},
  title =	 {Compilation for explicitly managed memory hierarchies},
  booktitle =	 ppopp,
  year =	 2007,
  pages =	 {226--236},
  address =      {San Jose, California},
  month =        mar,
  doi =          {http://dx.doi.org/10.1145/1229428.1229477},
  annote =       {Starts with a memory hierarchy model and a very
                  abstract program model, then works on compiling it.}
}

@Article{knuth1984literate,
  author =	 {Donald E. Knuth},
  title =	 {Literate Programming},
  journal =	 {The Computer Journal},
  year =	 {1984},
  volume =	 {27},
  number =	 {2},
  pages =	 {97--111},
  month =	 may
}

@Book{knuth1984texbook,
  author =	 {Donald E. Knuth},
  title =	 {The TeXbook},
  publisher =	 aw,
  year =	 {1984},
  address =	 aw_a,
  annote =	 {Awful, but definitive.}
}

@Book{knuth1997art,
  author =	 {Donald E. Knuth},
  title =	 {The Art of Computer Programming},
  publisher =	 aw,
  year =	 1997,
  volume =	 {one},
  address =	 aw_a,
  edition =	 {Third}
}

@Book{knuth1997art-2,
  author =	 {Donald E. Knuth},
  title =	 {The Art of Computer Programming},
  publisher =	 aw,
  year =	 1997,
  volume =	 {two: Seminumerical Algorithms},
  address =	 aw_a,
  edition =	 {Third}
}

@Book{knuth1998art-3,
  author =	 {Donald E. Knuth},
  title =	 {The Art of Computer Programming},
  publisher =	 aw,
  year =	 1997,
  volume =	 {three},
  address =	 aw_a,
  edition =	 {second}
}

@InProceedings{koch1996structured,
  author =	 {Andreas Koch},
  title =	 {Structured Design Implementation: {A} Strategy for
		 Implementing Regular Datapaths on {FPGAs}},
  booktitle =	 {Proceedings of the Fourth International Symposium on
		 Field-Programmable Gate Arrays},
  year =	 {1996},
  pages =	 {151--157},
  address =	 {Monterey, California},
  month =	 feb,
  annote =	 {Datapaths on FPGAs}
}

@Article{kodandapani1986wirelist,
  author =	 {K. L. Kodandapani and Edward J. McGrath},
  title =	 {A Wirelist Compare Program for Verifying {VLSI} Layouts},
  journal =	 ieeedtc,
  year =	 {1986},
  volume =	 {3},
  number =	 {3},
  pages =	 {46--51},
  month =	 jun,
  annote =	 {Carl gave me this -- the internals of WLC}
}

@InProceedings{kodumal2005scalable,
  author =	 {J. Kodumal and A. Aiken},
  title =	 {A Scalable Constraint-Based Analysis Toolkit},
  booktitle =	 sas,
  year =	 2005,
  oldkey =	 {aiken1},
  sedtransform = {s/aiken1/kodumal2005scalable/}
}

@InProceedings{kohler1999readable,
  author =	 {Eddie Kohler and M. Frans Kaashoek and David R.
		 Montgomery},
  title =	 {A Readable {TCP} in the Prolac Protocol Langauges},
  booktitle =	 {Proceedings of the Conference on Applications,
		 technologies, architectures, and protocols for computer
		 communication (SIGCOMM)},
  year =	 1999,
  pages =	 {3--13},
  address =	 {Cambridge, Massachusetts},
  month =	 aug,
  organization = {ACM},
  annote =	 {Well-written. Kaashoek is an associate professor at MIT.
		 
		 Language consists of expressions (not statements). Yacc-like
		 in that it includes uninterpreted actions. Does not provide
		 a mechanism for allocating heap storage: expects it to be
		 allocated from a C action. Funny access controls: ability to
		 selectively hide and reveal methods.
		 
		 Object-oriented; heavily optimized. Tries to remove dynamic
		 dispatch---all were removed in their TCP implementation.
		 Heavy use of inlining, helped significantly by removing
		 dynamic dispatch.
		 
		 Compiles Prolac into C.
		 
		 Their TCP implementation is about 1/3 the size of the Linux
		 kernel code. Sending seems about the same, but their receive
		 speeds were not as good. They had a few extra packet copies.
		 
		 Language definition seems like mostly plumbing and fairly
		 low-level. Pointers are provided, so it's probably difficult
		 to analyze. The built-in data types are very C-like:
		 integers, etc., but no floating-point, and no strings,
		 buffers, etc. Only communication-specific constructs seem to
		 be "inline" and "outline" directives, which control how the
		 compiler places the code to affect I-cache behavior.
		 
		 Not a very interesting language to compile: no concurrency,
		 no high-level data types. Main challenge is removing
		 object-oriented "features" such as small methods, dynamic
		 dispatch, exceptions, etc. },
  url =		 {http://www.pdos.lcs.mit.edu},
  bdsk-url-1 =	 {http://www.pdos.lcs.mit.edu}
}

@Article{kohler2000click,
  author =	 {Eddie Kohler and Robert Morris and Benjie Chen and John
		 Jannotti and M.~Frans Kaashoek},
  title =	 {{The Click Modular Router}},
  journal =	 {ACM Transactions on Computer Systems},
  year =	 2000,
  volume =	 18,
  number =	 3,
  pages =	 {263--297},
  month =	 {August},
  annote =	 {The paper describes the use of an architecture similar to
		 x-Kernel to build routers. Router packet processing is
		 organized into a graph of processing elements running in
		 Linux kernel. The archtecture allows incremental
		 construction of router features, basic, DiffServ and WRED
		 policies are discussed in the context of Click
		 architecture}
}

@Article{kohler2000np,
  author =	 {Mark Kohler},
  title =	 {{NP} Complete},
  journal =	 {Embedded Systems Programming},
  year =	 2000,
  volume =	 13,
  number =	 12,
  pages =	 {45--60},
  month =	 nov,
  annote =	 {Cited by virtanen2001taco},
  url =		 {http://www.embedded.com/internet/0011/0011ia1.htm},
  bdsk-url-1 =	 {http://www.embedded.com/internet/0011/0011ia1.htm}
}

@InProceedings{kohout2003hardware,
  author =	 {Paul Kohout and Brinda Ganesh and Bruce Jacob},
  title =	 {Hardware Support for Real-Time Operating Systems},
  booktitle =	 codesisss,
  year =	 2003,
  address =	 {Newport Beach, California},
  month =	 oct,
  annote =	 {Found at random. Basically, a real-time scheduler in
		 hardware. Very nice, and relevant.},
  optpages =	 {FIXME}
}

@InProceedings{kon2001development,
  author =	 {Chiaki Kon and Naohiko Shimizu},
  title =	 {A Development of an 8bit {CP/M} Machine by Linux},
  booktitle =	 {Linux Conference},
  year =	 2001,
  address =	 {Tokyo, Japan},
  month =	 sep,
  note =	 {Japanese},
  annote =	 {Kon and Shimizu have done this sort of reconstruction with
		 FPGAs, too. More about their Linux-based development
		 environment.},
  url =		 {http://lc.linux.or.jp/lc2001/index.en.html},
  bdsk-url-1 =	 {http://lc.linux.or.jp/lc2001/index.en.html}
}

@InProceedings{kon2003design,
  author =	 {Chiaki Kon and Naohiko Shimizu},
  title =	 {The design of an {i8080A} instruction compatible processor
		 with extended memory address},
  booktitle =	 asp-dac,
  year =	 2003,
  pages =	 {571--572},
  address =	 {Kitakyushu, Japan},
  month =	 jan,
  annote =	 {University LSI design contest. Two-page paper, very vague,
		 but at least worth knowing about. Added an MMU and many more
		 address bits to an 8080. Shimizu seems to have done a lot of
		 these.}
}

@Article{konstantinides1994khoros,
  author =	 {Konstantinos Konstantinides and John R. Rasure},
  title =	 {The {Khoros} Software Development Environment for Imagine
		 and Signal Processing},
  journal =	 {IEEE Transaction on Signal Processing},
  year =	 {1994},
  volume =	 {3},
  number =	 {3},
  pages =	 {243--252},
  month =	 may,
  annote =	 {Describes the system, which is heavily image-processing
		 oriented. Blocks are processes that communicate through
		 files or sockets.}
}

@InProceedings{konstantinou2004electronic,
  author =	 {Elisavet Konstantinou and Vasiliki Liagkou and Paul
		 Spirakis and Yannis C. Stamatiou and Moti Yung},
  title =	 {Electronic National Lotteries},
  booktitle =	 {Proceedings of Financial Cryptography (FC)},
  year =	 2004,
  series =	 lncs,
  volume =	 3110,
  pages =	 {147--163},
  address =	 {Key West, Florida},
  month =	 feb,
  annote =	 {Moti's discussion of the Greek national lottery. Some
		 architecture diagrams. Their goals: frequent drawings with
		 strict drawing times. Main concern: making the numbers
		 random and undiscoverable. Very little hard information
		 about system engineering details.}
}

@InProceedings{konstantinou2005trust,
  author =	 {Elisavet Konstantinou1 and Vasiliki Liagkou1 and Paul
		 Spirakis and Yannis C. Stamatiou and Moti Yung},
  title =	 {``Trust Engineering:'' From Requirements to System Design
		 and Maintenance --- A Working National Lottery System
		 Experience},
  booktitle =	 isc,
  year =	 2005,
  series =	 lncs,
  volume =	 3650,
  pages =	 {44--58},
  address =	 {Singapore},
  month =	 sep,
  annote =	 {More from Moti on the Greek national lottery. Like
		 konstantinou2004electronic, mostly about how they approached
		 the problem rather than hard engineering details.}
}

@InProceedings{koopman1996embedded,
  author =	 {Philip Koopman},
  title =	 {Embedded System Design Issues (the Rest of the Story)},
  booktitle =	 {iccd},
  year =	 1996,
  pages =	 {310--317},
  address =	 {Austin, Texas},
  month =	 oct,
  annote =	 {Found at random. Some nice statistics from an EE times
		 article, but too old. 3 billion embedded CPUs sold in
		 1995.}
}

@Article{koopman2002critical,
  author =	 {Philip Koopman},
  title =	 {Critical Embedded Automotive Networks},
  journal =	 {IEEE Micro},
  year =	 2002,
  pages =	 {14--18},
  month =	 {July-August},
  annote =	 {Part of the RoSES project at CMU. Mostly discusses the
		 difference between the CAN bus (priority-based) and the TTP
		 bus (statically scheduled).}
}

@Article{kopetz1987clock,
  author =	 {Hermann Kopetz and Wilhelm Ochsenreiter},
  title =	 {Clock Synchronization in Distributed Real-Time Systems},
  journal =	 transcomp,
  year =	 1987,
  volume =	 {C--36},
  number =	 8,
  pages =	 {933-940},
  month =	 aug,
  annote =	 {How to synchronize clocks to support time-triggered
		 protocols?}
}

@InProceedings{kopetz1992sparse,
  author =	 {Hermann Kopetz},
  title =	 {Sparse Time versus Dense Time in Distributed Real-Time
		 Systems},
  booktitle =	 {Proceedings of the 12th International Conference on
		 Distributed Computing Systems},
  year =	 1992,
  pages =	 {460--467},
  address =	 {Yokohama, Japan},
  month =	 jun,
  publisher =	 {IEEE Press},
  annote =	 {Argues for sparse (discrete) time in globally synchronized
		 systems. Esterel on distributed systems?}
}

@Article{kopetz1994ttp,
  author =	 {Hermann Kopetz and G\"unter Gr\"unsteidl},
  title =	 {{TTP} --- A Protocol for Fault-Tolerant Real-Time Systems},
  journal =	 computer,
  year =	 1994,
  volume =	 27,
  number =	 1,
  pages =	 {14--23},
  month =	 jan,
  annote =	 {The main reference. State passed around contains a system
		 mode (statically agreed upon when the system was designed)
		 which implies the particular TDMA sequence being used. This
		 smells like the inspiration for Henzinger's Giotto view of
		 the world.
		 
		 Hard to read. }
}

@InProceedings{kopetz1995design,
  author =	 {Hermann Kopetz and Martin Braun and Christian Ebner and
		 Andreas Kruger and Dietmar Millinger and Roman Nossal and
		 Anton Schedl},
  title =	 {The Design of Large Real-Time Systems: The Time-Triggered
		 Approach},
  booktitle =	 rtss,
  year =	 1995,
  pages =	 {182--189},
  address =	 {Pisa, Italy},
  month =	 dec,
  annote =	 {A solution for distributed real-time systems. Assumes
		 clocks are synchronized a la kopetz1987clock.
		 
		 Sensors may have clocks that mark exactly when their
		 measurement is taken.
		 
		 Actuators may be timed or untimed: the actuation command may
		 come with a timestamp, in which case the actuator must keep
		 a clock and send the energy when the time is right.
		 
		 "In a time-triggered architecture, all system activities are
		 initiated by the progression of a globally synchronized
		 time."
		 
		 "The time-triggered paradigm of a real-time system is based
		 on a distinctive view of the world: the observer (the
		 computer system) is not driven by the events that happen in
		 its environment, but decides autonomously when to look at
		 the world. It is therefore impossible to overload a
		 time-triggered observer!"
		 
		 Basically, translate real-time systems into periodic
		 samples, not unlike Esterel. But makes time a first-class
		 entity to be manipulated.
		 
		 Definitely not interrupt-driven.
		 
		 Communication is not by events, but by continuously-updating
		 values. In effect, the clock is the sole synchronization
		 mechanism.
		 
		 Defines a host-to-communication interface that includes time
		 and mechanisms for avoiding inconsistent results.
		 Interleaved accesses avoided since everything is scheduled
		 beforehand.
		 
		 }
}

@Book{kopetz1997real-time,
  author =	 {Hermann Kopetz},
  title =	 {Real-Time Systems: Design Principles for Distributed
		 Embedded Applications},
  publisher =	 kl,
  year =	 1997,
  address =	 kl_a,
  annote =	 {Cited by henzinger2001embedded, others. He's at Vienna.}
}

@InBook{kopetz2000software,
  author =	 {Hermann Kopetz},
  title =	 {The Future of Software Engineering},
  chapter =	 {Software Engineering for Real-Time: A Roadmap},
  pages =	 {201--211},
  publisher =	 {ACM Press},
  year =	 2000,
  annote =	 {Interesting. Nice tone: "a failure in the temporal domain
		 can be as critical as a failure in the value domain."
		 Focuses on hard real-time systems: automotive, industrial
		 control.
		 
		 Nice set of trends: SoCs, Smart MEMS Sensors, COTS
		 Components (difficult to integrate), Internet connectivity
		 (undependependable, unpredictable).
		 
		 He envisions systems as being distributed with a real-time
		 communciation network connecting them.
		 
		 Divides the development process into two parts: designing
		 the components and designing the system architecture.
		 
		 Advocates a distributed, synchronized clock distributed by
		 the network.
		 
		 Advocates component-based design, i.e., components with
		 opaque innards.},
  opteditor =	 {Anthony Finkelstein}
}

@Article{kopetz2003time-triggered,
  author =	 {Hermann Kopetz and G. Bauer},
  title =	 {The Time-Triggered Architecture},
  journal =	 procieee,
  year =	 2003,
  volume =	 91,
  number =	 1,
  pages =	 {112--126},
  month =	 jan,
  annote =	 {A more seminal reference on TTP?}
}

@Book{koren2002computer,
  author =	 {Israel Koren},
  title =	 {Computer Arithmetic Algorithms},
  publisher =	 {A K Peters},
  year =	 2002,
  address =	 {Natick, Massachusetts},
  edition =	 {Second},
  annote =	 {Cited by the ARITH module generator website folks. Seems to
		 be more technical than ercegovac2004digital.
		 
		 Nice bibliography; seems much more complete.
		 
		 Doesn't come right out and attempt to compare these
		 implementations, though.}
}

@InProceedings{kotz1988supporting,
  author =	 {A. M. Kotz and K. R. Dittrich and J. A. M\"ulle},
  title =	 {Supporting Semantic Rules by a Generalized Event/Trigger
		 Mechanism},
  year =	 1988,
  pages =	 {76--91},
  annote =	 {Presents a scheme for events and triggers, including
		 implementation details.},
  crossref =	 {schmidt1988advances}
}

@Article{kountouris2001high-level,
  author =	 {Apostolos A. Kountouris and Christophe Wolinski and
		 Jean-Christophe Le Lann},
  title =	 {High-level synthesis using hierarchical conditional
		 dependency graphs in the {CODESIS} system},
  journal =	 {Journal of Systems Architecture: the EUROMICRO Journal},
  year =	 2001,
  volume =	 47,
  number =	 {3--4},
  pages =	 {393--313},
  month =	 apr,
  annote =	 {FIXME}
}

@Article{kountouris2002efficient,
  author =	 {Apostolos A. Kountouris and Christophe Wolinski},
  title =	 {Efficient scheduling of conditional behaviors for
		 high-level synthesis},
  journal =	 todaes,
  year =	 2002,
  volume =	 7,
  number =	 3,
  pages =	 {380--412},
  month =	 jul,
  annote =	 {Talks about their CODESIS HLS tool, which doesn't appear to
		 be publicly available.
		 
		 Propose an intermediate representation called
		 HCDG---hierarchical conditional dependency graph. Say they
		 worry mostly about the scheduling problem. Mutual exclusion
		 seems to be one of the bigger challenges.
		 
		 The HCDG contains a dataflow graph plus a guard network.}
}

@Article{koutas1975shortest,
  author =	 {P. J. Koutas and T. C. Hu},
  title =	 {Shortest String Containing All Permutations},
  journal =	 dm,
  year =	 1975,
  volume =	 11,
  number =	 2,
  pages =	 {125--132},
  annote =	 {Interesting results on the permutation problem.}
}

@InProceedings{kowalczuk1993daml-a,
  author =	 {Z. Kowalczuk},
  title =	 {{DAML}---{A} Language for Modelling and Simulation of
		 Digital Control Systems},
  booktitle =	 {Selected Papers from the 3rd IFAC Symposium on Low Cost
		 Automation},
  year =	 {1993},
  pages =	 {283--288},
  address =	 {Vienna, Austria},
  month =	 sep,
  organization = {International Federation of Automaic Control},
  publisher =	 {Pergamon Press}
}

@Article{krazit2005pc,
  author =	 {Tom Krazit},
  title =	 {{PC} Sales Strong in 2004},
  journal =	 {PC World},
  year =	 2005,
  month =	 {January 19},
  annote =	 {Shipments of 177.5 million units in 2004.
		 
		 The worldwide PC market finished 2004 on a strong note, with
		 double-digit percentage growth for the year, according to
		 research released this week by IDC and Gartner. But growth
		 will slow in 2005 as consumers pull back from their frantic
		 purchasing of the last few years, the companies say.
		 
		 PC vendors shipped 177.5 million units during 2004, up 14.7
		 percent from the 154.7 million units shipped in 2003. This
		 number represents the peak of a worldwide recovery from the
		 decreasing shipments of 2001, IDC says.
		 
		 Gartner's figures were slightly different, due to the
		 different methods used by the two research companies to
		 measure the sales of PCs from various vendors. PC shipments
		 increased by 11.8 percent in 2004 for a total of 189 million
		 units, according to Gartner.
		 
		 IDC believes worldwide PC shipments will grow about 10
		 percent during 2005 and that growth will decrease the
		 following year, it says. Business customers are in the
		 middle of the replacement cycle that PC vendors have been
		 anticipating for two years, but consumers have largely
		 tapped themselves out after two years of keeping the PC
		 market afloat amid slow business sales, IDC says. Weaknesses
		 Already Appearing
		 
		 That consumer weakness started to appear in the fourth
		 quarter, says Charles Smulders, vice president of Gartner's
		 Computing Platforms Worldwide Group, in a press release.
		 
		 In the fourth quarter, Dell edged out Hewlett-Packard in
		 what is usually a strong quarter for HP. Dell shipped 8.8
		 million units during the quarter to HP's 8.2 million units.
		 Dell also grew twice as fast as HP from the fourth quarter
		 of 2003 to the same period in 2004, according to IDC.
		 
		 Holiday purchases by consumers generally lift HP into the
		 top spot worldwide during the fourth quarter. But the
		 company did not show that strength in this quarter,
		 increasing its shipments by only 9 percent compared to last
		 year and losing market share to Dell, IDC says. Last week,
		 HP appointed Vyomesh Joshi, the leader of its printer
		 business, as head of a combined organization selling both
		 printers and PCs.
		 
		 IBM recently decided to get out of the PC business, selling
		 its ThinkPad and ThinkCentre PCs to Lenovo Group in
		 December. That deal is expected to close in this year's
		 second quarter. In the fourth quarter, IBM was the
		 third-ranked vendor in worldwide shipments, with 2.9 million
		 units, according to IDC.
		 
		 The IBM-Lenovo deal appeared to have an immediate impact on
		 IBM's shipments, with a dip in U.S. shipments noted as news
		 of the deal spread, says Roger Kay, vice president of client
		 computing with IDC. However, the company had largely
		 recovered from that slight decline by the end of the year,
		 he says. Also on the List
		 
		 Acer cracked the top five list of vendors worldwide on the
		 strength of an excellent quarter in Europe, the Middle East,
		 and Africa (EMEA). The company sent 70 percent of the 2.2
		 million units it shipped in the quarter to EMEA, and it
		 posted the best worldwide year-over-year growth rate among
		 the top five vendors with a 33 percent improvement in
		 shipments over the fourth quarter of 2003, IDC says.
		 
		 Fujitsu and its Fujitsu-Siemens Computers subsidiary fell to
		 fifth place in the worldwide rankings with less than 2.1
		 million shipments in the quarter. Fujitsu had a strong
		 quarter in Europe but did not grow as fast as Acer and is
		 having problems with a difficult market in Japan, Kay says.
		 
		 Gartner did not break out results for the fourth quarter.
		 Dell led the market in 2004 with 31 million units shipped
		 during the year, outselling HP by about 3.5 million units.
		 The two companies were followed by IBM, Fujitsu/Fujitsu
		 Siemens, and Acer. IDC ranked the five vendors the same way
		 as Gartner for the full year.
		 
		 In the U.S., Gateway and Apple Computer occupied the fourth
		 and fifth spots in unit shipments, according to IDC. Gateway
		 is starting to reap the benefits of a streamlined product
		 lineup and lower pricing following its merger with
		 EMachines, Kay says.
		 
		 Apple's runaway success with its IPod music player has led
		 some analysts to predict that Apple will also see faster
		 growth in its PC business. Company executives recently said
		 that they didn't have data that proved that theory, and Kay
		 also believed that more data is needed before the "halo
		 effect" caused by the IPod translates into IMac or Power Mac
		 sales.},
  url =		 {http://www.pcworld.com/printable/article/id,119347/printable.html}
		 ,
  bdsk-url-1 =	 {http://www.pcworld.com/printable/article/id,119347/printable.html}
		 
}

@InProceedings{krimm1997compositional,
  author =	 {Jean-pierre Krimm and Laurent Mounier},
  title =	 {Compositional State Space Generation from {Lotos}
		 Programs},
  booktitle =	 tacas,
  year =	 {1997},
  series =	 lncs,
  volume =	 1217,
  pages =	 {239--258},
  address =	 {Enschende, The Netherlands},
  month =	 apr,
  publisher =	 sv
}

@InProceedings{krimm2000compositional,
  author =	 {Jean-Pierre Krimm and Laurent Mounier},
  title =	 {Compositional State Space Generation with Partial Order
		 Reductions for Asynchronous Communicating Systems},
  booktitle =	 tacas,
  year =	 2000,
  series =	 lncs,
  volume =	 1785,
  pages =	 {266--282},
  publisher =	 sv
}

@TechReport{ku1990hardwarec,
  author =	 {David C. Ku and Giovanni {De Micheli}},
  title =	 {{HardwareC}: A Language for Hardware Design},
  institution =	 {Computer Systems Lab, Stanford University},
  year =	 1990,
  number =	 {CSTL-TR-90-419},
  address =	 {California},
  month =	 aug,
  note =	 {Version 2.0},
  annote =	 {Referenced by de-micheli1990olympus as the reference for
		 HardwareC }
}

@Article{ku1991optimal,
  author =	 {David C. Ku and Giovanni {De Micheli}},
  title =	 {Optimal Synthesis of Control Logic from Behavioral
		 Specifications},
  journal =	 {Integration: The VLSI Journal},
  year =	 1991,
  volume =	 10,
  number =	 3,
  pages =	 {271--298},
  month =	 feb,
  annote =	 {Earlier version was Stanford CSL-TR-89-402, November 1989.
		 
		 Talks about synthesizing control circuitry. Rather vague,
		 hierarchical. Seems to look at timing and talk about
		 pipelining. Not clear whether it requires well-structured
		 control.}
}

@InProceedings{kuchcinski1993automatic,
  author =	 {Krzysztof Kuchcinski and Wlodzimierz Drabent and Jan
		 Maluszynski},
  title =	 {Automatic Diagnosis of {VLSI} Digital Circuits Using
		 Algorithmic Debugging Techniques},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {749},
  pages =	 {350--367},
  publisher =	 kl,
  annote =	 {Application of the algorithmic debugging technique to
		 isolate faults in digital circuits}
}

@InProceedings{kuchcinski2001synthesis,
  author =	 {Krzysztof Kuchcinski and Christophe Wolinski},
  title =	 {Synthesis of Conditional Behaviors Using Hierarchical
		 Conditional Dependency Graphs and Constraint Logic
		 Programming},
  booktitle =	 euromicro-dsd,
  year =	 2001,
  pages =	 {220--227},
  address =	 {Warsaw, Poland},
  month =	 sep,
  annote =	 {FIXME}
}

@InProceedings{kuck1981dependence,
  author =	 {D. Kuck and R. Kuhn and D. Padua and B. Leasure and M.
		 Wolfe},
  title =	 {Dependence Graphs and Compiler Optimizations},
  booktitle =	 popl,
  year =	 {1981},
  pages =	 {207--218},
  address =	 {Williamsburg, Virginia},
  month =	 jan,
  annote =	 {Came from Stan Liao's POPL CD. Not very interesting --
		 seems a bit ad-hoc.}
}

@InProceedings{kudlugi2001transaction-based,
  author =	 {Murali Kudlugi and Soha Hassoun and Charles Selvidge and
		 Duaine Pryor},
  title =	 {A Transaction-Based Unified Simulation/Emulation
		 Architecture for Functional Verification},
  booktitle =	 dac01,
  year =	 2001,
  pages =	 {623--628},
  address =	 dac01a,
  month =	 jun,
  annote =	 {Mentioned by one of the reviewers of my SHIM paper
		 submission to DATE.}
}

@InProceedings{kuehlmann1992timing,
  author =	 {Andreas Kuehlmann and Reinaldo A. Bergamaschi},
  title =	 {Timing analysis in high-level synthesis},
  booktitle =	 iccad,
  year =	 1992,
  pages =	 {349--354},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Relevant to the SHIM-to-hardware stuff. Fairly low-level
		 timing behavior estimate.}
}

@InProceedings{kuhn2000java,
  author =	 {Tommy Kuhn and Wolfgang Rosenstiel},
  title =	 {Java Based Object Oriented Hardware Specification and
		 Synthesis},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {579--582},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Luc Semeria pointed me to this.}
}

@InProceedings{kukula1991finite,
  author =	 {James Kukula and Srinivas Devadas},
  title =	 {Finite State Machine Decomposition By Transition Pairing},
  booktitle =	 iccad,
  year =	 {1991},
  pages =	 {414--417},
  address =	 iccad_a,
  month =	 nov
}

@InProceedings{kukula2000building,
  author =	 {James H. Kukula and Thomas R. Shiple},
  title =	 {Building Circuits from Relations},
  booktitle =	 cav2000,
  year =	 2000,
  series =	 lncs,
  volume =	 1855,
  pages =	 {113--123},
  address =	 cav2000_a,
  month =	 jul,
  annote =	 {How to go from a constraint to a circuit that produces an
		 output so constrained.}
}

@InProceedings{kulkarni2004mapping,
  author =	 {Chidamber Kulkarni and Gordon Brebner and Graham Schelle},
  title =	 {Mapping a domain specific language to a platform {FPGA}},
  booktitle =	 dac04,
  year =	 {2004},
  pages =	 {924--927},
  address =	 dac04a,
  doi =		 {http://doi.acm.org/10.1145/996566.996811},
  isbn =	 {1-58113-828-8},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/996566.996811}
}

@Misc{kuller1996personal,
  author =	 {Samit Kuller},
  year =	 {1996},
  month =	 oct,
  note =	 {Personal communication},
  address =	 {University of Maryland},
  url =		 {http://www.cs.umd.edu/~samir/},
  bdsk-url-1 =	 {http://www.cs.umd.edu/~samir/}
}

@Book{kumar1996codesign,
  author =	 {Sanjaya Kumar},
  title =	 {The Codesign of Embedded Systems: {A} Unified
		 Hardware/Software Representation},
  publisher =	 kl,
  year =	 {1996},
  address =	 kl_a,
  annote =	 {Saw it at ICCAD 96}
}

@InProceedings{kumar2001esp,
  author =	 {Sanjeev Kumar and Yitzhak Mandelbaum and Xiang Yu and Kai
		 Li},
  title =	 {{ESP:} A Language for Programmable Devices},
  booktitle =	 pldi,
  year =	 2001,
  address =	 {Snowbird, Utah},
  month =	 jun,
  annote =	 {Concurrently-running finite-state machine language for
		 writing firmware or device drivers. Based on CSP-like
		 constructs (e.g., in, out, alt). Builds models for the SPIN
		 model checker. Takes firmware for the Myrinet LANai
		 processor as an example.
		 
		 Each in or out statement (rendezvous communication)
		 corresponds to a state in the process's FSM.
		 
		 No function calls: processes only. The behavior of a
		 function can be mimicked by a process with an in/out
		 protocol.
		 
		 He even cites my DAC paper.
		 
		 Kai Li is his advisor.},
  optpages =	 {FIXME},
  url =		 {http://www.cs.princeton.edu/~skumar/},
  bdsk-url-1 =	 {http://www.cs.princeton.edu/~skumar/}
}

@InProceedings{kumar2002better,
  author =	 {Sumit Kumar and Susan Horwitz},
  title =	 {Better slicing of programs with jumps and switches},
  booktitle =	 {Proceedings of Fundamental Approaches to Software
		 Engineering},
  year =	 2002,
  series =	 lncs,
  volume =	 2306,
  pages =	 {371--388},
  address =	 {Grenoble, France},
  month =	 apr,
  publisher =	 sv,
  annote =	 {Random search of the slicing literature, this one out of
		 Wisconsin. Essentially says "use the PDG" for slicing.
		 
		 Cites ottenstein1984program as explaining how to slice and
		 ferrante1987program as definitive on the PDG.
		 
		 Notes that both ignored gotos, assuming instead structured
		 code. Suggests using ball1993slicing for an alterative
		 definition of the PDG.}
}

@InProceedings{kumar2002network,
  author =	 {S. Kumar and A. Jantsch and J. Oberg and J.-P. Soininen and
		 M. Forsell and K. Tiensyrja and A. Hemani},
  title =	 {A Network on Chip Architecture and Design Methodology},
  booktitle =	 {Proceedings of IEEE Computer Society Annual Symposium on
		 VLSI},
  year =	 2002,
  pages =	 {117},
  oldkey =	 {kumar02},
  sedtransform = {s/kumar02/kumar2002network/}
}

@InProceedings{kumar2008facetracer,
  author =	 {Neeraj Kumar and Peter N. Belhumeur and Shree K. Nayar},
  title =	 {{FaceTracer}: A Search Engine for Large Collections of
		 Images with Faces},
  booktitle =	 {Proceedings of the European Conference on Computer Vision
		 (ECCV)},
  year =	 2008,
  pages =	 {340--353},
  month =	 oct
}

@Article{kundert2000design,
  author =	 {Ken Kundert and Henry Chang and Dan Jefferies and Gilles
		 Lamant and Enrico Malavasi and Fred Sendig},
  title =	 {Design of Mixed-Signal Systems-on-a-Chip},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1561--1571},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@InProceedings{kunze2009asip,
  author =	 {Steffen Kunze and Emil Matu\v{s} and Gerhard P. Fettweis},
  title =	 {{ASIP} Decoder Architecture for Convolutional and {LDPC}
		 Codes},
  booktitle =	 iscas,
  year =	 {2009},
  pages =	 {2457--2460},
  address =	 {Taipei, Taiwan},
  month =	 may
}

@Book{kuo2002automatic,
  author =	 {Benjamin C. Kuo and Farid Golnaraghi},
  title =	 {Automatic Control Systems},
  publisher =	 jw,
  year =	 2002,
  edition =	 {Eighth},
  annote =	 {I used the sixth edition at Caltech. Basic introduction to
		 control theory.}
}

@InProceedings{kuon2006measuring,
  author =	 {Ian Kuon and Jonathan Rose},
  title =	 {Measuring the gap between {FPGAs} and {ASICs}},
  booktitle =	 fpga,
  year =	 2006,
  pages =	 {21--30},
  address =	 {Monterey, California},
  month =	 feb,
  doi =		 {http://doi.acm.org/10.1145/1117201.1117205},
  annote =	 {Martha found this}
}

@Book{kurshan1994computer-aided,
  author =	 {R. P. Kurshan},
  title =	 {Computer-Aided Verifications of Coordinating Processes: The
		 Automata-Theoretic Approach},
  publisher =	 {Princeton University Press},
  year =	 {1994}
}

@InProceedings{kuthirummal2008priors,
  author =	 {S. Kuthirummal and A. Agarwala and D. B Goldman and S. K.
		 Nayar},
  title =	 {Priors for Large Photo Collections and What They Reveal
		 about Cameras},
  booktitle =	 {Proceedings of the European Conference on Computer Vision},
  year =	 2008,
  pages =	 {74--87},
  month =	 oct
}

@Book{labrosse1998microc-os-ii,
  author =	 {Jean Labrosse},
  title =	 {{MicroC/OS-II}},
  publisher =	 cmp,
  year =	 1998,
  address =	 cmp_a,
  annote =	 {Bought at the 2000 Embedded Systems Conference. Good
		 description of the guts of a simple RTOS.}
}

@Article{lahiri2004design,
  author =	 {K. Lahiri and A. Raghunathan and S. Dey},
  title =	 {Design Space Exploration for Optimizing On-Chip
		 Communication Architectures},
  journal =	 transcad,
  year =	 2004,
  volume =	 23,
  number =	 6,
  pages =	 {952-961},
  month =	 dec,
  affiliation =	 {NEC, UCSD},
  entered =	 {Luca Carloni, 6/15/03},
  keywords =	 {TCAD'01 and DAC'02},
  oldkey =	 {lahiri_tcad04},
  sedtransform = {s/lahiri_tcad04/lahiri2004design/}
}

@Book{lakos1996large-scale,
  author =	 {John Lakos},
  title =	 {Large-Scale {C++} Software Design},
  publisher =	 aw,
  year =	 1996,
  annote =	 {Al's student. Talks about the Mentor Graphics C++
		 debacle.}
}

@InProceedings{lakshminarayana1997wavesched,
  author =	 {Ganesh Lakshminarayana and Kamal S. Khouri and Niraj K.
		 Jha},
  title =	 {Wavesched: {A} Novel Scheduling Technique for Control-Flow
		 Intensive Behavioral Descriptions},
  booktitle =	 iccad,
  year =	 {1997},
  pages =	 {244--250},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Behavioral scheduling.}
}

@InProceedings{lakshminarayana1998fact,
  author =	 {Ganesh Lakshminarayana and Niraj K. Jha},
  title =	 {{FACT:} {A} Framework for the Application of Throughput-
		 and Power-Optimizing Transformations to Control-flow
		 Intensive Behavioral Descriptions},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {102--107},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Transformations on control-dominated behavioral
		 descriptions. Not very clear, and focused on stocastic power
		 models.}
}

@InProceedings{lakshminarayana1998incorporating,
  author =	 {Ganesh Lakshminarayana and Anand Raghunathan and Niraj K.
		 Jha},
  title =	 {Incorporating Speculative Execution into Scheduling of
		 Control-flow Intensive Behavioral Descriptions},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {108--113},
  address =	 dac98a,
  month =	 jun,
  optannote =	 {FIXME}
}

@InProceedings{lam1998dcp,
  author =	 {Victor J. Lam and Kunle A. Olukotun},
  title =	 {{DCP}: An Algorithm for Datapath/Control Partitioning of
		 Synthesizable {RTL} Models},
  booktitle =	 iccd,
  year =	 1998,
  address =	 {Austin, Texas},
  month =	 oct,
  annote =	 {Mostly for area estimation. Uses his own homebrew
		 fast-and-dirty synthesizer (look at available definitions,
		 connect as needed). Found series/parallel datapath
		 configurations (wide ones broken up then reassembled).
		 vic@leland.stanford.edu},
  url =		 {http://www-hydra.stanford.edu/~vic/research.html},
  bdsk-url-1 =	 {http://www-hydra.stanford.edu/~vic/research.html}
}

@Book{lamothe2006game,
  author =	 {Andr\'e LaMothe},
  title =	 {Game Programming for the {Propeller} Powered HYDRA},
  publisher =	 {Parallax, Inc.},
  year =	 2006,
  address =	 {Rocklin, California},
  annote =	 {Came with the HYDRA development kit. I bought mine through
		 thinkgeek.com. Very lengthy writeup on what's going on
		 inside the Propeller chip and how to code games on it,
		 mostly using a tile and sprite-based graphics engine.},
  isbn =	 {1--928982--40--9}
}

@Article{lamport1974new,
  author =	 {Leslie Lamport},
  title =	 {A new solution of {Dijkstra's} concurrent programming
		 problem},
  journal =	 cacm,
  year =	 1974,
  volume =	 17,
  number =	 8,
  pages =	 {453--455},
  month =	 aug,
  address =	 {New York, NY, USA},
  annote =	 {Cites dijkstra1965solution.},
  doi =		 {http://doi.acm.org/10.1145/361082.361093},
  issn =	 {0001-0782},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/361082.361093}
}

@Book{lamport1986document,
  author =	 {Leslie Lamport},
  title =	 {{\LaTeX}: {A} Document Preparation System},
  publisher =	 aw,
  year =	 {1986},
  address =	 aw_a,
  annote =	 {Describes 2.09 -- there's a 2e version.}
}

@Book{lamport1994document,
  author =	 {Leslie Lamport},
  title =	 {{\LaTeX}: {A} Document Preparation System},
  publisher =	 aw,
  year =	 {1994},
  address =	 aw_a,
  edition =	 {Second},
  annote =	 {Describes 2e. Gave Ryan the first edition, Christmas
		 1995.}
}

@Article{lampson1980experience,
  author =	 {Butler W. Lampson and David D. Redell},
  title =	 {Experience with processes and monitors in {Mesa}},
  journal =	 cacm,
  year =	 1980,
  volume =	 23,
  number =	 2,
  pages =	 {105--117},
  month =	 feb,
  annote =	 {An early reference on priority inversion, at least
		 according to one commentary. Talks a lot about what the
		 semantics of these things should be, the dangers of
		 deadlocks, and the use of condition variable.
		 
		 Section 4 describes the classic priority inversion scenario
		 and the priority inheritance algorithm: "A simple way to
		 avoid this situation is to associate with each monitor the
		 priority of the highest-priority process which ever enters
		 that monitor. Then whenever a process enters a monitor, its
		 priority is temporarily increased to the monitor's
		 priority."}
}

@Article{lancaster1973tv,
  author =	 {Don Lancaster},
  title =	 {{TV} Typewriter},
  journal =	 {Radio Electronics},
  year =	 1973,
  volume =	 44,
  number =	 9,
  pages =	 {43--45,50--52},
  month =	 sep,
  annote =	 {The original TV typewriter article}
}

@Book{lancaster1976tv,
  author =	 {Don Lancaster},
  title =	 {TV Typewriter Cookbook},
  publisher =	 {Howard W. Sams \& Co.},
  year =	 1976,
  annote =	 {Very early, although the seminal article was
		 lancaster1973tv}
}

@InProceedings{landi1992safe,
  author =	 {William Landi and Barbara Ryder},
  title =	 {A safe approximate algorithm for interprocedural pointer
		 aliasing},
  booktitle =	 pldi,
  year =	 1992,
  pages =	 {235--248},
  address =	 {San Francisco, California},
  month =	 jul
}

@InProceedings{landi1993interprocedural,
  author =	 {William A. Landi and Barbara Ryder and Sean Zhang},
  title =	 {Interprocedural Modification Side Effect Analysis with
		 Pointer Aliasing},
  booktitle =	 pldi,
  year =	 {1993},
  pages =	 {56--67},
  oldkey =	 {landi93},
  sedtransform = {s/landi93/landi1993interprocedural/}
}

@Article{landin1966next,
  author =	 {P. J. Landin},
  title =	 {The next 700 programming languages},
  journal =	 cacm,
  year =	 1966,
  volume =	 9,
  number =	 3,
  pages =	 {157--166},
  month =	 mar,
  annote =	 {Cited by elliott1999embedded as a fundamental reference for
		 domain-specific languages.
		 
		 Describes ISWIM, a functional language. Draws the
		 distinction between syntax and semantics. Heavily influenced
		 by the Lambda Calculus.
		 
		 Elliott interprets it as suggesting a language consists of a
		 domain-specific vocabulary and a domain-independent way of
		 composing parts.}
}

@InProceedings{lang06,
  author =	 {Fr{\'e}d{\'e}ric Lang},
  title =	 {Refined Interfaces for Compositional Verification},
  booktitle =	 {FORTE},
  year =	 {2006},
  pages =	 {159-174},
  bibsource =	 {DBLP, http://dblp.uni-trier.de},
  crossref =	 {DBLP:conf/forte/2006},
  ee =		 {http://dx.doi.org/10.1007/11888116_13}
}

@Article{lang1999extended,
  author =	 {Sheau-Dong Lang},
  title =	 {An extended banker's algorithm for deadlock avoidance},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {428--432},
  month =	 may,
  annote =	 {Part of a special issue.
		 
		 Developed originally by Dijkstra, the idea is for each
		 process to declare what resources it needs.
		 
		 Their contribution is a way to declare the needed resources
		 in a more detailed way than "here's what I need at most."
		 
		 The short bibliography may be more interesting.}
}

@InProceedings{langenbach2002worst,
  author =	 {Marc Langenbach and Christian Ferdinand and Reinhard
		 Wilhelm},
  title =	 {Worst Case Execution Time Prediction},
  booktitle =	 {Proceedings of the 2nd IEEE International Workshop on
		 Worst-Case Execution Time Analysis},
  year =	 2002,
  pages =	 {49--56},
  address =	 {Vienna, Austria},
  month =	 jun,
  annote =	 {Part of the WCET paper (aiT tool, detailed)}
}

@Article{laplante1995history,
  author =	 {Phillip A. Laplante and Eileen P. Rose and Maria
		 Gracia-Watson},
  title =	 {An historical survey of early real-time computing
		 developments in the {U.S.}},
  journal =	 {Real-Time Systems},
  year =	 1995,
  volume =	 8,
  number =	 {2--3},
  pages =	 {199--213},
  month =	 mar,
  annote =	 {Cited by shaw2001real-time as a nice survey of early things.
		 
		 In this paper the development of real-time computing terms,
		 systems, hardware, and software from the 1940s through the
		 1960s in the United States is examined. In addition, the
		 contributions of significant individuals, corporations, and
		 government through the projects they fostered during these
		 early ears are surveyed. And in particular it is contended
		 that Project Whirlwind, a post-World War II flight
		 simulator, was the first American real-time system.}
}

@TechReport{lariviere2008uclinux,
  author =	 {David Lariviere and Stephen A. Edwards},
  title =	 {{uClinux} on the {Altera} {DE2}},
  institution =	 cucs,
  year =	 2008,
  number =	 {CUCS--055--08},
  address =	 nyny,
  month =	 dec,
  annote =	 {David's experiences getting uClinux running on the FPGA
		 board we use for my embedded systems class.}
}

@Article{larrabee1992test,
  author =	 {Tracy Larrabee},
  title =	 {Test Pattern Generation Using Boolean Satisfiability},
  journal =	 transcad,
  year =	 {1992},
  volume =	 {11},
  number =	 {1},
  pages =	 {4--15},
  month =	 jan,
  annote =	 {Yuji printed this out for me. It's close to Stephan's work
		 on ATPG.}
}

@Book{larson1982caving,
  author =	 {L. Larson and P. Larson},
  title =	 {Caving: The Sierra Club Guide to Spelunking},
  publisher =	 {Sierra Club Books},
  year =	 {1982},
  address =	 {San Francisco, California},
  annote =	 {Moffitt: GV200.66 N67 L37}
}

@InProceedings{larson2008high-throughput,
  author =	 {Richard H. Larson and John K. Salmon and Ron O. Dror and
		 Martin M. Deneroff and Cliff Young and John P. Grossman and
		 Yibing Shan and John L. Klepeis and David E. Shaw},
  title =	 {High-throughput pairwise point interactions in Anton, a
		 specialized machine for molecular dynamics simulation},
  booktitle =	 hpca,
  year =	 {2008},
  pages =	 {331-342}
}

@InProceedings{larus1999whole,
  author =	 {Jamess R. Larus},
  title =	 {Whole Program Paths},
  booktitle =	 pldi,
  year =	 1999,
  pages =	 {259--269},
  address =	 {Atlanta, Georgia},
  month =	 may,
  annote =	 {Capturing and compressing the sequence of program counters
		 for a complete run of a program. Neat, but not particularly
		 useful for verification. Read at Monica Lam's suggestion.}
}

@Article{lassez1982fixed,
  author =	 {J.-L. Lassez and V. L. Nguyen and E. A. Sonnenberg},
  title =	 {Fixed point theorems and semantics: A folk tale},
  journal =	 ipl,
  year =	 1982,
  volume =	 14,
  number =	 3,
  pages =	 {112--116},
  month =	 may,
  annote =	 {History of fixed point theorems?}
}

@InProceedings{lattner2007making,
  author =	 {Chris Lattner and Andrew Lenharth and Vikram Adve},
  title =	 {Making context-sensitive points-to analysis with heap
		 cloning practical for the real world},
  booktitle =	 pldi,
  year =	 2007,
  pages =	 {278--289},
  address =	 {San Diego, California, USA}
}

@Article{lau2003gigabit,
  author =	 {Michael V. Lau and Sam Shieh and Pei-Feng Wang and Brandon
		 Smith and Dennis Lee and Jason Chao and Bernard Shung and
		 Cheng-Chung Shih},
  title =	 {Gigabit {Ethernet} switches using a shared buffer
		 architecture},
  journal =	 {IEEE Communications Magazine},
  year =	 2003,
  volume =	 41,
  number =	 3,
  pages =	 {76--84},
  month =	 dec,
  annote =	 {Illia pointed me to this. 10 Gbps on an ASIC.}
}

@Book{lauer1947servomechanism,
  author =	 {Henri Lauer and Robert N. Lesnick and Leslie E. Matson},
  title =	 {Servomechanism Fundamentals},
  publisher =	 mgh,
  year =	 1947,
  annote =	 {Cited by lewis1992applied as an early control theory text.
		 Second edition in 1960.}
}

@InProceedings{lauwereins1994geometric,
  author =	 {Rudy Lauwereins and Piet Wauters and Marleen Ad\'e and J.
		 A. Peperstraete},
  title =	 {Geometric Parallelism and Cyclo-Static Data Flow in
		 {GRAPE-II}},
  booktitle =	 {Proceedings The Fifth International Workshop on Rapid
		 System Prototyping},
  year =	 {1994},
  pages =	 {90--107},
  address =	 {Grenoble, France},
  month =	 jun,
  publisher =	 ieeecs
}

@TechReport{lavagno1997embedded,
  author =	 {Luciano Lavagno and Jordi Cortadella and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Embedded Code Optimization via Common Control Structure
		 Detection},
  institution =	 {Universitat Politecnica de Catalunya},
  year =	 {1997},
  number =	 {UPC--DAC--1997--9},
  month =	 feb,
  annote =	 {Finding loops in S-graphs built from CFSMs using Petri-net
		 techniques},
  url =		 {http://www-cad.eecs.berkeley.edu/~polis/},
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/~polis/}
}

@InBook{lavagno1998models,
  author =	 {Luciano Lavagno and Alberto Sangiovanni-Vincentelli and
		 Ellen M. Sentovich},
  title =	 {System-Level Synthesis: Proceedings of the NATO Advanced
		 Study Instutite on System Level Synthesis for Electronic
		 Design},
  chapter =	 {2, Models of Computation for Embedded System Design},
  publisher =	 kl,
  year =	 1998,
  address =	 {Il Ciocco, Lucca, Italy},
  month =	 aug,
  annote =	 {Ellen send me an early version of this.},
  opteditor =	 {Ahmed Amine Jerraya and Jean P. Mermet}
}

@InProceedings{lavagno1999ecl,
  author =	 {Luciano Lavagno and Ellen Sentovich},
  title =	 {{ECL}: A Specification Environment for System-Level
		 Design},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {511--516},
  address =	 dac99a,
  month =	 jun
}

@InBook{lavagno2000models,
  author =	 {Luciano Lavagno and Alberto Sangiovanni-Vincentelli and
		 Ellen M. Sentovich},
  title =	 {Architecture Design and Validation Methods},
  chapter =	 {Models of Computation for System Design},
  pages =	 {243--296},
  publisher =	 sv,
  year =	 200,
  month =	 jan,
  annote =	 {A version of our IEEE Proceedings article?},
  opteditor =	 {Egon Boerger}
}

@InProceedings{lawall1998faster,
  author =	 {Julia L. Lawall},
  title =	 {Faster Fourier Transforms via Automatic Program
		 Specialization},
  booktitle =	 {Partial Evaluation---Practice and Theory, DIKU 1998
		 International Summer School},
  year =	 1998,
  series =	 lncs,
  volume =	 1706,
  pages =	 {338--355},
  address =	 {Copenhagen, Denmark},
  month =	 jun,
  annote =	 {Mentioned by one of my PEPM reviewers.}
}

@TechReport{le-charlier1992universal,
  author =	 {Baudoin {Le Charlier} and Pascal {Van Hentenryck}},
  title =	 {A Universal Top-Down Fixpoint Algorithm},
  institution =	 {Brown University},
  year =	 1992,
  number =	 {CS-92-25},
  address =	 {Providence, Rhode Island},
  month =	 may,
  annote =	 {Cited in Bourdoncle's work}
}

@Article{le-gall1992mpeg,
  author =	 {Didier {Le Gall}},
  title =	 {The {MPEG} Video Compression Algorithm},
  journal =	 {Signal Processing: Image Communications},
  year =	 {1992},
  volume =	 {4},
  number =	 {2},
  pages =	 {129--140},
  month =	 apr,
  abstract =	 {The video compression technique developed by MPEG covers
		 many applications from interactive systems on CD-ROM to
		 delivery of video information over telecommunications
		 networks. The MPEG video compression algorithm relies on two
		 basic techniques: block based motion compensation for the
		 reduction of the temporal redundancy and transform domain
		 based compression for the reduction of spatial redundancy.
		 Motion compensation techniques are applied with both
		 predictive and interpolative techniques. The prediction
		 error signal is further compressed with spatial redundancy
		 reduction (DCT). The quality of the compressed video with
		 the MPEG algorithm at about 1.5 Mbit/s has been compared to
		 that of consumer grade VCRs.}
}

@Article{le-guernic1991programming,
  author =	 {Paul {Le Guernic} and Thierry Gautier and Michel {Le
		 Borgne} and Claude {Le Maire}},
  title =	 {Programming Real-Time Applications with {SIGNAL}},
  journal =	 procieee,
  year =	 {1991},
  volume =	 {79},
  number =	 {9},
  pages =	 {1321--1336},
  month =	 sep,
  annote =	 {Part of a special issue on synchronous real time systems}
}

@Article{le-guernic2003polychrony,
  author =	 {P. Le Guernic and J. P. Talpin and J. C. Le Lann},
  title =	 {Polychrony for system design},
  journal =	 {Journal for Circuits, Systems and Computers},
  year =	 {2003},
  volume =	 {12},
  number =	 {3},
  pages =	 {261-303},
  month =	 {apr},
  affiliation =	 {INRIA, IRISA},
  annote =	 {Cites my CAV99 paper. Special Issue on Application Specific
		 Hardware Design. (c) World Scientific},
  entered =	 {Luca Carloni, 1/21/03},
  keywords =	 {Systems-on-Chip, interconnect synthesis, latency},
  publisher =	 {World Scientific Publishing Company}
}

@Article{le-meur2004specialization,
  author =	 {Anne-Fran\c{c}oise {Le Meur} and Julia L. Lawall and
		 Charles Consel},
  title =	 {Specialization Scenarios: A Pragmatic Approach to Declaring
		 Program Specialization},
  journal =	 {Higher-Order and Symbolic Computation},
  year =	 2004,
  volume =	 17,
  number =	 1,
  pages =	 {47--92},
  month =	 mar,
  annote =	 {Cited in bhatia2004automatic. Describes the "prespec" part
		 of Tempo.
		 
		 Claims that one of the difficulties with partial evaluation
		 is controlling the partial evaluator, i.e., instructing it
		 as to what should and should not be specialized. Claims that
		 most of the people who have use them are the people who
		 wrote them.
		 
		 Propose a language that lets a developer write a series of
		 hints about how to specialize the program (e.g., what things
		 should be bound at compile-time) that can then be used
		 later.}
}

@Book{lea2000concurrent,
  author =	 {Doug Lea},
  title =	 {Concurrent Programming in {Java}},
  publisher =	 aw,
  year =	 2000,
  address =	 aw_a,
  annote =	 {Reasonable introduction to the subject. Practical, not very
		 formal.}
}

@Book{leboudec2001network,
  author =	 {Jean-Yves {Le Boudec} and Patrick Thiran},
  title =	 {Network Calculus: A Theory of Deterministic Queuing Systems
		 for the Internet},
  publisher =	 sv,
  year =	 2001,
  volume =	 2050,
  series =	 lncs,
  annote =	 {Available online from
		 http://lrcwww.epfl.ch/PS_files/NetCal.htm
		 
		 Nifty math for doing more precise analysis of queuing
		 behavior, but still not as good as our pipeline stuff.}
}

@TechReport{lee1985language,
  author =	 {Insup Lee and Vijay Gehlot},
  title =	 {Language Constructs for Distributed Real-Time Programming},
  institution =	 {University of Pennsylvania},
  year =	 2007,
  number =	 {MS--CIS--85--58},
  address =	 {Philadelphia, Pennsylvania},
  month =	 oct,
  annote =	 {Suggested by Edward as part of the PRET stuff. More than
		 just "deadline." Appeared in RTSS, 1985.
		 
		 "Temporal Scopes" may have
		 
		 * a deadline by which the scope must be completed
		 
		 * a minimum amount of time that should pass before it starts
		 
		 * a maximum allowed delay before it starts
		 
		 * a maximum execution time
		 
		 * a maximum elapsed time
		 
		 start after 5ns within 100ns finish-by 300ns {...}
		 
		 Times may be "now" "at 10:30" "after 1us"
		 
		 Also lists an exception to perform when something violates
		 the timing constraint.
		 
		 Also, a temporal loop:
		 
		 from now to after 1min every 20s execute for 5s within 15s {
		 ... }
		 
		 Also proposes some CSP-like redezvous behavior with timeouts.
		 
		 Interesting bibliography, although now somewhat dated.},
  url =		 {http://repository.upenn.edu/cis_reports/656/},
  bdsk-url-1 =	 {http://repository.upenn.edu/cis_reports/656/}
}

@PhDThesis{lee1986coupled,
  author =	 {Edward A. Lee},
  title =	 {A Coupled Hardware and Software Architecture for
		 Programmable Digital Signal Processors},
  school =	 ucb,
  year =	 {1986},
  note =	 {Available as UCB/ERL M86/54}
}

@Article{lee1987pipeline1,
  author =	 {Edward A. Lee and David G. Messerschmitt},
  title =	 {Pipeline Interleaved Programmable {DSP's}: Architecture},
  journal =	 transassp,
  year =	 1987,
  volume =	 {ASSP-35},
  number =	 9,
  pages =	 {1320--1333},
  month =	 sep,
  annote =	 {Deeply pipelined DSPs for predictable timing. Talks about
		 the Bell Labs WE DSP20 and how to avoid pipeline hazards.
		 
		 Cited by carlstrom2004synchronous.}
}

@Article{lee1987pipeline2,
  author =	 {Edward A. Lee and David G. Messerschmitt},
  title =	 {Pipeline Interleaved Programmable {DSP's}: Synchronous Data
		 Flow Programming},
  journal =	 transassp,
  year =	 1987,
  volume =	 {ASSP-35},
  number =	 9,
  pages =	 {1334--1345},
  month =	 sep,
  annote =	 {Deeply pipelined DSPs for predictable timing.}
}

@Article{lee1987static,
  author =	 {Edward A. Lee and David G. Messerschmitt},
  title =	 {Static Scheduling of Synchronous Data Flow Programs for
		 Digital Signal Processing},
  journal =	 transcomp,
  year =	 {1987},
  volume =	 {C-36},
  number =	 {1},
  pages =	 {24--35},
  month =	 jan,
  annote =	 {Contains many details on scheduling, periodiciy matrices,
		 etc. Defines a class S algorithm as one that schedules a
		 node if is runnable and only stops when no more nodes are
		 runnable. Theorem: any class S algorithm will find one if
		 one exists. Proof: Assume a schedule exists and show that
		 the algorithm will not deadlock. Consider executing only
		 part of the schedule. If the S algorithm comes up with any
		 permutation of the prefix of the schedule, the next node can
		 be run. Otherwise, the first node that isn't in the schedule
		 will also be runnable. Rather a subtle argument, but
		 basically proof by induction.}
}

@Article{lee1987synchronous,
  author =	 {Edward A. Lee and David G. Messerschmitt},
  title =	 {Synchronous Data Flow},
  journal =	 {Proceedings of the IEEE},
  year =	 {1987},
  volume =	 {75},
  number =	 {9},
  pages =	 {1235--1245},
  month =	 sep,
  annote =	 {The main SDF paper.}
}

@TechReport{lee1989consistency,
  author =	 {Edward A. Lee},
  title =	 {Consistency in Dataflow Graphs},
  institution =	 ucb,
  year =	 {1989},
  number =	 {UCB/ERL M89/125}
}

@Book{lee1989realistic,
  author =	 {Peter Lee},
  title =	 {Realistic Compiler Generation},
  publisher =	 mit,
  year =	 {1989},
  series =	 {Foundations of Computing},
  address =	 mit_a,
  annote =	 {Introduces High-Level semantics, a replacement for the
		 denotational semantics of Scott \& Strachey, that he uses to
		 build a compiler generator, MESS. Has an excellent
		 introduction to semantic specifications and a good
		 bibliography.}
}

@Article{lee1992distributed,
  author =	 {Dongmyun Lee and Myunghwan Kim},
  title =	 {A distributed scheme for dynamic deadlock detection and
		 resolution},
  journal =	 {Information Sciences},
  year =	 {1992},
  volume =	 {64},
  number =	 {1--2},
  pages =	 {149--164},
  address =	 {New York, NY, USA},
  annote =	 {Distributed dynamic deadlock detection. Looking for a cycle
		 in the wait-for graph.},
  doi =		 {http://dx.doi.org/10.1016/0020-0255(92)90117-Q},
  issn =	 {0020-0255},
  publisher =	 {Elsevier Science Inc.},
  bdsk-url-1 =	 {http://dx.doi.org/10.1016/0020-0255(92)90117-Q}
}

@Unpublished{lee1994using,
  author =	 {Edward A. Lee and Frederic Boulanger},
  title =	 {Using {Esterel} in {Ptolemy}},
  year =	 {1994},
  month =	 dec,
  note =	 {Internal Ptolemy documentation}
}

@Article{lee1995dataflow,
  author =	 {Edward A. Lee and Thomas M. Parks},
  title =	 {Dataflow Process Networks},
  journal =	 {Proceedings of the IEEE},
  year =	 {1995},
  volume =	 {83},
  number =	 {5},
  pages =	 {773--801},
  month =	 may,
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/processNets},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/processNets}
}

@MastersThesis{lee1996fusing,
  author =	 {Bilung Lee},
  title =	 {Fusing Dataflow with Finite State Machines},
  school =	 ucb,
  year =	 {1996},
  month =	 may,
  note =	 {Available as UCB/ERL M96/20},
  url =		 {http://ptolemy.eecs.berkeley.edu/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/}
}

@TechReport{lee1996tagged,
  author =	 {Edward A. Lee and Alberto Sangiovanni-Vincentelli},
  title =	 {The Tagged Signal Model: {A} Preliminary Version of a
		 Denotational Framework for Comparing Models of Computation},
  institution =	 ucb,
  year =	 {1996},
  number =	 {UCB/ERL M96/33},
  month =	 jun,
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/96/denotational/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/96/denotational/}
}

@TechReport{lee1999embedded,
  author =	 {Edward A. Lee},
  title =	 {Embedded Software---An Agenda for Research},
  institution =	 ucb,
  year =	 1999,
  number =	 {UCB/ERL M99/63},
  month =	 dec,
  annote =	 {cited in SED:costa:00a. Advocates frameworks for describing
		 embedded software that pay heed to time. Doesn't propose a
		 specific framework, but does discuss his normal collection
		 of models of computation. An interesting report, if a bit
		 verbose.},
  url =		 {http://ptolemy.eecs.berkeley.edu/publications/papers/99/embedded/}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/publications/papers/99/embedded/}
		 
}

@Article{lee1999modeling,
  author =	 {Edward A. Lee},
  title =	 {Modeling Concurrent Real-Time Processes using Discrete
		 Events},
  journal =	 {Annals of Software Engineering},
  year =	 1999,
  volume =	 7,
  pages =	 {25--45},
  abstract =	 { We give a formal framework for studying real-time
		 discrete-event systems. It describes concurrent processes as
		 sets of possible behaviors. Compositions of processes are
		 processes with behaviors in the intersection of the
		 behaviors of the component processes. The interaction
		 between processes is through signals, which are collections
		 of events. Each event is a value-tag pair, where the tags
		 denote time. Zeno conditions are defined and methods are
		 given for avoiding them. Strict causality ensures
		 determinacy under certain technical conditions, and
		 delta-causality ensures the absence of Zeno conditions.},
  annote =	 {FIXME: Edward's timed token model.}
}

@Article{lee2000what-s,
  author =	 {Edward A. Lee},
  title =	 {What's Ahead for Embedded Software?},
  journal =	 computer,
  year =	 2000,
  volume =	 33,
  number =	 9,
  pages =	 {18-26},
  month =	 sep,
  annote =	 {From Edward's web site. Advocates type systems for temporal
		 checking, paying more attention to timing, the possibility
		 of new scheduling techniques (avoiding priority inversion
		 because the scheduler and semaphores interact indirectly).}
}

@Article{lee2001approximate,
  author =	 {David Lee and Henryk Wo\'zniakowski},
  title =	 {Approximate Evaluation of Characteristic Polynomials of
		 {Boolean} Functions},
  journal =	 {Theoretical Computer Science},
  year =	 2001,
  volume =	 262,
  pages =	 {37--68},
  annote =	 {From Henryk}
}

@Book{lee2003structure,
  author =	 {Edward A. Lee and Pravin Varaiya},
  title =	 {Structure and Interpretation of Signals and Systems},
  publisher =	 aw,
  year =	 2003,
  address =	 aw_a,
  annote =	 {Edward's signals and systems book. Included hybrid and
		 synchronous (digital) models.}
}

@Article{lee2005absolutely,
  author =	 {Edward A. Lee},
  title =	 {Absolutely Positively on Time: What Would It Take?},
  journal =	 computer,
  year =	 2005,
  volume =	 38,
  number =	 7,
  pages =	 {85--87},
  month =	 jul,
  annote =	 {Cited by henzinger2006embedded. Beginnings of our PRET
		 idea. Talks about threads. No bibliography.}
}

@Article{lee2006threads,
  author =	 {Edward A. Lee},
  title =	 {The Problem with Threads},
  journal =	 computer,
  year =	 2006,
  volume =	 39,
  number =	 5,
  pages =	 {33--42},
  month =	 may,
  annote =	 {Don't do threads.}
}

@Article{leen2002expanding,
  author =	 {Gabriel Leen and Donal Heffernan},
  title =	 {Expanding automotive electronic systems},
  journal =	 computer,
  year =	 2002,
  volume =	 35,
  number =	 1,
  pages =	 {88--93},
  month =	 jan,
  annote =	 {Nice picture of a modern vehicle's network. CAN bus. Also
		 worried about power distribution -- talks about 42V systems.
		 Doesn't mention the number of controllers}
}

@Book{leeuwen1990handbook,
  editor =	 {Jan van Leeuwen},
  title =	 {Handbook of Theoretical Computer Science},
  publisher =	 {Elsevier/MIT Press},
  year =	 {1990},
  annote =	 {Bought both volumes 970511}
}

@Book{leffler1989design,
  author =	 {Samuel J. Leffler and Marshall Kirk McKusick and Michael J.
		 Karels and John S. Quarterman},
  title =	 {The Design and Implementation of the {4.3BSD} {UNIX}
		 Operating System},
  publisher =	 aw,
  year =	 1989,
  address =	 aw_a,
  annote =	 {Bought at Caltech. Intimate discussion of process
		 scheduling, filesystem behavior, and some networking
		 issues.}
}

@TechReport{lehman1969programming,
  author =	 {Meir M. Lehman},
  title =	 {The programming process},
  institution =	 {IBM},
  year =	 1969,
  number =	 {Research Report RC 2722},
  address =	 {Yorktown Heights, New York},
  month =	 dec,
  annote =	 {Lehman's supposed earliest paper on software evolution. It
		 is reprinted in lehman1985program.
		 
		 "There aren't enough programmers"
		 
		 Talks about OS/360. Interesting numbersa: 1966 version had
		 400 KLOC, 1968 had 1.7 MLOC, 1970 2.2 MLOC. Nice graphs.
		 
		 Lots of hand-wringing over how difficult everything is, how
		 expensive and slow, etc.
		 
		 Interesting little discussion about high-level languages.
		 PL/1 was on everybody's minds, although they were
		 considering BSL, an assembly language with PL/1-like macros,
		 apparently.
		 
		 Doesn't really talk much about software evolution, certainly
		 not naming it as such. Mostly about the difficulties in the
		 software development process.}
}

@Book{lehman1985program,
  author =	 {Meir M. Lehman and L. A. Belady},
  title =	 {Program Evolution: Processes of Software Change},
  publisher =	 {Academic Press},
  year =	 1985,
  annote =	 {Cited by the Salon article and many, many others. Reprints
		 a bunch of seminal articles (mostly his, it would appear).
		 Appears to be out-of-print.
		 
		 It is, but there's a scanned-in copy:
		 
		 http://w3.umh.ac.be/evol/
		 ftp://ftp.umh.ac.be/pub/ftp_infofs/1985/ProgramEvolution.pdf
		 
		 Nice preface. Programs are never bug-free, so bug-fixing
		 goes on forever. Also, there's a continuous demand for
		 improvements and new features. Program maintenance consumes
		 70 percent of total program cost.
		 
		 Really a collection of papers rather than a clearly new
		 piece of work. Painful typesetting!
		 
		 Explicitly mentions simon1996sciences, but points out that
		 he worries about different generations rather than a more
		 continuous process.
		 
		 Rather pompous: Just talks about how the two of them have
		 collaborated and does such great things.
		 
		 Lehman's own idea (the SPE classification): "E-type"
		 software implements an application in some environment.
		 Problem basically is that you can never know exactly what
		 you need -- specifications are always broken in some way.
		 "E-program correctness is determined by user satisfaction
		 rather than by equivalence to a specification."
		 
		 Basic idea is that such systems are built in a feedback loop
		 and that specification are mostly speculative. Computer
		 systems themselves are not adaptive, though -- people must
		 adapt them.
		 
		 Chapter 3 is his 1969 IBM research report.
		 
		 Chapter 4 is "Natural Selection as Applied to Computers and
		 Programs." Definitely puts forth the idea that programs are
		 subject to natural selection a la Darwin. Very nice reading,
		 but doesn't suggest much concretely.
		 
		 Chapter 5: "Programming System Dynamics or The Meta-Dynamics
		 of Systems in Maintenance and Growth." (IBM research report,
		 1971). Tries to attach some math to it.
		 
		 Chapter 6: "An introduction to growth dynamics." A model of
		 how much it costs to evolve a system.
		 
		 Chapter 7: "Programs, Cities, Students -- Limits to Growth"
		 A presentation with a bunch of cute photos. (George slaying
		 the dragon, etc.) A few mathematical equations, mostly
		 collecting existing models.
		 
		 Chapter 8: "A Model of Large Program Development" (IBM,
		 1976) Again, mostly collecting statistics.
		 
		 Chapter 12: "Laws of program evolution - rules and tools for
		 programming management" (conference, 1978)
		 
		 1. A large program that is used undergoes continuing change
		 or becomes progressively less useful. The change process
		 continues until it is judged more cost-effective to replace
		 the system with a recreated version.
		 
		 Mentions simon1996sciences (actually, the first edition) as
		 also having pointed this out.
		 
		 2. As a large program is continuously changed, its
		 complexity, which reflects deterioratign structure,
		 increases unless work is done to maintain or reduce it.
		 
		 3. Measures of global project and system attributes are
		 cyclically self-regulating with statistically determinable
		 trends and invariences.
		 
		 4. The global activity rate in a large programming project
		 is invariant.
		 
		 5. For reliable, planned evolution, a large program
		 undergoing change must be mad available for regular user
		 execution (released) at maximum intervals determined by its
		 net growth. That is, the system develops a characteristic
		 average increment of safe growth which, if exceeded, causes
		 quality and usage problems, with time and cost over-runs.
		 
		 Chapter 13: "Staffing problems in large scale programming"
		 Mentions Brooks.
		 
		 Chapter 14: "The Characteristics of Large Systems" Again,
		 lots of graphs and statistics.
		 
		 Chapter 15: "On Software Complexity" A 1979 article on
		 software complexity measures.
		 
		 Chapter 16: "A Mathematical Models for the Evolution of
		 Software" Idea is to predict how costly/expensive/complex a
		 system becomes over time. Applications of the model:
		 "Release Timing"
		 
		 Chapter 17: "Modifiability of Large Software Systems" (1980)
		 Talks about a mechanisms for understanding large software
		 systems (a "greenprint," basically an abstraction of the
		 nesting of the program) Section on "Design for Modifiability
		 (p 382)": basic idea is to focus on data abstractions
		 (beginnings of object-orientation?) and enforce them. They
		 modified PL/1 to do this (which didn't have it?)
		 
		 Chapter 18: "The Large-Program Life Cycle" reiterates the
		 laws mentioned earlier.
		 
		 Chapter 19: "Programs, Programming, and the Software Life
		 Cycle" S-programs (specification only), P-programs (problem
		 only, e.g., travelling salesman), and E-programs
		 (environment, user-driven). Reiterates his laws again.
		 
		 Chapter 20: "The Environment of Program Development and
		 Maintenance - programs, programming, and programming support"
		 
		 Big difference: tries to quantify and understand the
		 software development process, but doesn't particularly say
		 anything about how to improve it. }
}

@Article{lehman1997logic,
  author =	 {Eric Lehman and Yosinori Watanabe and Joel Grodstein and
		 Heather Harkness},
  title =	 {Logic Decomposition During Technology Mapping},
  journal =	 transcad,
  year =	 1997,
  volume =	 16,
  number =	 8,
  pages =	 {813--834},
  month =	 aug,
  annote =	 {Clever approach to dealing with inverters during technology
		 mapping. They handle inverters in a very clever way. This
		 group was at DEC at the time. There's also a smaller ICCAD
		 version of this paper. I think Johnathan Gross might like
		 it.}
}

@Manual{lehman1999embedded,
  title =	 {Embedded Systems and the Emergence of Internet Appliances},
  organization = {Lehman Brothers},
  address =	 {New York, New York},
  month =	 apr,
  year =	 1999,
  annote =	 {Very bullish (look at the date) on embedded systems in
		 general. But a good, lengthy overview of the whole embedded
		 systems market. Lots of data.
		 
		 I got this from the Investext plus service off the Columbia
		 University Business Library.},
  url =		 {http://www.columbia.edu/cu/libraries/indexes/investext.html}
		 ,
  bdsk-url-1 =	 {http://www.columbia.edu/cu/libraries/indexes/investext.html}
		 
}

@Misc{lehman2001seth,
  author =	 {Meir M. Lehman},
  title =	 {SETh--Approach to a Theory of Software Evolution},
  howpublished = {Proposal},
  year =	 2001,
  month =	 jun,
  note =	 {http://www.doc.ic.ac.uk/~mml/},
  annote =	 {Software evolution}
}

@Article{lehman2003software,
  author =	 {Meir M. Lehman and Juan F. Ramil},
  title =	 {Software evolution---Background, theory, practice},
  journal =	 ipl,
  year =	 2003,
  volume =	 88,
  number =	 {1--2},
  pages =	 {33--44},
  month =	 oct,
  annote =	 {Cites godfrey2000evolution. "This paper opens with a brief
		 summary of some 30 years of study of the software evolution
		 phenomenon." Very nice summary and bibliography, although
		 mostly of his own work.
		 
		 The SPE program classification.
		 
		 A principle of software uncertainty
		 
		 Laws of E-type software evolution
		 
		 Surprising finding was that evolution of different software
		 systems was surprisingly consistent, making it possible to
		 make forecasts.
		 
		 }
}

@TechReport{leiserson1986retiming,
  author =	 {Charles E. Leiserson and James B. Saxe},
  title =	 {Retiming Synchronous Circuitry},
  institution =	 {DEC SRC},
  year =	 1986,
  number =	 13,
  month =	 aug,
  annote =	 {Earlier retiming work.}
}

@Article{leiserson1991retiming,
  author =	 {Charles E. Leiserson and James B. Saxe},
  title =	 {Retiming Synchronous Circuitry},
  journal =	 {Algorithmica},
  year =	 1991,
  volume =	 6,
  number =	 1,
  pages =	 {5--35},
  annote =	 {The fundamental reference on retiming.},
  optmonth =	 {FIXME}
}

@Book{leler1988constraint,
  author =	 {W. Leler},
  title =	 {Constraint Programming Languages},
  publisher =	 aw,
  year =	 {1988},
  address =	 aw_a,
  annote =	 {Discussion of the Bertrand specification language. Contains
		 many references to SketchPad, Pic, and other
		 constraint-based systems. Bertrand is a rule-based
		 expression rewriter system.}
}

@Article{lengauer1979fast,
  author =	 {T. Lengauer and Robert Endre Tarjan},
  title =	 {A Fast Algorithm for Finding Dominators in a Flowgraph},
  journal =	 toplas,
  year =	 1979,
  volume =	 1,
  number =	 1,
  pages =	 {121-141},
  month =	 jul,
  annote =	 {The main algorithm for computing dominators.}
}

@PhDThesis{lennard1995estimation,
  author =	 {Chrisopher Kevin Lennard},
  title =	 {Estimation Techniques to Guide Low-Power Resynthesis
		 Algorithms for Combinational Random {CMOS} Logic},
  school =	 ucb,
  year =	 {1995},
  note =	 {Available as UCB/ERL M95/75}
}

@Misc{lennart2001bluespec,
  author =	 {Lennart Augustsson and Jacob Schwarz and Rishiyur S.
		 Nikhil},
  title =	 {Bluespec Language definition},
  howpublished = {Sandburst Corp.},
  year =	 {2001}
}

@InProceedings{lerda2003symbolic,
  author =	 {Flavio Lerda and Nishant Sinha and Michael Theobald},
  title =	 {Symbolic Model Checking of Software},
  editor =	 {Byron Cook and Scott Stoller and Willem Visser},
  booktitle =	 {Electronic Notes in Theoretical Computer Science},
  year =	 2003,
  volume =	 {89},
  publisher =	 {Elsevier},
  issue =	 {3}
}

@InProceedings{lesser2001mimd-based,
  author =	 {F. Lesser and J. {de Cuveland} and V. Lindenstruth and C.
		 Reichling and R. Schneider and M. W. Schulz},
  title =	 {A {MIMD}-Based Multi Threaded Real-Time Processor for
		 Pattern Recognition},
  booktitle =	 euromicro-dsd,
  year =	 2001,
  pages =	 {372--375},
  address =	 {Warsaw, Poland},
  month =	 sep,
  annote =	 {Found through Google search. More on the application
		 (particle detection at CERN) rather than the architecture,
		 but there's something there anyway. Actually a poster.}
}

@Article{levy1988contraction,
  author =	 {Hanoch Levy and David W. Low},
  title =	 {A Contraction Algorithm for Finding Small Cycle Cutsets},
  journal =	 {Journal of Algorithms},
  year =	 {1988},
  volume =	 {9},
  number =	 {4},
  pages =	 {470--493},
  month =	 dec,
  annote =	 {Addresses the vertex cutset problem. Presents an efficient
		 (E log V) algorithm for ``contractible'' graphs, a superset
		 of quasi-reducible graphs. Proposes a series of
		 order-independent ``contraction operations'' that reduce the
		 graph but preserve cutset-related properties. Contraction
		 operations merge or remove vertices. Some of these removed
		 vertices go into the cutset. The question is whether a
		 vertex-based algorithm is interesting in a edge-based
		 environment. This seems like a terribly clever algorithm,
		 however.}
}

@Article{lewis1991hierarchical,
  author =	 {David M. Lewis},
  title =	 {A Hierarchical Compiled Code Event-Driven Logic Simulator},
  journal =	 transcad,
  year =	 1991,
  volume =	 10,
  number =	 6,
  pages =	 {726--737},
  month =	 jun,
  annote =	 {Describes generalized compiled event-driven simulators at
		 the gate level. Cited by SED:french:95a.}
}

@Book{lewis1992applied,
  author =	 {Frank L. Lewis},
  title =	 {Applied Optimal Control and Estimation},
  publisher =	 ph,
  year =	 1992,
  annote =	 {Chapter 1 has a nice history of control theory and appears
		 online at http://www.theorem.net/theorem/lewis1.html}
}

@Book{lewis1998multithreaded,
  author =	 {Bil Lewis and Daniel J. Berg},
  title =	 {Multithreaded Programming with {Pthreads}},
  publisher =	 {Sun Microsystems/Prentice Hall},
  year =	 1998,
  annote =	 {Nice, down-to-earth discussion of how to use Pthreads and
		 related threading APIs. A lot of information on tools and
		 companies, now probably long out-of-date.}
}

@Book{lewis2002fundamentals,
  author =	 {David W. Lewis},
  title =	 {Fundamentals of Embedded Software: Where C and Assembly
		 Meet},
  publisher =	 ph,
  year =	 2002,
  annote =	 {Very software-centric. x86 and PC-hardware focused. Nice
		 set of examples at the beginning. Practical, since you can
		 use ordinary PC hardware.}
}

@InProceedings{lhee2002type-assisted,
  author =	 {Kyung-suk Lhee and Steve J. Chapin},
  title =	 {Type-Assisted Dynamic Buffer Overflow Detection},
  booktitle =	 {Proceedings of the 11th USENIX Security Symposium},
  year =	 2002,
  pages =	 {81--89},
  address =	 {San Francisco, California,},
  month =	 aug,
  annote =	 {Nice survey of existing techniques: StackGuard,
		 StackShield, Libsafe, non-executable stack, non-executable
		 pages, runtime and static array bounds checking.
		 
		 Describes a number of ways to get around these various stack
		 guarding techniques.
		 
		 Technique generates run-time tables of types (actually
		 sizes) for all buffers, both static and automatic, and
		 intercepts malloc() and free() to remember buffer sizes
		 there.
		 
		 Intercepts C library calls (e.g., strcpy) and checks the
		 types (sizes) of the input and output buffers.
		 
		 From Angelos: Codiva project}
}

@PhDThesis{li1993compiling,
  author =	 {Wei Li},
  title =	 {Compiling for {NUMA} Parallel Machines},
  school =	 {Cornell University},
  year =	 1993,
  address =	 {Ithaca, New York},
  month =	 aug,
  annote =	 {Cited by a DAC paper I reviewed. NUMA is Non-Uniform Memory
		 Access. Advisor was Keshav Pingali.
		 
		 Idea is to move data in blocks because not all memory is
		 equally cheap to access. Concentrates on array accesses.
		 
		 Neat vector-based ideas about looking at dependendencies
		 between successive iterations of a loop and trying to
		 restructure loops.
		 
		 A theory of loop transformations, transformations for memory
		 locality, and transformations for cache locality.}
}

@InProceedings{li1995efficient,
  author =	 {Yau-Tsun Steven Li and Sharad Malik and Andrew Wolfe},
  title =	 {Efficient Microarchitecture Modeling and Path Analysis for
		 Real-Time Software},
  booktitle =	 {Proceedings of the 16th IEEE Real-Time Systems Symposium},
  year =	 1995,
  pages =	 {298--307},
  address =	 {Pisa, Italy},
  month =	 dec,
  annote =	 {Part of the WCET paper (Cinderella tool)}
}

@InProceedings{li1995hml,
  author =	 {Yanbing Li and Miriam Lesser},
  title =	 {{HML}: An Innovative Hardware Design Language and its
		 Translation to {VHDL}},
  booktitle =	 {Proceedings of the International Conference on Computer
		 Hardware Description Languages and their Applications
		 (CHDL)},
  year =	 1995,
  address =	 {Chiba, Japan},
  month =	 aug,
  annote =	 {Yanbing's work on using a functional ML-like language for
		 hardware description. Polymorphism is the main thing. Clocks
		 are explicit.},
  url =		 {http://www.ee.princeton.edu/~yanbing/publication.html},
  bdsk-url-1 =	 {http://www.ee.princeton.edu/~yanbing/publication.html}
}

@MastersThesis{li1995hml-ms,
  author =	 {Yanbing Li},
  title =	 {{HML}: An Innovative Hardware Design Language and its
		 Translation to {VHDL}},
  school =	 {Cornell University},
  year =	 1995,
  month =	 aug,
  annote =	 {From http://www.ece.neu.edu/groups/rcl/publications.html}
}

@InProceedings{li1996cache,
  author =	 {Yau-Tsun Steven Li and Sharad Malik and Andrew Wolfe},
  title =	 {Cache modeling for real-time software: beyond direct mapped
		 instruction caches},
  booktitle =	 rtss,
  year =	 1996,
  pages =	 {254--263},
  address =	 {Washington, DC},
  month =	 dec,
  annote =	 {WCET paper. This is an extension of the Cinderella work.}
}

@Article{li1997performance,
  author =	 {Yau-Tsun Steven Li and Sharad Malik},
  title =	 {Performance Analysis of Embedded Software Using Implicit
		 Path Enumeration},
  journal =	 transcad,
  year =	 1997,
  volume =	 16,
  number =	 12,
  pages =	 {1477--1487},
  month =	 dec,
  annote =	 {PRET-related stuff}
}

@InProceedings{li1997real-time,
  author =	 {Yanbing Li and Miodrag Potkonjak and Wayne Wolf},
  title =	 {Real-Time Operating Systems for Embedded Computing},
  booktitle =	 iccd,
  year =	 1997,
  pages =	 {388-392},
  address =	 {Austin, Texas},
  month =	 oct,
  abstract =	 {We survey the state-of-the-art in real-time operating
		 systems (RTOSs) from the system synthesis point of view.
		 RTOSs have a very long research history which provides
		 important theoretical results and useful industrial
		 implementations. Convergence of applications, technology,
		 and market trends of embedded systems implies a strong need
		 for new generation of RTOS. Therefore, new system synthesis
		 problem areas, notably hardware/software co-design and
		 synthesis for systems-on-silicon (SOS), are opening up new
		 avenues for RTOS research and development. This paper starts
		 with a survey of classical academic and industrial RTOS work
		 and continues with a survey of recent results related to
		 co-design and design systems-on-silicon. We conclude by
		 outlining future directions for the SOS RTOS.}
}

@InProceedings{li1999configuration,
  author =	 {Suet-Fei Li and Marlene Wan and Jan M. Rabaey},
  title =	 {Configuration code generation and optimizations for
		 heterogeneous reconfigurable {DSPs}},
  booktitle =	 {Proceedings of the IEEE Workshop on Signal Processing
		 Systems (SiPS)},
  year =	 1999,
  pages =	 {169--180},
  address =	 {Taipei, Taiwan},
  month =	 oct,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@Article{li1999mpls,
  author =	 {Tony Li},
  title =	 {{MPLS} and the Evolving {Internet} Architecture},
  journal =	 {IEEE Communications Magazine},
  year =	 1999,
  volume =	 37,
  number =	 12,
  pages =	 {38--41},
  month =	 dec,
  annote =	 {one of early tutorials on MPLS},
  doi =		 {http://dl.comsoc.org/cocoon/comsoc/servlets/GetPublication?id=166063}
		 ,
  bdsk-url-1 =	 {http://dl.comsoc.org/cocoon/comsoc/servlets/GetPublication?id=166063}
		 
}

@InProceedings{li2000hardware-software,
  author =	 {Yanbing Li and Tim Callahan and Ervan Darnell and Randolph
		 E. Harr and Uday Kurkure and Jon Stockwood},
  title =	 {Hardware-Software Co-Design of Embedded Reconfigurable
		 Architectures},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {507--512},
  address =	 dac00a,
  month =	 jun,
  annote =	 {A paper on the Nimble compiler.}
}

@Article{li2000hml,
  author =	 {Yanbing Li and Miriam Lesser},
  title =	 {{HML}: An Innovative Hardware Design Language and its
		 Translation to {VHDL}},
  journal =	 transvlsi,
  year =	 2000,
  volume =	 8,
  number =	 1,
  pages =	 {1--8},
  month =	 feb,
  annote =	 {Similar to li1995hml. More details, better description of
		 syntax, some hints about implementation.}
}

@InProceedings{li2005esterel,
  author =	 {Xin Li and Jan Lukoschus and Marian Boldt and Michael
		 Harder and Reinhard von Hanxleden},
  title =	 {An {Esterel} Processor with Full Preemption Support and its
		 Worst Case Reaction Time Analysis},
  booktitle =	 cases,
  year =	 2005,
  pages =	 {225--236},
  address =	 {San Francisco, California},
  month =	 sep,
  annote =	 {Uses CEC.}
}

@InProceedings{li2006concurrent,
  author =	 {Xin Li and Reinhard {von Hanxleden}},
  title =	 {A Concurrent Reactive {Esterel} Processor Based on
		 Multi-Threading},
  booktitle =	 sac,
  year =	 2006,
  address =	 {Dijon, France},
  month =	 apr,
  annote =	 {Kiel Esterel Processor. Multi-threaded.},
  optpages =	 {FIXME}
}

@InProceedings{li2006mapping,
  author =	 {Xin Li and Marian Boldt and Reinhard {von Hanxleden}},
  title =	 {Mapping {Esterel} onto a Multi-Threaded Embedded
		 Processor},
  booktitle =	 asplos,
  year =	 2006,
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {Used CEC. },
  optpages =	 {FIXME}
}

@InProceedings{liang1999efficient,
  author =	 {D. Liang and M.J. Harrold},
  title =	 {Efficient points-to analysis for whole-program analysis},
  booktitle =	 {ESEC/FSE-7: Proceedings of the 7th European software
		 engineering conference held jointly with the 7th ACM SIGSOFT
		 international symposium on Foundations of software
		 engineering},
  year =	 1999,
  pages =	 {199--215},
  publisher =	 {Springer-Verlag},
  oldkey =	 {liang99},
  sedtransform = {s/liang99/liang1999efficient/}
}

@Article{liang2005recognition,
  author =	 {Bob Liang and Pradeep Dubey},
  title =	 {Recognition, Mining and Synthesis},
  journal =	 {Intel Technology Journal},
  year =	 2005,
  volume =	 9,
  number =	 2,
  pages =	 {v--vi},
  month =	 may,
  annote =	 {A very short article about Intel's RMS stuff.}
}

@InProceedings{liao1997efficient,
  author =	 {Stan Liao and Steve Tjiang and Rajesh Gupta},
  title =	 {An Efficient Implementation of Reactivity for Modeling
		 Hardware in the {Scenic} Design Environment},
  booktitle =	 dac97,
  year =	 {1997},
  pages =	 {70--75},
  address =	 dac97a,
  month =	 jun,
  annote =	 {Scenic Threads.
		 
		 One major trick is building expressions that can be waited
		 on. They overload the usual operators so that when a signal
		 appears on either side, the result is an object that, when
		 evaluated, evaluates the expression.
		 
		 Preemption is handled by the try-catch mechanism in C++. A
		 process registers preemption conditions in its constructor.
		 These cause an exception to be thrown from within the
		 process when it reawakens. One exception is thrown: the
		 handler must check to see which preemption condition held,
		 allowing for priorities.}
}

@Article{liaw1992on,
  author =	 {Heh-Tyan Liaw and Chen-Shang Lin},
  title =	 {On the {OBDD}-Representation of General Boolean Functions},
  journal =	 transcomp,
  year =	 1992,
  volume =	 41,
  number =	 6,
  pages =	 {661--664},
  month =	 jun,
  annote =	 {Tom pointed this out: bounds on BDD sizes. Tight upper
		 bound they claim: (2^n / n)(2 + \epsilon). Two effects:
		 merging of isomorphic subgraphs produces the 1/n factor;
		 deletion rule has a vanishing effect. "Almost all require
		 2^n/2n variables and are not sensitive to variable ordering."
		 
		 Argument works by breaking the BDD into a top half and
		 bottom half, deriving bounds for both, and then finding the
		 minimum of each.
		 
		 They make the argument that for large BDDs, the advantage of
		 deleting vertices with idential true and false branches
		 becomes negligible and argue that the savings from not
		 having to represent variable numbers in the nodes can reduce
		 memory consumption.
		 
		 Does not consider inversion arcs.}
}

@InProceedings{lickly2008predictable,
  author =	 {Ben Lickly and Isaac Liu and Sungjun Kim and Hiren D. Patel
		 and Stephen A. Edwards and Edward A. Lee},
  title =	 {Predictable Programming on a Precision Timed Architecture},
  booktitle =	 cases,
  year =	 2008,
  pages =	 {137--146},
  address =	 {Atlanta, Georgia},
  month =	 oct,
  abstract =	 {In a hard real-time embedded system, the time at which a
		 result is computed is as important as the result itself.
		 Modern processors go to extreme lengths to ensure their
		 function is predictable, but have abandoned predictable
		 timing in favor of average-case performance. Real-time
		 operating systems provide timing-aware scheduling policies,
		 but without precise worst-case execution time bounds they
		 cannot provide guarantees. We describe an alternative in
		 this paper: a SPARC-based processor with predictable timing
		 and instruction-set extensions that provide precise timing
		 control. Its pipeline executes multiple, independent
		 hardware threads to avoid costly, unpredictable bypassing,
		 and its exposed memory hierarchy provides predictable
		 latency. We demonstrate the effectiveness of this
		 precision-timed (PRET) architecture through example
		 applications running in simulation.},
  annote =	 {Our first real PRET paper.},
  url =		 {http://chess.eecs.berkeley.edu/pubs/475.html},
  bdsk-url-1 =	 {http://chess.eecs.berkeley.edu/pubs/475.html}
}

@TechReport{lickly2008predictable-tr,
  author =	 {Ben Lickly and Isaac Liu and Sungjun Kim and Hiren D. Patel
		 and Stephen A. Edwards and Edward A. Lee},
  title =	 {Predictable Programming on a Precision Timed Architecture},
  institution =	 ucb,
  year =	 2008,
  number =	 {UCB/EECS-2008-40},
  month =	 apr,
  annote =	 {Submitted to CASES. Part of the PRET project.}
}

@Book{liem1997retargetable,
  author =	 {Clifford Liem},
  title =	 {Retargetable Compilers for Embedded Core Processors:
		 Methods and Experiences in Industrial Applications},
  publisher =	 kl,
  year =	 1997,
  address =	 kl_a,
  annote =	 {Randy(?) had put this in the ATG library. Interesting
		 review of different compiler techniques.
		 
		 UNREAD}
}

@InProceedings{lim1994accurate,
  author =	 {Sung-Soo Lim and Sang Lyul Min and Minsuk Lee and Chang
		 Park and Heonshik Shin and Chong Sang Kim},
  title =	 {An accurate instruction cache analysis technique for
		 real-time systems},
  booktitle =	 {Proceedings of the Workshop on Architectures for Real-time
		 Applications},
  year =	 1994,
  month =	 apr,
  annote =	 {WCET paper. Instruction cache modeling.}
}

@InProceedings{lin1989synthesis,
  author =	 {Bill Lin and A. Richard Newton},
  title =	 {Synthesis of Multiple Level Logic from Symbolic High-Level
		 Description Languages},
  booktitle =	 {Proceedings of IFIP International Conference on VLSI},
  year =	 1989,
  pages =	 {187--196},
  address =	 {Munich, West Germany},
  month =	 aug,
  publisher =	 {Elsevier},
  annote =	 {Describes JEDI. I haven't seen this. It was published in
		 1990 in VLSI 89 Edited by G. Musgrave, U. Lauther ISBN: 0
		 444 88344 4 516 pages}
}

@InProceedings{lin1990dont,
  author =	 {Bill Lin and Herv\'e J. Touati and A. Richard Newton},
  title =	 {Don't Care Minimization of Multi-Level Sequential Logic
		 Networks},
  booktitle =	 iccad,
  year =	 1990,
  pages =	 {414--417},
  address =	 {Santa Clara, California},
  month =	 nov,
  annote =	 {Referenced by wang1993input.
		 
		 Uses BDDs. Looks fairly nice.
		 
		 Talks about the usual technique of BFS implicit BDD
		 exploration. Also considers finding equivalent states.
		 
		 Straightforward. Use the usual symbolic state-space
		 exploration procedure to compute reachable states, then
		 complement it to get the sequential don't-cares.
		 
		 Equivalent states a little more interesting. Basically, ask
		 the question whether these states can be distinguished after
		 one, two, k, or an unbounded number of cycles. Build two
		 copies of the machine, feed one the first state, the other
		 the second, and see if their outputs ever differ (hook an
		 XOR across the outputs). Same sort of computation.
		 
		 Only four pages. A short paper?}
}

@Article{lin1997recent,
  author =	 {Youn-Long Lin},
  title =	 {Recent Developments in High-Level Synthesis},
  journal =	 todaes,
  year =	 1997,
  volume =	 2,
  number =	 1,
  pages =	 {2--21},
  month =	 jan,
  annote =	 {Survey of high-level synthesis. Lin is from Tsing Hua.
		 Mostly about scheduling and allocation problems. Scheduling
		 is either time- or resource-constrained. ILP is the usual
		 way it's formulated. ASAP/ALAP scheduling.
		 
		 Big bibliography, but little technical detail. Nothing about
		 handling complex control-flow.}
}

@InProceedings{lin1998efficient,
  author =	 {Bill Lin},
  title =	 {Efficient Compilation of Process-Based Concurrent Programs
		 without Run-Time Scheduling},
  booktitle =	 date,
  year =	 1998,
  pages =	 {211--217},
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {Similar to his DAC '98 paper, C + CSP -> Petri nets,
		 unroll, schedule each, generate a CFG. I got a Postscript
		 version from him via email.}
}

@InProceedings{lin1998software,
  author =	 {Bill Lin},
  title =	 {Software Synthesis of Process-Based Concurrent Programs},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {502--505},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Similar to SED:lin:98a.}
}

@Book{lindholm1999java,
  author =	 {Tim Lindholm and Frank Yellin},
  title =	 {The {Java} Virtual Machine Specification},
  publisher =	 aw,
  year =	 1999,
  address =	 aw_a,
  annote =	 {See joy2000java}
}

@Misc{linux-kernel-project,
  author =	 {{Linux Kernel Project}},
  howpublished = {http://www.kernel.org}
}

@InProceedings{lipovski1977hardware,
  author =	 {G. J. Lipovski},
  title =	 {Hardware Description Languages: Voices of the Tower of
		 Babel},
  booktitle =	 computer,
  year =	 1977,
  volume =	 6,
  pages =	 {14--17},
  month =	 jun,
  annote =	 {Nice complaining about the state of hardware description
		 languages},
  number =	 6
}

@Book{lipsett1989vhdl,
  author =	 {Roger Lipsett and Carl F. Schaefer and Cary Ussery},
  title =	 {{VHDL}: Hardware Description and Design},
  publisher =	 kl,
  year =	 {1989},
  address =	 kl_a
}

@Article{lipton1983vlsi,
  author =	 {R. J. Lipton and J. Valdes and G. Vijayan and S. C. North
		 and R. Sedgewick},
  title =	 {{VLSI} Layout as Programming},
  journal =	 toplas,
  year =	 {1983},
  volume =	 {5},
  number =	 {3},
  pages =	 {405--421},
  month =	 jul,
  annote =	 {ALI is a system which uses a PASCAL program using a small
		 set of routines to generate a simple constraint graph
		 describing rectangles. This graph is sent through a solver
		 which places all the rectangles.}
}

@InProceedings{lipton1990pdl,
  author =	 {Richard J. Lipton and Dimotrios N. Serpanos and Wayne H.
		 Wolf},
  title =	 {{PDL++}: an optimizing generator language for register
		 transfer design},
  booktitle =	 {Proceedings of the International Symposium on Circuits and
		 Systems (ISCAS)},
  year =	 1990,
  pages =	 {1135--1138 vol.~2},
  address =	 {New Orleans, Louisiana},
  month =	 may,
  annote =	 {Referred to by one of the IWLS 2004 reviewers.
		 
		 "PDL++ is an optimizing generator langauge for register
		 transfer systems. It lets users write C++ programs that
		 generate register-transfer machines and optimize the logic
		 design using misII."
		 
		 An OCAPI-like approach to using C++ to algorithmically
		 assemble things.}
}

@InProceedings{liscombe2003classifying,
  author =	 {Jackson Liscombe and Jennifer Venditti and Julia
		 Hirschberg},
  title =	 {Classifying Subject Ratings of Emotional Speech Using
		 Acoustic Features},
  booktitle =	 {Proceedings of EUROSPEECH},
  year =	 2003,
  pages =	 {725--728}
}

@InProceedings{liscombe2005detecting,
  author =	 {Jackson Liscombe and Julia Hirschberg and Jennifer J.
		 Venditti},
  title =	 {Detecting Certainness in Spoken Tutorial Dialogues},
  booktitle =	 {Proceedings of INTERSPEECH},
  year =	 2005
}

@Book{lisper1989synthesizing,
  author =	 {Bj{\"o}rn Lisper},
  title =	 {Synthesizing Synchronous Systems by Static Scheduling in
		 Space-Time},
  publisher =	 sv,
  year =	 {1989},
  volume =	 {362},
  series =	 lncs,
  annote =	 {A graphical treatment of synchronous systems, including
		 many resynthesis schemes.}
}

@Article{liu1973scheduling,
  author =	 {C. L. Liu and James W. Layland},
  title =	 {Scheduling Algorithms for Multiprogramming in a Hard
		 Real-Time Environment},
  journal =	 jacm,
  year =	 1973,
  volume =	 20,
  number =	 1,
  pages =	 {46--61},
  month =	 jan,
  annote =	 {The source for rate-monotonic analysis (RMA). Excellent
		 paper: clear, concise, readable.
		 
		 Makes some assumptions: 1) all tasks with deadlines are
		 periodic. 2) A task must be completed before it is requested
		 again. 3) Task requests are independent of other tasks. 4)
		 Each task's runtime is constant. 5) Nonperiodic tasks are
		 special, such as system initialization.
		 
		 Scheduling algorithms are preemptive, priority-driven, so a
		 request for a higher-priority task will always suspend the
		 lower-priority one.
		 
		 Critical instant for a task in one in which that task will
		 have the longest response time. If it still meets the
		 deadline, then it's fine. Theorem: a critical instant for a
		 task occurs when all other higher-priority tasks are
		 requested simultaneously.
		 
		 Rate-monotonic priority assignment: assign tasks with higher
		 request rates to higher priorities. Theorem: If there's a
		 feasible assignment of priorities, then the rate-monotonic
		 priority assignment is also feasible.
		 
		 Processor utilization: \sum_{tasks} runtime_t / period_t
		 
		 Full utilization: when increasing the runtime of any of the
		 tasks makes the schedule infeasible.
		 
		 Least utilization over all task sets that fully utilize the
		 processor. They have a case-wise proof showing the maximum
		 for two tasks is about 0.83. Full utilization is possible
		 when the lower priority task's period is a multiple of the
		 higher-priority task. The proof, unfortunately, is somewhat
		 confusing and not constructive. It would be useful to build
		 an example that exhibits this worst-case behavior.
		 
		 Also talks about dynamic priority assignment via a
		 deadline-driven scheduling algorithm. Shows this achieves
		 100% utilization. Priorities: task with soonest deadline is
		 given highest priority. }
}

@InProceedings{liu1998automatic,
  author =	 {Yanhong A. Liu and Gustavo Gomez},
  title =	 {Automatic Accurate Time-Bound Analysis for High-Level
		 Languages},
  booktitle =	 {Proceedings of the ACM SIGPLAN Workshop on Languages,
		 Compilers, and Tools for Embedded Systems},
  year =	 1998,
  pages =	 {31--40},
  month =	 jun,
  annote =	 {WCET paper. Automatic bounding.}
}

@Book{liu2000real-time,
  author =	 {Jane W. S. Liu},
  title =	 {Real-Time Systems},
  publisher =	 ph,
  year =	 2000,
  annote =	 {A really nice textbook on real-time systems, scheduling
		 theory, priorities, etc. I know her from Academia Sinica in
		 Taiwan and NTU.}
}

@InProceedings{liu2007throughput-driven,
  author =	 {Lixia Liu and Xiao-Feng Li and Michael Chen and Roy D. C.
		 Ju},
  title =	 {A Throughput-Driven Task Creation and Mapping for Network
		 Processors},
  booktitle =	 {Proceedings of the International Conference on High
		 Performance Embedded Architectures \& Compilers (HiPEAC)},
  year =	 2007,
  series =	 lncs,
  volume =	 4367,
  pages =	 {227--241},
  address =	 {Ghent, Belgium},
  month =	 jan,
  publisher =	 sv,
  annote =	 {From Ilija: reference on the Baker language. Talks about
		 the Baker language for programming the Intel IXP2400 network
		 processor. Cites a tutorial they presented at MICRO 2004,
		 which I'm not sure counts as something concrete.}
}

@InProceedings{livshits2003tracking,
  author =	 {V. Benjamin Livshits and Monica S. Lam},
  title =	 {Tracking Pointers with Path and Context Sensitivity for Bug
		 Detection in C Programs},
  booktitle =	 {Proceedings of the SIGSOFT Symposium on the Foundations of
		 Software Engineering},
  year =	 2003,
  oldkey =	 {livshits},
  sedtransform = {s/livshits/livshits2003tracking/}
}

@Article{locke1992software,
  author =	 {C. Douglass Locke},
  title =	 {Software Architecture for Hard Real-Time Applications:
		 Cyclic Executives vs.\ Fixed Priority Executives},
  journal =	 {Real-Time Systems},
  year =	 1992,
  volume =	 4,
  number =	 1,
  pages =	 {37--53},
  month =	 mar,
  annote =	 {Cited by burns1997real-time. Discussion of cyclic
		 executives? I haven't seen it.}
}

@Misc{lockridge2000will,
  author =	 {Rick Lockridge},
  title =	 {Will bugs scare off users of new {Windows} 2000?},
  howpublished = {http://archives.cnn.com/2000/TECH/computing/02/17/windows.2000}
		 ,
  year =	 2000,
  month =	 feb
}

@InProceedings{loecher2009citysense,
  author =	 {Markus Loecher and Tony Jebara},
  title =	 {{CitySense}: Multiscale Space Time Clustering of {GPS}
		 Points and Trajectories},
  booktitle =	 {Proceedings of the Joint Statistical Meeting},
  year =	 2009
}

@InProceedings{loeffler1989practical,
  author =	 {Christoph Loeffler and Adriaan Ligtenberg and George S.
		 Moschytz},
  title =	 {Practical fast 1-D DCT algorithms with 11 multiplications},
  booktitle =	 icassp,
  year =	 1989,
  volume =	 2,
  pages =	 {988-991},
  address =	 {Glasgow, Scotland},
  month =	 may,
  annote =	 {Nalini found this. Relevant to JPEG decoding.}
}

@InProceedings{logothetis2003exact,
  author =	 {G. Logothetis and Klaus Schneider},
  title =	 {Exact High Level {WCET} Analysis of Synchronous Programs by
		 Symbolic State Space Exploration},
  booktitle =	 date,
  year =	 2003,
  pages =	 {196--203},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Part of the WCET paper},
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/DATE.2003.1186386}
		 ,
  bdsk-url-1 =	 {http://doi.ieeecomputersociety.org/10.1109/DATE.2003.1186386}
		 
}

@Proceedings{lombardi1964programming,
  title =	 {Lisp as the language for an incremental computer},
  year =	 1964,
  editor =	 {C. B. Jones},
  publisher =	 {The MIT Press},
  annote =	 {ritchie1993development mentioned this. Basic idea is to
		 compile into a sequence of addresses of "service routines"
		 that implement, say, add instructions.},
  author =	 {Lionello A. Lombardi and Bertram Raphael},
  journal =	 {The Programming Language {Lisp}: Its Operation and
		 Applications},
  pages =	 {204--219}
}

@Book{long1993how,
  author =	 {J. Long},
  title =	 {How to Rock Climb!},
  publisher =	 {Chockstone Press},
  year =	 {1993},
  address =	 {Evergreen, Colorado},
  edition =	 {Second}
}

@InProceedings{lu2003performance,
  author =	 {Ruibing Lu and Cheng-Kok Koh},
  title =	 {Performance Optimization of Latency Insensitive Systems
		 through Buffer Queue Sizing of Communication Channels},
  booktitle =	 iccad,
  year =	 2003,
  pages =	 {227--231},
  affiliation =	 {Purdue Univ.},
  annote =	 {Cites Luca's TCAD01, ICCAD99, DAC00, MICRO02 paper. Deals
		 with maximum cycle mean of the topology graph.
		 
		 },
  entered =	 {Luca Carloni, 9/15/02},
  keywords =	 {latency-insensitive design},
  oldkey =	 {lu03},
  sedtransform = {s/lu03/lu2003performance/}
}

@Article{lu2006performance,
  author =	 {Ruibing Lu and Cheng-Kok Koh},
  title =	 {Performance analysis of latency-insensitive systems},
  journal =	 transcad,
  year =	 2006,
  volume =	 25,
  number =	 3,
  pages =	 {469--483},
  oldkey =	 {lu06},
  sedtransform = {s/lu06/lu2006performance/}
}

@PhDThesis{lucassen1994denotational,
  author =	 {Paul G. Lucassen},
  title =	 {A Denotational Model and Composition Theorems for a
		 Calculus of Delay-Insensitive Specifications},
  school =	 {University of Groningen},
  year =	 1994,
  month =	 may,
  annote =	 {Came from Steve Nowick. One of Udding's students? Not
		 available electronically.
		 
		 Nice bibliography. Definitely focused on asynchronous
		 circuits. Talks about the DI-Algebra (delay-insensitive
		 algebra). Seems to be mostly about theorems, lemmas, and
		 such, and not correct-by-construction approaches.
		 
		 Defines a CSP-like process algebra. Then talks about
		 receptiveness of processes as a precursor to
		 delay-insensitivity.
		 
		 Starts with nondeterministic choice and guards.}
}

@Misc{lucent2000fpl,
  author =	 {{Lucent Technologies}},
  title =	 {{FPL}: {PayloadPlus} Functional Programming Language},
  howpublished = {Product Brief},
  year =	 2000,
  month =	 apr,
  annote =	 {From http://www.lucent.com/micro/netcom/platform/npu.html}
}

@Book{luebben1993knots,
  author =	 {C. Luebben},
  title =	 {Knots for Climbers},
  publisher =	 {Chockstone Press},
  year =	 {1993},
  address =	 {Evergreen, Colorado}
}

@InProceedings{luethje2001novel,
  author =	 {Olaf L\"uthje and Martin Coors and Holger Keding and
		 Heinrich Meyr},
  title =	 {A novel approach to code analysis of digital signal
		 processing systems},
  booktitle =	 cases,
  year =	 2001,
  pages =	 {76--83},
  address =	 cases2001a,
  month =	 nov,
  annote =	 {Cites keding2001fast. Part of the FRIDGE work. Describes
		 the analysis algorithms, sort-of. Really a sort of abstract
		 interpretation technique that propagates word widths around
		 the system.}
}

@Article{luk1999automatic,
  author =	 {Chi-Keung Luk and Todd C. Mowry},
  title =	 {Automatic Compiler-Inserted Prefetching for Pointer-Based
		 Applications},
  journal =	 transcomp,
  year =	 1999,
  volume =	 48,
  number =	 2,
  pages =	 {131--141},
  month =	 feb,
  annote =	 {Cited by Sean Gibb in his thesis.
		 
		 Proposes a compiler algorithm that prefetches things with
		 pointers. Simulated the heck out of an R10000-derived
		 processor to check findings. Reasonable bibliography.}
}

@InProceedings{lukoschus2004efficient,
  author =	 {Jan Lukoschus and Reinhard {von Hanxleden} and Stephen A.
		 Edwards},
  title =	 {Efficient Compilation of Cyclic Synchronous Programs},
  booktitle =	 lctes,
  year =	 2004,
  address =	 {Washington, DC},
  month =	 jun,
  note =	 {Rejected},
  annote =	 {Met the two of them at Synchron 2004},
  optpages =	 {FIXME}
}

@InProceedings{lukoschus2005removing,
  author =	 {Jan Lukoschus and Reinhard von Hanxleden},
  title =	 {Removing Cycles in {Esterel} Programs},
  booktitle =	 slap,
  year =	 2005,
  series =	 entcs,
  address =	 {Edinburgh, Scotland},
  month =	 {apr},
  annote =	 {What would eventually be Jan's thesis work. Uses CEC.},
  optnumber =	 {FIXME},
  optpages =	 {FIXME},
  optvolume =	 {FIXME}
}

@PhDThesis{lukoschus2006removing,
  author =	 {Jan Lukoschus},
  title =	 {Removing Cycles in {Esterel} Programs},
  school =	 {Christian-Albrechts-Universit{\"a}t Kiel, Department of
		 Computer Science},
  year =	 2006,
  annote =	 {I was on his committee.}
}

@TechReport{lumetta1994mantis,
  author =	 {Steven S. Lumetta and David E. Culler},
  title =	 {Mantis User's Guide, Version 1.0},
  institution =	 ucb,
  year =	 {1994},
  number =	 {UCB:CSD-94-828},
  annote =	 {Describes the Mantis interactive debugger for Split-C, a
		 concurrent C for the CM5},
  url =		 {http://http.cs.berkeley.edu/~stevel/},
  bdsk-url-1 =	 {http://http.cs.berkeley.edu/~stevel/}
}

@Article{lundqvist1999integrated,
  author =	 {Thomas Lundqvist and Per Stenstr\"om},
  title =	 {An Integrated Path and Timing Analysis Method based on
		 Cycle-Level Symbolic Execution},
  journal =	 {Real-Time Systems},
  year =	 1999,
  volume =	 17,
  pages =	 {183--207},
  month =	 nov,
  annote =	 {Part of the WCET paper (Chalmers prototype tool)}
}

@InProceedings{lundqvist1999timing,
  author =	 {Thomas Lundqvist and Per Stenstr\"{o}m},
  title =	 {Timing Anomalies in Dynamically Scheduled Microprocessors},
  booktitle =	 rtss,
  year =	 1999,
  pages =	 12,
  address =	 {Washington, DC},
  publisher =	 {IEEE Computer Society},
  isbn =	 {0-7695-0475-2}
}

@InProceedings{luth1997events,
  author =	 {Karsten L\"uth and Alexander Metzner and T. Peikenkamp and
		 J. Risau},
  title =	 {The {EVENTS} Approach to Rapid Prototyping for Embedded
		 Control Systems},
  booktitle =	 {Zielarchiekturen eingebetteter Systeme (ZES '97) 14. ITG/GI
		 Fachtagung Archiektur von Rechnersystemen (ARCS'97)},
  year =	 1997,
  address =	 {Rostock, Germany},
  month =	 sep,
  annote =	 {Cited in SED:luth:98a}
}

@InProceedings{luth1998hwsw,
  author =	 {Karsten L\"uth and J\"urgen Niehaus and Thomas Peikenkamp},
  title =	 {{HW/SW} Cosynthesis using {Statecharts} and Symbolic Timing
		 Diagrams},
  booktitle =	 {Proceedings of the 9th IEEE International Workshop on Rapid
		 System Prototyping},
  year =	 1998,
  pages =	 {212--217},
  address =	 {Leuven, Belgium},
  month =	 jun,
  annote =	 {referenced by SED:luth:98a},
  url =		 {http://ca.informatik.uni-oldenburg.de/publications/publications.html}
		 ,
  bdsk-url-1 =	 {http://ca.informatik.uni-oldenburg.de/publications/publications.html}
		 
}

@InProceedings{luth1998statemate-based,
  author =	 {Karsten L\"uth and J\"urgen Niehaus and Alexander Metzner},
  title =	 {A {Statemate-based} Rapid Prototyping Environment},
  booktitle =	 {Deutsches Anwenderforum f\"ur Statemate},
  year =	 1998,
  annote =	 {Generating code from Statechart models},
  url =		 {http://www.informatik.uni-oldenburg.de/forschung/bericht/node10.html}
		 ,
  bdsk-url-1 =	 {http://www.informatik.uni-oldenburg.de/forschung/bericht/node10.html}
		 
}

@Article{lyapunov1992general,
  author =	 {Aleksandr Mikhailovich Lyapunov},
  title =	 {The general problem of the stability of motion},
  journal =	 {International Journal of Control},
  year =	 1992,
  volume =	 55,
  number =	 3,
  pages =	 {531--534},
  month =	 mar,
  note =	 {Translated from the Russian, original published in 1892 by
		 the Communications of the Society of Mathematics in
		 Kharkow}
}

@Article{lynch1989proof,
  author =	 {Nancy Lynch and Eugene Stark},
  title =	 {A proof of the {Kahn} principle for {Input/Output}
		 automata},
  journal =	 {Information and Computation},
  year =	 1989,
  volume =	 82,
  number =	 1,
  pages =	 {81--92},
  month =	 jul,
  annote =	 {Found at random.
		 
		 Nice little discussion of her I/O automata.
		 
		 Clearly written. I/O automata are essentially communicating
		 sequential processes. Much of the formalism reminds me of
		 CSP or Jacobs, but is based on automata generating traces,
		 not just on the traces themselves.
		 
		 Has a similar sort of parallel composition. Definitely
		 receptive processes: an automaton can always accept any of
		 its inputs at any time, and it looks like it is compelled to
		 eventually produce an output if the output is ever enabled
		 (her notion of fairness).
		 
		 "Port automata" are more-or-less the same, but talk about
		 actions as sets: port \times value. Single driver,
		 multiple-receiver ports.
		 
		 She talks about determinancy, basically requiring the
		 automata to be functional. In particular, it looks like
		 choices about what outputs are generated when are not
		 allowed, but inputs are completely uncontrolled.}
}

@InProceedings{lynch1992forward,
  author =	 {Nancy Lynch and Frits Vaandrager},
  title =	 {Forward and Backward Simulations for Timing-Based Systems},
  booktitle =	 {Real-Time, Theory in Practice. REX Workshop Proceedings,
		 Mook, Netherlands, June 3--7, 1991},
  year =	 {1992},
  series =	 lncs,
  volume =	 {600},
  pages =	 {397--446},
  publisher =	 sv,
  annote =	 {Heavy math. Lengthy. Discusses nondeterminstic automata,
		 both untimed and timed. Does not address pratical
		 implementations.}
}

@Book{maccoll1945fundamental,
  author =	 {{Le Roy} Archibald MacColl},
  title =	 {Fundamental Theory of Servomechanisms},
  publisher =	 {Van Nostrand},
  year =	 1945,
  annote =	 {Cited by lewis1992applied as an early control theory
		 text.}
}

@InProceedings{macii1992verification,
  author =	 {Enrico Macii and Bernard Plessier and Fabio Somenzi},
  title =	 {Verification of Systems Containing Counters},
  booktitle =	 iccad,
  year =	 1992,
  pages =	 {179--182},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Referenced by SED:hojati:95a}
}

@Article{macii1997formal,
  author =	 {Enrico Macii and Bernard Plessier and Fabio Somenzi},
  title =	 {Formal Verification of Digital Systems by Automatic
		 Reduction of Data Paths},
  journal =	 transcad,
  year =	 1997,
  volume =	 16,
  number =	 10,
  pages =	 {1136--1156},
  month =	 oct,
  annote =	 {Referenced in SED:hsieh:99a. Something like datapaths whose
		 outputs cannot be observed by the controller can be
		 abstracted away. Trivial?}
}

@Article{macmillen2000industrial,
  author =	 {Don MacMillen and Mike Butts and Raul Camposano and Dwight
		 Hill and T. W. Williams},
  title =	 {An industrial view of electronic design automation},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1428--1448},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@Article{madisetti1991asynchronous,
  author =	 {Vijay K. Madisetti and Jean C. Walrand and David G.
		 Messerschmitt},
  title =	 {Asynchronous Algorithms for the Parallel Simulation of
		 Event-Driven Dynamical Systems},
  journal =	 {ACM Transactions on Modeling and Computer Simulation},
  year =	 {1991},
  volume =	 {1},
  number =	 {3},
  pages =	 {244--274},
  month =	 jul,
  annote =	 {Another paper on simulating discrete-event systems on
		 concurrent systems.}
}

@Article{magklis2003dynamic,
  author =	 {G. Magklis and G. Semeraro and D. H. Albonesi and S. G.
		 Dropsho and S. Dwarkadas and M. L. Scott},
  title =	 {Dynamic Frequency and Voltage Scaling for a
		 Multiple-Clock-Domain Microprocessor},
  journal =	 ieeemicro,
  year =	 2003,
  pages =	 {62-68},
  month =	 nov,
  entered =	 {Luca Carloni,3/3/05},
  oldkey =	 {magklis03},
  sedtransform = {s/magklis03/magklis2003dynamic/}
}

@Book{maguire1993writing,
  author =	 {Steve Maguire},
  title =	 {Writing Solid Code},
  publisher =	 {Microsoft Press},
  year =	 1993,
  address =	 {Redmond, Washington},
  annote =	 {Borrowed from Jordan. Mainly focused on C-level issues.
		 Ideas:
		 
		 * Hugarian notation for variable names (works around overly
		 simple type system) * Put assertions everywhere (add
		 debug-only routines that check consistency of datastructures)
		 
		 }
}

@InBook{maier1987research,
  author =	 {D. Maier and J. Stein},
  title =	 {Research Directions in Object-Oriented Programming},
  chapter =	 {Development and Implementaion of an Object-Oriented
		 {DBMS}},
  pages =	 {355--392},
  publisher =	 mit,
  year =	 {1987},
  series =	 {{MIT} Press Series in Computer Systems},
  address =	 mit_a,
  annote =	 {From Witcomb's stuff.},
  opteditor =	 {B. Shriver and P. Wegner}
}

@Article{malaguti2008models,
  author =	 {E. Malaguti and M. Monaci and P. Toth},
  title =	 {Models and heuristic algorithms for a weighted vertex
		 coloring problem},
  journal =	 {Journal of Heuristics},
  year =	 {2008},
  note =	 {DOI: 10.1007/s10732-008-9075-1},
  link =	 {http://www.springerlink.com/content/yh81h7685377upx1}
}

@Article{malaguti2009vertex,
  author =	 {E. Malaguti},
  title =	 {The Vertex Coloring Problem and its generalizations},
  journal =	 {4OR: A Quarterly Journal of Operations Research},
  year =	 2009,
  volume =	 7,
  pages =	 {101--104},
  month =	 mar,
  doi =		 {10.1007/s10288-008-0071-y},
  issue =	 1,
  link =	 {http://www.springerlink.com/content/u1817u1577773643},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/s10288-008-0071-y}
}

@InProceedings{malavasi1993optimum,
  author =	 {Enrico Malavasi and Davide Pandini and Valentina Liberali},
  title =	 {Optimum Stacked Layout for Analog {CMOS} {ICs}},
  booktitle =	 {Proceedings of the IEEE Custom Integrated Circuits
		 Conference},
  year =	 {1993},
  pages =	 {17.1.1--17.1.4},
  annote =	 {Suggested by Edoardo. Has a scheme for putting together
		 horizontal chains of transistors (channel-connected
		 components) that's rather expensive (build a build graph,
		 then find large clique covers). Might be applicable to
		 scheduling.}
}

@Article{malik1991retiming,
  author =	 {Sharad Malik and Ellen M. Sentovich and Robert K. Brayton
		 and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Retiming and Resynthesis: Optimizing Sequential Networks
		 with Combinational Techniques},
  journal =	 transcad,
  year =	 1991,
  volume =	 10,
  number =	 1,
  pages =	 {74--84},
  month =	 jan,
  annote =	 {Implemented in SIS. Talks about peripheral retiming, in
		 which latches are moved to the edges, the circuit optimized,
		 and the latches put back.}
}

@InProceedings{malik1993analysis,
  author =	 {Sharad Malik},
  title =	 {Analysis of Cyclic Combinational Circuits},
  booktitle =	 iccad,
  year =	 1993,
  pages =	 {618--625},
  address =	 {Santa Clara, California},
  month =	 nov,
  annote =	 {See malik1994analysis}
}

@Article{malik1994analysis,
  author =	 {Sharad Malik},
  title =	 {Analysis of Cyclic Combinational Circuits},
  journal =	 transcad,
  year =	 {1994},
  volume =	 {13},
  number =	 {7},
  pages =	 {950--956},
  month =	 jul,
  annote =	 {This, the journal version of malik1993analysis, was the
		 basic idea behind the unrolling techniques Shiple, Berry,
		 and Touati (shiple1996constructive) applied to solve the
		 causality problem in the Esterel compiler.}
}

@InProceedings{malik1996performance,
  author =	 {S. Malik and W. Wolf and A. Wolfe and Y. S. Li and T. Yen},
  title =	 {Performance Analysis of Embedded Systems},
  editor =	 {G. De Micheli and M. Sami},
  booktitle =	 {Hardware/Software Co-Design, Proceedings of the NATO
		 Advanced Study Institute},
  year =	 1996,
  pages =	 {45--74},
  address =	 {Tremezzo, Italy},
  publisher =	 {Springer},
  annote =	 {Cited by ye1995worst. More like a book than a conference
		 paper. Doesn't seem to be available online. More WCET
		 stuff.}
}

@InProceedings{malik1997static,
  author =	 {Sharad Malik and Margaret Martonosi and Yau-Tsun Steven
		 Li},
  title =	 {Static Timing Analysis of Embedded Software},
  booktitle =	 {Proceedings of the 34th Design Automation Conference},
  year =	 {1997},
  month =	 jun,
  annote =	 {path checking, etc. Rather general}
}

@InProceedings{mallon1998building,
  author =	 {Willem C. Mallon and Jan Tijmen Udding},
  title =	 {Building Finite Automata from {DI} Specifications},
  booktitle =	 {Proceedings of Advanced Research in Asynchronous Circuits
		 and Systems (ASYNC)},
  year =	 1998,
  pages =	 {184--193},
  address =	 {San Diego, California},
  month =	 mar,
  annote =	 {Random search of Udding's work.
		 
		 Curious construct: going from the algebra described in
		 josephs1993overview to automata. Instead of going directly
		 to automata, they first generate "machines," which are
		 automata that can also end up in "sets" that can capture any
		 behavior. The idea is that these can be used as intermediate
		 steps in the construction. Basically, you can define
		 something that you know followed by some set for the rest of
		 the expression.
		 
		 Terrible notation, rather hard to read. But it seems that
		 they specifically target nondetermistic finite automata and
		 include epsilon edges.
		 
		 Mallon wrote something called "Digg" that automatically does
		 this transformation, taking an algebraic specification and
		 transforms it into an automaton. It appears to have
		 disappeared (they only ever provided a Sun executable, and
		 that's gone. I had to use web.archive.org to resurrect the
		 old page.).
		 
		 Output in the form of Tom Verhoeff's XDI state machines
		 expressed in AND/IF format:
		 
		 http://edis.win.tue.nl/and-if/index.html
		 
		 Explicitly nondeterministic finite-state machines.
		 
		 Curious: the EDIS (Encyclopedia of Delay-Insensitive
		 Systems) community seems to be going down the same path as
		 the synchronous community did: they have formalisms and
		 compilers that translate them into finite automata, albeit
		 nondeterministic. }
}

@Book{manes1986algebraic,
  author =	 {Ernest G. Manes and Michael A. Arbib},
  title =	 {Algebraic Approaches to Program Semantics},
  publisher =	 sv,
  year =	 {1986},
  annote =	 {Starts from the basics.}
}

@InProceedings{mani2005efficient,
  author =	 {M. Mani and A. Devgan and M. Orshansky},
  title =	 {An Efficient Algorithm for Statistical Minimization of
		 Total Power under Timing Yield Constraints},
  booktitle =	 dac05,
  year =	 2005,
  pages =	 {309-314},
  address =	 dac05a,
  month =	 jun,
  entered =	 {Luca Carloni,07/12/05},
  keywords =	 {design variability, DFM},
  oldkey =	 {mani03},
  sedtransform = {s/mani03/mani2005efficient/}
}

@Article{manna1972fixpoint,
  author =	 {Zohar Manna and Jean Vuillemin},
  title =	 {Fixpoint Approach to the Theory of Computation},
  journal =	 cacm,
  year =	 1972,
  volume =	 15,
  number =	 7,
  pages =	 {528--536},
  month =	 jul,
  annote =	 {Cited by manna1973inductive.
		 
		 Seems to be trying to sew together a variety of semantic
		 approaches under the fixpoint umbrella. A little chaotic:
		 the field wasn't established by this point. Interesting
		 bibliography. Attributes the existence of a fixpoint theorem
		 to kleene1952introduction}
}

@Article{manna1973inductive,
  author =	 {Zohar Manna and Stephen Ness and Jean Vuillemin},
  title =	 {Inductive Methods for Proving Properties of Programs},
  journal =	 cacm,
  year =	 1973,
  volume =	 16,
  number =	 8,
  pages =	 {491--502},
  month =	 aug,
  annote =	 {Cited by kahn1974semantics.
		 
		 More mathematical than manna1972fixpoint: discussion of
		 partial ordering. Uses \omega for bottom, \subseteq for
		 partially-ordered <=. Credits Kleene with the source of the
		 existence of the least fixed point theorem.
		 
		 Manna was at the Weizmann institute, Ness at Stanford, and
		 Vuillemin at IRIA.}
}

@Book{mano1984digital,
  author =	 {M. Morris Mano},
  title =	 {Digital Design},
  publisher =	 ph,
  year =	 1984,
  address =	 ph_a,
  annote =	 {I used this in Prof. Rod Goodman's digital design course at
		 Caltech.}
}

@Book{mano1991digital,
  author =	 {M. Morris Mano},
  title =	 {Digital Design},
  publisher =	 ph,
  year =	 1991,
  address =	 ph_a,
  edition =	 {Second}
}

@InProceedings{manohar1998slack,
  author =	 {Rajit Manohar and Alain J. Martin},
  title =	 {Slack elasticity in concurrent computing},
  booktitle =	 {Proceedings of the 4th International Conference on the
		 Mathematics of Program Construction (MCP)},
  year =	 1998,
  series =	 lncs,
  volume =	 1422,
  pages =	 {272--285},
  address =	 {Marstrand, Sweden},
  month =	 jun,
  annote =	 {Mentioned by an ICCAD reviewer of our "pipelines" paper.
		 
		 Basic idea is to ask when slack can be introduced without
		 changing the behavior of the system. Probably relevant for
		 SHIM, too.
		 
		 Assumes a closed, deadlock-free system. Seems to make a
		 liveness assumption, or that it doesn't check to see whether
		 a channel is full or not.
		 
		 They have a theorem that says you can decrease slack without
		 changing behavior provided it does not introduce deadlock.
		 
		 "Slack Elastic" is whether you can add slack without
		 breaking things, either to a channel or the whole system.
		 
		 Mentions assumptions that make it deterministic (no probed
		 channels, mutually exclusive guards).
		 
		 Interesting stuff, but this paper is more about when you can
		 add slack, not how much to add.
		 
		 I believe our pipelines are trivially slack-elastic in
		 Martin's definition, so it's not really that relevant.},
  doi =		 {http://dx.doi.org/10.1007/BFb0054295},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/BFb0054295}
}

@InProceedings{maraninchi1991argos,
  author =	 {F. Maraninchi},
  title =	 {The {Argos} Language: Graphical Representation of Automata
		 and Description of Reactive Systems},
  booktitle =	 {Proceedings of the IEEE Workshop on Visual Languages},
  year =	 {1991},
  address =	 {Kobe, Japan},
  month =	 oct,
  abstract =	 {We present the Argos graphical synchronous language for the
		 description of reactive systems, and the Argonaute
		 environment associated with it. Systems like communication
		 protocols, real time process controllers or man/machine
		 interfaces contain a {\em reactive kernel}. Its behaviour
		 can be described in a convenient manner by an automaton ,
		 for formal validation purposes. But, in general, complex
		 systems cannot be described directly as automata. The
		 Statecharts and Argos are automata-based languages. The high
		 level constructs of the language deal with states and
		 transitions directly. A consequence of this choice is the
		 {\em graphical} syntax, since the best representation of
		 small automata is graphical. A consequence of this graphical
		 syntax is the need for {\em graphical} constructs: the
		 constructs of the language must allow the decomposition of a
		 system into small parts that can be represented directly by
		 automata, and they must be given a readable graphical syntax.},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/ArgosIEEEVisual.ps.gz}
		 ,
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/ArgosIEEEVisual.ps.gz}
		 
}

@InProceedings{maraninchi1992operational,
  author =	 {F. Maraninchi},
  title =	 {Operational and Compositional Semantics of Synchronous
		 Automaton Compositions},
  booktitle =	 {CONCUR '92. Third International Conference on Concurrency
		 Theory.},
  year =	 {1992},
  series =	 lncs,
  volume =	 {630},
  pages =	 {550--564},
  address =	 {Stony Brook, NY},
  month =	 aug,
  publisher =	 sv,
  abstract =	 {The state/transition paradigm has been used extensively for
		 the description of event-driven, parallel systems. However,
		 the lack for hierarchic structure in such descriptions
		 usually prevents us from using this paradigm in a real
		 programming language. The author proposes the Argos language
		 for reactive systems. The basic components of a program are
		 input/output-labeled transition systems verifying reactivity
		 (a property similar to input-enabling in IO-automata). The
		 composition operations (parallel composition and refinement
		 providing hierarchy) are based upon the synchronous
		 broadcast mechanism of Esterel. The author defines the
		 language formally in an algebraic framework, and gives an
		 operational semantics. The main results is the
		 compositionality of the semantics; it is proved that the
		 bisimulation of models induces an equivalence which is a
		 congruence for the operators proposed. An interesting point
		 is the way the hierarchy in a compositional way is
		 introduced.},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/README.html},
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/README.html}
}

@InProceedings{maraninchi1996compiling,
  author =	 {F. Maraninchi and Nicholas Halbwachs},
  title =	 {Compiling {Argos} into Boolean Equations},
  booktitle =	 {FTRTFT},
  year =	 {1996},
  month =	 sep,
  publisher =	 {to appear},
  annote =	 {Discussed at Dagstuhl '96},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/FTRTFT96.ps.gz},
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/FTRTFT96.ps.gz}
}

@InProceedings{maraninchi1996compositional,
  author =	 {F. Maraninchi and Nicholas Halbwachs},
  title =	 {Compositional Semantics of Non-deterministic Synchronous
		 Languages},
  booktitle =	 esop,
  year =	 {1996},
  publisher =	 {to appear},
  url =		 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/ESPO96.ps.gz},
  bdsk-url-1 =	 {ftp://ftp.imag.fr/pub/SPECTRE/ARGONAUTE/ESPO96.ps.gz}
}

@InProceedings{maraninchi1997compositionality,
  author =	 {Florence Maraninchi and Yann R\'emond},
  title =	 {Compositionality Criteria for Defining Mixed-Styles
		 Synchronous Languages},
  editor =	 {W.-P. de Roever and H. Langmaack and A. Pnueli},
  booktitle =	 {Proceedings of the International Symposium on
		 Compositionality: The Significant Difference (COMPOS)},
  year =	 1997,
  series =	 lncs,
  volume =	 1536,
  pages =	 {425--438},
  address =	 {Malente/Holstein, Germany},
  month =	 sep,
  publisher =	 sv,
  annote =	 {Copied while at Dagstuhl.}
}

@InProceedings{maraninchi1998mode-automata,
  author =	 {F. Maraninchi and Y. R\'{e}mond},
  title =	 {Mode-Automata: About Modes and States for Reactive
		 Systems},
  booktitle =	 esop,
  year =	 1998,
  address =	 {Lisbon (Portugal)},
  month =	 mar,
  publisher =	 sv,
  annote =	 {??},
  optpages =	 {FIXME}
}

@Book{marcus1962switching,
  author =	 {Mitchell P. Marcus},
  title =	 {Switching Circuits for Engineers},
  publisher =	 ph,
  year =	 1962,
  annote =	 {Nice, old book. Credits Shannon with discovering the link
		 between Boolean logic and switching circuitry. Chapter on
		 "electronic logic blocks" lists diodes, vacuum tubes, and
		 transistors. Delightfully out-of-date schematic symbols for
		 transistors. ( [N][P][N] ) Few bibliographic references,
		 though. Also a 1974 edition which removes much of this, but
		 includes a bibliography.}
}

@InProceedings{marinescu2001highlevel,
  author =	 {Maria-Cristina Marinescu and Martin Rinard},
  title =	 {High-level specification and efficient implementation of
		 pipelined circuits},
  booktitle =	 asp-dac,
  year =	 {2001},
  pages =	 {655--661},
  address =	 {New York, NY, USA},
  publisher =	 {ACM Press},
  doi =		 {http://doi.acm.org/10.1145/370155.370575},
  isbn =	 {0-7803-6634-4},
  location =	 {Yokohama, Japan},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/370155.370575}
}

@Article{markoff2002pc,
  author =	 {John Markhoff},
  title =	 {PC Makers Hit Speed Bumps; Being Faster May Not Matter},
  journal =	 {The New York Times},
  year =	 2002,
  pages =	 {C1--C9},
  month =	 {September 30},
  annote =	 {Describes how the PC upgrade cycle seems to be slowing
		 since there's no new killer app. A good argument for why
		 embedded systems are the wave of the future.}
}

@InProceedings{markovskiy2002analysis,
  author =	 {Yury Markovskiy and Eylon Caspi and Randy Huang and Joseph
		 Yeh and Michael Chu and John Wawrzynek and Andr\'e DeHon},
  title =	 {Analysis of Quasi-Static Scheduling Techniques in a
		 Virtualized Reconfigurable Machine},
  booktitle =	 fpga,
  year =	 2002,
  pages =	 {196--205},
  address =	 {Monterey, California},
  month =	 feb,
  annote =	 {Off Wawrzynek's page. Part of PRET work}
}

@TechReport{marques-silva1996grasp,
  author =	 {Jo\~ao P. Marques-Silva and Karem A. Sakallah},
  title =	 {{GRASP}---A New Search Algorithm for Satisfiability},
  institution =	 {University of Michigan},
  year =	 1996,
  month =	 apr,
  annote =	 {Ed Clarke recommended this.},
  url =		 {http://sat.inesc.pt/~jpms/research/tech-reports.html},
  bdsk-url-1 =	 {http://sat.inesc.pt/~jpms/research/tech-reports.html}
}

@InProceedings{marques-silva2005improvements,
  author =	 {Jo\~ao P. Marques-Silva},
  title =	 {Improvements to the Implementation of Interpolant-Based
		 Model Checking},
  booktitle =	 charme,
  year =	 2005,
  pages =	 {367--370},
  address =	 {Saarbr\"ucken, Germany},
  month =	 oct,
  annote =	 {Joao sent me this directly. Very brief--just talks about
		 generating better interpolants from proofs. Mostly refers to
		 his technical report.}
}

@TechReport{marques-silva2005optimizing,
  author =	 {Jo\~ao P. Marques-Silva},
  title =	 {Optimizing the Utilization of Interpolants in {SAT}-Based
		 Model Checking},
  institution =	 {Instituto de Engenharia de Sistemas e Computadores},
  year =	 2005,
  number =	 {RT/001/05--CDIL},
  address =	 {Lisboa, Portugal},
  month =	 jan,
  annote =	 {Joao sent me this directly. Greatly expanded version of
		 marques-silva2005improvements.}
}

@Book{marriott1987how,
  author =	 {H. Marriott and D. Horning},
  title =	 {How Do They Get Their Ropes Up There?},
  publisher =	 {Poorpersons's Guidebooks},
  year =	 {1987},
  address =	 {Custer, South Dakota}
}

@Article{martello1979algorithm,
  author =	 {S. Martello},
  title =	 {An Algorithm for Finding a Minnimal Equivalent Graph of a
		 Strongly Connected Digraph},
  journal =	 {Computing},
  year =	 {1979},
  volume =	 {21},
  number =	 {3},
  pages =	 {183--194},
  annote =	 {A branch-and-bound algorithm to remove edges while
		 maintaining the connectivity matrix. Notes that only
		 strongly-connected components are difficult to deal with.
		 The trick is to know whether there is another path between
		 the vertices where you remove an edge.}
}

@Book{martin1965programming,
  author =	 {James Martin},
  title =	 {Programming real-time computer systems},
  publisher =	 ph,
  year =	 1965,
  annote =	 {Cited by shaw2001real-time as an early book on programming
		 real-time systems.}
}

@InCollection{martin1989programming,
  author =	 {Alain J. Martin},
  title =	 {Programming in {VLSI}: From Communicating Processes to
		 Delay-Insensitive Circuits},
  editor =	 {C. A. R. Hoare},
  booktitle =	 {UT Year of Programming Institute on Concurrent
		 Programming},
  publisher =	 aw,
  year =	 1989,
  pages =	 {1--64},
  annote =	 {Cited by many. His work on CSP to asynchronous.
		 
		 Mostly about his CSP language and its translation. No proofs.
		 
		 Hilarious bibliography: all his work except for Hoare,
		 Dijkstra, Mean & Conway, and Weste and Eshraghian.
		 
		 I got this as Caltech Tech report CS-TR-89-01,
		 http://resolver.caltech.edu/CaltechCSTR:1989.cs-tr-89-01 }
}

@InProceedings{martin1995pag,
  author =	 {Martin Alt and Florian Martin},
  title =	 {Generation of Efficient Interprocedural Analyzers with
		 {PAG}},
  booktitle =	 {Proceedings of the Second International Symposium on Static
		 Analysis (SAS)},
  year =	 1995,
  pages =	 {33--50},
  address =	 {London, UK},
  publisher =	 {Springer-Verlag},
  isbn =	 {3-540-60360-3}
}

@Misc{martini2006,
  author =	 {Luca Martini and Eric C. Rosen and Nasser El-Aawar and
		 Giles Heron},
  title =	 {Encapsulation Methods for Transport of Ethernet over MPLS
		 Networks},
  howpublished = {RFC 4448, IETF},
  year =	 {2006},
  month =	 {April}
}

@Book{marwedel2003embedded,
  author =	 {Peter Marwedel},
  title =	 {Embedded System Design},
  publisher =	 kl,
  year =	 2003,
  annote =	 {Fairly abstract stuff: models of computation, etc.
		 Interesting bibliography.}
}

@Book{massa2002embedded,
  author =	 {Anthony J. Massa},
  title =	 {Embedded Software Development with {eCos}},
  publisher =	 ph,
  year =	 2002,
  annote =	 {I haven't read it. Talks about the eCos open-source RTOS.}
}

@Article{massalin1987superoptimizer,
  author =	 {Henry Massalin},
  title =	 {Superoptimizer: a look at the smallest program},
  journal =	 {SIGPLAN Notices},
  year =	 1987,
  volume =	 22,
  number =	 10,
  pages =	 {122--126},
  month =	 oct,
  annote =	 {Recommended by Al Aho -- exhaustive search on machine
		 instructions. Applied to 68020 assembly code (and written
		 in). Tested on a 16 MHz 68020. Basic idea is to do
		 exhaustive search on instruction sequences (one instruction,
		 two, etc.) Quickly tests equivalence using a few "random"
		 test inputs (actually chosen by the user). Register
		 operations are a lot easier to check than those involving
		 memory operations. Does some pruning of the state space by
		 selecting instructions carefully (e.g., no branches, no
		 jumps). Applied to little things like sgn(x), abs(x), max(x,
		 y).
		 
		 Cute, but of very limited applicability. Mostly takes
		 advantage of interesting side-effects with flags.
		 
		 Thesis worked on something else: self-modifying code for the
		 Unix kernel. More like a partial evaluation system, by the
		 looks of it.}
}

@PhDThesis{massalin1992synthesis,
  author =	 {Henry Massalin},
  title =	 {Synthesis: An Efficient Implementaion of Fundamental
		 Operating System Services},
  school =	 {Columbia University},
  year =	 1992,
  address =	 nyny,
  note =	 {CUCS--039--92},
  annote =	 {Al mentioned this. Actually nothing related to the
		 Superoptimizer, more like self-modifying code.
		 
		 Run-time code synthesis. Fine-grain scheduling. Lock-free
		 optimistic scheduling.
		 
		 Calton Pu was his advisor here at Columbia. Pu is now at
		 Georgia Tech}
}

@InProceedings{masticola1991model,
  author =	 {Stephen P. Masticola and Barbara G. Ryder},
  title =	 {A model of {Ada} programs for static deadlock detection in
		 polynomial times},
  booktitle =	 {Proceedings of the Workshop on Parallel and Distributed
		 Debugging (PADD)},
  year =	 1991,
  pages =	 {97--107},
  address =	 {New York, NY, USA},
  month =	 may,
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/122759.122768},
  isbn =	 {0-89791-457-0},
  location =	 {Santa Cruz, California, United States},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/122759.122768}
}

@Article{matzke1997will,
  author =	 {D. Matzke},
  title =	 {Will Physical Scalability Sabotage Performance Gains?},
  journal =	 computer,
  year =	 1997,
  volume =	 8,
  number =	 9,
  pages =	 {37-39},
  month =	 sep,
  affiliation =	 {Intel-Portland Technology Development},
  entered =	 {Luca Carloni,10/23/97},
  keywords =	 {interconnect scaling, deep-submicron, ULSI},
  oldkey =	 {matzke97},
  sedtransform = {s/matzke97/matzke1997will/}
}

@InProceedings{maurer1994inversion,
  author =	 {Peter M. Maurer},
  title =	 {The Inversion Algorithm for Digital Simulation},
  booktitle =	 {Proceedings of the 1994 IEEE/ACM International Conference
		 on Computer-Aided Design (CAD-94)},
  year =	 {1994},
  pages =	 {258--261},
  month =	 nov,
  annote =	 {Simply count the number of transitions, rather than observe
		 values. High fan-in gates are cheap!}
}

@InProceedings{maurer2000event,
  author =	 {Peter M. Maurer},
  title =	 {Event Driven Simulation Without Loops or Conditionals},
  booktitle =	 iccad,
  year =	 2000,
  pages =	 {23--26},
  address =	 {San Jose, California},
  month =	 nov,
  annote =	 {Cited by Vimal and Michael in their 4995 final report.
		 
		 Uses a "continuation-passing" or "threaded" style to
		 implement his inversion algorithm for simulation, i.e.,
		 count the number of times an input has inverted to determine
		 whether a gate's output has toggled. Complex, long-winded
		 explanation of what's going on. Does not seem to be aware of
		 the GCC computed-goto extension.}
}

@Article{maxwell1867governors,
  author =	 {James Clerk Maxwell},
  title =	 {On Governors},
  journal =	 {Proceedings of the Royal Society of London},
  year =	 1867,
  volume =	 16,
  pages =	 {270--283},
  month =	 mar,
  annote =	 {The beginning of mathematical control theory? At least the
		 first significant paper on feedback mechanisms. Pretty
		 serious stuff: differential equations with solutions, }
}

@PhDThesis{may1994extensible,
  author =	 {John Michael May},
  title =	 {An Extensible, Retargetable Debugger for Parallel
		 Programs},
  school =	 {University of California, San Diego},
  year =	 {1994},
  url =		 {http://www-cse.ucsd.edu/users/berman/panorama.html},
  bdsk-url-1 =	 {http://www-cse.ucsd.edu/users/berman/panorama.html}
}

@Book{mayr1970origins,
  author =	 {Otto Mayr},
  title =	 {The Origins of Feedback Control},
  publisher =	 mit,
  year =	 1970,
  annote =	 {Cited by a few (e.g., lewis1992applied) as a good history
		 of early feedback control.}
}

@Book{mcclellan1997dsp,
  author =	 {James H. McClellan and Ronald W. Schafer and Mark A.
		 Yoder},
  title =	 {{DSP} First: A Multimedia Approach},
  publisher =	 ph,
  year =	 1997,
  address =	 ph_a,
  annote =	 {Recommended by Brian Evans as a good starting point.}
}

@InProceedings{mccool2004shader,
  author =	 {M. McCool and S. Du Toit and T. Popa and B. Chan and K.
		 Moule},
  title =	 {Shader algebra},
  booktitle =	 {SIGGRAPH '04: ACM SIGGRAPH 2004 Papers},
  year =	 2004,
  pages =	 {787--795}
}

@Article{mccrackin1991eliminating,
  author =	 {Daniel C. McCrackin},
  title =	 {Eliminating interlocks in deeply pipelined processors by
		 delay enforced multistreaming},
  journal =	 transcomp,
  year =	 1991,
  volume =	 40,
  number =	 10,
  pages =	 {1125--1132},
  month =	 oct,
  annote =	 {Interleaved pipeline. Proposes DEMUS: delay-enforced
		 multistreaming. Cited by killeen1993stream-interleaved.
		 Cites some earlier work on the topic, in particular Shimizu
		 et al.}
}

@InProceedings{mcgeer1991performance,
  author =	 {Patrick C. McGeer and Robert K. Brayton and Alberto L.
		 Sangiovanni-Vincentelli and Sartaj K. Sahni},
  title =	 {Performance Enhancement through the Generalized Bypass
		 Transform},
  booktitle =	 {International Workshop on Logic Synthesis},
  year =	 {1991},
  address =	 {Tahoe City, California},
  annote =	 {Like SED:mcgeer:91b.}
}

@InProceedings{mcgeer1991performance*1,
  author =	 {Patrick C. McGeer and Robert K. Brayton and Alberto L.
		 Sangiovanni-Vincentelli and Sartaj K. Sahni},
  title =	 {Performance Enhancement through the Generalized Bypass
		 Transform},
  booktitle =	 iccad,
  year =	 {1991},
  pages =	 {184--187},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Moving an input further along if it arrives later.}
}

@InProceedings{mcgeer1995fast,
  author =	 {Patrick C. McGeer and Kenneth L. McMillan and Alexander
		 Saldanha and Alberto L. Sangiovanni-Vincentelli and Patrick
		 Scaglia},
  title =	 {Fast Discrete Function Evaluation using Decision Diagrams},
  booktitle =	 {Proceedings of the 1995 ACM/IEEE International Workshop on
		 Logic Synthesis},
  year =	 {1995},
  pages =	 {6--1--6--9},
  month =	 may,
  annote =	 {How to use BDDs to quickly evaluate boolean functions. Used
		 by Cadence for logic simulation?}
}

@InProceedings{mcgeer1995fast*1,
  author =	 {Patrick C. McGeer and Kenneth L. McMillan and Alexander
		 Saldanha and Alberto L. Sangiovanni-Vincentelli and Patrick
		 Scaglia},
  title =	 {Fast Discrete Function Evaluation using Decision Diagrams},
  booktitle =	 iccad,
  year =	 {1995},
  pages =	 {402--407},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Like SED:mcgeer:95a.}
}

@Article{mcgrath2007intel,
  author =	 {Dylan McGrath},
  title =	 {Intel rolls quad-core {CPUs} for embedded computing},
  journal =	 {EE Times},
  year =	 2007,
  month =	 {April 3},
  annote =	 {Using Quad-core CPUs in embedded systems. "quad-core
		 processors offer performance increase of up to 55 percent
		 and a four-fold performance-per-watt increase when compared
		 with the dual-core processors for embedded applications that
		 Intel introduced last year."},
  url =		 {http://www.eetimes.com/showArticle.jhtml?articleID=198702225}
		 ,
  bdsk-url-1 =	 {http://www.eetimes.com/showArticle.jhtml?articleID=198702225}
		 
}

@Article{mckeown1997fast,
  author =	 {Nick McKeown},
  title =	 {A Fast Switched Backplane for a Gigabit Switched Router},
  journal =	 {Business Communications Review},
  year =	 1997,
  volume =	 27,
  number =	 12,
  month =	 dec,
  annote =	 {from the Utah site: http://www.cs.utah.edu/~cs6935/
		 
		 Congested shared router backplanes are giving way to faster,
		 switched backplanes.
		 
		 Architecture: Forwarding decision blocks, one per input,
		 feed into a backplane that moves the data around, eventually
		 into output link scheduling, one per output.
		 
		 Forwarding decision: look up destination address, append
		 next-hop address to packet, decrement time-to-live,
		 recalculate header checksum.
		 
		 Output-link: Simple or more complicated queue of packets
		 waiting to be transmitted. Quality-of-service can be
		 implemented here by having multiple queues.
		 
		 Motivating example: 16-port IP router, each port at 2.4 Gb/s.
		 
		 Forwarding decisions are not the bottleneck. Although you
		 need to do millions/second, this is not too hard.
		 
		 Backplane bandwidth becomes the bottleneck: this requires a
		 38.4 Gb/s aggregate bandwidth. It's really difficult to
		 design shared busses with this kind of bandwidth. People are
		 moving to crossbar-switched configurations.
		 
		 Fixed-size packets are much more convenient for
		 transmitting: these systems fragment then reassemble
		 packets. Scheduling is far easier.
		 
		 Head-of-line blocking: queue of cells (fixed-length packets)
		 at each input must wait until its output queue can accept a
		 new one. Like wanting to turn right at a red light.
		 Solution: one queue per output in each input, and careful
		 scheduling. McKeown's iSLIP algorithm was his PhD thesis
		 from Berkeley (He's now at Stanford, was with Cisco briefly).
		 
		 Speedup: run the switching fabric at twice the speed of the
		 inputs. This greatly reduces time delay through the router.
		 
		 Multicasting is a harder problem, but the crossbar
		 architecture makes replication cheap. Makes for a harder
		 scheduling algorithm. Add multicast queues in addition to
		 the normal one-queue-per-output at each input. },
  optpages =	 {FIXME},
  url =		 {http://www.bcr.com/bcrmag/1997/12/mckeown.asp},
  bdsk-url-1 =	 {http://www.bcr.com/bcrmag/1997/12/mckeown.asp}
}

@Book{mckusick1996design,
  author =	 {Marshall Kirk McKusick and Keith Bostic and Michael J.
		 Karels and John S. Quarterman},
  title =	 {The Design and Implementation of the {4.4BSD} Operating
		 System},
  publisher =	 aw,
  year =	 1996,
  address =	 aw_a,
  edition =	 {Second},
  annote =	 {Apparently a follow-on to SED:leffler:89a.}
}

@Misc{mclennan1993incr-tcl,
  author =	 {Michael J. McLennan},
  title =	 {\texttt{[incr Tcl]}},
  year =	 {1993},
  url =		 {http://www.tcltk.com/itcl/},
  bdsk-url-1 =	 {http://www.tcltk.com/itcl/}
}

@Book{mcmeen1923telephony,
  author =	 {Samuel G. McMeen and Kempster B. Miller},
  title =	 {Telephony: A Comprehensive and Detailed Exposition of the
		 Theory and Practice of the Telephone Art},
  publisher =	 {American Technical Society},
  year =	 1923,
  edition =	 {Third},
  annote =	 {Found at random on AbeBooks. There was an earlier, 1914
		 version.}
}

@InProceedings{mcmillan1992using,
  author =	 {Ken L. McMillan},
  title =	 {Using unfoldings to avoid the state explosion problem in
		 the verification of asynchronous circuits},
  booktitle =	 {Computer Aided Verification, Fourth International
		 Workshop},
  year =	 1992,
  series =	 lncs,
  volume =	 663,
  pages =	 {164--177},
  address =	 {Montreal, Canada},
  month =	 jun,
  publisher =	 sv,
  annote =	 {Cited by one of the reviewers of my TODAES tutorial as a
		 source of Lin's unfolding algorithm.}
}

@Book{mcmillan1993symbolic,
  author =	 {Kenneth L. McMillan},
  title =	 {Symbolic Model Checking},
  publisher =	 kl,
  year =	 {1993},
  address =	 kl_a,
  annote =	 {Saw it at ICCAD '95}
}

@Article{mcmillan1995technique,
  author =	 {Ken L. McMillan},
  title =	 {A Technique of State Space Search Based on Unfolding},
  journal =	 {Formal Methods in System Design},
  year =	 1995,
  volume =	 6,
  number =	 1,
  pages =	 {45--65},
  month =	 jan,
  annote =	 {A journal version of mcmillan1992using?}
}

@InProceedings{mcmillan2003automatic,
  author =	 {Ken L. McMillan and Nina Amla},
  title =	 {Automatic Abstraction Without Coounterexamples},
  booktitle =	 tacas,
  year =	 2003,
  series =	 lncs,
  volume =	 2619,
  pages =	 {2--17},
  address =	 {Warsaw, Poland},
  month =	 apr,
  annote =	 {Cited in mcmillan2005applications as describing how to
		 build interpolants from a SAT solver. Section 2 is
		 "Extracting Proofs from SAT Solvers."
		 
		 Basic idea is that if you have two clauses with a variable
		 and its complement, then the "rest" of the two clauses must
		 be true. Building a DAG of these that leads to the empty
		 clause is a proof of unstatisfiability. The neat thing is
		 that this DAG need not lead to every original clause: this
		 is an abstraction of why something is not satisfiable and
		 very useful.}
}

@InProceedings{mcmillan2003interpolation,
  author =	 {Ken L. McMillan},
  title =	 {Interpolation and {SAT}-based Model Checking},
  booktitle =	 cav2003,
  year =	 2003,
  series =	 lncs,
  volume =	 2725,
  pages =	 {1--13},
  address =	 cav2003_a,
  month =	 jul,
  annote =	 {Discusses how to do unbounded Model Checking (i.e., state
		 space reachability) using a modification of a SAT algorithm
		 that shows why things are not satisfiable.
		 
		 Excellent. Central idea is that the proof of
		 non-satisfiability can produce an interpolant---another CNF
		 clause---as a side-effect. Such a thing represents an
		 overapproximation of the reachable states, and bounded model
		 checking produces an underapproximation, so iterating to a
		 fixed-point produces a complete decision procedure.
		 
		 Choose a k (iteration depth) and use SAT to build up
		 approximations of the reachable state sets. Using the proof
		 of unsatisfiability, generate a new CNF clause that is
		 implied by the first step (i.e., represents an approximation
		 of reachable states) and add it (logical OR it) to the CNF
		 clauses that represent the reachable states. Really very
		 much like the usual breadth-first search operations done
		 with BDDs, but with this extra twist that the "image"
		 computation is actually somehow a side-effect of the
		 unsatisfiability proof (the interpolant).
		 
		 Nice experimental results, beautifully written.
		 
		 Suggests a really nice way to approach my FSM problem, i.e.,
		 to use this interpolation technique to derive
		 overapproximations of reachable states. Iterations sharpens
		 the result, so there's a nice knob for controlling how much
		 time to spend vs. how much precision to consider.}
}

@InProceedings{mcmillan2005applications,
  author =	 {Ken L. McMillan},
  title =	 {Applications of {Craig} Interpolants in Model Checking},
  booktitle =	 cav2005,
  year =	 2005,
  series =	 lncs,
  address =	 cav2005_a,
  month =	 jul,
  annote =	 {Really, just a generalization of mcmillan2003interpolation.
		 Pointing out that the theory still works fine if you don't
		 worry about the formulas being Boolean.},
  optpages =	 {FIXME},
  optvolume =	 {FIXME}
}

@InProceedings{mcmillan2005dont-care,
  author =	 {Ken L. McMillan},
  title =	 {Don't-care Computation using k-clause Approximation},
  booktitle =	 iwls,
  year =	 2005,
  address =	 {Lake Arrowhead, California},
  month =	 jun,
  annote =	 {Ken recommended I read this. He talks about using SAT to
		 calculate don't-care information for logic synthesis.
		 
		 Basic idea is to use a machine-learning paradigm to learn an
		 approximation of the image of a set of variables. The theory
		 being learned is a collection of prime implicants (of size k
		 or smaller, hence the name of the paper). He uses SAT
		 (incrementally) to find counterexamples that forces the
		 learner to modify the theory.
		 
		 Fairly complicated algorithm.},
  optpages =	 {FIXME}
}

@Article{mcnamee2001specialization,
  author =	 {Dylan McNamee and Jonathan Walpole and Calton Pu and
		 Crispin Cowan and Charles Krasic and Ashvin Goel and Perry
		 Wagle and Charles Consel and Gilles Muller and Renauld
		 Marlet},
  title =	 {Specialization tools and techniques for systematic
		 optimization of system software},
  journal =	 {ACM Transactions on Computer Systems},
  year =	 {2001},
  volume =	 {19},
  number =	 {2},
  pages =	 {217--251},
  url =		 {citeseer.ist.psu.edu/mcnamee01specialization.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/mcnamee01specialization.html}
}

@Book{mead1980introduction,
  author =	 {Carver Mead and Lynn Conway},
  title =	 {Introduction to {VLSI} Systems},
  publisher =	 aw,
  year =	 1980,
  address =	 aw_a,
  annote =	 {The classic VLSI book.}
}

@TechReport{medvidovic1996classification,
  author =	 {Neno Medvidovic},
  title =	 {A Classification and Comparison Framework for Software
		 Architecture Description Languages},
  institution =	 {University of California, Irvine},
  year =	 1996,
  number =	 {UCI--ICS--97--02},
  month =	 feb,
  annote =	 {Cited by dashofy2001highly-extensible (actually, the later
		 journal paper.}
}

@Article{medvidovic2000classification,
  author =	 {Neno Medvidovic and Richard N. Taylor},
  title =	 {A Classification and Comparison Framework for Software
		 Architecture Description Languages},
  journal =	 transse,
  year =	 2000,
  volume =	 26,
  number =	 1,
  pages =	 {70--93},
  month =	 jan,
  annote =	 {Journal version of medvidovic1996classification.}
}

@Article{meijer1988bit,
  author =	 {H. Meijer and S. G. Akl},
  title =	 {Bit serial addition trees and their applications},
  journal =	 {Computing},
  year =	 1988,
  volume =	 40,
  number =	 1,
  pages =	 {9--17},
  month =	 mar,
  annote =	 {Random search on small adders}
}

@InProceedings{meijer2007process,
  author =	 {Sjoerd Meijer and Bart Kienhuis and Alex Turjan and Erwin
		 {de Kock}},
  title =	 {A Process Splitting Transformation for {Kahn} Process
		 Networks},
  booktitle =	 date,
  year =	 2007,
  pages =	 {1355--1360},
  address =	 {Nice, France},
  month =	 apr,
  annote =	 {Splitting apart processes in a Kahn network setting. Could
		 be done with SHIM. Also did a JPEG decoder example.}
}

@Article{meindl2003interconnect,
  author =	 {J. D. Meindl},
  title =	 {Interconnect Opportunites for Gigascale Integration},
  journal =	 ieeemicro,
  year =	 2003,
  annote =	 {This paper surveys the most promising techniques for
		 addressing the interconnect problem in deep sub-micron (DSM)
		 realm. The author describes the evolution of the impact of
		 interconnect on digital IC design over the last 30 years,
		 and then clarifies the key aspects of the interconnect
		 problem for the next technology process generations. In the
		 rest of the paper, the author briefly highlights the pros
		 and cons of techniques such as reverse scaling, 3-D
		 integration, microphotonics, and polylithic integration,
		 while referring to the related literature for further
		 details.},
  entered =	 {Luca Carloni,3/3/03},
  oldkey =	 {meindl03},
  sedtransform = {s/meindl03/meindl2003interconnect/}
}

@InProceedings{meinel2000speeding,
  author =	 {Christoph Meinel and Christian Stangier},
  title =	 {Speeding Up Image Computation by Using {RTL} Information},
  booktitle =	 fmcad,
  year =	 2000,
  series =	 lncs,
  volume =	 1954,
  pages =	 {443--454},
  address =	 {Austin, Texas},
  month =	 nov,
  annote =	 {Pretty straightforward: order and group latches in a
		 BDD-based image computation framework according to their
		 names so that latches within the same register and module
		 stay together. Reasonable results, though.}
}

@InProceedings{menon1997multimatlab,
  author =	 {Vijay Menon and Anne E. Trefethen},
  title =	 {{MultiMATLAB}: integrating {MATLAB} with high-performance
		 parallel computing},
  booktitle =	 {Proceedings of the ACM/IEEE Conference on Supercomputing},
  year =	 1997,
  pages =	 {1--18},
  address =	 {San Jose, CA},
  month =	 nov,
  annote =	 {Part of the LCPC stuff.}
}

@InProceedings{mens2005challenges,
  author =	 {Tom Mens},
  title =	 {Challenges in Software Evolution},
  booktitle =	 {Proceedings of the International Workshop on Principles of
		 Software Evolution (IWPSE)},
  year =	 2005,
  address =	 {Lisbon, Portugal},
  month =	 sep,
  annote =	 {"Formal methods should embrace evolution as an essential
		 fact of life."
		 
		 "Software evolution techniques should be raised to a higher
		 level of abstraction."
		 
		 "Software development processes should support software
		 evolution."
		 
		 "Need for more empirical research in software evolution"
		 
		 "Preserving the quality characteristics of evolving software
		 systems" },
  optpages =	 {FIXME}
}

@InProceedings{mercouroff1992algorithm,
  author =	 {Nicolas Mercouroff},
  title =	 {An Algorithm for Analyzing Communicating Processes},
  booktitle =	 {Proceedings of the 7th International Conference on
		 Mathematical Foundations of Programming Semantics},
  year =	 {1992},
  pages =	 {312--325},
  address =	 {London, UK},
  publisher =	 sv,
  isbn =	 {3-540-55511-0}
}

@InProceedings{merillon2000devil,
  author =	 {Fabrice M\'erillon and Laurent R\'eveill\`ere and Charles
		 Consel and Renaud Marlet and Gilles Muller},
  title =	 {Devil: An {IDL} For Hardware Programming},
  booktitle =	 osdi,
  year =	 2000,
  pages =	 {17--30},
  address =	 {San Diego, California},
  month =	 oct,
  annote =	 {The same group is also presenting at PLDI 2001.
		 
		 Devil is a language for describing I/O registers on a
		 peripheral. They look like they did a good job of checking
		 over a variety of interface styles and codified how they
		 work.
		 
		 The output of their compiler is a set of macros that
		 translate low-level I/O port access to high-level accesses
		 (e.g., get_mouse_state).
		 
		 This is the same group as thibault1999domain-specific.
		 
		 Looks like a good starting point for a device-driver
		 language. }
}

@Book{mermet1992vhdl,
  editor =	 {Jean Mermet},
  title =	 {{VHDL} for Simulation, Synthesis, and Formal Proofs of
		 Hardware},
  publisher =	 kl,
  year =	 {1992},
  address =	 kl_a,
  annote =	 {A collection of papers. Grapples with trying to impose
		 formal semantics on the language.}
}

@Book{mermet1993fundamentals,
  editor =	 {J. P. Mermet},
  title =	 {Fundamentals and standards in hardware description
		 languages},
  publisher =	 kl,
  year =	 {1993},
  address =	 kl_a,
  annote =	 {UCB Engin TK7885.7 .F86 1993}
}

@InProceedings{metzner2004why,
  author =	 {Alexander Metzner},
  title =	 {Why Model Checking Can Improve {WCET} Analysis},
  booktitle =	 cav,
  year =	 2004,
  series =	 lncs,
  volume =	 3114,
  pages =	 {334--347},
  address =	 {Boston, Massachusetts},
  month =	 jul,
  annote =	 {For the WCET paper}
}

@Book{meyer1990introduction,
  author =	 {Bertrand Meyer},
  title =	 {Introduction to the Theory of Programming Languages},
  publisher =	 ph,
  year =	 {1990},
  annote =	 {Seems a rather bizarre approach to defining them. It does
		 not appear to use partial orders and such.}
}

@Book{meyer1992eiffel,
  author =	 {B. Meyer},
  title =	 {Eiffel: The Language},
  publisher =	 ph,
  year =	 {1992},
  annote =	 {Eiffel is huge, containing virtually every possible keyword
		 imaginable, many of which could be replaced by comments,
		 other parts of the language, etc.}
}

@Book{meyer1995old,
  author =	 {Ralph O. Meyer},
  title =	 {Old Time Telephones! Technology, restoration, and repair},
  publisher =	 {TAB Books},
  year =	 1995,
  annote =	 {This first edition specifically mentions the Strowger
		 switch and how it was first placed in commercial use by 1893
		 (p. 57).
		 
		 Really comprehensive history, including many technical
		 details: schematics and explanations, even frequency
		 response curves.}
}

@Book{meyer2005old,
  author =	 {Ralph O. Meyer},
  title =	 {Old Time Telephones!},
  publisher =	 {Schiffer Publishing},
  year =	 2005,
  edition =	 {Second},
  annote =	 {Specifically about telephones, not central office switching
		 equipment.}
}

@Book{meyers1987yosemite,
  author =	 {G. Meyers and D. Reid},
  title =	 {Yosemite Climbs},
  publisher =	 {Chockstone Press},
  year =	 {1987},
  address =	 {Evergreen, Colorado}
}

@Manual{microsoft2001csharp,
  title =	 {C\# Language Specification},
  organization = {Microsoft Corporation},
  year =	 2001,
  annote =	 {From Microsoft's web site.},
  url =		 {http://msdn.microsoft.com/vstudio/techinfo/articles/upgrade/Csharpintro.asp}
		 ,
  bdsk-url-1 =	 {http://msdn.microsoft.com/vstudio/techinfo/articles/upgrade/Csharpintro.asp}
		 
}

@Book{miczo1986digital,
  author =	 {Alexander Miczo},
  title =	 {Digital Logic Testing and Simulation},
  publisher =	 {Harper \& Row},
  year =	 1986,
  address =	 {New York},
  annote =	 {Don lent me this: a good, if dated, introduction to VLSI
		 testing. I looked it up for a reference on event-driven
		 simulation. There's Microsoft BASIC code for an TRS 80 Model
		 II in it.}
}

@PhDThesis{mignard1994compilation,
  author =	 {Fr\'ed\'eic Mignard},
  title =	 {Compilation du langage Esterel en syst\`emes d'\'equations
		 bool\'eennes [Compilation of the Esterel Language into
		 Systems of Boolean Equations]},
  school =	 {\'Ecole des Mines de Paris},
  year =	 1994,
  month =	 oct,
  annote =	 {Lengthy discussion of translation of Esterel into Boolean
		 Equations. Introduces the halt point semantics for Esterel.
		 Describes how it is implemented in the V4 compiler and the
		 sccoc automata compiler. Defines the SSC intermediate
		 format. Has some discussion of simplifications. Appears to
		 mention problems with schizophrenia.}
}

@InCollection{mihal2006sub-risc,
  author =	 {Andrew Mihal and Scott Weber and Kurt Keutzer},
  title =	 {Sub-{RISC} Processors},
  editor =	 {Paolo Ienne and Rainer Leupers},
  booktitle =	 {Customizable Embedded Processors},
  publisher =	 els,
  year =	 2006,
  chapter =	 13,
  pages =	 {303--338},
  annote =	 {Mentioned by a TCAD paper reviewer. The fairly usual story
		 about custom instruction-set processors. Heavy connection
		 with network processors. They propose a programming
		 abstraction called "Cairn."
		 
		 They also appear to have published it in embedded.com:
		 
		 http://www.embedded.com/columns/technicalinsights/198700239?printable=true
		 
		 http://www.embedded.com/columns/technicalinsights/198900552?printable=true
		 
		 Basic
		 argument is that RISC processor is too coarse-grained and
		 that C isn't right for multiprocessor code development.
		 
		 Emphasizes multiple levels of concurrency; seems to be
		 recurring theme.
		 
		 Focuses almost immediately on networking applications
		 (packet processing).
		 
		 Cites some other Click-derived programming abstractions.
		 Mention that domain-specific languages are a good solution
		 to the concurrency-in-C problem.
		 
		 Points out that you want datatypes and operators
		 better-tuned to your application, e.g., packet processing.
		 Therefore, you want a customizable datapath.
		 
		 This makes a nice insight: your programming language is
		 closely tied to the datapath you have at your disposal. In
		 some sense, when you write instructions in C, you've already
		 chosen (and been constrained by) the datapath model inside C.
		 
		 Communication among processing elements is also a major
		 bottleneck, not surprisingly.
		 
		 Have a nice discussion about the spectrum of choices in
		 programmability: RTL, high-level synthesis, their approach,
		 Tensilica, ARM.
		 
		 Their core idea is "horizontally microcoded, statically
		 scheduled" machines (p. 314). "Designers build structural
		 models of datapaths, but leave control signals disconnected.
		 These signals are automatically driven by a horizontal
		 microcode unit that decodes an instruction stream that is
		 provided by a source external to the PE." Then, they add
		 inter-PE communication mechanisms.
		 
		 These look a lot like Gajski's "NISC" machines.
		 
		 Methodology: 1. designers supply a datapath Their system
		 determines what operations it is capable of, essentially
		 generating and instruction set. 2. these things are
		 connected into a network and programmed
		 
		 They have a mechanism for passing control among different
		 processors.
		 
		 They have a block-level assembly tool for programming and an
		 automatic code generator for it. It's not clear how the
		 library elements are coded.
		 
		 Very relevant to our packet processing stuff. The big
		 difference is that they ask the user to supply the structure
		 of the datapath, but can be more clever in how they use it.
		 }
}

@Book{miller1930telephone,
  author =	 {Kempster Blanchard Miller},
  title =	 {Telephone Theory and Practice: Theory and Elements},
  publisher =	 mgh,
  year =	 1930,
  annote =	 {One of three volumes?
		 
		 "It is now thirty years since the first edition of my
		 "American Telephone Practice" appeared, and twenty-six since
		 its last revision." Columbia has the earlier volumes
		 offsite: 1899 - 1905.
		 
		 Starts out with a nice bit of history. "Common battery
		 system" was the move of the driving batteries from the
		 subscribers (telephone) to the central office for ease of
		 maintenance.
		 
		 Has a chapter on vacuum tube theory.
		 
		 Mentions some early automatic exchanges in 1903--1905 (page
		 71)
		 
		 "It was not until the World War, however, that the real
		 economic possibilities of automatic or machine switching
		 came to be generall appreciated." }
}

@Book{miller1933telephone,
  author =	 {Kempster Blanchard Miller},
  title =	 {Telephone Theory and Practice: Manual Switching and
		 Substation Equipment},
  publisher =	 mgh,
  year =	 1933,
  annote =	 {One of three volumes?
		 
		 There's a third book in this series, "Automatic Switching
		 and Auxiliary Equipment," but Columbia doesn't seem to have
		 it.}
}

@Book{miller1933telephone-automatic,
  author =	 {Kempster Blanchard Miller},
  title =	 {Telephone Theory and Practice: Automatic Switching and
		 Auxiliary Equipment},
  publisher =	 mgh,
  year =	 1933,
  annote =	 {Probably talks about the Strowger switch, etc.}
}

@Book{miller1965switching,
  author =	 {Raymond E. Miller},
  title =	 {Switching Theory},
  publisher =	 jw,
  year =	 1965,
  volume =	 {I: Combinational Circuits},
  annote =	 {Second volume is about sequential circuits. Nice
		 bibliographies at the end of each chapter.}
}

@InProceedings{miller2006software-based,
  author =	 {Jason Miller and Anant Agarwal},
  title =	 {Software-Based Instruction Caching for Embedded
		 Processors},
  booktitle =	 asplos,
  year =	 2006,
  pages =	 {293--302},
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {Part of the Raw processor stuff out of MIT.}
}

@Article{milner1978theory,
  author =	 {Robin Milner},
  title =	 {A Theory of Type Polymorphism in Programming},
  journal =	 {Journal of Computer and System Sciences},
  year =	 1978,
  volume =	 17,
  number =	 3,
  pages =	 {348--375},
  month =	 dec,
  annote =	 {Cited by everybody when referring to type systems and type
		 inference. Describes the W algorithm which I presume is used
		 in ML.}
}

@Book{milner1980calculus,
  author =	 {Robin Milner},
  title =	 {A Calculus of Communicating Systems},
  publisher =	 sv,
  year =	 1980,
  volume =	 92,
  series =	 lncs,
  annote =	 {Beginnings of the CCS formalism.
		 
		 Has a chapter on confluence and determinacy. Notion of
		 confluence seems to be something like ours, but determinacy
		 seems much stronger.}
}

@Book{milner1982calculus,
  author =	 {R. Milner},
  title =	 {A Calculus of Communicating Systems},
  publisher =	 {Springer-Verlag New York, Inc.},
  year =	 1982,
  address =	 {Secaucus, NJ, USA},
  isbn =	 0387102353
}

@Book{milner1989communication,
  author =	 {Robin Milner},
  title =	 {Communication and Concurrency},
  publisher =	 ph,
  year =	 1989,
  address =	 ph_a,
  annote =	 {Main citation on CCS. A clean-up of his 1980 book with the
		 important addition of the notion of bisimulation.
		 
		 Very readable preface: says the concern began by noticing
		 that reasoning about sequential programs was easy because
		 they controlled their memory, but that concurrent programs
		 could interfere.}
}

@Article{milner1996calculi,
  author =	 {Robin Milner},
  title =	 {Calculi for Interaction},
  journal =	 {Acta Informatica},
  year =	 1996,
  volume =	 33,
  number =	 {8},
  pages =	 {707--737},
  month =	 nov,
  annote =	 {A discussion of things like the lambda calculus, the pi
		 calculus, Petri nets, and so forth.}
}

@Book{milner1999pi,
  author =	 {Robin Milner},
  title =	 {Communicating and Mobile Systems: the Pi-Calculus},
  publisher =	 {Cambridge University Press},
  year =	 1999
}

@InProceedings{minato1992fast,
  author =	 {Shin{-}ichi Minato},
  title =	 {Fast Generation of Irredundant Sum-of-Products Forms from
		 Binary Decision Diagrams},
  booktitle =	 {Proceedings the Synthesis and Simulation Meeting and
		 Internation Exchange (SASIMI)},
  year =	 {1992},
  pages =	 {64--73},
  address =	 {Kobe, Japan},
  month =	 apr,
  annote =	 {Part of the cyclic stuff with Osama.}
}

@InProceedings{minato1993zero-suppressed,
  author =	 {Shin{-}ichi Minato},
  title =	 {Zero-suppressed {BDDs} for set manipulation in
		 combinatorial problems},
  booktitle =	 dac93,
  year =	 1993,
  pages =	 {272--277},
  address =	 dac93a,
  annote =	 {Part of the cyclic stuff with Osama.}
}

@InProceedings{misra2003relationships,
  author =	 {Subhas C. Misra and Virendra C. Bhavsar},
  title =	 {Relationships Between Selected Software Measures and Latent
		 Bug-Density: Guidelines for Improving Quality},
  booktitle =	 {Proceedings of the International Conference on
		 Computational Science and its Applications (ICCSA)},
  year =	 2003,
  series =	 lncs,
  volume =	 2667,
  pages =	 {724--732},
  address =	 {Montreal, Canada},
  month =	 may,
  publisher =	 sv
}

@Article{mitsuhashi1982audio,
  author =	 {Yasuhiro Mitsuhashi},
  title =	 {Audio Signal Synthesis by Functions of Two Variables},
  journal =	 jaes,
  year =	 {1982},
  volume =	 {30},
  number =	 {10},
  pages =	 {701--706},
  month =	 oct,
  annote =	 {Another variation on FM synthesis}
}

@Book{mittra1999principles,
  author =	 {Swapnajit Mittra},
  title =	 {Principles of {Verilog} {PLI}},
  publisher =	 kl,
  year =	 1999,
  address =	 kl_a,
  annote =	 {Listed in the Kluwer catalog.}
}

@Article{mockus2002two,
  author =	 {Audris Mockus and Roy T. Fielding and James D. Herbsleb},
  title =	 {Two case studies of open source software development:
		 {Apache} and {Mozilla}},
  journal =	 {ACM Transactions on Software Engineering and Methodology
		 (TOSEM)},
  year =	 2002,
  volume =	 11,
  number =	 3,
  pages =	 {309--346},
  month =	 jul,
  annote =	 {Cited by capiluppi2003characteristics}
}

@Article{mohanty1980shortest,
  author =	 {S. P. Mohanty},
  title =	 {Shortest String Containing All Permutations},
  journal =	 dm,
  year =	 1980,
  volume =	 31,
  number =	 1,
  pages =	 {91--95},
  annote =	 {Interesting results on the permutation problem.}
}

@Article{mokhoff2007designers,
  author =	 {Nicolas Mokhoff},
  title =	 {Designers pitch `wild and crazy' ideas at {DAC}},
  journal =	 {EE Times},
  year =	 2007,
  month =	 {June 6},
  annote =	 {SAN DIEGO - A "Wild and Crazy Idea" session at the Design
		 Automation Conference here probed novel approaches to
		 computer architectures and design methodologies, including
		 promsing ideas that have yet to be developed into technical
		 papers.
		 
		 Alex Solomatnikov, a researcher at Stanford University
		 detailed a chip multiprocessor generator as a flexible,
		 universal computing platform "that will supersede the
		 microprocessor." Under the scheme, designers would first
		 configure and program a flexible computing framework to run
		 applications with the desired performance. The system would
		 then compile the program and configuration, tailoring the
		 original framework to create a chip optimized for a desired
		 set of applications. "Thus, the user gets the reduced
		 development costs of using a flexible solution with the
		 efficiency of a custom chip," said Solomatnikov.
		 
		 Solomatnikov acknowledged that many issues must be addressed
		 before such a system could be designed. One is the
		 requirement for an automated backend toolset that could use
		 the finished logic to create a chip with little manual
		 intervention.
		 
		 Stephen Edwards, a researcher at Columbia University, made
		 the case for a "precision timed" (PRET) machine. "Current
		 architectures strive for superior average-case performance
		 that regrettably ignores predictability and repeatability of
		 timing properties," according to Edwards. "C says nothing
		 about timing, so timing is not considered part of
		 correctness."
		 
		 Edwards cited avionics applications as an example: In
		 "fly-by-wire" aircraft, where software interprets pilot
		 commands and transmits them to actuators through networks,
		 software certification is extremely expensive. Moreover, the
		 entire system must be certified, not just the software. "If
		 a manufacturer expects to produce a plane for 50 years, it
		 needs a 50-year stockpile of fly-by-wire components that are
		 all made from the same mask set on the same production
		 line," said Edwards.
		 
		 He called for a new era of processors with temporal behavior
		 controlled as easily as logical functions. The proposed PRET
		 machine would seek to provide networked, real-time software
		 delivering the reliability and timing precision of
		 synchronous digital hardware with the simplicity of software.
		 
		 "Timing precision is easy to achieve if you are willing to
		 forgo performance; the engineering challenge in PRET
		 machines is to deliver both. While we cannot abandon
		 structures such as caches and pipelines and 40 years of
		 progress in programming languages, compilers, operating
		 systems and networking, many will have to be rethought,"
		 Edwards argued.
		 
		 Farinaz Koushanfar, a researcher at Rice University,
		 proposed using EDA tools to integrate unique identification
		 keys into gate-level ciruits as security protocols. "In the
		 near future, the key design dilemma will be providing
		 security solutions that would cover all aspects of the
		 design -- from design reuse methodology, to architecture and
		 to implementation," said Koushanfar.
		 
		 In current silicon technology, she claimed the number of
		 manufacturing process variations across different ICs made
		 from the same mask and design is sufficient for unique
		 characterization of each IC with high signal-to-noise
		 ratios. Secure IDs could be used to produce software that
		 can only run on a specific IC, thereby preventing software
		 piracy.
		 
		 Finally, Blaze DFM Inc. researcher Puneet Gupta claimed that
		 simulations show that line-end shortening (LES), which is
		 considered a catastrophic failure in circuits, isn't all
		 bad. LES is caused by imperfections in lithographic printing
		 when polysilicon gates in MOS devices exhibit ciruit shorts.
		 Gupta claimed that under most circuit conditions, LES does
		 not catastrophically affect circuit functionality. Simple
		 canonical circuits used to assess the impact of LES on
		 performance showed that it leads to faster devices.
		 
		 "We are currently pursuing further investigations of the LES
		 phenomena and tying the results up into a design-aware smart
		 lithography rule checker," said Gupta. },
  url =		 {http://www.eetimes.com/showArticle.jhtml?articleID=199901742}
		 ,
  bdsk-url-1 =	 {http://www.eetimes.com/showArticle.jhtml?articleID=199901742}
		 
}

@Article{monroe2004quicktime,
  author =	 {Tim Monroe},
  title =	 {{QuickTime} Toolkit---Developing {QuickTime} Applications
		 for the {iPod}},
  journal =	 {MacTech},
  year =	 2004,
  volume =	 20,
  number =	 4,
  month =	 apr,
  annote =	 {The iPod is running a stripped-down version of Mac OS X and
		 there's a SNOBOL-like interpreter for games, etc. The guy
		 ported QuickTime applications to it so you can watch
		 videos.},
  url =		 {http://www.mactech.com/articles/mactech/Vol.20/20.04/SnowDay/index.html}
		 ,
  bdsk-url-1 =	 {http://www.mactech.com/articles/mactech/Vol.20/20.04/SnowDay/index.html}
		 
}

@InProceedings{montz1995scout,
  author =	 {Allen B. Montz and David Mosberger and Sean W. O'Malley and
		 Larry L. Peterson and Todd A. Proebsting},
  title =	 {Scout: A communications-oriented operating system},
  booktitle =	 {Proceedings of the 5th Workshop on Hot Topics in Operating
		 Systems},
  year =	 1995,
  pages =	 {58--61},
  address =	 {Orcas Island, Washington},
  month =	 may,
  annote =	 {Part of Peterson's work.
		 
		 Very high-level, but very interesting. This is more-or-less
		 a roadmap for what must be a large body of work.
		 
		 Claims that most things in the future will be specialized
		 and not general-purpose, so things need to be more
		 customized.
		 
		 Basic idea is to focus on paths along which data flows in
		 the system (e.g., between a disk and a network controller).
		 
		 Notes that cache behavior is becoming the dominant affect in
		 many systems, and proposes worrying about this.
		 
		 Likes the idea of using compiler technology to improve
		 performance:
		 
		 "While numerous programming languages ... have been proposed
		 to support application-level programming ... little or
		 nothing has been done to support low-level system
		 programming. After 20 years it is time to revisit the issue
		 of how ... to better support the construction of OS and
		 other low-level system code."}
}

@Article{moore1965cramming,
  author =	 {Gordon E. Moore},
  title =	 {Cramming More Components onto Integrated Circuits},
  journal =	 {Electronics},
  year =	 1965,
  volume =	 38,
  number =	 8,
  pages =	 {114--117},
  month =	 apr,
  annote =	 {The source of Moore's law. Nice graph of relative
		 manufacturing cost per component. Hilarously dated now: "how
		 will we cope with tens of thousands of transistors?"}
}

@Book{moore1990elements,
  author =	 {F. Richard Moore},
  title =	 {Elements of Computer Music},
  publisher =	 ph,
  year =	 {1990},
  annote =	 {Excellent discussion of synthesis, starting from fairly
		 low-level numerical concepts, and working through the major
		 schemes: additive, subtractive, non-linear, etc. Also
		 contains an extensive appendix on tuning.}
}

@Misc{moore2003no,
  author =	 {Gordon E. Moore},
  title =	 {No Exponential is Forever...but We Can Delay ``Forever''},
  howpublished = {A presentation at the International Solid State Circuits
		 Conference (ISSCC)},
  year =	 2003,
  month =	 feb,
  note =	 {San Francisco, California},
  annote =	 {Nice PDF presentation on the Intel website.}
}

@Article{moorer1976synthesis,
  author =	 {James A. Moorer},
  title =	 {The Synthesis of Complex Audio Spectra by Means of Discrete
		 Summation Formulas},
  journal =	 jaes,
  year =	 {1976},
  volume =	 {24},
  number =	 {9},
  pages =	 {717--727},
  month =	 nov,
  annote =	 {Suggested by Michael Goodwin, this paper presents a
		 generalization of the FM idea: looking for simple functions
		 with nice sine-series expansions. Not particularly
		 practical, though.}
}

@InProceedings{morel2002efficient,
  author =	 {Lionel Morel},
  title =	 {Efficient Compilation of Array Iterators for {Lustre}},
  booktitle =	 slap,
  year =	 2002,
  series =	 entcs,
  volume =	 65,
  pages =	 {19--26},
  address =	 {Grenoble, France},
  month =	 apr,
  publisher =	 els,
  annote =	 {Appeared in SLAP 2002. They moved from array slicing to
		 functional operators (map, fill, map_red).},
  number =	 5
}

@Article{morel2007array,
  author =	 {Lionel Morel},
  title =	 {Array Iterators in {Lustre}: From a Language Extension to
		 Its Exploitation in Validation},
  journal =	 {EURASIP Journal on Embedded Systems},
  year =	 2007,
  volume =	 2007,
  pages =	 {Article ID 59130, 16 pages},
  note =	 {doi:10.1155/2007/59130},
  annote =	 {Journal version of morel2002efficient.},
  url =		 {http://dx.doi.org/10.1155/2007/59130},
  bdsk-url-1 =	 {http://dx.doi.org/10.1155/2007/59130}
}

@Book{morrison1994ella-2000,
  author =	 {J. D. Morrison and A. S. Clarke},
  title =	 {{ELLA 2000}: {A} Language for Electronic System Design},
  publisher =	 mgh,
  year =	 {1994},
  annote =	 {Very simulator-oriented.}
}

@Book{morton2001embedded,
  author =	 {Todd D. Morton},
  title =	 {Embedded Microcontrollers},
  publisher =	 ph,
  year =	 2001,
  annote =	 {Textbook. Focuses on Motorola's 68HC11 and 68HC12 series,
		 although does discuss C programming.}
}

@InProceedings{mosberger1996analysis,
  author =	 {David Mosberger and Larry L. Peterson and Patrick G.
		 Bridges and Sean O'Malley},
  title =	 {Analysis of Techniques to Improve Protocol Processing
		 Latency},
  booktitle =	 {Proceedings of the Conference on Applications,
		 technologies, architectures, and protocols for computer
		 communication (SIGCOMM)},
  year =	 1996,
  pages =	 {73--84},
  address =	 {Stanford, California},
  month =	 aug,
  annote =	 {A laundry list of optimizations for network protocol code.
		 Cited by kohler1999readable and others. Peterson's work.}
}

@Article{moshe2001real,
  author =	 {Guy Moshe},
  title =	 {Real System-Level Design Challenge: Integration},
  journal =	 {EE Times},
  year =	 2001,
  pages =	 68,
  month =	 {April 23},
  annote =	 {Argues that integrating hardware and software is the most
		 difficult part of system design. Making sure the device
		 drivers talk to the hardware correctly, and that the
		 hardware behaves as advertised, is the main challenge. Issue
		 1163.}
}

@Article{mossberg2002new,
  author =	 {Walter S. Mossberg},
  title =	 {New Refrigerator Surfs Web, Takes Dictation, Makes Ice},
  journal =	 {The Wall Street Journal},
  year =	 2002,
  pages =	 {D1--D12},
  month =	 {October 23},
  annote =	 {The Internet Refrigerator skewered by Walt Mossberg. It's
		 \$8000, and has a Windows PC, a 15" flat panel, a video
		 camera, a microphone, and four speakers built-in. Typing is
		 ridiculous on the touch screen. Has a stored food database,
		 but you have to enter the data manually; no bar code
		 reader.}
}

@Article{moundanos1998abstraction,
  author =	 {Dinos Moundanos and Jacob A. Abraham and Yatin V. Hoskote},
  title =	 {Abstraction Techniques for Validation Coverage Analysis and
		 Test Generation},
  journal =	 transcomp,
  year =	 1998,
  volume =	 47,
  number =	 1,
  pages =	 {2--14},
  month =	 jan,
  annote =	 {Assumes the datapath has already been separated from the
		 controller. Works on generating test sequences for the
		 controller. Part of the work with Monica. Referenced by
		 SED:bergmann:99a}
}

@InProceedings{moy2005pinapa,
  author =	 {Matthieu Moy and Florence Maraninchi and Laurent
		 Maillet-Contoz},
  title =	 {{Pinapa}: An extraction tool for {SystemC} descriptions of
		 systems-on-a-chip},
  booktitle =	 emsoft,
  year =	 2005,
  pages =	 {317--324},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {Describes their extractor for SystemC descriptions, which
		 runs the C++ program first to get any static elaboration. I
		 sat on his thesis committee.}
}

@Manual{mpiforum1995mpi,
  title =	 {{MPI}: A Message-Passing Interface Standard},
  organization = {The Message Passing Interface Forum},
  month =	 jun,
  year =	 1995,
  note =	 {Version 1.1},
  annote =	 {The definition of the API, etc.},
  url =		 {http://www.mpi-forum.org/},
  bdsk-url-1 =	 {http://www.mpi-forum.org/}
}

@Book{muchnick1981program,
  editor =	 {Steven S. Muchnick and Neil D. Jones},
  title =	 {Program Flow Analysis: Theory and Applications},
  publisher =	 ph,
  year =	 1981,
  address =	 ph_a,
  annote =	 {Collection of papers and ideas about program semantics,
		 analysis.}
}

@Book{muchnick1997advanced,
  author =	 {Steven S. Muchnick},
  title =	 {Advanced Compiler Design and Implementation},
  publisher =	 mk,
  year =	 1997,
  address =	 mk_a,
  annote =	 {Excellent advanced compiler book. Expensive.}
}

@Article{mudge2001power,
  author =	 {T. Mudge},
  title =	 {Power: A First-Class Architectural Design Constraint},
  journal =	 computer,
  year =	 {2001},
  volume =	 {34},
  number =	 {4},
  pages =	 {52--58},
  address =	 {Los Alamitos, CA, USA},
  oldkey =	 {mudge01},
  publisher =	 {IEEE Computer Society Press},
  sedtransform = {s/mudge01/mudge2001power/}
}

@InProceedings{mueller1997generalizing,
  author =	 {Frank Mueller},
  title =	 {Generalizing Timing Predictions to Set-Associative Caches},
  booktitle =	 {Proceedings of the 9th Euromicro Workshop on Real Time
		 Systems},
  year =	 1997,
  pages =	 {64--71},
  address =	 {Toledo, Spain},
  month =	 jun,
  annote =	 {Simulation of Set-Associative caches.}
}

@Article{mukherjee2000emerging,
  author =	 {Tamal Mukherjee and Gary K. Fedder and D. Ramaswamy and
		 Jacob White},
  title =	 {Emerging Simulation Approaches for Micromachined Devices},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1572--1588},
  month =	 {dec},
  annote =	 {Part of a nice special issue.}
}

@InProceedings{muller1997harissa,
  author =	 {Gilles Muller and B{\'a}rbara Moura and Fabrice Bellard and
		 Charles Consel},
  title =	 {Harissa: A Flexible and Efficient {Java} Environment Mixing
		 Bytecode and Compiled Code.},
  booktitle =	 {COOTS},
  year =	 1997,
  pages =	 {1-20},
  bibsource =	 {DBLP, http://dblp.uni-trier.de},
  ee =		 {http://www.usenix.org/publications/library/proceedings/coots97/muller.html}
		 ,
  optcrossref =	 {DBLP:conf/coots/1997}
}

@Book{muller2003systemc,
  editor =	 {Wolfgang Muller and Wolfgang Rosenstiel and Jurgen Ruf},
  title =	 {{SystemC:} Methodologies and Applications},
  publisher =	 kl,
  year =	 2003,
  address =	 kl_a,
  annote =	 {Haven't read it.}
}

@Book{mullet1995designing,
  author =	 {Kevin Mullet and Darrell Sano},
  title =	 {Designing Visual Interfaces: Communication Oriented
		 Techniques},
  publisher =	 {SunSoft Press/Prentice Hall},
  year =	 {1995},
  annote =	 {Recommended by John Reekie. Nice looking.}
}

@TechReport{murakami1990terminal,
  author =	 {Gary J. Murakami and Ravi Sethi},
  title =	 {Terminal Call Processing in Esterel},
  institution =	 {Bell Labs},
  year =	 1990,
  number =	 {CSTR 150},
  month =	 jun,
  annote =	 {Describes how they reimplemented a piece of terminal call
		 software in Esterel. They were using the V3 compiler, so it
		 appears there was some problem with state blow-up. Nice
		 numbers about source code sizes.}
}

@InProceedings{murali2004sunmap,
  author =	 {S. Murali and G. De Micheli},
  title =	 {{SUNMAP}: A Tool for Automatic Topology Selection and
		 Generation for {NOCs}},
  booktitle =	 dac,
  year =	 2004,
  pages =	 {914-919},
  month =	 jun,
  affiliation =	 {SU},
  entered =	 {Luca Carloni,03/12/05},
  keywords =	 {soc design, noc, deep submicron},
  oldkey =	 {murali_dac04},
  sedtransform = {s/murali_dac04/murali2004sunmap/}
}

@Article{murata1977circuit,
  author =	 {T. Murata},
  title =	 {Circuit Theoretic Analysis and Synthesis of Marked Graphs},
  journal =	 transcs,
  year =	 1977,
  volume =	 24,
  number =	 7,
  month =	 {July}
}

@Article{murata1989petri,
  author =	 {Tadao Murata},
  title =	 {Petri Nets: Properties, Analysis, and Applications},
  journal =	 procieee,
  year =	 1989,
  volume =	 77,
  number =	 4,
  pages =	 {541--580},
  month =	 apr,
  annote =	 {Summary of all that is Petri. No fewer than 315
		 references!}
}

@PhDThesis{murgai1993logic,
  author =	 {Rajeev Murgai},
  title =	 {Logic Synthesis for Field-Programmable Gate Arrays},
  school =	 ucb,
  year =	 {1993},
  note =	 {Available as UCB/ERL M93/98}
}

@InProceedings{murgai1995logic,
  author =	 {Rajeev Murgai and Fumiyasu Hirose and Masahiro Fujita},
  title =	 {Logic Synthesis for a Single Large Look-up Table},
  booktitle =	 {International Workshop on Logic Synthesis},
  year =	 {1995},
  pages =	 {6--11--6--19},
  annote =	 {Using FPGA-like LUTs do to simulation}
}

@TechReport{murthy1995generalization,
  author =	 {Praveen K. Murthy and Edward A. Lee},
  title =	 {A Generalization of Multidimensional Synchronous Dataflow
		 to Arbitrary Sampling Lattices},
  institution =	 ucb,
  year =	 {1995},
  number =	 {UCB/ERL M95/59}
}

@Article{murthy2000systematic,
  author =	 {Praveen K. Murthy and Shuvra S. Bhattacharyya},
  title =	 {Systematic consolidation of input and output buffers in
		 synchronous dataflow specifications},
  journal =	 {IEEE Workshop on Signal Processing Systems (SiPS)},
  year =	 2000,
  pages =	 {673--682},
  doi =		 {10.1109/SIPS.2000.886765},
  keywords =	 {data flow computing, digital signal processing chips,
		 programming environmentsDSP programming environments,
		 Synchronous Dataflow, buffer merging, buffering memory
		 consumption, embedded DSPs},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/SIPS.2000.886765}
}

@Article{murthy2001shared,
  author =	 {Praveen K. Murthy and Shuvra S. Bhattacharyya},
  title =	 {Shared Buffer Implementations of Signal Processing Systems
		 Using Lifetime Analysis Techniques},
  journal =	 transcad,
  year =	 2001,
  volume =	 20,
  number =	 2,
  pages =	 {177--198},
  month =	 feb,
  annote =	 {Got this from Praveen before it was published. Discusses
		 trying to share buffer memory between invocations of SDF
		 actors.}
}

@Article{murthy2004buffer,
  author =	 {Praveen K. Murthy and Shuvra S. Bhattacharyya},
  title =	 {Buffer merging---A powerful technique for reducing memory
		 requirements of synchronous dataflow specifications},
  journal =	 todaes,
  year =	 2004,
  volume =	 9,
  number =	 2,
  pages =	 {212--237},
  month =	 apr,
  annote =	 {Goal is to reuse buffer memory in SDF specifications. Looks
		 at lifetime analysis by carefully looking at exactly when
		 data is generated and consumed.}
}

@Book{murthy2006memory,
  author =	 {Praveen K. Murthy and Shuvra S. Bhattacharyya},
  title =	 {Memory Management for Synthesis of DSP Software},
  publisher =	 {CRC Press, Inc.},
  year =	 {2006},
  address =	 {Boca Raton, FL, USA},
  isbn =	 {0849337526}
}

@InProceedings{mycroft2001hardware-software,
  author =	 {Alan Mycroft and Richard W. Sharp},
  title =	 {Hardware/Software Co-Design using Functional Languages},
  booktitle =	 tacas,
  year =	 2001,
  series =	 lncs,
  volume =	 2031,
  publisher =	 sv,
  annote =	 {See also sharp2000flash. Talks mostly about their
		 functional language. Not very impressive.}
}

@Book{myers2001asynchronous,
  author =	 {Chris J. Myers},
  title =	 {Asynchronous Circuit Design},
  publisher =	 jw,
  year =	 2001,
  address =	 jw_a,
  annote =	 {Attempts to be a textbook following that of Unger. I saw it
		 briefly in the Columbia library.}
}

@Book{myers2004art,
  author =	 {G. Myers},
  title =	 {The Art of Software Testing, 2nd Edition},
  publisher =	 jw,
  year =	 2004,
  key =		 {Myers2004},
  oldkey =	 {testing1},
  sedtransform = {s/testing1/myers2004art/}
}

@Article{nace2001graceful,
  author =	 {William Nace and Philip Koopman},
  title =	 {Graceful Degradation in Distributed Embedded Systems},
  journal =	 {Dr.\ Dobb's Embedded Systems},
  year =	 2001,
  annote =	 {Web zine. Very nice overview of many of the ideas Angelos
		 and I have been discussing. One helpful observation: "extra"
		 computing power may come from disabling lesser-needed
		 features.
		 
		 Talks about a reconfiguration manager and modeling
		 distributed systems with dataflow graphs.},
  url =		 {http://www.ddjembedded.com/resources/articles/2001/0106em001/0106em001a.htm}
		 ,
  bdsk-url-1 =	 {http://www.ddjembedded.com/resources/articles/2001/0106em001/0106em001a.htm}
		 
}

@InProceedings{nacul2004code,
  author =	 {Andr\'e Costi N\'acul and Tony Givargis},
  title =	 {Code Partitioning for Synthesis of Embedded Applications
		 with {Phantom}},
  booktitle =	 iccad,
  year =	 2004,
  pages =	 {190--196},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Interesting work: multitasking C with a POSIX interface to
		 single-threaded C. Lots of clustering, etc. Sort of like my
		 work on concurrent-to-sequential code.}
}

@TechReport{nacul2004phantom,
  author =	 {Andr\'e C. N\'acul and Tony Givargis},
  title =	 {The {Phantom} Serializing Compiler},
  institution =	 {University of California, Irvine},
  year =	 2004,
  number =	 {CECS--04--30},
  month =	 nov,
  annote =	 {Sent to my by Andre based on my comments to him at ICCAD.}
}

@InProceedings{naffziger2005implementation,
  author =	 {S. Naffziger and B. Stackhouse and T. Grutkowski},
  title =	 {The Implementation of a 2-core Multi-Threaded
		 {Itanium}-Family Processor},
  booktitle =	 isscc,
  year =	 2005,
  pages =	 {182-183},
  month =	 feb,
  affiliation =	 {Intel},
  annote =	 {Montecito Paper},
  entered =	 {Luca Carloni,3/2/05},
  keywords =	 {microprocessors},
  oldkey =	 {naffziger05},
  sedtransform = {s/naffziger05/naffziger2005implementation/}
}

@TechReport{nagel1975spice2,
  author =	 {Lawrence W. Nagel},
  title =	 {{SPICE2}: A Computer Program to Simulate Semiconductor
		 Circuits},
  institution =	 ucb,
  year =	 1975,
  number =	 {ERL M520},
  month =	 may,
  annote =	 {The thesis on SPICE.}
}

@Article{najjar1999advances,
  author =	 {Walid A. Najjar and Edward A. Lee and Guang R. Gao},
  title =	 {Advances in the Dataflow Computational Model},
  journal =	 {Parallel Computing},
  year =	 1999,
  volume =	 25,
  pages =	 {1907--1929},
  annote =	 {threads, digital signal processing, and reconfigurable
		 computing approaches.},
  url =		 {http://ptolemy.eecs.berkeley.edu/publications/papers/99/index.htm}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/publications/papers/99/index.htm}
		 
}

@InProceedings{najm1988crest,
  author =	 {Farid Najm and Richard Burch and Ping Yang and Ibrahim
		 Hajj},
  title =	 {{CREST}: {A} Current Estimator for {CMOS} Circuits},
  booktitle =	 iccad,
  year =	 {1988},
  pages =	 {204--207},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {An earlier paper on probabilistic simulation.}
}

@Article{najm1990probabilistic,
  author =	 {Farid N. Najm and Richard Burch and Ping Yang and Ibrahim
		 N. Hajj},
  title =	 {Probabilistic Simulation for Reliability Analysis of {CMOS}
		 {VLSI} Circuits},
  journal =	 transcad,
  year =	 {1990},
  volume =	 {9},
  number =	 {4},
  pages =	 {439--450},
  month =	 apr,
  annote =	 {Appears to be the seminal paper on probabilistic
		 simulation}
}

@Article{najm1991extension,
  author =	 {Farid N. Najm and Ibrahim N. Hajj and Ping Yang},
  title =	 {An Extension of Probabilistic Simulation for Reliability
		 Analysis of {CMOS} {VLSI} Circuits},
  journal =	 transcad,
  year =	 {1991},
  volume =	 {10},
  number =	 {11},
  pages =	 {1372--1381},
  month =	 nov,
  annote =	 {Extension of SED:najm:90a}
}

@Article{nam2008automatic,
  author =	 {Wonhong Nam and P. Madhusudan and Rajeev Alur},
  title =	 {Automatic symbolic compositional verification by learning
		 assumptions},
  journal =	 jfmsd,
  year =	 {2008},
  volume =	 {32},
  number =	 {3},
  pages =	 {207--234},
  month =	 jun,
  address =	 {Hingham, MA, USA},
  doi =		 {http://dx.doi.org/10.1007/s10703-008-0055-8},
  issn =	 {0925--9856},
  publisher =	 sv,
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/s10703-008-0055-8}
}

@InProceedings{namjoshi1999efficient,
  author =	 {Kedar S. Namjoshi and Robert P. Kurshan},
  title =	 {Efficient Analysis of Cyclic Definitions},
  booktitle =	 {Computer Aided Verification},
  year =	 1999,
  series =	 lncs,
  volume =	 1633,
  pages =	 {394--405},
  address =	 {Trento, Italy},
  month =	 jul,
  publisher =	 sv,
  annote =	 {Cited in a SLAP paper by Koen Classen I reviewed.
		 
		 Basic idea is that it's equivalent to prove that all
		 fixed-points are fully defined to prove that the least fixed
		 point is. Turns a fixed-point computation into a much
		 simpler constraint. Good idea. Berry had told me about this
		 much earlier.}
}

@TechReport{narayan1990modeling,
  author =	 {Sanjiv Narayan and Frank Vahid and Daniel D. Gajski},
  title =	 {Modeling with {SpecCharts}},
  institution =	 {Dept. of Information and Computer Science, University of
		 California, Irvine},
  year =	 {1990},
  number =	 {90--20},
  month =	 jul,
  annote =	 {Contains an elaborate answering machine example},
  url =		 {http://www.ics.uci.edu/},
  bdsk-url-1 =	 {http://www.ics.uci.edu/}
}

@Article{nataf1992algorithm,
  author =	 {Jean-Michel Nataf},
  title =	 {Algorithm of Simplification of Nonlinear Equation Systems},
  journal =	 {SIGSAM Bulletin},
  year =	 {1992},
  volume =	 {26},
  number =	 {3},
  pages =	 {9--16},
  month =	 aug,
  annote =	 {nataf@srge.lbl.gov, suggested by Alice Agogino}
}

@Misc{national1995dp8390d,
  author =	 {{National Semiconductor}},
  title =	 {{DP8390D/NS32490D} {NIC} Network Interface Controller},
  year =	 1995,
  month =	 jul,
  note =	 {Datasheet TL/F/8582 RRD-B30M105},
  annote =	 {Datasheet for the 8390 used in the NE2000 Ethernet boards}
}

@InProceedings{necula1996safe,
  author =	 {George C. Necula and Peter Lee},
  title =	 {Safe Kernel Extensions Without Run-Time Checking},
  booktitle =	 osdi,
  year =	 1996,
  pages =	 {229-243},
  address =	 {Seattle, Washington},
  month =	 oct,
  annote =	 {Proof-carrying code (PCC). Proof along with an executable
		 that is easy to check once. How to generate the proofs the
		 challenge.},
  url =		 {http://www-nt.cs.berkeley.edu/home/necula/public_html/},
  bdsk-url-1 =	 {http://www-nt.cs.berkeley.edu/home/necula/public_html/}
}

@InProceedings{necula2002ccured,
  author =	 {George C. Necula and Scott McPeak and Westley Weimer},
  title =	 {{CCured}: Type-Safe Retrofitting of Legacy Code},
  booktitle =	 popl,
  year =	 2002,
  pages =	 {128--139},
  address =	 {Portland, Oregon},
  month =	 jan,
  annote =	 {Run-time checks added, removed after certain static
		 analysis.}
}

@InProceedings{necula2002cil,
  author =	 {George C. Necula and Scott McPeak and S. P. Rahul and
		 Westley Weimer},
  title =	 {{CIL}: Intermediate Language and Tools for Analysis and
		 Transformation of {C} Programs},
  booktitle =	 {Proceedings of the International Conference on Compiler
		 Construction (CC)},
  year =	 2002,
  series =	 lncs,
  volume =	 2304,
  pages =	 {212--228},
  address =	 {Grenoble, France},
  month =	 apr,
  annote =	 {Describes the CIL system for C code manipulation.}
}

@InProceedings{neiroukh2006efficient,
  author =	 {Osama Neiroukh and Stephen A. Edwards and Xiaoyu Song},
  title =	 {An Efficient Algorithm for the Analysis of Cyclic
		 Circuits},
  booktitle =	 {Proceedings of the Symposium on VLSI (ISVLSI)},
  year =	 2006,
  pages =	 {303--308},
  address =	 {Karlsruhe, Germany},
  month =	 mar,
  annote =	 {Got it on the second try after DATE.},
  selectivity =	 {64/151 = 42\%},
  url =		 {http://dx.doi.org/10.1109/ISVLSI.2006.18},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/ISVLSI.2006.18}
}

@Article{neiroukh2008transforming,
  author =	 {Osama Neiroukh and Stephen A. Edwards and Xiaoyu Song},
  title =	 {Transforming Cyclic Circuits Into Acyclic Equivalents},
  journal =	 transcad,
  year =	 2008,
  volume =	 27,
  number =	 10,
  pages =	 {1775--1787},
  month =	 oct,
  annote =	 {Our long-worked-on paper all about cyclic circuits.},
  url =		 {http://dx.doi.org/10.1109/TCAD.2008.2003305},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/TCAD.2008.2003305}
}

@Article{nesbit2007virtual,
  author =	 {Kyle J. Nesbit and James Laudon and James E. Smith},
  title =	 {Virtual Private Caches},
  journal =	 {ACM SIGARCH Computer Architecture News},
  year =	 2007,
  volume =	 35,
  number =	 2,
  pages =	 {57--68},
  month =	 may,
  annote =	 {Suggested by Martha. Temporal isolation in OSes.}
}

@TechReport{neumann1945first,
  author =	 {John {von Neumann}},
  title =	 {First Draft of a Report on the {EDVAC}},
  institution =	 {University of Pennsylvania},
  year =	 1945,
  month =	 {June 30},
  annote =	 {One of the first mentions of the stored-program computer.}
}

@Article{neumann1993first,
  author =	 {John {von Neumann}},
  title =	 {First Draft of a Report on the {EDVAC}},
  journal =	 {IEEE Annals of the History of Computing},
  year =	 1993,
  volume =	 15,
  number =	 4,
  pages =	 {27--75},
  month =	 {FIXME},
  annote =	 {A better typeset version of the original report.}
}

@InBook{newton1987design,
  author =	 {A. R. Newton},
  title =	 {Design Systems for {VLSI} Circuits: Logic Synthesis and
		 Silicon Compilation},
  chapter =	 {Symbolic Layout and Procedural Design},
  pages =	 {65--112},
  publisher =	 {Martinus Nijhoff},
  year =	 {1987},
  annote =	 {Includes a description of the DPL environment.},
  opteditor =	 {G. {De Micheli} and A. Sangiovanni-Vincentelli and P.
		 Antogenetti}
}

@InProceedings{nie1999new,
  author =	 {Xiaoning Nie and Lajos Gazsi and Frank Engel and Gerhard
		 Fettweis},
  title =	 {A New Network Processor Architecture for High-Speed
		 Communications},
  booktitle =	 {Proceedings of the IEEE Workshop on Signal Processing
		 Systems (SiPS)},
  year =	 1999,
  pages =	 {548--557},
  address =	 {Taipei, Taiwan},
  month =	 oct,
  annote =	 {Referenced by wagner2001c.
		 
		 Bit-field access instructions, RISC-based. Zero-overhead
		 context switches. Memory-to-memory moves. Support for short
		 loops. Relocatable case-statement support through an
		 instruction that adds a register to the PC. Hardware
		 contexts for quick context switches.
		 
		 No real concrete results.}
}

@InProceedings{nielsen1994performance,
  author =	 {Christian D. Nielsen and Michael Kishinevsky},
  title =	 {Performance analysis based on timing simulation},
  booktitle =	 dac94,
  year =	 1994,
  pages =	 {70--76},
  address =	 dac94a,
  month =	 jun,
  annote =	 {Cited by venkataramani2006leveraging. Considers marked
		 graphs, i.e., without choice. Since they don't consider
		 choice, they can consider a single timing diagram for a
		 particular system.},
  doi =		 {http://doi.acm.org/10.1145/196244.196281},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/196244.196281}
}

@Article{nielsen2003simple,
  author =	 {Michael A. Nielsen},
  title =	 {Simple Rules for a Complex Quantum World},
  journal =	 {Scientific American},
  year =	 2003,
  volume =	 {The Edge of Physics},
  month =	 {Spring},
  annote =	 {Al Aho showed this to me}
}

@InProceedings{nielson1992bounded,
  author =	 {Hanne Riis Nielson and Flemming Nielson},
  title =	 {Bounded fixed point iteration},
  booktitle =	 popl,
  year =	 {1992},
  pages =	 {71--82},
  address =	 {Albuquerque, New Mexico},
  doi =		 {http://doi.acm.org/10.1145/143165.143182},
  isbn =	 {0-89791-453-8},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/143165.143182}
}

@Book{nielson1992semantics,
  author =	 {Hanne Riis Nielson and Flemming Nielson},
  title =	 {Semantics with Applications: A Formal Introduction},
  publisher =	 jw,
  year =	 1992,
  address =	 jw_a,
  annote =	 {Out-of-print: Now available online}
}

@Book{nielson1992two-level,
  author =	 {Flemming Nielson and Hanne Riis Rielson},
  title =	 {Two-Level Functional Languages},
  publisher =	 cup,
  year =	 1992,
  annote =	 {Got it from CUP for a book review. Very theory-oriented
		 work with lots of mathematics and denotational
		 definitions.}
}

@Book{nielson1999principles,
  author =	 {Flemming Nielson and Hanne Riis Nielson and Chris Hankin},
  title =	 {Principles of Program Analysis},
  publisher =	 sv,
  year =	 1999,
  annote =	 {Recommended by Ed Clarke, who's using it as a textbook. Has
		 chapters on Abstract Interpretation.},
  url =		 {http://www.daimi.au.dk/~hrn/PPA/ppa.html},
  bdsk-url-1 =	 {http://www.daimi.au.dk/~hrn/PPA/ppa.html}
}

@InProceedings{nieplocha1992asynchronous,
  author =	 {Jaroslaw Nieplocha and Tsun Zee Mai and Chester C.
		 Carroll},
  title =	 {Asynchronous Algorithms for Solving Large Systems of Linear
		 Equations on Parallel Computers},
  editor =	 {Wouter Joosen and Eli Milgrom},
  booktitle =	 {Parallel Comuting: From Theory to Sound Practice.
		 Proceedings of EWPC '92, the European Workshops on Parallel
		 Comuting, 23--24 March 1992---Barcelona, Spain},
  year =	 {1992},
  pages =	 {76--79},
  publisher =	 {IOS Press}
}

@InProceedings{nieplocha1993communication,
  author =	 {Jaroslaw Nieplocha and Chester C. Carroll},
  title =	 {Communication Structures for Asynchronous Algorithms on
		 Distributed {MIMD} Computers},
  booktitle =	 {Proceedings. Euromicro Workshop on Parallel and Distributed
		 Processing},
  year =	 {1993},
  pages =	 {291--298},
  address =	 {Gran Canaria, Spain},
  month =	 jan,
  publisher =	 ieeecs,
  abstract =	 {Addresses communication in asynchronous algorithms
		 implemented on distributed MIMD processors. The
		 communication factor significantly affects the convergence
		 rate and performance of these algorithms, and therefore
		 requires special attention in distributed MIMD
		 implementations. A sufficient condition to avoid starvation
		 due to the communication cost is given. Several
		 communication schemes for this problem-suitable for current
		 distributed multiprocesser architectures-are presented and
		 discussed with respect to their efficiency and correctness.
		 These schemes may be used for efficient implementation of
		 various asynchronous algorithms.}
}

@InProceedings{nilsson1993lazy,
  author =	 {Henrik Nilsson and Peter Fritzson},
  title =	 {Lazy Algorithmic Debugging: Ideas for Practical
		 Implementation},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {749},
  pages =	 {117--134},
  publisher =	 kl,
  annote =	 {Algorithmic debugging applied to functional languages with
		 lazy evaluation}
}

@Article{nilsson1995abstract,
  author =	 {Ulf Nilsson},
  title =	 {Abstract Interpretation: A Kind of Magic},
  journal =	 tcs,
  year =	 1995,
  volume =	 142,
  number =	 1,
  pages =	 {125--138},
  month =	 may,
  annote =	 {Discusses abstract interpretation for logic programs and
		 connects two approaches. Idea is to abstractly interpret a
		 top-down algorithm to run it bottom-up.}
}

@InProceedings{nirkhe1992partial,
  author =	 {Vivek Nirkhe and William Pugh},
  title =	 {Partial Evaluation of High-Level Imperative Programming
		 Languages, with Applications in Hard Real-Time Systems},
  booktitle =	 {Nineteenth ACM Symposium on Principles of Programming
		 Languages},
  year =	 1992,
  pages =	 {269--280},
  address =	 {Albuquerque, New Mexico},
  month =	 jan,
  annote =	 {Part of the WCET paper. Partial evaluation as a method of
		 simplifying executable programs for analysis.}
}

@Book{noergaard2005embedded,
  author =	 {Tammy Noergaard},
  title =	 {Embedded Systems Architecture: A Comprehensive Guide for
		 Engineers and Programmers},
  publisher =	 {Newnes (Elsevier)},
  year =	 2005,
  annote =	 {Large. Very high-level, but very broad discussion of real
		 engineering issues.}
}

@InProceedings{nookala2004method,
  author =	 {V. Nookala and S. Sapatnekar},
  title =	 {A Method for Correcting the Functionality of a
		 Wire-Pipelined Circuit},
  booktitle =	 dac04,
  year =	 2004,
  pages =	 {574-575},
  address =	 dac04a,
  month =	 jun,
  affiliation =	 {Univ. Minnesota},
  annote =	 {Citing DAC'00 paper},
  entered =	 {Luca Carloni,06/12/04},
  keywords =	 {soc design, noc, deep submicron},
  oldkey =	 {nookala_dac04},
  sedtransform = {s/nookala_dac04/nookala2004method/}
}

@InProceedings{nookala2005designing,
  author =	 {V. Nookala and S. Sapatnekar},
  title =	 {Designing optimized pipelined global interconnects:
		 Algorithms and methodology impact},
  booktitle =	 iscas,
  year =	 2005,
  pages =	 {608-611},
  month =	 may,
  oldkey =	 {nookala_iscas05},
  sedtransform = {s/nookala_iscas05/nookala2005designing/}
}

@Book{norman1988design,
  author =	 {Donald A. Norman},
  title =	 {The Design of Everyday Things},
  publisher =	 {Doubleday},
  year =	 {1988}
}

@Book{norman1998invisible,
  author =	 {Donald A. Norman},
  title =	 {The Invisible Computer: Why Good Products Can Fail, the
		 Personal Computer Is So Complex, and Information Appliances
		 Are the Solution},
  publisher =	 mit,
  year =	 1998,
  address =	 mit_a,
  annote =	 {Excellent series of arguments for the coming change in
		 computing. Argues against general-purpose computing,
		 likening it to the difference between a Swiss Army Knife and
		 a properly-designed pliers, say.}
}

@InProceedings{norrish1999deterministic,
  author =	 {Michael Norrish},
  title =	 {Deterministic Expressions in {C}},
  booktitle =	 esop,
  year =	 1999,
  series =	 lncs,
  volume =	 1576,
  pages =	 {147--161},
  address =	 {Amsterdam, The Netherlands},
  month =	 mar,
  publisher =	 sv,
  annote =	 {Determinism in C. An HOL embedded of their Cholera model.}
}

@Article{nyquist1932regeneration,
  author =	 {Harry Nyquist},
  title =	 {Regeneration Theory},
  journal =	 {Bell System Technical Journal},
  year =	 1932,
  volume =	 11,
  pages =	 {126--147},
  annote =	 {Cited as the beginning of amplifier stability}
}

@InProceedings{nystrom2004bottom-up,
  author =	 {Erik M. Nystrom and Hong-Seok Kim and Wen-mei W. Hwu},
  title =	 {Bottom-Up and Top-Down Context-Sensitive Summary-Based
		 Pointer Analysis},
  booktitle =	 sas,
  year =	 2004,
  pages =	 {165--180},
  address =	 {Verona, Italy},
  month =	 aug,
  annote =	 {Suggested by one of the SCP BEAM paper reviewers.}
}

@InProceedings{obrien1993dls,
  author =	 {Kevin O'Brien and Maher Rahmouni and Ahmed Jerraya},
  title =	 {{DLS}: A scheduling algorithm for high-level synthesis in
		 {VHDL}},
  booktitle =	 {Proceedings of the 4th European Conference on Design
		 Automation},
  year =	 1993,
  pages =	 {393--397},
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {Suggested by a software sythesis paper as a way to deal
		 with choice.}
}

@InProceedings{ocallahan1997lackwit,
  author =	 {Robert O'Callahan and Daniel Jackson},
  title =	 {Lackwit: A Program Understanding Tool Based on Type
		 Inference},
  booktitle =	 icse,
  year =	 1997,
  pages =	 {338--348},
  address =	 {Boston, Massachusetts},
  month =	 may,
  annote =	 {Used by Michael Ernst's Daikon tool.},
  url =		 {http://www.cs.cmu.edu/~roc/Lackwit.html},
  bdsk-url-1 =	 {http://www.cs.cmu.edu/~roc/Lackwit.html}
}

@Misc{ocp,
  author =	 {Open Core Protocol International Partnership (OCP-IP)},
  title =	 {Open Core Protocol ({OCP}) Specification},
  howpublished = {Available at {http://www.ocpip.org/home}},
  oldkey =	 {ocp}
}

@Book{ogata2001modern,
  author =	 {Katsuhiko Ogata},
  title =	 {Modern Control Engineering},
  publisher =	 ph,
  year =	 2001,
  edition =	 {Fourth},
  annote =	 {Good reviews on Amazon. Introductory Control Theory book.}
}

@InProceedings{ogras2005application-specific,
  author =	 {U. Y. Ogras and R. Marculescu},
  title =	 {Application-specific network-on-chip architecture
		 customization via long-range link insertion},
  booktitle =	 iccad,
  year =	 {2005},
  pages =	 {246-253},
  oldkey =	 {ogras_iccad05},
  sedtransform = {s/ogras_iccad05/ogras2005application-specific/}
}

@Article{ohara2006mpi,
  author =	 {M. Ohara and H. Inoue and Y.Sohda and H. Komatsu and T.
		 Nakatani},
  title =	 {{MPI} Microtask for Programming the {Cell} {Broadband}
		 {Engine} processor},
  journal =	 {IBM Systems Journal},
  year =	 2006,
  volume =	 45,
  number =	 1,
  pages =	 {85--102},
  annote =	 {From Rebecca. Proposes to break up computation into
		 "microtasks" (i.e., things that can fit on an SPE) that
		 communicate among themselves using an MPI model.
		 
		 Theirs is a preprocessor that transforms a message-passing
		 model into a streaming model.
		 
		 "First, we propose a microtask model for the Cell BE
		 processor. It frees programmers from explicit local-store
		 management, which could be a significant burden for them.
		 Second, we propose a novel scheduling algorithm that
		 converts a microtask program into one for a streaming model
		 which the Cell BE processor can execute efficienty."
		 
		 They point out that Eichenberger et al.'s OpenMP compiler is
		 somehow the exact opposite of theirs, relying, as it does,
		 on a shared-memory model.
		 
		 Talks about related work on scheduling for parallel
		 processors.
		 
		 "Each microtask is a small MPI task that fits in the local
		 store."
		 
		 Big difference between it (MPI) and SHIM is the more dynamic
		 nature of channel and task creation in MPI.
		 
		 However, they attempt static scheduling by analyzing the
		 code (and thus, the dependencies).
		 
		 Their algorithm: task graph generation, clustering,
		 scheduling, and runtime parameter generation.
		 
		 The SHIM compiler doesn't consider the additional scheduling
		 step. They look for series-parallel structures.
		 
		 They probably transform MPI calls into Cell DMA operations
		 during the preprocessor steps. Static, much like SHIM. }
}

@InProceedings{ohlrich1993subgemini,
  author =	 {Miles Ohlrich and Carl Ebeling and Eka Ginting and Lisa
		 Sather},
  title =	 {{SubGemini:} Identifying SubCircuits using a Fast Subgraph
		 Isomorphism Algorithm},
  booktitle =	 dac93,
  year =	 1993,
  pages =	 {31--37},
  address =	 dac93a,
  month =	 jun,
  annote =	 {Referenced by kim1998hierarchical: they use this algorithm.
		 Not for comparison, but for identifying a given subgraph in
		 a larger graph. Based on a partitioning algorithm.}
}

@Article{oka1999designing,
  author =	 {Masaaki Oka and Masakazu Suzuoki},
  title =	 {Designing and Programming the Emotion Engine},
  journal =	 {IEEE Micro},
  year =	 1999,
  volume =	 19,
  number =	 6,
  pages =	 {20--28},
  month =	 nov,
  annote =	 {Description of the Emotion Engine in Sony's Playstation 2
		 game console.}
}

@InProceedings{okeefe1987finite,
  author =	 {Richard A. O'Keefe},
  title =	 {Finite Fixed-Point Problems},
  editor =	 {Jean-Louis Lassez},
  booktitle =	 {Logic Programming: Proceedings of the Fourth International
		 Conference},
  year =	 {1987},
  series =	 {MIT Press Series in Logic Programming},
  volume =	 {2},
  pages =	 {729--743},
  address =	 {Melbourne, Australia},
  month =	 may,
  publisher =	 mit
}

@TechReport{okrafka1989empirical,
  author =	 {B. W. O'Krafka},
  title =	 {An Empirical Study of Three Hardware Cached Consistency
		 Schemes for Large Shared Memory Multiprocessors},
  institution =	 ucb,
  year =	 {1989},
  number =	 {UCB/ERL M89/62},
  month =	 may,
  annote =	 {One of Newton's students}
}

@Article{oleary1997synchronous,
  author =	 {John O'Leary and Geoffrey Brown},
  title =	 {Synchronous Emulation of Asynchronous Circuits},
  journal =	 transcad,
  year =	 1997,
  volume =	 16,
  number =	 2,
  pages =	 {205--209},
  month =	 feb,
  annote =	 {Cited by peeters2001synchronous.
		 
		 Nice, simple little paper. Shows how you can express each
		 Tangram handshaking component as a little bit of
		 combinational logic and then assemble them to make it behave
		 like the asynchronous version.
		 
		 Their main trick: the generated circuit probably has
		 combinational cycles, so they suggest a simple
		 post-processing step (not described in detail) for inserting
		 delays on loops to make it acyclic.
		 
		 The nice result is that it works no matter what this
		 post-processing step does because the circuit is
		 delay-insensitive.
		 
		 Another point: transitions are modeled as pulses.}
}

@InProceedings{oliveira1996limits,
  author =	 {Arlindo L. Oliveira and Stephen Edwards},
  title =	 {Limits of Exact Algorithms for Inference of Minimum Size
		 Finite State Machines},
  booktitle =	 {Proceedings of the Seventh Annual Workshop on Algorithmic
		 Learning Theory (ALT)},
  year =	 {1996},
  series =	 lncs,
  volume =	 {1160},
  pages =	 {59--66},
  address =	 {Sydney, Australia},
  month =	 oct,
  publisher =	 {Springer-Verlag},
  annote =	 {Sponsored by the Japanese Society for Artificial
		 Intelligence and the Departments of Artificial Intelligence
		 and Information Science, University of New South Wales.},
  selectivity =	 {16 long + 8 short/41 = 59\%},
  url =		 {http://www.cse.unsw.edu.au/~alt96},
  bdsk-url-1 =	 {http://www.cse.unsw.edu.au/~alt96}
}

@Book{olsen1994systems,
  author =	 {Anders Olsen and Ove F{\ae}rgemand and Birger
		 M{\o}ller-Pedersen and Rick Reed and J. R. W. Smith},
  title =	 {Systems Engineering Using {SDL-92}},
  publisher =	 {North-Holland},
  year =	 {1994},
  annote =	 {Another SDL book. Review on Amazon by one of the coauthors
		 (Reed) thought SED:ellsberger:97a was not as good as this.}
}

@Article{olsson1991sequential,
  author =	 {Ronald A. Olsson and Richard H. Crawford and W. Wilson Ho
		 and Christopher E. Wee},
  title =	 {Sequential Debugging at a High Level of Abstraction},
  journal =	 {{IEEE} Software},
  year =	 {1991},
  volume =	 {8},
  number =	 {3},
  pages =	 {27--36},
  month =	 may
}

@InProceedings{olszewski2009kendo,
  author =	 {Marek Olszewski and Jason Ansel and Saman Amarasinghe},
  title =	 {Kendo: efficient deterministic multithreading in software},
  booktitle =	 asplos,
  year =	 2009,
  pages =	 {97--108},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  isbn =	 {978-1-60558-406-5},
  location =	 {Washington, DC, USA},
  doi =		 {http://doi.acm.org/10.1145/1508244.1508256}
}

@Article{omalley1992dynamic,
  author =	 {Sean O'Malley and Larry L. Peterson},
  title =	 {{Dynamic Network Architecture}},
  journal =	 {ACM Transactions on Computer Systems},
  year =	 1992,
  volume =	 10,
  number =	 2,
  pages =	 {110--143},
  annote =	 {One more in the x-kernel series of papers. Details on how
		 protocol graphs are used to implement stuff in x-kernel}
}

@InProceedings{omohundro1973flowware,
  author =	 {Wayne E. Omohundro and James H. Tracey},
  title =	 {Flowware---a flow charting procedure to describe digital
		 networks},
  booktitle =	 {Proceedings of the First International Conference on
		 Computer Architecture (ISCA)},
  year =	 1973,
  pages =	 {91--97},
  address =	 {Gainesville, Florida},
  month =	 dec,
  annote =	 {Early. Nice early bibliography of design languages. Has 21
		 references dating back to 1962.}
}

@InProceedings{onils1999operating,
  author =	 {Mattias O'Nils and Axel Jantsch},
  title =	 {Operating system sensitive device driver synthesis from
		 implementation independent protocol specification},
  booktitle =	 date,
  year =	 1999,
  pages =	 {FIXME},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Chris Conway pointed me to this}
}

@Manual{openmp2002openmp,
  title =	 {{OpenMP} {C} and {C++} Application Program Interface},
  organization = {OpenMP Architecture Review Board},
  address =	 {www.openmp.org},
  month =	 mar,
  year =	 2002,
  note =	 {Version 2.0},
  annote =	 {The specification of OpenMP, cited, e.g., by
		 tian2005practical},
  url =		 {http://www.openmp.org/mp-documents/cspec20.pdf},
  bdsk-url-1 =	 {http://www.openmp.org/mp-documents/cspec20.pdf}
}

@Book{oppenheim1989discrete-time,
  author =	 {Alan V. Oppenheim and Ronald W. Schafer},
  title =	 {Discrete-Time Signal Processing},
  publisher =	 ph,
  year =	 1989,
  address =	 ph_a,
  annote =	 {Used at Caltech}
}

@Book{oppenheim1989discrete-time*1,
  author =	 {Alan V. Oppenheim and Ronald W. Schafer},
  title =	 {Discrete-Time Signal Processing},
  publisher =	 ph,
  year =	 1989,
  address =	 ph_a,
  edition =	 {Second},
  annote =	 {Recommended by Brian Evans}
}

@Book{oppenheim1996signals,
  author =	 {Alan V. Oppenheim and Alan S. Willsky and S. Hamid},
  title =	 {Signals and Systems},
  publisher =	 ph,
  year =	 1996,
  edition =	 {Second},
  annote =	 {Standard, introductory text.}
}

@InProceedings{ottenstein1984program,
  author =	 {Karl J. Ottenstein and Linda M. Ottenstein},
  title =	 {The Program Dependence Graph in a Software Development
		 Environment},
  booktitle =	 {Proceedings of the first {ACM} {SIGSOFT/SIGPLAN} Software
		 Engineering Symposium on Practical Software Development
		 Environments, Pittsburgh, {PA}, {USA}, 23--25 April 1984},
  year =	 {1984},
  series =	 {SIGPLAN Notices, 19(5):177--184},
  volume =	 {19(5)},
  pages =	 {177--184},
  month =	 may,
  annote =	 {Describes a pair of graphs, control and data dependencies,
		 that make slicing a simple graph walk.
		 
		 Mentions the concept of region nodes -- groups of statements
		 that will be all be executed if one is.
		 
		 Not very important. References an earlier (1983) IBM tech.
		 report and doesn't really talk about the structure of a PDG
		 anyway. More concerned with applications, and rather vague
		 about them anyway. },
  keywords =	 {program dependence graph}
}

@Book{otter1988programmable,
  author =	 {Job {Den Otter}},
  title =	 {Programmable Logic Controllers: Operation, Interfacing, and
		 Programming},
  publisher =	 ph,
  year =	 1988,
  annote =	 {Found during a random search on PLCs. A textbook that
		 focuses on the Gould/Modicon controller models 484, 584, and
		 884.
		 
		 Chapter 3 starts with some history:
		 
		 First programmable logic controller, the 084, developed in
		 1968 by Bedford Associates (later Modicon and currently
		 owned by Schneider Electric) for General Motors. Designed
		 for manufacturing automobiles. Dick Morley is considered the
		 "father of programmable logic controller."
		 http://www.barn.org/
		 
		 Dick says they developed it on New Year's day during a
		 hangover:
		 
		 http://www.automationmag.com/index.php?option=com_content&task=view&id=155&Itemid=4
		 }
}

@Book{ousterhout1994tcl,
  author =	 {John K. Ousterhout},
  title =	 {Tcl and the Tk Toolkit},
  publisher =	 aw,
  year =	 {1994},
  address =	 aw_a
}

@InProceedings{page1991compiling,
  author =	 {Ian Page and Wayne Luk},
  title =	 {Compiling {Occam} into field-programmable gate arrays},
  booktitle =	 {{FPGAs}, Oxford Workshop on Field Programmable Logic and
		 Application},
  year =	 1991,
  pages =	 {271--283},
  publisher =	 {Abingdon EE\&CS Books},
  annote =	 {Cited by peeters2001synchronous.}
}

@Book{palnitkar1996verilog,
  author =	 {Samir Palnitkar},
  title =	 {Verilog {HDL}: A Guide to Digital Design and Synthesis},
  publisher =	 ph,
  year =	 1996,
  address =	 ph_a,
  annote =	 {Found in office in Stanford. Lots more than Thomas &
		 Moorby.}
}

@Book{palnitkar2003design,
  author =	 {Samir Palnitkar},
  title =	 {Design Verification with e},
  publisher =	 ph,
  year =	 2003,
  address =	 ph_a,
  annote =	 {Found on Amazon; haven't read it.}
}

@InProceedings{pan1989supporting,
  author =	 {Douglas Z. Pan and Mark A. Linton},
  title =	 {Supporting Reverse Execution of Parallel Programs},
  booktitle =	 {Proceedings of the ACM SIGPLAN and SIGOPS Workshop on
		 Parallel and Distributed Debugging, Madison, WI, USA, 5--6
		 May 1988},
  year =	 {1989},
  series =	 {SIGPLAN Notices, 24(1):124--129},
  month =	 jan
}

@Article{pan1998optimal,
  author =	 {Peichen Pan and C. L. Liu},
  title =	 {Optimal clock period {FPGA} technology mapping for
		 sequential circuits},
  journal =	 todaes,
  year =	 1998,
  volume =	 3,
  number =	 3,
  pages =	 {437--462},
  month =	 jul,
  annote =	 {From Cristian. Retiming.}
}

@InProceedings{pan1999performance,
  author =	 {Peichen Pan},
  title =	 {Performance-Driven Integration of Retiming and
		 Resynthesis},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {243--246},
  address =	 dac99a,
  month =	 jun,
  annote =	 {Retiming. From Cristian.}
}

@InProceedings{panangaden1988computations,
  author =	 {Prakash Panangaden and Eugene W. Stark},
  title =	 {Computations, Residuals, and the Power of Indeterminacy},
  booktitle =	 {Proceedings of the 1988 International Conference on
		 Automata, Languages, and Programming},
  year =	 1988,
  series =	 lncs,
  volume =	 317,
  pages =	 {439--454},
  month =	 jul,
  publisher =	 sv,
  annote =	 {Worrying about whether certain type of merging can be done
		 in a deterministic setting such as Kahn's networks. Of
		 course not.}
}

@InProceedings{panangaden1990stability,
  author =	 {Prakash Panangaden and Vasant Shanbhogue and Eugene W.
		 Stark},
  title =	 {Stability and Sequentiality in Dataflow Networks},
  booktitle =	 {Proceedings of the 1990 International Conference on
		 Automata, Languages, and Programming},
  year =	 1990,
  series =	 lncs,
  volume =	 443,
  pages =	 {308--321},
  address =	 {Warwick, U.K.},
  month =	 jul,
  publisher =	 sv,
  annote =	 {From Stark's webpage,
		 http://bsd7.starkhome.cs.sunysb.edu/~stark/REPORTS/INDEX.html
		 
		 Concerned about characterizing the stable (Berry) and
		 sequential functions (Kahn, Plotkin) through automata. }
}

@Misc{panchul2001system,
  author =	 {Yuri Panchul and Donald A. Soderman and Denis R. Coleman},
  title =	 {System for converting hardware designs in high-level
		 programming language to hardware implementations},
  howpublished = {US Patent 6,226,776},
  year =	 2001,
  month =	 may,
  annote =	 {Describes the technology in the C Level Design C2Verilog
		 compiler. Assigned to Synetry Corporation,}
}

@InProceedings{panda1997efficient,
  author =	 {Preeti Ranjan Panda and Nikil D. Dutt and Alexandru
		 Nicolau},
  title =	 {Efficient Utilization of Scratch-Pad Memory in Embedded
		 Processor Applications},
  booktitle =	 {Proceedings of the European Design and Test Conference},
  year =	 1997,
  pages =	 {7--11},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Scratchpad memory}
}

@Article{pande2005performance,
  author =	 {P. P. Pande and C. Grecu and M. Jones and A. Ivanov and R.
		 Saleh},
  title =	 {Performance Evaluation and Design Trade-Offs for
		 Network-on-Chip Interconnect Architectures},
  journal =	 transcomp,
  year =	 {2005},
  volume =	 {54},
  number =	 {8},
  pages =	 {1025--1040},
  oldkey =	 {pande05},
  sedtransform = {s/pande05/pande2005performance/}
}

@Article{parhi1989pipeline1,
  author =	 {Keshab K. Parhi and David G. Messerschmitt},
  title =	 {Pipeline Interleaving and Parallelism in Recursive Digital
		 Filters---Part {I}: Pipelining Using Scattered Look-Ahead
		 and Decomposition},
  journal =	 transassp,
  year =	 1989,
  volume =	 37,
  number =	 7,
  pages =	 {1099--1117},
  month =	 jul,
  annote =	 {A follow-on to lee1987pipeline1? Addresses the problem of
		 recursive filters, i.e., with feedback, and how you
		 interleave these. Tricks for decomposition, which probably
		 look something like loop pipelining. Much more
		 signal-processing-centric.}
}

@Article{parhi1989pipeline2,
  author =	 {Keshab K. Parhi and David G. Messerschmitt},
  title =	 {Pipeline interleaving and parallelism in recursive digital
		 filters---Part {II}: Pipelined incremental block filtering},
  journal =	 transassp,
  year =	 1989,
  volume =	 37,
  number =	 7,
  pages =	 {1118--1134},
  month =	 jul,
  annote =	 {A follow-on to lee1987pipeline1?}
}

@Book{parhi1999vlsi,
  author =	 {Keshab K. Parhi},
  title =	 {{VLSI} Digital Signal Processing Systems: Design and
		 Implementation},
  publisher =	 jw,
  year =	 1999,
  address =	 jw_a,
  annote =	 {Recommended by Brian Evans}
}

@InProceedings{park1986sehwa,
  author =	 {Nohbyung Park and Alice Parker},
  title =	 {Sehwa: A Program for Synthesis of Pipelines},
  booktitle =	 dac86,
  year =	 1986,
  pages =	 {454--460},
  address =	 dac86a,
  month =	 jun,
  annote =	 {Cited by attig2006systematic. Looks like early high-level
		 synthesis work: how to consider resource-sharing. Not
		 terribly relevant, really. De Micheli probably subsumes
		 it.}
}

@Article{park1991experiments,
  author =	 {Chang Yun Park and Alan C. Shaw},
  title =	 {Experiments with a Program Timing Tool Based on
		 Source-Level Timing Schema},
  journal =	 {Computer},
  year =	 1991,
  volume =	 24,
  number =	 5,
  pages =	 {48--57},
  annote =	 {WCET paper. Basic static timing analysis.}
}

@PhDThesis{park1992predicting,
  author =	 {Chang Yun Park},
  title =	 {Predicting Deterministic Execution Times of Real-Time
		 Programs},
  school =	 {University of Washington},
  year =	 1992,
  address =	 {Seattle},
  month =	 aug,
  annote =	 {Cited by ye1995worst. More WCET stuff.}
}

@InProceedings{parke1979introduction,
  author =	 {Federic I. Parke},
  title =	 {An Introduction to the {N.mPc} design environment},
  booktitle =	 dac79,
  year =	 1979,
  pages =	 {513--519},
  address =	 dac79a,
  month =	 jun,
  annote =	 {Describes the ISP' design language, cited in one of the
		 sections of chu1992three.}
}

@PhDThesis{parks1995bounded,
  author =	 {Thomas M. Parks},
  title =	 {Bounded Scheduling of Process Networks},
  school =	 ucb,
  year =	 {1995},
  note =	 {Available as UCB/ERL M95/105},
  url =		 {http://ptolemy.eecs.berkeley.edu/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/}
}

@InProceedings{parks1995comparison,
  author =	 {Thomas M. Parks and Jos\'e Luis Pino and Edward A. Lee},
  title =	 {A Comparison of Synchronous and Cyclo-Static Dataflow},
  booktitle =	 {Proceedings of the Asilomar Conference on Signals, Systems,
		 and Computers},
  year =	 1995,
  address =	 {Pacific Grove, California},
  month =	 oct,
  annote =	 {Rather a strange paper. Talks about how you can turn CSDF
		 into SDF.},
  url =		 {http://ptolemy.eecs.berkeley.edu/publications/papers/95/csdfVSsdf/}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/publications/papers/95/csdfVSsdf/}
		 
}

@Article{partridge1998fifty,
  author =	 {Craig Partridge and Philip P. Carvey and Ed Burgess and
		 Isidro Castineyra and Tom Clarke and Lise Graham and Michael
		 Hathaway and Phil Herman and Allen King and Steve Kohalmi
		 and Tracy Ma and John Mcallen and Trevor Mendez and Walter
		 C. Milliken and Ronald Pettyjohn and John Rokosz and Joshua
		 Seeger and Michael Sollins and Steve Storch and Benjamin
		 Tober and Gregory D. Troxel and David Waitzman and Scott
		 Winterble},
  title =	 {A {50-Gb/s} {IP} Router},
  journal =	 transnet,
  year =	 1998,
  volume =	 6,
  number =	 3,
  pages =	 {237--248},
  month =	 jun,
  annote =	 {Learned of it from a Utah site:
		 http://www.cs.utah.edu/~cs6935/
		 
		 Good summary of a router. They're using Alpha chips to make
		 forwarding decisions. There's a good discussion of what the
		 (short!) inner loop on these chips are like. They're using a
		 switched fabric rather than a shared bus. }
}

@InProceedings{pasko2002techniques,
  author =	 {Robert Pa\v{s}ko and Serge Vernalde and Patrick Schaumont},
  title =	 {Techniques to Evolve a {C++} Based System Design Language},
  booktitle =	 date,
  year =	 2002,
  pages =	 {302--309},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {OCAPI-related. Something like SystemC. Process-level
		 parallelism. This paper describes adding a mechanism for
		 accessing RAM blocks. Does not discuss hardware synthesis
		 much.}
}

@InProceedings{passerone1998automatic,
  author =	 {Roberto Passerone and James A. Rowson and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Automatic Synthesis of Interfaces between Incompatible
		 Protocols},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {8--13},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Proposes a regular-expression-based language for describing
		 communication protocols in hardware and a mechanism for
		 building a finite-state machine that translates from one to
		 the other, speaking the right language and delaying data
		 accordingly. Interesting FSM-trimming algorithm: when an
		 illegal state is reached, backtrack to where you can correct
		 it.}
}

@InProceedings{pastor1998structural,
  author =	 {Enric Pastor and Jordi Cortadella},
  title =	 {Structural Methods Applied to the Symbolic Analysis of
		 Petri Nets},
  booktitle =	 {Proceedings of the International Workshop on Logic
		 Synthesis},
  year =	 {1998},
  pages =	 {276--283},
  address =	 {Tahoe City, California},
  month =	 jun,
  annote =	 {Uses the idea of P-invariant regions of a Petri Net (sets
		 of places where the weighted sum of tokens is constant) to
		 reencode the states, reducing the number of state
		 variables.}
}

@TechReport{patel2008timing,
  author =	 {Hiren D. Patel and Ben Lickly Ben and Bas Burgers and
		 Edward A. Lee},
  title =	 {A Timing Requirements-Aware Scratchpad Memory Allocation
		 Scheme for a Precision Timed Architecture},
  institution =	 {EECS Department, University of California, Berkeley},
  year =	 {2008},
  number =	 {UCB/EECS-2008-115},
  month =	 sep,
  url =		 {http://www.eecs.berkeley.edu/Pubs/TechRpts/2008/EECS-2008-115.html}
		 ,
  bdsk-url-1 =	 {http://www.eecs.berkeley.edu/Pubs/TechRpts/2008/EECS-2008-115.html}
		 
}

@Misc{patent4136359,
  author =	 {Stephen G. Wozniak},
  title =	 {Microcomputer for use with video display},
  howpublished = {US Patent 4,136,359},
  year =	 1979,
  month =	 jan,
  annote =	 {The Apple II design, especially the clock generator.}
}

@TechReport{patra1993building,
  author =	 {Priyadarsan Patra and Donald S. Fussell},
  title =	 {Building-Blocks for Designing {DI} Circuits},
  institution =	 {University of Texas, Austin},
  year =	 1993,
  number =	 {CS-TR-93-23},
  annote =	 {Random search of "handshake circuits" gave this.}
}

@InProceedings{patra1994efficient,
  author =	 {Priyadarsan Patra and Donald Fussel},
  title =	 {Efficient Building Blocks for Delay Insensitive Circuits},
  booktitle =	 async,
  year =	 {1994},
  pages =	 {196--205},
  address =	 {Salt Lake City, Utah},
  month =	 nov,
  annote =	 {Conference version of patra1993efficient},
  url =		 {citeseer.ist.psu.edu/patra94efficient.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/patra94efficient.html}
}

@Article{patterson1980case,
  author =	 {David A. Patterson and David R. Ditzel},
  title =	 {The Case for the Reduced Instruction Set Computer},
  journal =	 {ACM SIGARCH Computer Architecture News},
  year =	 1980,
  volume =	 8,
  number =	 6,
  pages =	 {25--33},
  month =	 oct,
  annote =	 {According to Luca, the seminal paper on the RISC
		 philosophy.}
}

@Book{patterson1997computer,
  author =	 {David A. Patterson and John L. Hennessy},
  title =	 {Computer Organization and Design: The Hardware/Software
		 Interface},
  publisher =	 mk,
  year =	 1997,
  address =	 mk_a,
  edition =	 {Second},
  annote =	 {Companion to SED:hennessy:96a}
}

@InProceedings{paul2003programmers,
  author =	 {JoAnn M. Paul},
  title =	 {Programmers' views of {SoCs}},
  booktitle =	 codesisss,
  year =	 2003,
  pages =	 {156--181},
  address =	 {Newport Beach, California},
  month =	 oct,
  annote =	 {Honorable mention best paper.}
}

@InProceedings{paulin2001network,
  author =	 {Pierre G. Paulin and Faraydon Karim and Paul Bromley},
  title =	 {Network Processors: A Perspective on Market Requirements,
		 Processor Architectures, and Embedded {S/W} Tools},
  booktitle =	 date,
  year =	 2001,
  pages =	 {420--427},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {I attented this presentation. The paper has good references
		 on Network Processors and compilers for them.
		 
		 These guys are from STMicroelectronics, and they're mostly
		 bragging about their development environment (GUI with
		 displays of processor registers, etc.).
		 
		 List of processors: Intel's IXP 1200, MMC's AnyFlow 5000 and
		 nP3400, and IBM's Rainier.}
}

@Article{payer1991partitioning,
  author =	 {Michael Payer},
  title =	 {Partitioning and Ordering of {CMOS} Circuits for Switch
		 Level Analysis},
  journal =	 {Integration: The VLSI Journal},
  year =	 {1991},
  volume =	 {10},
  number =	 {2},
  pages =	 {113--141},
  month =	 jan,
  annote =	 {Tiziano's suggestion}
}

@Book{peatman2003embedded,
  author =	 {John B. Peatman},
  title =	 {Embedded Design with the {PIC18F452} Microcontroller},
  publisher =	 ph,
  year =	 2003,
  annote =	 {Only book to include a printed-circuit board.}
}

@Book{peckol2008embedded,
  author =	 {James K. Peckol},
  title =	 {Embedded Systems: A Contemporary Design Tool},
  publisher =	 jw,
  year =	 2008,
  annote =	 {Nice textbook. Covers digital logic, software design, all
		 the way up to RTOSes and programmable logic.}
}

@Article{pederson1984historical,
  author =	 {Donald O. Pederson},
  title =	 {A Historical Review of Circuit Simulation},
  journal =	 {IEEE Transactions on Circuits and Systems},
  year =	 {1984},
  volume =	 {CAS-31},
  number =	 {1},
  pages =	 {103--111},
  month =	 jan,
  annote =	 {Excellent review of analog simulators, including SPICE and
		 ASTAP}
}

@Book{pedram2002power,
  author =	 {M. Pedram and J. Rabaey},
  title =	 {Power Aware Design Methodologies},
  publisher =	 {Springer-Verlag},
  year =	 2002,
  oldkey =	 {pedramrabaey},
  sedtransform = {s/pedramrabaey/pedram2002power/}
}

@PhDThesis{peeters1996single-rail,
  author =	 {Ad M. G. Peeters},
  title =	 {Single-Rail Handshake Circuits},
  school =	 {Technical University of Eindhoven},
  year =	 1996,
  address =	 {The Netherlands},
  month =	 jun,
  annote =	 {Found at random. Nice write-up on a lot of the Tangram
		 stuff done at Philips. Constructs an error correction
		 circuit as a big example at the end.}
}

@InProceedings{peeters2001synchronous,
  author =	 {Ad Peeters and Kees {van Berkel}},
  title =	 {Synchronous Handshake Circuits},
  booktitle =	 async,
  year =	 2001,
  pages =	 {86--95},
  address =	 {Salt Lake City, Utah},
  month =	 mar,
  annote =	 {Found from random search.
		 
		 Very specifically a synchronous back-end for Tangram.
		 Differs from oleary1997synchronous in that it doesn't
		 explicitly model transitions as pulses but speaks of
		 "sample-based" protocols. "This paper proposes a protocol in
		 which the state of the handshake wires is observed at the
		 rising edges of the clock, and from these states the
		 handshakes are (re)constructed." Essentially an argument for
		 using synchronous design (i.e., you don't have to worry
		 about glitches). It's funny: this is for the async
		 community, so they spend their time talking about glitches,
		 etc.
		 
		 They simply sample on the rising edge of the clock and use
		 request and acknowledge signals. Three states: idle, pending
		 (req & !ack), and handshake (req & ack). So they use a
		 "quick-return-to-zero" protocol.
		 
		 Lists little templates for various handshake components (the
		 repeater for infinite loop, the mixer for arbitration, the
		 sequencer (which uses a flip-flop), and a register
		 (flip-flop or latch). They also show a clock-gating
		 implementation style.
		 
		 Again, very much like Berry's Esterel on hardware paper.
		 Just a bunch of templates that together seem to work.
		 oleary1997synchronous seems a little more clever in that it
		 generates a cyclic circuit and then inserts flip-flops as
		 necessary.}
}

@InProceedings{pellauer2008quick-performance,
  author =	 {Michael Pellauer and Murali Vijayaraghavan and Michael
		 Adler and Joel Emer},
  title =	 {Quick Performance Models Quickly: Timing-directed
		 Simulation on {FPGAs}},
  booktitle =	 {Proceedings of the IEEE International Symposium on
		 Performance Analysis of Systems and Software},
  year =	 2008,
  pages =	 {1--10},
  address =	 {Austin, Texas},
  month =	 apr
}

@Book{pender2003uml,
  author =	 {Tom Pender},
  title =	 {{UML} Bible},
  publisher =	 jw,
  year =	 2003,
  annote =	 {Quotes my Kluwer book (refers to my comment on universal
		 langauges) on page 641. Found this through the Amazon
		 website.}
}

@TechReport{peng98asurvey,
  author =	 {Hong Peng and Sofi{\`e}ne Tahar},
  title =	 {A Survey on Compositional Verification},
  year =	 {1998}
}

@InProceedings{penry2003optimizations,
  author =	 {David A. Penry and David I. August},
  title =	 {Optimizations for a Simulator Construction System
		 Supporting Reusable Components},
  booktitle =	 dac03,
  year =	 2003,
  pages =	 {926--931},
  address =	 dac03a,
  month =	 jun,
  annote =	 {Part of the Liberty simulation system. Cites my thesis.}
}

@InProceedings{pering1998simulation,
  author =	 {T. Pering and T. Burd and R. Brodersen},
  title =	 {The simulation and evaluation of dynamic voltage scaling
		 algorithms},
  booktitle =	 islped,
  year =	 {1998},
  pages =	 {76--81},
  address =	 {New York, NY, USA},
  publisher =	 {ACM Press},
  location =	 {Monterey, California, United States},
  oldkey =	 {pering98},
  sedtransform = {s/pering98/pering1998simulation/}
}

@Book{perry1998vhdl,
  author =	 {Douglas L. Perry},
  title =	 {{VHDL}},
  publisher =	 mgh,
  year =	 1998,
  address =	 mgh_a,
  edition =	 {Third},
  annote =	 {Randy Harr's favorite VHDL book.}
}

@Book{peters1982mountaineering,
  editor =	 {E. Peters},
  title =	 {Mountaineering: The Freedom of the Hills},
  publisher =	 {The Mountaineers},
  year =	 {1982},
  address =	 {Seattle, Washington},
  edition =	 {Fourth}
}

@Book{peters1992getting,
  author =	 {Robert L. Peters},
  title =	 {Getting What You Came For: The Smart Student's Guide to
		 Earning a Master's or a Ph.{D}},
  publisher =	 {Noonday Press},
  year =	 {1992},
  annote =	 {Gift from my mother.},
  isbn =	 {0-374-52361-4}
}

@Book{peterson1981petri,
  author =	 {James L. Peterson},
  title =	 {Petri Net Theory and the Modeling of Systems},
  publisher =	 ph,
  year =	 1981,
  address =	 ph_a,
  annote =	 {Reference from Bill Lin's paper.}
}

@Article{peterson1999high-performance,
  author =	 {Gregory D. Peterson and John C. Willis},
  title =	 {High-Performance Hardware Description Language Simulation:
		 Modeling Issues and Recommended Practices},
  journal =	 {Transactions of the Society for Computer Simulation
		 International},
  year =	 1997,
  volume =	 16,
  number =	 1,
  pages =	 {6--15},
  month =	 mar,
  abstract =	 { Parallel simulation of hardware description languages
		 (HDL) is no longer solely a subject of largely academic
		 interest; it is now a significant opportunity for mainstream
		 hardware and system designers. System requirements and
		 system fabrication densities often exceed uni-processor
		 simulation capability, while shared-memory multiprocessors,
		 high-speed networks and parallel processors (platforms) are
		 widely accessible. However, recognition and practice of
		 suitable HDL modeling practices are critical to efficiently
		 satisfying performance requirements using parallel tool
		 capabilities. This paper develops a set of recommended
		 modeling practices intended to boost parallel HDL simulation
		 effectiveness. These modeling practices are part of an
		 effort by the IEEE Design Automation Standards Committee
		 (DASC) group on High Performance Modeling for Simulation
		 (HPMSIM) to develop a set of recommended practices for
		 discrete-event and continuous-domain modeling in VHDL,
		 VHDL-AMS and Verilog. Since the optimal modeling style is
		 tightly related to the parallel machine architecture
		 employed and the simulation algorithms used, both this paper
		 and the DASC effort key specific modeling recommendations to
		 processor architecture and simulation algorithm classes.
		 Parallel simulators are a technical and commercial reality,
		 thanks in part to the intrinsically parallel nature of HDLs,
		 especially VHDL and VHDL-AMS. Simulation efficiency achieved
		 when using such simulators is heavily dependent on the
		 modeling style used to write the HDL model source. From this
		 paper, readers will gain an understanding of the style
		 designers can use to effectively exploit a range of parallel
		 simulators. Our primary focus is on modeling guidelines
		 boosting performance. The utilization efficiency of
		 processors, memory and network resources is a critical but
		 somewhat secondary concern motivating these guidelines (in
		 the absence of performance gains, efficiency is
		 immaterial).},
  annote =	 {Seems to focus mostly on best practices on how to model
		 things for parallel discrete event simulation.}
}

@PhDThesis{petri1962kommunikation,
  author =	 {Carl Adam Petri},
  title =	 {Kommunikation mit Automaten},
  school =	 {Institutes f\"ur Instrumentelle Mathematik},
  year =	 1962,
  address =	 {Bonn, Germany},
  note =	 {In German},
  annote =	 {The seminal work on Petri Nets.}
}

@InProceedings{petrini2007multicore,
  author =	 {Fabrizio Petrini and Gordon Fossum and Juan Fern\'andez and
		 Ana Lucia Varbanescu and Mike Kistler and Michael Perrone},
  title =	 {Multicore Surprises: Lessons Learned from Optimizing
		 {Sweep3D} on the {Cell} {Broadband} {Engine}},
  booktitle =	 ipdps,
  year =	 2007,
  pages =	 {1--10},
  address =	 {Long Beach, California, USA},
  month =	 mar,
  annote =	 {From Rebecca. Thread-level parallelism, data-streaming
		 parallelism, vector parallelism from 128-bit SIMD
		 instructions, and pipeline parallelism.
		 
		 Points out the usual trend toward multiple cores instead of
		 monolithic processors. Notes the Raw multiprocessor and
		 TRIPS.
		 
		 Describes the architecture with an eye toward floating-point
		 processing performance.
		 
		 Sweep3D "solves a three-dimensional neutron tranport problem
		 from a scattering source."
		 
		 Points out one of the main challenges in the Cell is dealing
		 with all the different forms of parallelism (Process-level,
		 thread-level, data-streaming, and vector.)
		 
		 Interesting: compares with a theoretical lower bound (due to
		 the number of FLOPS required).
		 
		 }
}

@InProceedings{petters1999making,
  author =	 {Stefan M. Petters and Georg F\"arber},
  title =	 {Making worst case execution time analysis for hard
		 real-time tasks on state of the art processors feasible},
  booktitle =	 {Proceedings of the Sixth International Conference on
		 Real-Time Computing Systems and Applications (RTCSA)},
  year =	 1999,
  pages =	 {442--449},
  address =	 {Hong Kong},
  month =	 dec,
  annote =	 {Something like "simplify the generated code so that you can
		 measure it better rather than model it in detail."}
}

@InProceedings{pham2005design,
  author =	 {D. Pham and S. Asano and M. Bolliger and M. N. Day and H.
		 P. Hofstee and C. Johns and J. Kahle and A. Kameyama and J.
		 Keaty and Y. Masubuchi and M. Riley and D. Shippy and D.
		 Stasiak and M. Suzuoki and M. Wang and J. Warnock and S.
		 Weitzel and D. Wendel and T. Yamazaki and K. Yazawa},
  title =	 {The Design and Implementation of a First-Generation {CELL}
		 Processor},
  booktitle =	 isscc,
  year =	 2005,
  volume =	 1,
  pages =	 {184--185, 582},
  address =	 {San Francisco, California},
  month =	 feb,
  annote =	 {Very early -- just a couple of pages and some graphs and
		 photos.}
}

@Book{phillips1999feedback,
  author =	 {Charles L. Phillips and Royce D. Harbor},
  title =	 {Feedback Control Systems},
  publisher =	 ph,
  year =	 1999,
  edition =	 {Fourth},
  annote =	 {Used for EEME E3601, Classical Control Systems, which is
		 not an undergraduate requirement. The Signals & Systems
		 course is.}
}

@InProceedings{pinello2004fault-tolerant,
  author =	 {C. Pinello and L. P. Carloni and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Fault-Tolerant Deployment of Embedded Software for
		 Cost-Sensitive Real-Time Feedback-Control Applications},
  booktitle =	 date,
  year =	 2004,
  pages =	 {1164-1169},
  address =	 {Paris, France},
  month =	 feb,
  publisher =	 {IEEE},
  affiliation =	 {UC Berkeley},
  entered =	 {Luca Carloni,11/1/2003},
  keywords =	 {fault-tolerant design, embedded software},
  oldkey =	 {pinello_date04},
  sedtransform = {s/pinello_date04/pinello2004fault-tolerant/}
}

@Article{pingali1997optimal,
  author =	 {Keshav Pingali and Gianfranco Bilardi},
  title =	 {Optimal Control Dependence Computation and the {Roman}
		 Chariots Problem},
  journal =	 toplas,
  year =	 {1997},
  volume =	 {19},
  number =	 {3},
  pages =	 {462--491},
  month =	 may,
  annote =	 {Reference from the Cornell compilers page (Johnson's
		 thesis). I got my copy from the ACM digital library. Lengthy
		 algorithm, but O(E), for computing control dependence using
		 the postdominance relation (and algorithm) of Cytron et al.
		 90 and equivalence, etc. Does not use Johnson's equivalence
		 characterization, instead starts from a postdominator
		 tree.}
}

@Article{pinkston2005trends,
  author =	 {T. M. Pinkston and J. Shin},
  title =	 {Trends Toward On-Chip Networked Microsystems},
  journal =	 hpcn,
  year =	 2005,
  volume =	 3,
  number =	 1,
  pages =	 {3-18}
}

@InProceedings{pino1994mapping,
  author =	 {Jos\'e Luis Pino and Thomas M. Parks and Edward A. Lee},
  title =	 {Mapping Multiple Independent Synchronous Dataflow Graphs
		 onto Heterogeneous Multiprocessors},
  booktitle =	 {Conference Record of the Twenty-Eighth Asilomar Conference
		 on Signals, Systems \& Computers},
  year =	 {1994},
  address =	 {Pacific Grove, CA},
  month =	 oct,
  annote =	 {Describes the peek/poke actors and their semantics.},
  url =		 {http://ptolemy.eecs.berkeley.edu},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu}
}

@TechReport{pino1995hierarchical,
  author =	 {Shuvra S. Bhattacharyya Jos\'e Luis Pino and Edward A. Lee},
  title =	 {A Hierarchical Multiprocessor Scheduing Framework for
		 Synchronous Dataflow Graphs},
  institution =	 ucb,
  year =	 {1995},
  number =	 {UCB/ERL M95/36},
  month =	 may
}

@InProceedings{pino1996interface,
  author =	 {Jos\'e Luis Pino and Michael C. Williamson and Edward A.
		 Lee},
  title =	 {Interface Synthesis in Heterogeneous System-Level {DSP}
		 Design Tools},
  booktitle =	 icassp,
  year =	 {1996},
  address =	 {Atlanta, GA},
  month =	 may,
  url =		 {http://ptolemy.eecs.berkeley.edu/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/}
}

@InProceedings{pinto2002constraint-driven,
  author =	 {A. Pinto and L. P. Carloni and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Constraint-Driven Communication Synthesis},
  booktitle =	 dac02,
  year =	 2002,
  pages =	 {783-788},
  address =	 dac02a,
  month =	 jun,
  publisher =	 {IEEE},
  affiliation =	 {UC Berkeley},
  entered =	 {Luca Carloni,3/20/2002},
  keywords =	 {communication-based design, logic synthesis},
  oldkey =	 {pinto_dac02},
  sedtransform = {s/pinto_dac02/pinto2002constraint-driven/}
}

@InProceedings{pinto2003efficient,
  author =	 {A. Pinto and L. P. Carloni and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Efficient Synthesis of Networks on Chip},
  booktitle =	 iccd,
  year =	 2003,
  pages =	 {146-151},
  address =	 {San Jose, CA},
  month =	 oct,
  publisher =	 {IEEE},
  affiliation =	 {UC Berkeley},
  entered =	 {Luca Carloni,8/10/2003},
  keywords =	 {communication-based design, logic synthesis},
  oldkey =	 {pinto_iccd03},
  sedtransform = {s/pinto_iccd03/pinto2003efficient/}
}

@InProceedings{pinto2005interchange,
  author =	 {A. Pinto and A. L. Sangiovanni-Vincentelli and L.P. Carloni
		 and R. Passerone},
  title =	 {Interchange Formats for Hybrid Systems: Review and
		 Proposal},
  editor =	 {M. Morari and L. Thiele and F. Rossi},
  booktitle =	 {Proceedings of the The 8th International Workshop on Hybrid
		 Systems : Computation and Control (HSCC 2005)},
  year =	 2005,
  series =	 lncs,
  volume =	 {3414},
  pages =	 {526-541},
  address =	 {Zurich, Switzerland},
  month =	 mar,
  publisher =	 {Springer Verlag},
  affiliation =	 {Columbia, UC Berkeley, Cadence},
  entered =	 {Luca Carloni, 6/11/05},
  keywords =	 {hybrid systems, interchange format},
  oldkey =	 {pinto_hscc05},
  sedtransform = {s/pinto_hscc05/pinto2005interchange/}
}

@InProceedings{pinto2006interchange,
  author =	 {A. Pinto and L.P. Carloni and R. Passerone and A. L.
		 Sangiovanni-Vincentelli},
  title =	 {Interchange Formats for Hybrid Systems: Abstract
		 Semantics},
  editor =	 {J. P. Hespanha and A. Tiwari},
  booktitle =	 {Proceedings of the The 9th International Workshop on Hybrid
		 Systems: Computation and Control (HSCC 2006)},
  year =	 2006,
  series =	 lncs,
  volume =	 {3927},
  pages =	 {491-506},
  address =	 {Santa Barbara, California},
  month =	 mar,
  publisher =	 {Springer Verlag},
  affiliation =	 {Columbia, UC Berkeley, University of Trento},
  entered =	 {Luca Carloni, 2/28/06},
  keywords =	 {hybrid systems, interchange format},
  oldkey =	 {pinto_hscc06},
  sedtransform = {s/pinto_hscc06/pinto2006interchange/}
}

@Article{pitt1993minimum,
  author =	 {L. Pitt and M. K. Warmuth},
  title =	 {The Minimum Consistent {DFA} Problem Cannot be Approximated
		 within any Polynomial},
  journal =	 jacm,
  year =	 {1993},
  volume =	 {40},
  number =	 {1},
  pages =	 {95--142},
  month =	 jan,
  annote =	 {So our minimum-state problem is really difficult!}
}

@InProceedings{pitter2007time,
  author =	 {Christof Pitter and Martin Schoeberl},
  title =	 {Time Predictable {CPU} and {DMA} Shared Memory Access},
  booktitle =	 {International Conference on Field-Programmable Logic and
		 its Applications (FPL 2007)},
  year =	 {2007},
  pages =	 {317 -- 322},
  address =	 {Amsterdam, Netherlands},
  month =	 {August},
  url =		 {http://www.jopdesign.com/doc/jopvga_fpl2007.pdf},
  bdsk-url-1 =	 {http://www.jopdesign.com/doc/jopvga_fpl2007.pdf}
}

@Article{pixley1988incremental,
  author =	 {Carl Pixley},
  title =	 {An incremental garbage collection algorithm for
		 multi-mutator systems},
  journal =	 {Distributed Computing},
  year =	 1988,
  volume =	 3,
  number =	 1,
  pages =	 {41--50},
  month =	 mar,
  annote =	 {Found while looking for example of concurrent algorithms
		 with "proofs" that were later found to be incorrect.}
}

@Book{plauger1992standard,
  author =	 {P. J. Plauger},
  title =	 {The Standard C Library},
  publisher =	 ph,
  year =	 1992,
  address =	 ph_a,
  annote =	 {A complete description and implementation of the standard C
		 library.}
}

@TechReport{plotkin1981structural,
  author =	 {Gordon D. Plotkin},
  title =	 {A Structural Approach to Operational Semantics},
  institution =	 {Aarhus University},
  year =	 1981,
  number =	 {DAIMI FN-19},
  address =	 {\AA{}arhus, Denmark},
  annote =	 {The definitive reference on Structural Operational
		 Semantics (SOS).},
  url =		 {http://www.dcs.ed.ac.uk/home/gdp/},
  bdsk-url-1 =	 {http://www.dcs.ed.ac.uk/home/gdp/}
}

@InProceedings{plummer2006esterel,
  author =	 {Becky Plummer and Mukul Khajanchi and Stephen A. Edwards},
  title =	 {An {Esterel} Virtual Machine for Embedded Systems},
  booktitle =	 slap,
  year =	 2006,
  series =	 entcs,
  pages =	 {1--14},
  address =	 {Vienna, Austria},
  month =	 mar,
  annote =	 {Describes the BAL assembly language. We implemented it for
		 the RCX. Well-received, but they asked about a formal proof
		 of the correctness and wondered for what Esterel programs it
		 made sense.},
  optvolume =	 {FIXME}
}

@InProceedings{pnueli1985transition,
  author =	 {Amir Pnueli},
  title =	 {In transition from global to modular temporal reasoning
		 about programs},
  booktitle =	 {Proceedings of the NATO Advanced Study Institute on Logics
		 and Models of Concurrent Systems},
  year =	 1985,
  pages =	 {123--144},
  address =	 {La Colle-sur-Loup, France},
  publisher =	 sv,
  annote =	 {Part of the Emsoft deadlock paper},
  isbn =	 {0-387-15181-8}
}

@InProceedings{pnueli1991what,
  author =	 {Amir Pnueli and M. Shalev},
  title =	 {What is in a Step: On the Semantics of {Statecharts}},
  booktitle =	 {TACS'91: Theoretical Aspects of Computer Software:
		 International Conference},
  year =	 {1991},
  series =	 lncs,
  volume =	 {526},
  pages =	 {244--264},
  address =	 {Sendai, Japan},
  month =	 sep,
  publisher =	 sv,
  annote =	 {Tries to tie the Statecharts semantics to Berry's synchrony
		 hypothesis. Deviates from Harel et al.'s formal semantics in
		 that it requires global consistency---the paper contains a
		 good example where t1:'a/b and t2:b/a both fire in an
		 instant. Incorrectly states that negations makes fixed
		 points non-monotonic.}
}

@Article{podgurski1990formal,
  author =	 {Andy Podgurski and Lori A. Clarke},
  title =	 {A Formal Model of Program Depencences and Its Implications
		 for Software Testing, Debugging, and Maintenance},
  journal =	 transse,
  year =	 {1990},
  volume =	 {16},
  number =	 {9},
  pages =	 {965--979},
  month =	 sep,
  annote =	 {Very graph-theoretic approach to slicing-type issues.}
}

@InProceedings{pogodalla1999fast,
  author =	 {F. Pogodalla and R. Hersemeule and P. Coulomb},
  title =	 {Fast Prototyping: a System Design Flow for Fast Design,
		 Prototyping and Efficient {IP} Reuse},
  booktitle =	 {Proc. of the 7th Intl. Conf. on Hardware/Software
		 Codesign(CODES'99)},
  year =	 1999,
  pages =	 {69-73},
  address =	 {Rome, Italy},
  month =	 may,
  affiliation =	 {ST Microelectronics},
  entered =	 {Luca Carloni,10/5/99},
  keywords =	 {IP resue, IP assembly},
  oldkey =	 {pogodalla99},
  sedtransform = {s/pogodalla99/pogodalla1999fast/}
}

@InProceedings{poigne1997on,
  author =	 {Axel Poign\'e and Leszek Holenderski},
  title =	 {On the Combination of Synchronous Languages},
  editor =	 {W.-P. de Roever and H. Langmaack and A. Pnueli},
  booktitle =	 {Proceedings of the International Symposium on
		 Compositionality: The Significant Difference (COMPOS)},
  year =	 1997,
  series =	 lncs,
  volume =	 1536,
  pages =	 {490--514},
  address =	 {Malente/Holstein, Germany},
  month =	 sep,
  publisher =	 sv,
  annote =	 {Copied while at Dagstuhl.}
}

@InProceedings{pollack1999new,
  author =	 {Fred J. Pollack},
  title =	 {New microarchitecture challenges in the coming generations
		 of CMOS process technologies},
  booktitle =	 micro,
  year =	 1999,
  pages =	 2,
  address =	 {Haifa, Israel},
  month =	 nov,
  note =	 {Abstract for keynote},
  annote =	 {Source of Pollack's rule? This is just an abstract, but I
		 found the slides.}
}

@Article{pollard2005genesis,
  author =	 {Jeremy Pollard},
  title =	 {Genesis of the Programmable Logic Controller},
  journal =	 {Control Design},
  year =	 2005,
  volume =	 9,
  number =	 4,
  pages =	 33,
  month =	 jun,
  url =		 {http://www.controldesign.com/articles/2005/264.html},
  bdsk-url-1 =	 {http://www.controldesign.com/articles/2005/264.html}
}

@Article{pollock1992incremental,
  author =	 {Lori L. Pollock and Mary Lou Soffa},
  title =	 {Incremental Global Reoptimization of Programs},
  journal =	 toplas,
  year =	 {1992},
  volume =	 {14},
  number =	 {2},
  pages =	 {173--200},
  month =	 apr
}

@Article{ponamgi1991debugging,
  author =	 {M. Krish Ponamgi and WenWey Hseush and Gail E. Kaiser},
  title =	 {Debugging Multithreaded Programs with {MPD}},
  journal =	 {{IEEE} Software},
  year =	 {1991},
  volume =	 {8},
  number =	 {3},
  pages =	 {37--43},
  month =	 may
}

@Book{pont2002embedded,
  author =	 {Michael J. Pont},
  title =	 {Embedded {C}},
  publisher =	 aw,
  year =	 2002,
  annote =	 {8051-centric.}
}

@Article{potkonjak2000maximally,
  author =	 {Miodrag Potkonjak and Jan M. Rabaey},
  title =	 {Maximally and Arbitrarily Fast Implementation of Linear and
		 Feedback Linear Computations},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 1,
  pages =	 {30--43},
  month =	 jan,
  annote =	 {Cites some of the interleaved pipeline stuff of
		 Messerschmitt. Makes quite a lot of use of the associativity
		 and linearity of their structures. Talks about recurrence
		 equations.
		 
		 Very clever graph restructuring. Works on SDF graphs. Again,
		 very DSP-oriented.}
}

@Unpublished{potop-butucaru2000fast,
  author =	 {Dumitru Potop-Butcaru and G\'erard Berry},
  title =	 {Fast Redundancy Elimination Using High-Level Structural
		 Information from Esterel},
  year =	 2000,
  month =	 oct,
  note =	 {Unpublished},
  annote =	 {"Jackie" sent me this. It's a clear presentation of his
		 ideas about simplifying the reconstruction tree logic by
		 taking advantage of threads that don't terminate. He sent me
		 the PostScript for the paper.}
}

@TechReport{potop-butucaru2001fast,
  author =	 {Dumitru Potop-Butucaru},
  title =	 {Fast Redundancy Elimination Using High-Level Structural
		 Information from {Esterel}},
  institution =	 {INRIA},
  year =	 2001,
  number =	 {RR-4330},
  address =	 {Sophia Antipolis, France},
  month =	 nov,
  annote =	 {Describes inexpensive ways to simplify Esterel circuits by
		 removing latches.}
}

@PhDThesis{potop-butucaru2002optimizing,
  author =	 {Dumitru Potop-Butucaru},
  title =	 {Optimizing for Faster Simulation of {Esterel} Programs},
  school =	 {INRIA},
  year =	 2002,
  address =	 {Sophia-Antipolis, France},
  month =	 aug,
  annote =	 {Jacky's thesis}
}

@InProceedings{potop-butucaru2003optimizations,
  author =	 {Dumitru Potop-Butucaru},
  title =	 {Optimizations for Faster Execution of {Esterel} Programs},
  booktitle =	 memocode,
  year =	 2003,
  pages =	 {227--236},
  address =	 {Mont St. Michel, France},
  month =	 jun,
  annote =	 {A distillation of Jacky's thesis: the GRC format, some
		 additional tricks.}
}

@InProceedings{potop-butucaru2004concurrency,
  author =	 {Dumitru Potop-Butucaru and B. Caillaud and Albert
		 Benveniste},
  title =	 {Concurrency in Synchronous Systems},
  booktitle =	 {Fourth International Conference on Application of
		 Concurrency to System Design},
  year =	 2004,
  month =	 jun,
  affiliation =	 {UC Berkeley},
  annote =	 {Cites TCAD01 (wrongly). The intro is exactly the same as
		 our Emsoft paper!!!},
  entered =	 {Luca Carloni,8/15/2003},
  keywords =	 {desynchronization, GALS, formal methods},
  oldkey =	 {potopbutucaru04},
  sedtransform = {s/potopbutucaru04/potop-butucaru2004concurrency/}
}

@Book{potop-butucaru2007compiling,
  author =	 {Dumitru Potop-Butucaru and Stephen A. Edwards and G\'erard
		 Berry},
  title =	 {Compiling Esterel},
  publisher =	 {Springer},
  year =	 2007,
  annote =	 {Jacky's thesis heavily reworked.},
  isbn =	 {978-0-387-70626-9},
  url =		 {http://www.springer.com/prod/b/978-0-387-70626-9},
  bdsk-url-1 =	 {http://www.springer.com/prod/b/978-0-387-70626-9}
}

@InProceedings{potop2003kahn,
  author =	 {Dumitru Potop-Butucaru},
  title =	 {The {Kahn} Principle for Networks of Synchronous
		 Endochronous Programs},
  booktitle =	 {Proceedings of the 1st International Workshop on Formal
		 Methods for Globally Asynchronous Locally Synchronous
		 Architectures (FMGALS)},
  year =	 {2003},
  pages =	 {123--132},
  address =	 {Pisa, Italy},
  month =	 {September},
  annote =	 {Endochrony and the determinism of Kahn. Dense.}
}

@InProceedings{potop2004concurrency,
  author =	 {Dumitru Potop-Butucaru and Beno\^\i{}t Caillaud and Albert
		 Benveniste},
  title =	 {Concurrency in Synchronous Systems},
  booktitle =	 acsd,
  year =	 2004,
  address =	 {Hamilton, Ontario, Canada},
  annote =	 {Proofs about endochrony, etc.}
}

@InProceedings{poulton1997embedded,
  author =	 {John Poulton},
  title =	 {An Embedded {DRAM} for {CMOS} {ASICs}},
  booktitle =	 {Proceedings of the 17th Conference on Advanced Research in
		 VLSI (ARVLSI)},
  year =	 1997,
  pages =	 {288-302},
  address =	 {Ann Arbor, Michigan},
  month =	 sep,
  annote =	 {Nice graphics on the layout of DRAM cells}
}

@InProceedings{prakash2006slack,
  author =	 {Piyush Prakash and Alain J. Martin},
  title =	 {Slack matching quasi delay-insensitive circuits},
  booktitle =	 async,
  year =	 2006,
  pages =	 10,
  address =	 {Grenoble, France},
  month =	 mar,
  annote =	 {Mentioned by an ICCAD reviewer of our "pipelines" paper.
		 Seems quite relevant:
		 
		 "Slack matching is an optimization that determines the
		 amount of buffering that must be added to each channel of a
		 slack elastic asynchronous system in order to reduce its
		 cycle time to a specified target. We present two methods of
		 expressing the slack matching problem as a mixed integer
		 linear programming problem. The first method is applicable
		 to systems composed of either full-buffers or half-buffers
		 but not both. The second method is applicable to systems
		 composed of any combination of full-buffers and
		 half-buffers."
		 
		 Considers pipelines with reconvergent fanout.
		 
		 They consider "pseudo-repetive" ER systems, which have a
		 flurry of initial events, then settle down to periodic
		 behavior.
		 
		 It looks like they also don't consider pipelines with
		 choice. Instead, they consider "pseudo-repetitive ER
		 Systems" that start with a flurry of "random" events before
		 settling into a periodic behavior. Turn it into a mixed
		 integer-linear programming problem. A rather costly one: the
		 number of constraints is the square of the produce of nodes
		 and edges.},
  doi =		 {http://dx.doi.org/10.1109/ASYNC.2006.27},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/ASYNC.2006.27}
}

@Article{prasad1995calculus,
  author =	 {K. V. S. Prasad},
  title =	 {A Calculus of Broadcasting Systems.},
  journal =	 scicompprog,
  year =	 1995,
  volume =	 25,
  number =	 {2--3},
  pages =	 {285--327},
  annote =	 {was "cbs1995prasad"},
  bibsource =	 {DBLP, http://dblp.uni-trier.de}
}

@Article{pratt1986modeling,
  author =	 {Vaughan Pratt},
  title =	 {Modeling Concurrency with Partial Orders},
  journal =	 {International Journal of Parallel Programming},
  year =	 {1986},
  volume =	 {15},
  number =	 {1},
  pages =	 {33--71},
  month =	 feb,
  abstract =	 {Concurrency has been expressed variously in terms of formal
		 languages (typically via the shuffle operator), partial
		 orders, and temporal logic, inter alia. The author extracts
		 from these three approaches a single hybrid approach having
		 a rich language that mixes algebra and logic and having a
		 natural class of models of concurrent processes. The heart
		 of the approach is a notion of partial string derived from
		 the view of a string as a linearly ordered multiset by
		 relaxing the linearity constraint, thereby permitting
		 partially ordered multisets or pomsets. Just as sets of
		 strings form languages, so do sets of pomsets form
		 processes. He introduces a number of operations useful for
		 specifying concurrent processes and demonstrate their
		 utility on some basic examples.}
}

@InProceedings{pratt1991modeling,
  author =	 {Vaughan R. Pratt},
  title =	 {Modeling Concurrency with Geometry},
  booktitle =	 popl,
  year =	 {1991},
  pages =	 {311--322},
  month =	 jan,
  annote =	 {A nutty way to describe concurrency as paths through an
		 n-cube. Mathematically very sophisticated.},
  url =		 {ftp://boole.stanford.edu/pub/cg.ps.gz},
  bdsk-url-1 =	 {ftp://boole.stanford.edu/pub/cg.ps.gz}
}

@InCollection{pratt1997chu,
  author =	 {Vaughan R. Pratt},
  title =	 {Chu spaces from the representational viewpoint},
  booktitle =	 {Parikh Festschrift},
  year =	 {1997},
  url =		 {ftp://boole.stanford.edu/pub/parikh.ps.gz},
  bdsk-url-1 =	 {ftp://boole.stanford.edu/pub/parikh.ps.gz}
}

@Book{preas1988physical,
  editor =	 {Bryan Preas and Michael Lorenzetti},
  title =	 {Physical Design Automation of {VLSI} Systems},
  publisher =	 {Benjamin/Cummings},
  year =	 {1988}
}

@Book{press1988numerical,
  author =	 {William H. Press and Brian P. Flannery and Saul A.
		 Teukolsky and William T. Vetterling},
  title =	 {Numerical Recipes in {C}},
  publisher =	 cup,
  year =	 1988,
  annote =	 {The standard reference. There is a much newer edition.}
}

@InProceedings{prochnow2006synthesizing,
  author =	 {Steffen Prochnow and Claus Traulsen and Reinhard von
		 Hanxleden},
  title =	 {Synthesizing Safe State Machines from {Esterel}},
  booktitle =	 lctes,
  year =	 2006,
  pages =	 {113--124},
  address =	 {Ottawa, Canada},
  month =	 jun,
  annote =	 {Used CEC.}
}

@InProceedings{proebsting1996filter,
  author =	 {Todd A. Proebsting and Scott A. Watterson},
  title =	 {Filter Fusion},
  booktitle =	 popl,
  year =	 1996,
  pages =	 {119--130},
  address =	 {St. Petersburg Beach, Florida},
  month =	 jan,
  annote =	 {Part of Peterson's work? Tries to fuse filter-oriented
		 code, such as network layers. Part of the Scout operating
		 system project.
		 
		 Linear dataflow. No buffers between processes. Weaves
		 together processes a pair at a time, trimming away deadlock
		 situations.
		 
		 I wonder whether this approach might be useful for dataflow
		 code generation.}
}

@InProceedings{pu1995optimistic,
  author =	 {Calton Pu and Tito Autrey and Andrew Black and Charles
		 Consel and Crispin Cowan and Jon Inouye and Lakshmi Kethana
		 and Jonathan Walpole and and Ke Zhang},
  title =	 {Optimistic Incremental Specialization: Streamlining a
		 Commercial Operating System},
  booktitle =	 {Proceedings of the 15th ACM Symposium on Operating Systems
		 Principles (SIGOPS)},
  year =	 1995,
  pages =	 {314--324},
  address =	 {Copper Mountain Resort, Colorado},
  month =	 dec,
  annote =	 {Cited by mcnamee2001specialization}
}

@Article{purcell2007survey,
  author =	 {J. D. Owens AND D. Luebke AND N. Govindaraju AND M. Harris
		 AND J. Kr{\"u}ger AND A. E. Lefohn AND T. J. Purcell},
  title =	 {A Survey of General-Purpose Computation on Graphics
		 Hardware},
  journal =	 {Computer Graphics Forum},
  year =	 2007,
  volume =	 26,
  number =	 1,
  pages =	 {80--113},
  keywords =	 {GPGPU survey},
  url =		 {http://www.blackwell-synergy.com/doi/pdf/10.1111/j.1467-8659.2007.01012.x}
		 ,
  bdsk-url-1 =	 {http://www.blackwell-synergy.com/doi/pdf/10.1111/j.1467-8659.2007.01012.x}
		 
}

@Article{puschner1989calculating,
  author =	 {Peter Puschner and Christian Koza},
  title =	 {Calculating the maximum exeuction time of real-time
		 programs},
  journal =	 {Real-Time Systems},
  year =	 1989,
  volume =	 1,
  number =	 2,
  pages =	 {159--176},
  month =	 sep,
  annote =	 {Cited by ye1995worst. Not available online. More WCET
		 stuff}
}

@Article{puschner2000review,
  author =	 {Peter Puschner and Alan Burns},
  title =	 {Guest Editorial: A Review of Worst-Case Execution-Time
		 Analysis},
  journal =	 {Real-Time Systems},
  year =	 2000,
  volume =	 18,
  number =	 {2--3},
  pages =	 {115--128},
  month =	 may,
  annote =	 {Part of a special issue on WCET analysis.
		 
		 Earliest citation seems to be in 1986. Nice collection of
		 citations and academic work.
		 
		 Basic stuff: upper bounds, application-dependent, does not
		 include busy waiting behavior, and is hardware-dependent.
		 
		 Safety, tightness of bounds. Problems: what the program does
		 and how long it takes to do it.
		 
		 Interesting survey, "Contributions of Different
		 Institutions."
		 
		 Real-time Euclid (Toronto). Timing Schema, U Washington
		 (Park, Shaw). Park went to Seoul and continued there. Mok at
		 UT Austin (Timetool). TU Vienna (Puschner), UMass@Amherst,
		 Hiehaus. University of York (Chapman). Princeton (Malik).
		 Florida University, Uppsala. Saarland (Wilhelm).}
}

@InProceedings{puschner2002worst-case,
  author =	 {Peter Puschner},
  title =	 {Is worst-case execution-time analysis a non-problem?
		 {Towards} New Software and Hardware Architectures},
  booktitle =	 {Proceedings of the second Euromicro International Workshop
		 on WCET Analysis},
  year =	 2002,
  pages =	 {89--92},
  address =	 {Vienna, Austria},
  month =	 jun,
  annote =	 {Interesting. Talks about many of my ideas on predictable
		 architectures. Short, and short bibliography.}
}

@InProceedings{puschner2002writing,
  author =	 {Peter Puschner and Alan Burns},
  title =	 {Writing Temporally Predictable Code},
  booktitle =	 {Procedings of the 7th IEEE International Workshop on
		 Object-Oriented Real-Time Dependable Systems (WORDS)},
  year =	 2002,
  pages =	 {85--91},
  address =	 {San Diego, California},
  month =	 jan,
  annote =	 {Cited by his other papers. Basic idea: write the code in
		 such a way that WCET analysis works.}
}

@Article{putzolu1971heuristic,
  author =	 {Gianfranco R. Putzolu and J. Paul Roth},
  title =	 {A Heuristic Algorithm for the Testing of Asynchronous
		 Circuits},
  journal =	 transcomp,
  year =	 1971,
  volume =	 {C--20},
  number =	 6,
  pages =	 {639--647},
  month =	 jun,
  annote =	 {Cited by brzozowski1979ternary. Mentions the D-algorithm.
		 More about ATPG (automatic test pattern generation). Cites
		 Eichelberger. }
}

@InProceedings{qu1999energy,
  author =	 {G. Qu and D. Kirovski and M. Potkonjak and M. Srivastava},
  title =	 {Energy minimization of system pipelines using multiple
		 voltages},
  booktitle =	 iscas,
  year =	 {1999},
  oldkey =	 {qu99},
  sedtransform = {s/qu99/qu1999energy/}
}

@InProceedings{quinn1998otter,
  author =	 {Michael J. Quinn and Alexey G. Malishevsky and
		 Nagajagadeswar Seelam},
  title =	 {Otter: Bridging the gap between {MATLAB} and {ScaLAPACK}},
  booktitle =	 {Proceedings of High Performance Distributed Computing
		 (HPDC)},
  year =	 1998,
  pages =	 {114--121},
  address =	 {Chicago, Illinois},
  month =	 jul,
  annote =	 {Part of the LCPC paper.}
}

@Book{rabaey1995low,
  author =	 {J. Rabaey and M. Pedram},
  title =	 {Low Power Design Methodologies},
  publisher =	 {Kluwer Academic Publishers},
  year =	 1995,
  oldkey =	 {rabaeypedram},
  sedtransform = {s/rabaeypedram/rabaey1995low/}
}

@InProceedings{rabaey1998energy-conscious,
  author =	 {Jan M. Rabaey and Marlene Wan},
  title =	 {An energy-conscious exploration methodology for
		 reconfigurable {DSPs}},
  booktitle =	 date,
  year =	 1998,
  pages =	 {341--342},
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{rabaey2000silicon,
  author =	 {Jan M. Rabaey},
  title =	 {Silicon Platforms for the Next Generation Wireless
		 Systems---What Role does Reconfigurable Hardware Play?},
  booktitle =	 fpl,
  year =	 2000,
  series =	 lncs,
  volume =	 1896,
  pages =	 {277--285},
  address =	 {Villach, Austria},
  month =	 aug,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{rajapandian2005high-tension,
  author =	 {S. Rajapandian and K. L. Shepard and P. Hazucha and T.
		 Karnik},
  title =	 {High-tension power delivery: operating 180-nm {CMOS}
		 digital logic at a 5.4-V supply},
  booktitle =	 {Digest of Technical Papers, International Solid-State
		 Circuits Conference},
  year =	 {2005},
  oldkey =	 {rajapandian05b},
  sedtransform = {s/rajapandian05b/rajapandian2005high-tension/}
}

@Article{rajapandian2005implicit,
  author =	 {S. Rajapandian and Z. Xu and K. L. Shepard},
  title =	 {Implicit dc-dc downconversion through charge-recycling},
  journal =	 {IEEE Journal of Solid-State Circuits},
  year =	 {2005},
  month =	 {April},
  oldkey =	 {rajapandian05},
  sedtransform = {s/rajapandian05/rajapandian2005implicit/}
}

@InProceedings{raje1997generalized,
  author =	 {Salil Raje and Reinaldo A. Bergamaschi},
  title =	 {Generalized resource sharing},
  booktitle =	 iccad,
  year =	 1997,
  pages =	 {326--332},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {FIXME}
}

@Article{ramachandran1988finding,
  author =	 {Vijaya Ramachandran},
  title =	 {Finding a Minimum Feedback Arc Set in Reducible Flow
		 Graphs},
  journal =	 {Journal of Algorithms},
  year =	 {1988},
  volume =	 {9},
  number =	 {3},
  pages =	 {299--313},
  month =	 sep,
  annote =	 {Shows that the size of an arc set in a reducible graph is
		 related to network flow. To achieve a polynomial-time
		 algorithm, he does network flow repeatedly. I doubt my
		 graphs are reducible, so this is of limited utility.}
}

@InProceedings{ramalingam1999aggregate,
  author =	 {G. Ramalingam and John Field and Frank Tip},
  title =	 {Aggregate Structure Identification and its Application to
		 Program Analysis},
  booktitle =	 popl,
  year =	 1999,
  pages =	 {119--132},
  address =	 {San Antonio, Texas},
  month =	 jan,
  annote =	 {Cited by van-deursen1999understanding. Actually tries to
		 identify things that behave like aggregates but aren't
		 defined as such and to find unused fields in structures.
		 Applied to COBOL.}
}

@InProceedings{ramalingam2002deriving,
  author =	 {G. Ramalingam and Alex Warshavsky and John Field and Deepak
		 Goyal and Mooly Sagiv},
  title =	 {Deriving Specialized Program Analyses for Certifying
		 Component-Client Conformance},
  booktitle =	 pldi,
  year =	 2002,
  pages =	 {83--94},
  address =	 {Berlin, Germany},
  month =	 jun,
  annote =	 {Protocol checking?}
}

@Article{ramamoorthy1977pipeline,
  author =	 {C. V. Ramamoorthy and H. F. Li},
  title =	 {Pipeline Architecture},
  journal =	 surveys,
  year =	 1977,
  volume =	 9,
  number =	 1,
  pages =	 {61--102},
  month =	 mar,
  annote =	 {Interleaved pipelines. "Pipelined computer architecture has
		 received considerable attention since the 1960s."
		 
		 "Computer designers have exploited the overlapped mode of
		 operations since the late fifties."
		 
		 Sections include pipeline characterization, throughput and
		 efficiency considerations, control structure, hazards, and
		 penalties (read after write, write after write), vector
		 processing.
		 
		 Uses the IBM 360/91 for illustration. Also talks about the
		 Cray-1 and Amdahl 470 V/6.
		 
		 Cites an even earlier paper, T. C. Chen, "Parallelism
		 Pipelining and computer efficiency" Computer Design, Jan
		 1971, 69--74.
		 
		 Very hard to find. Requested it be delivered electronically.
		 
		 http://clio.cul.columbia.edu/cgi-bin/Pwebrecon.cgi?v1=1&ti=1,1&Search%5FArg=computer%20design&Search%5FCode=JALL&CNT=50&PID=21890&SEQ=20070106001240&SID=4
		 
		 T.
		 C. Chen, "Parallelism, Pipelining and Computer Efficiency",
		 Computer Design, Vol. 10, No. 1, (Jan. 1971), pp.69-74. }
}

@Article{ramamoorthy1980performance,
  author =	 {C. V. Ramamoorthy and Gary S. Ho},
  title =	 {Performance Evaluation of Asynchronous Concurrent Systems
		 Using {P}etri Nets},
  journal =	 transse,
  year =	 1980,
  volume =	 {SE-6},
  number =	 5,
  pages =	 {440--449},
  month =	 sep,
  annote =	 {Cited by beerel2006slack. Nice fundamental things on marked
		 graphs (decision-free systems). Also has a theorem that the
		 performance problem on general Petri nets is NP-complete
		 (can guess the optimal schedule and test performance in
		 polynomial time, so it's NP). Say they don't know any
		 heuristics for general Petri nets.}
}

@Article{ramming1999introduction,
  author =	 {J. Christopher Ramming and David S. Wile},
  title =	 {Introduction to the Special Section (Guest Editorial)},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {289--290},
  month =	 may,
  annote =	 {Part of a special issue. Discusses the growth in
		 domain-specific languages and argues that the benefits of
		 these languages is growing. The papers in this issue came
		 from the first USENIX Conference on Domain-Specific
		 Languages (Santa Barbara, 1997).
		 
		 IEEE Transactions on Software Engineering Special issue on
		 domain-specific languages
		 
		 Software Engineering, IEEE Transactions on Volume: 25 Issue:
		 3 , May-June 1999
		 
		 Guest editorial - introduction to the special section
		 Ramming, J.C.; Wile, D.S. Page(s): 289 -290
		 
		 An embedded modeling language approach to interactive 3D and
		 multimedia animation Elliott, C. Page(s): 291 -308
		 
		 Service combinators for Web computing Cardelli, L.; Davies,
		 R. Page(s): 309 -316
		 
		 Teapot: a domain-specific language for writing cache
		 coherence protocols Chandra, S.; Richards, B.; Larus, J.R.
		 Page(s): 317 -333
		 
		 Mawl: a domain-specific language for form-based services
		 Atkins, D.L.; Ball, T.; Bruns, G.; Cox, K. Page(s): 334 -346
		 
		 BDL: a specialized language for per-object reactive control
		 Bertrand, F.; Augeraud, M. Page(s): 347 -362
		 
		 Domain-specific languages: from design to implementation
		 application to video device drivers generation Thibault,
		 S.A.; Marlet, R.; Consel, C. Page(s): 363 -377
		 
		 A domain-specific language for regular sets of strings and
		 trees Klarlund, N.; Schwartzbach, M.I. Page(s): 378 -386
		 
		 Interface compilation: steps toward compiling program
		 interfaces as languages Engler, D.R. Page(s): 387 -400
		 
		 Reconfiguration models and algorithms for stateful
		 interactive processes Varvarigou, T.A.; Anagnostou, M.E.;
		 Ahuja, S.R. Page(s): 401 -415
		 
		 Automatic distribution of reactive systems for asynchronous
		 networks of processors Caspi, P.; Girault, A.; Pilaud, D.
		 Page(s): 416 -427
		 
		 An extended banker's algorithm for deadlock avoidance Lang,
		 S.-D. Page(s): 428 -432 }
}

@PhDThesis{ramsey1993retargetable,
  author =	 {Norman Ramsey},
  title =	 {A Retargetable Debugger},
  school =	 {Princeton},
  year =	 {1993},
  url =		 {http://www.cs.princeton.edu:80/TR/PRINCETONCS:TR-403-92?abstract=}
		 ,
  bdsk-url-1 =	 {http://www.cs.princeton.edu:80/TR/PRINCETONCS:TR-403-92?abstract=}
		 
}

@Article{ramsey1994literate,
  author =	 {Norman Ramsey},
  title =	 {Literate Programming Simplified},
  journal =	 software,
  year =	 1994,
  volume =	 11,
  number =	 5,
  pages =	 {97--105},
  month =	 sep,
  annote =	 {Describes the noweb system, which Mike Smith's group uses
		 to document their software.}
}

@InProceedings{ramsey1995new,
  author =	 {Norman Ramsey and Mary F. Fernandez},
  title =	 {The New Jersey Machine-Code Toolkit},
  booktitle =	 usenix,
  year =	 1995,
  pages =	 {289--302},
  address =	 {New Orleans, Louisiana},
  month =	 jan,
  annote =	 {Cited by Ramsey in their reference manual. Describes how
		 the system works, taking machine descriptions and
		 synthesizing assemblers and disassemblers using an Icon
		 program (Ramsey likes the language).}
}

@Article{ramsey1997specifying,
  author =	 {Norman Ramsey and Mary F. Fern\'andez},
  title =	 {Specifying representations of machine instructions},
  journal =	 toplas,
  year =	 1997,
  volume =	 19,
  number =	 3,
  pages =	 {492--524},
  month =	 may,
  annote =	 {Cited by Cifuentes in the Walkabout work. Describes the
		 SLED langauge, part of the New Jersey Machine Code Toolkit.
		 Nice, clean specification of processor instructions.
		 
		 Only describes the encoding, decoding, and printing
		 representation. Specifically does not attempt to describe
		 the semantics of the instructions.}
}

@InProceedings{ranger2007evaluating,
  author =	 {C. Ranger and R. Raghuraman and A. Penmetsa and G. Bradski
		 and C. Kozyrakis},
  title =	 {Evaluating {MapReduce} for Multi-core and Multiprocessor
		 Systems},
  booktitle =	 hpca,
  year =	 2007,
  pages =	 {13--24},
  isbn =	 {1-4244-0804-0}
}

@TechReport{rational94compositionalmodel,
  author =	 {Jeffrey Fischer Rational and Jeffrey Fischer and Richard
		 Gerber},
  title =	 {Compositional Model Checking of Ada Tasking Programs},
  institution =	 {In IEEE Ninth Annual Conference on Computer Assurance
		 (COMPASS'94},
  year =	 {1994}
}

@InProceedings{rauch1994improved,
  author =	 {Monika Rauch},
  title =	 {Improved Data Structures for Fully Dynamic Biconnectivity},
  booktitle =	 {Proceedings of the Twenty-Sixth Annual ACM Symposium on the
		 Theory of Computing},
  year =	 {1994},
  pages =	 {686--695}
}

@Book{raymond2004art,
  author =	 {Eric S. Raymond},
  title =	 {The Art of {UNIX} Programming},
  publisher =	 aw,
  year =	 2004,
  annote =	 {Really nice philosophical tome about fundamental ideas in
		 the Unix world and how they worked out.}
}

@Article{recoskie2007extending,
  author =	 {Chris Recoskie and Leo Treggiari},
  title =	 {Extending the {Eclipse} {CDT} Managed Build Systema},
  journal =	 {Dr. Dobb's Portal},
  year =	 2007,
  month =	 {January 31},
  annote =	 {About the auto-Makefile system. Demonstrates it with a way
		 to add a plugin that can produce a pretty-printed version of
		 the source.},
  url =		 {http://www.ddj.com/cpp/197002115},
  bdsk-url-1 =	 {http://www.ddj.com/cpp/197002115}
}

@Booklet{recreational-equipment-incorporated1994climbing,
  author =	 {{Recreational Equipment Incorporated}},
  title =	 {Climbing Gear Guide},
  year =	 {1994},
  annote =	 {One of REI's sport-specific catalogs},
  key =		 {rei}
}

@Article{reddy2009design,
  author =	 {Mangapathi Narendra Reddy and P. Muralidhar and C.B. Rama
		 Rao},
  title =	 {Design and Implementation of Custom Processor Architecture
		 for Turbo Encoder and Decoder Using {NISC}},
  journal =	 {European Journal of Scientific Research},
  year =	 2009,
  volume =	 36,
  number =	 1,
  pages =	 {79--92}
}

@Book{redmond1980project,
  author =	 {Kent C. Redmond and Thomas M. Smith},
  title =	 {Project Whirlwind: The History of a Pioneer Computer},
  publisher =	 {Digital Press},
  year =	 1980,
  annote =	 {Mentioned by laplante1995history as the first real-time
		 computing system.}
}

@InProceedings{reed1952symbolic,
  author =	 {Irving S. Reed},
  title =	 {Symbolic Synthesis of Digital Computers},
  booktitle =	 {Proceedings of the ACM National Meeting},
  year =	 1952,
  pages =	 {90--94},
  address =	 {Toronto, Canada},
  month =	 sep,
  annote =	 {The first HDL? Cited by baray1971digital. Explains in a
		 footnote why Boolean is capitalized. Explains that assuming
		 that the complement of a Boolean variable is easy to obtain.
		 
		 Already insists on Synchronous Boolean design.
		 
		 Very mathematical: "an additive abelian group."
		 
		 Reminds me a little of the current Quantum computer things:
		 too much mathematics, not enough meat. But has to describe
		 what a flip-flop is in detail.
		 
		 Theorem: synchronous digital logic can represent synchronous
		 Boolean systems.
		 
		 Not really a design language per se, but suggests lists of
		 boolean equations representing logic, each driving a
		 flip-flop. }
}

@InProceedings{reekie1994host-engine,
  author =	 {H. John Reekie and Matthias Meyer},
  title =	 {The Host-Engine Software Architecture for Parallel Digital
		 Signal Processing},
  booktitle =	 {Proceedings of PART '94, Workshop on Parallel and Real-Time
		 Systems},
  year =	 {1994},
  address =	 {Melborne, Australia},
  month =	 jul,
  url =		 {http://ptolemy.eecs.berkeley.edu/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/}
}

@PhDThesis{reekie1995realtime,
  author =	 {Hideki John Reekie},
  title =	 {Realtime Signal Processing: Dataflow, Visual, and
		 Functional Programming},
  school =	 {University of Technology---Sydney, Australia},
  year =	 {1995},
  url =		 {http://ptolemy.eecs.berkeley.edu/~johnr/},
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/~johnr/}
}

@Misc{reeves1997what,
  author =	 {Glenn E. Reeves},
  title =	 {What really happened on {Mars}?},
  howpublished = {Email message},
  year =	 1997,
  month =	 dec,
  annote =	 {Describes the priority inversion problem on the Mars
		 Pathfinder. It was causing a watchdog timer to trip and
		 reset the software, breaking communication.},
  url =		 {http://research.microsoft.com/~mbj/mars_pathfinder/Authoritative_Account.html}
		 ,
  bdsk-url-1 =	 {http://research.microsoft.com/~mbj/mars_pathfinder/Authoritative_Account.html}
		 
}

@Book{reid1971large,
  editor =	 {J. K. Reid},
  title =	 {Large Sparse Sets of Linear Equations: Proceedings of the
		 Oxford conference of the Institute of Mathematics and Its
		 Applications},
  publisher =	 ap,
  year =	 {1971},
  annote =	 {A collection of rather diverse papers on the subject.
		 Includes one describing the relationship between sparse
		 matrices and graph theory.}
}

@Book{reis1997tomorrows,
  author =	 {Richard M. Reis},
  title =	 {Tomorrow's Professor: Preparing for Careers in Science and
		 Engineering},
  publisher =	 jw,
  year =	 1997,
  annote =	 {Good introduction to being a faculty member.}
}

@Article{reppy2007specialization,
  author =	 {John Reppy and Yingqi Xiao},
  title =	 {Specialization of {CML} message-passing primitives},
  journal =	 {SIGPLAN Notices},
  year =	 2007,
  volume =	 42,
  number =	 1,
  pages =	 {315--326},
  address =	 {New York, NY, USA},
  annote =	 {was "cml2007reppy"},
  doi =		 {http://doi.acm.org/10.1145/1190215.1190264},
  issn =	 {0362-1340},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1190215.1190264}
}

@InProceedings{reps1989semantics,
  author =	 {Thomas Reps and Wuu Yang},
  title =	 {The Semantics of Program Slicing and Program Integration},
  booktitle =	 {TAPSOFT '89: Proceedings of the International Joint
		 Conference on Theory and Practice of Software Development,
		 Barcelona, Spain, 13--17 March},
  year =	 {1989},
  series =	 lncs,
  volume =	 {352},
  pages =	 {360--374},
  publisher =	 sv
}

@InProceedings{reps1995precise,
  author =	 {Thomas Reps and Susan Horwitz and Mooly Sagiv},
  title =	 {Precise Interprocedural Dataflow Analysis via Graph
		 Reachability},
  booktitle =	 popl,
  year =	 1995,
  pages =	 {49--61},
  address =	 {San Francisco},
  month =	 jan,
  annote =	 {Referenced in SED:ball:00b.
		 
		 Interprocedural is when the return address is taken into
		 account (i.e., not all callers for all call sites). This
		 restricts the number of paths considered valid. "path is
		 valid if its call/return arcs are properly nested."
		 Interesting graphical representation of distributive
		 functions over $2^n$: set operations. Use this to expand a
		 dataflow problem into a graph upon which reachability
		 answers the question. Builds summaries of function's
		 graphs.},
  url =		 {http://citeseer.nj.nec.com/reps95precise.html},
  bdsk-url-1 =	 {http://citeseer.nj.nec.com/reps95precise.html}
}

@Article{reps1996precise,
  author =	 {Thomas Reps and Susan Horwitz and Mooly Sagiv},
  title =	 {Precise Interprocedural Dataflow Analysis with Applications
		 to Constant Propagation},
  journal =	 tcs,
  year =	 1996,
  volume =	 167,
  pages =	 {131--170},
  annote =	 {Referenced in SED:ball:00b. Seems very similar to
		 SED:reps:95a}
}

@Article{reps1998program,
  author =	 {T. Reps},
  title =	 {Program Analysis via Graph Reachability},
  journal =	 {Information and Software Technology},
  year =	 {1998},
  volume =	 {40},
  number =	 {11-12},
  pages =	 {701--726},
  oldkey =	 {reps98},
  sedtransform = {s/reps98/reps1998program/}
}

@InProceedings{reshadi2005cycle-accurate,
  author =	 {Mehrdad Reshadi},
  title =	 {A Cycle-Accurate Compilation Algorithm for Custom Pipelined
		 Datapaths},
  booktitle =	 codesisss,
  year =	 2005,
  pages =	 {21--26},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {Part of the NISC work. Very similar to
		 reshadi2005utilizing}
}

@InProceedings{reshadi2005utilizing,
  author =	 {Mehrdad Reshadi and Bita Gorjiara and Dan Gajski},
  title =	 {Utilizing Horizontal and Vertical Parallelism Using a
		 No-Instruction-Set Compiler and Custom Datapaths},
  booktitle =	 iccd,
  year =	 2005,
  pages =	 {69--76},
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {More NISC stuff. Relevant to the SHIM-to-hardware project.
		 Talks about the mapping of a CDFG to an arbitrary datapath.
		 Maps a CDFG to a set of register transfer actions (RTAs)
		 that are later mapped onto the datapath and parallelized as
		 much as possible. Sort of like VLIW compilation }
}

@Article{richard1977reminder,
  author =	 {Federic Richard and Henry F. Ledgard},
  title =	 {A Reminder for Language Designers},
  journal =	 {ACM SIGPLAN Notices},
  year =	 1977,
  volume =	 12,
  number =	 12,
  pages =	 {73--82},
  month =	 dec,
  annote =	 {Cited by dewey1983vhsic. A nice set of rules for designing
		 computer languages infuenced by some awful PL/I, COBOL, and
		 FORTRAN examples. Perhaps I should present it in PLT.}
}

@Book{richards1979bcpl,
  author =	 {Martin Richards and Colin Whitby-Strevens},
  title =	 {{BCPL}: The Language and its Compiler},
  publisher =	 cup,
  year =	 1979,
  annote =	 {Referenced by ritchie1993development. Long out-of-print.}
}

@InProceedings{riedel2003cyclic,
  author =	 {Marc D. Riedel and Jeoshua Bruck},
  title =	 {Cyclic Combinational Circuits: Analysis for Synthesis},
  booktitle =	 iwls,
  year =	 2003,
  pages =	 {105--112},
  address =	 {Laguna Beach, California},
  month =	 jun,
  annote =	 {How to understand when a circuit is cyclic}
}

@InProceedings{riedel2003synthesis,
  author =	 {Marc D. Riedel and Jeoshua Bruck},
  title =	 {The Synthesis of Cyclic Combinational Circuits},
  booktitle =	 dac03,
  year =	 2003,
  pages =	 {163--168},
  address =	 dac03a,
  month =	 jun,
  annote =	 {Got an early copy from the authors. How to build cyclic
		 circuits for functions. Clever stuff. Used BDDs, but some
		 runtimes were in hours.}
}

@InProceedings{riedel2004timing,
  author =	 {Marc D. Riedel and Jeoshua Bruck},
  title =	 {Timing Analysis of Cyclic Combinational Circuits},
  booktitle =	 iwls,
  year =	 2004,
  pages =	 {446--453},
  address =	 {Temecula Creek, California},
  month =	 jun,
  annote =	 {A follow-on to their 2003 IWLS paper. Talks about how to do
		 timing analysis on cyclic circuits.}
}

@InProceedings{rim1992representing,
  author =	 {Minjoong Rim and Rajiv Jain},
  title =	 {Representing conditional branches for high-level synthesis
		 applications},
  booktitle =	 dac92,
  year =	 1992,
  pages =	 {106--111},
  address =	 dac92a,
  month =	 jun,
  annote =	 {FIXME}
}

@InProceedings{rimvall1993automatic,
  author =	 {C. M. Rimvall and M. Radecki and A. Komar and A. Wadhwa and
		 III H. A. Spang and R. Knof and M. Idelchik},
  title =	 {Automatic Generation of Real-Time Code using the {BEACON}
		 {CAE} Environment},
  booktitle =	 {Proceedings of the 12th Triennial World Congress of the
		 International Federation of Automatic Control},
  year =	 {1993},
  volume =	 {2: Robust Control, Design and Software},
  pages =	 {743--748},
  address =	 {Sydney, NSW, Australia},
  month =	 jul,
  publisher =	 els
}

@Article{ritchie1974unix,
  author =	 {Dennis M. Ritchie and Ken Thompson},
  title =	 {The {UNIX} time-sharing system},
  journal =	 cacm,
  year =	 1974,
  volume =	 17,
  number =	 4,
  pages =	 {365--375},
  month =	 jul,
  annote =	 {Found the reference in Byte, August 1978, p 61
		 
		 "The most important role of UNIX is to provide a file
		 system."}
}

@InProceedings{ritchie1993development,
  author =	 {Dennis M. Ritchie},
  title =	 {The Development of the {C} Language},
  booktitle =	 {History of Programming Languages II},
  year =	 1993,
  address =	 {Cambridge, Massachusetts},
  month =	 {April},
  annote =	 {History of C.
		 
		 Talks about how it evolved. One interesting point: the way
		 to think of arrays as being compile-time pointers.
		 
		 Really targeted to the architecture they had in front of
		 them.},
  url =		 {http://www.cs.bell-labs.com/who/dmr/index.html},
  bdsk-url-1 =	 {http://www.cs.bell-labs.com/who/dmr/index.html}
}

@Article{rivest1977necessity,
  author =	 {Ronald L. Rivest},
  title =	 {The Necessity of Feedback in Minimal Monotone Combinational
		 Circuits},
  journal =	 transcomp,
  year =	 1977,
  volume =	 26,
  number =	 6,
  pages =	 {606--607},
  annote =	 {Cited by riedel2003synthesis; I haven't seen this.}
}

@InProceedings{rixner1998bandwidth-efficient,
  author =	 {Scott Rixner and William J. Dally and Ujval J. Kapasi and
		 Brucek Khailany and Abelardo L/'opez-Lagunas and Peter R.
		 Mattson and John D. Owens},
  title =	 {A Bandwidth-efficient Architecture for Media Processing},
  booktitle =	 micro,
  year =	 1998,
  pages =	 {3--13},
  address =	 {Dallas, Texas},
  month =	 nov,
  annote =	 {Ken Shepard showed me this.
		 
		 It's essentially a really big chip for doing graphics
		 processing and similar applications (their motivating
		 example is a triangle rendering pipe). It's based on a
		 single stream model, so the buffering is linear and
		 straightforward. Their systems consist of multiple ALUs,
		 each microcoded, communicating through some gargantuan
		 register file designed for buffering. The sequencers for
		 these ALUs are microcoded, have no conditional branch (just
		 predicated statements), but provide looping constructs. The
		 pipeline's exposed so there's a scheduling problem in their
		 "assembler."
		 
		 WRT the project, the programming model is interesting, but
		 Steve and Ken's chip is a much more special purpose,
		 asynchronous, and designed for low power. The execution rate
		 balancing problem doesn't seem as substantial for them.
		 
		 Their programming model is an "assembly language" (really, a
		 C-like expression language) for describing ALU operations
		 and a C-library-based dispatcher that loads the microcode
		 and sets up the architecture. Primitive, but effective.
		 Their assembler is the more interesting, having a fairly
		 standard high-level synthesis scheduling problem to solve.},
  url =		 {http://citeseer.nj.nec.com/rixner98bandwidthefficient.html}
		 ,
  bdsk-url-1 =	 {http://citeseer.nj.nec.com/rixner98bandwidthefficient.html}
		 
}

@Book{roads1996computer,
  author =	 {Curtis Roads},
  title =	 {The Computer Music Tutorial},
  publisher =	 {MIT Press},
  year =	 {1996},
  annote =	 {Enormous -- seems to include everything.}
}

@InProceedings{robbins1997argo,
  author =	 {Jason E. Robbins and David M. Hilbert and David F.
		 Redmiles},
  title =	 {Argo: a design environment for evolving software
		 architectures},
  booktitle =	 icse,
  year =	 1997,
  pages =	 {600--601},
  address =	 {Boston, Massachusetts},
  month =	 may,
  annote =	 {Found at random. They show a GUI that provide
		 "critics"--active agents that constantly check a design to
		 see whether a partial architecture is compliant with some
		 set of rules. Very short paper, but a few interesting
		 references.}
}

@TechReport{robert1976convergence,
  author =	 {F. Robert},
  title =	 {Convergence locale d'it\'erations chaotiques non
		 lin\'eaires},
  institution =	 {Laboratoire d'Informatique, Universit\'e Scientifique et
		 M\'edicale de Grenoble},
  year =	 1976,
  type =	 {Technical Report},
  number =	 {IMAG--RR--58},
  address =	 {Grenoble, France},
  month =	 dec,
  annote =	 {Cited by geser1996non-monotone as the source of chaotic
		 iterations.}
}

@Book{robert1986discrete,
  author =	 {Fran\c{c}ois Robert},
  title =	 {Discrete Iterations: {A} Metric Study},
  publisher =	 {Springer-Verlag},
  year =	 {1986},
  volume =	 {6},
  series =	 {Springer Series in Computational Mathematics},
  annote =	 {Excellent, readable discussion of iterative methods
		 performed on finite sets.}
}

@InProceedings{rocheteau1991pollux,
  author =	 {Fr{\'e}d{\'e}ric Rocheteau and Nicolas Halbwachs},
  title =	 {{POLLUX}: A {LUSTRE}-based Hardware Design Environment},
  booktitle =	 {Procedings of the Conference on Algorithms and Parallel
		 VLSI Architectures II},
  year =	 1991,
  address =	 {Chateau de Bonas, France},
  annote =	 {Describes translating Lustre into hardware.},
  optpages =	 {FIXME},
  url =		 {http://www-verimag.imag.fr/PEOPLE/Nicolas.Halbwachs/lustre:pam.html}
		 ,
  bdsk-url-1 =	 {http://www-verimag.imag.fr/PEOPLE/Nicolas.Halbwachs/lustre:pam.html}
		 
}

@InProceedings{rocheteau1992implementing,
  author =	 {Fr{\'e}d{\'e}ric Rocheteau and Nicolas Halbwachs},
  title =	 {Implementing Reactive Programs on Circuits: {A} Hardware
		 Implementation of {LUSTRE}},
  booktitle =	 {Real-Time, Theory in Practice. REX Workshop Proceedings,
		 Mook, Netherlands, June 3--7, 1991},
  year =	 {1992},
  series =	 lncs,
  volume =	 {600},
  pages =	 {195--208},
  publisher =	 sv
}

@PhDThesis{roe1991parallel,
  author =	 {Paul Roe},
  title =	 {Parallel Programming Using Functional Languages},
  school =	 {Department of Computing Science, University of Glasgow},
  year =	 1991,
  address =	 {Scotland},
  month =	 feb,
  annote =	 {Recommended by Satnam as describing "par" "seq" and such.}
}

@PhDThesis{roig1997formal,
  author =	 {Oriol Roig},
  title =	 {Formal Verification and Testing of Asynchronous Circuits},
  school =	 {Universitat Polit\`ecnica de Catalunya},
  year =	 1997,
  address =	 {Barcelona, Spain},
  month =	 may,
  annote =	 {Simulation techniques; some really old references. On the
		 thesis, he's Oriol Roig i Mansilla. He's Jordi Cortadella's
		 student.}
}

@Book{rojas2000first,
  editor =	 {Ra\'ul Rojas and Ulf Hashagen},
  title =	 {The First Computers: History and Architectures},
  publisher =	 mit,
  year =	 2000,
  annote =	 {Bought while in Oregon around 2002. Really nice discussion
		 of many of the early computers including ENIAC, the work of
		 Konrad Zuse, etc.}
}

@Article{roman2006by,
  author =	 {David Roman},
  title =	 {By the Numbers: The power behind embedded systems},
  journal =	 {EE Times},
  year =	 2006,
  month =	 {April 24},
  annote =	 {Microprocessors and microcontrollers are key selections of
		 embedded designs, and 44 percent of current projects use two
		 or more different devices, according to the joint EE Times
		 and Embedded Systems Design 2006 Embedded Market Survey,
		 which reports on the current and future microcomponent
		 choices of 1,217 respondents.
		 
		 Interesting collection of statistics, mostly about who is
		 choosing what processor. Most designs use 32-bit processors
		 (54%), although 19% choose 16-bit and 18% choose 8-bit.
		 Intel x86 series most popular, then AMD, then Intel Xscale,
		 etc. TI way ahead in DSPs.},
  url =		 {http://www.eetimes.com/showArticle.jhtml?articleID=186500118}
		 ,
  bdsk-url-1 =	 {http://www.eetimes.com/showArticle.jhtml?articleID=186500118}
		 
}

@Article{ronen2001coming,
  author =	 {Ronny Ronen and Avi Mendelson and Konrad Lai and Shih-Lien
		 Lu and Fred Pollack and John P. Shen},
  title =	 {Coming Challenges in Microarchitecture and Architecture},
  journal =	 procieee,
  year =	 2001,
  volume =	 89,
  number =	 3,
  pages =	 {325--340},
  month =	 mar,
  annote =	 {Fred Pollack of Pollack's Rule. A whole bunch of scaling
		 observations.},
  doi =		 {10.1109/5.915377}
}

@InProceedings{roop2004towards,
  author =	 {Partha S. Roop and Zoran Salcic and M. W. Sajeewa
		 Dayaratne},
  title =	 {Towards Direct Execution of {Esterel} Programs on Reactive
		 Processors},
  booktitle =	 emsoft,
  year =	 2004,
  address =	 {Pisa, Italy},
  month =	 sep,
  annote =	 {Simple little idea. Variation of the PIC architecture with
		 statements like "await" added. Dumb bibliography.}
}

@Misc{rosen2001multiprotocol,
  author =	 {Eric C. Rosen and Arun Viswanathan and Ross Callon},
  title =	 {Multiprotocol Label Switching Architecture},
  howpublished = {RFC 3031, IETF},
  year =	 {2001},
  month =	 jan
}

@InProceedings{rosen2007bus,
  author =	 {Rosen, Jakob and Andrei, Alexandru and Eles, Petru and
		 Peng, Zebo},
  title =	 {Bus Access Optimization for Predictable Implementation of
		 Real-Time Applications on Multiprocessor Systems-on-Chip},
  booktitle =	 {Proceedings of the Real-Time Systems Symposium (RTSS
		 2007)},
  year =	 {2007},
  pages =	 {49--60},
  month =	 dec,
  doi =		 {10.1109/RTSS.2007.24},
  issn =	 {1052-8725},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/RTSS.2007.24}
}

@InProceedings{rotem1999rappid,
  author =	 {Shai Rotem and Ken Stevens and Ran Ginosar and Peter Beerel
		 and Chris Myers and Kenneth Yun and Rakefet Kol and Charles
		 Dike and Marly Roncken and Boris Agapiev},
  title =	 {{RAPPID}: An Asynchronous Instruction Length Decoder},
  booktitle =	 async,
  year =	 1999,
  address =	 {Barcelona, Spain},
  month =	 apr,
  annote =	 {Mike Kishinevsky (mkishine@ichips.intel.com) told me about
		 this reference. He was using the basic idea to experiment
		 with Esterel.},
  url =		 {http://www.computer.org/proceedings/async/0031/00310060abs.htm}
		 ,
  bdsk-url-1 =	 {http://www.computer.org/proceedings/async/0031/00310060abs.htm}
		 
}

@Article{rotenberg1999trace,
  author =	 {Eric Rotenberg and Steve Bennett and James E. Smith},
  title =	 {A Trace Cache Microarchitecture and Evaluation},
  journal =	 {IEEE Transactions on Computers},
  year =	 {1999},
  volume =	 {48},
  number =	 {2},
  pages =	 {111--120},
  url =		 {citeseer.nj.nec.com/article/rotenberg99trace.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/article/rotenberg99trace.html}
}

@Misc{rothfus1999case,
  author =	 {Eric J. Rothfus},
  title =	 {The Case for a Classification Language},
  howpublished = {Agere White Paper},
  year =	 1999,
  month =	 sep,
  note =	 {Available at
		 http://www.lucent.com/micro/netcom/platform/npu.html},
  annote =	 {Mentioned in Niraj's report.}
}

@Book{rothstein1992midi,
  author =	 {Joseph Rothstein},
  title =	 {{MIDI}: {A} Comprehensive Introduction},
  publisher =	 {A-R Editions},
  year =	 {1992},
  address =	 {Madison, Wisconsin}
}

@InProceedings{rountev1999data-flow,
  author =	 {Atanas Rountev and Barbara Ryder and William Landi},
  title =	 {Data-Flow Analysis of Program Fragments},
  booktitle =	 fse,
  year =	 1999,
  pages =	 {235--252},
  oldkey =	 {atanas2},
  sedtransform = {s/atanas2/rountev1999data-flow/}
}

@InProceedings{rountev2001points-to,
  author =	 {Atanas Rountev and Barbara Ryder},
  title =	 {Points-to and Side-effect Analyses for Programs Built with
		 Precompiled Libraries},
  booktitle =	 cc,
  year =	 {2001},
  pages =	 {20--36},
  oldkey =	 {atanas1},
  sedtransform = {s/atanas1/rountev2001points-to/}
}

@InProceedings{roy1990autoautograph,
  author =	 {{Val\'erie} Roy and Robert {de Simone}},
  title =	 {Auto/Autograph},
  booktitle =	 cav1990,
  year =	 {1990},
  series =	 lncs,
  volume =	 {531},
  pages =	 {65--75},
  address =	 cav1990_a,
  publisher =	 sv
}

@Book{rubine1991climbers,
  author =	 {D. Rubine},
  title =	 {Climber's Guide to Pinnacles National Monument},
  publisher =	 {Chockstone Press},
  year =	 {1991},
  address =	 {Evergreen, Colorado}
}

@Book{rubini1998linux,
  author =	 {Alessandro Rubini},
  title =	 {Linux Device Drivers},
  publisher =	 ora,
  year =	 1998,
  address =	 ora_a,
  annote =	 {Good, but doesn't talk about network drivers.}
}

@Book{rubinstein1988digital,
  author =	 {Richard Rubinstein},
  title =	 {Digital Typography: An Introduction to Type and Composition
		 for Computer System Design},
  publisher =	 aw,
  year =	 {1988},
  address =	 aw_a,
  annote =	 {Found it at Schoss Dagstuhl, 1996. Terrible!}
}

@InProceedings{rudell1993dynamic,
  author =	 {Richard Rudell},
  title =	 {Dynamic Variable Ordering for Ordered Binary Decision
		 Diagrams},
  booktitle =	 iccad,
  year =	 1993,
  pages =	 {42--47},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {The standard sifting algorithm.}
}

@InProceedings{rudell1996tutorial,
  author =	 {Richard Rudell},
  title =	 {Tutorial: Design of a Logic Synthesis System},
  booktitle =	 dac96,
  year =	 1996,
  address =	 dac96a,
  pages =        {191--196},
  month =	 jun
}

@InProceedings{ruf1995context-insensitive,
  author =	 {Erik Ruf},
  title =	 {Context-insensitive alias analysis reconsidered},
  booktitle =	 pldi,
  year =	 {1995},
  pages =	 {13--22},
  oldkey =	 {ruf95},
  sedtransform = {s/ruf95/ruf1995context-insensitive/}
}

@InProceedings{rugina1999pointer,
  author =	 {Radu Rugina and Martin Rinard},
  title =	 {Pointer Analysis for Multithreaded Programs},
  booktitle =	 pldi,
  year =	 1999,
  pages =	 {77--90},
  address =	 {Atlanta, Georgia},
  annote =	 {Monica pointed me to this. They analyze Cilk, a C-like
		 parallel language with fork and join statements. They use
		 location sets to build a points-to graph using a fixed-point
		 dataflow computation (kill & gen sets).}
}

@InProceedings{rugina2000recursion,
  author =	 {Radu Rugina and Martin Rinard},
  title =	 {Recursion Unrolling for Divide and Conquer Programs},
  booktitle =	 {Proceedings of the Workshop on Languages and Compilers for
		 Parallel Computing (LCPC)},
  year =	 2000,
  series =	 lncs,
  volume =	 2017,
  pages =	 {34--48},
  address =	 {Yorktown Heights, New York},
  month =	 aug,
  annote =	 {Found by Jia. Basic idea is to unroll recursion a little
		 bit to improve performance. Like loop unrolling but for
		 recursion.}
}

@InProceedings{rushby2001bus,
  author =	 {John Rushby},
  title =	 {Bus Architectures for Safety-Critical Embedded Systems},
  booktitle =	 emsoft,
  year =	 2001,
  series =	 lncs,
  volume =	 2211,
  pages =	 {306--323},
  address =	 {Tahoe City, California},
  month =	 oct,
  annote =	 {Great discussion of avionics busses and the extremes they
		 go to to ensure safety in the face of failures.}
}

@InProceedings{russel1990oraclizable,
  author =	 {James R. Russel},
  title =	 {On Oraclizable Networks and {Kahn's} Principle},
  booktitle =	 popl,
  year =	 1990,
  pages =	 {320--328},
  address =	 {San Francisco, California},
  month =	 jan,
  annote =	 {Kahn networks extended to include nondeterministic merges.
		 Something like assuming there are additional outside inputs
		 to a deterministic network that ultimately produces the
		 behavior. Probably an interesting result, but rather
		 obscure.}
}

@Article{sagahyroon2000ahpl,
  author =	 {Assim A. Sagahyroon},
  title =	 {From {AHPL} to {VHDL}: A Course in Hardware Description
		 Languages},
  journal =	 transedu,
  year =	 2000,
  volume =	 43,
  number =	 4,
  pages =	 {449--454},
  month =	 nov,
  annote =	 {AHPL is a register-transfer language developed at the
		 University of Arizona as a teaching language. Not that
		 interesting. Stresses VHDL but doesn't mention Verilog. Some
		 interesting statistics. Perhaps I should write something up
		 for this journal.}
}

@InProceedings{sagiv1996solving,
  author =	 {M. Sagiv and T. Reps and R. Wilhelm},
  title =	 {Solving Shape-Analysis Problems in Languages with
		 Destructive Updating},
  booktitle =	 popl,
  year =	 1996,
  pages =	 {16--31},
  address =	 {St. Petersburg Beach, Florida},
  month =	 jan,
  oldkey =	 {sagiv1},
  sedtransform = {s/sagiv1/sagiv1996solving/}
}

@InProceedings{sah1994new,
  author =	 {Adam Sah and Jon Blow},
  title =	 {A New Architecture for the Implementation of Scripting
		 Languages},
  booktitle =	 {Proceedings of the USENIX Symposium on Very High Level
		 Languages (VHLL)},
  year =	 {1994},
  pages =	 {21--38},
  address =	 {Sante Fe, NM},
  month =	 oct,
  organization = {USENIX Association, Berkeley, CA}
}

@InProceedings{saidani2007parallelization,
  author =	 {Tarik Saidani and St\'ephane Piskorski and Lionel
		 Lacassagne and Samir Bouaziz},
  title =	 {Parallelization Schemes for Memory Optimization on the
		 {Cell} Processor: A Case Study of Image Processing
		 Algorithm},
  booktitle =	 {Proceedings of the Workshop on Memory Performance: Dealing
		 with Applications, Systems and Architecture (MEDEA)},
  year =	 2007,
  pages =	 {9--16},
  address =	 {Brastov, Romania},
  month =	 sep,
  annote =	 {From Rebecca. Associated with PACT 2007. Not so impressive
		 "look at what happened when we changed DMA transfer
		 sizes."}
}

@InProceedings{saidi1999modular,
  author =	 {Hassen Sa\"idi},
  title =	 {Modular and Incremental Analysis of Concurrent Software
		 Systems},
  booktitle =	 {Proceedings of the International Conference on Automated
		 Software Engineering},
  year =	 1999,
  pages =	 {92--101},
  address =	 {Cocoa Beach, Florida},
  month =	 oct,
  annote =	 {For our Emsoft Deadlock paper}
}

@InProceedings{sakurai1999scheduling,
  author =	 {Ryoji Sakurai and Mizuki Takahashi and Andrew Kay and
		 Akihisa Yamada and Tetsuya Fujimoto Takashi Kambe},
  title =	 {A scheduling method for synchronous communication in the
		 {Bach} hardware compiler},
  booktitle =	 asp-dac,
  year =	 1999,
  pages =	 {193--196 vol.~1},
  address =	 {Wanchai, Hong Kong},
  month =	 jan,
  annote =	 {Referenced by takahashi2000thread}
}

@InProceedings{salcic2006scheduler,
  author =	 {Zoran Salcic and Flavius Gruian and Partha Roop and Alif
		 Wahid},
  title =	 {A Scheduler Support Unit for Reactive Microprocessors},
  booktitle =	 {Proceedings of the International Conference on Embedded and
		 Real-Time Computing Systems and Applications},
  year =	 2006,
  pages =	 {368--372},
  address =	 {Sydney, Australia},
  month =	 aug,
  annote =	 {Mentioned by one of the Eurasip reviewers. Looks like
		 another priority-based approach.}
}

@InProceedings{saldanha1994performance,
  author =	 {Alexander Saldanha and Heather Harkness and Patrick C.
		 McGeer and Robert K. Brayton and Alberto L.
		 Sangiovanni-Vincentelli},
  title =	 {Performance optimization using exact sensitization},
  booktitle =	 dac94,
  year =	 1994,
  pages =	 {425--429},
  address =	 dac94a,
  month =	 jun,
  annote =	 {Random search.}
}

@Article{saldanha1994satisfaction,
  author =	 {Alexander Saldanha and Tiziano Villa and Robert K. Brayton
		 and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Satisfaction of Input and Output Encoding Constraints},
  journal =	 transcad,
  year =	 {1994},
  volume =	 {13},
  number =	 {5},
  pages =	 {589--602},
  month =	 may,
  annote =	 {Contains Tiziano's prime generation routines}
}

@InProceedings{saluja2004robust,
  author =	 {Nikhil Saluja and Sunil P. Khatri},
  title =	 {A robust algorithm for approximate compatible observability
		 don't care {(CODC)} computation},
  booktitle =	 dac04,
  year =	 2004,
  pages =	 {422--427},
  address =	 dac04a,
  month =	 jun,
  annote =	 {Searching for don't-cares.}
}

@Book{sampson1985writing,
  author =	 {Geoffrey Sampson},
  title =	 {Writing Systems, {A} Linguistic Introduction},
  publisher =	 {Stanford University Press},
  year =	 {1985},
  annote =	 {Execellent. One of the best overviews of writing systems
		 I've seen.}
}

@Article{sankaralingam2003exploiting,
  author =	 {K. Sankaralingam and R. Nagarajan and H. Liu and C. Kim and
		 J. Huh and D. Burger and S. W. Keckler and C. R. Moore},
  title =	 {Exploiting {ILP}, {TLP}, and {DLP} with the polymorphous
		 {TRIPS} architecture},
  journal =	 {SIGARCH Comput. Archit. News},
  year =	 2003,
  volume =	 31,
  number =	 2,
  pages =	 {422--433},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/871656.859667},
  issn =	 {0163-5964},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/871656.859667}
}

@InProceedings{santos1997functional,
  author =	 {Anna Dolejsi Santos and Andrew Wolfe and Edil S. T.
		 Fernandes},
  title =	 {Functional units utilization in a multiple-instruction
		 issue architecture},
  booktitle =	 {Proceedings of EUROMICRO},
  year =	 1997,
  pages =	 {228--233},
  address =	 {Budapest, Hungary},
  month =	 sep,
  annote =	 {Statistics about how much functional units are used},
  doi =		 {http://dx.doi.org/10.1109/EMSCNT.1997.658471},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/EMSCNT.1997.658471}
}

@Book{saraswat1993concurrent,
  author =	 {Vijay Saraswat},
  title =	 {Concurrent Constraint Programming},
  publisher =	 mit,
  year =	 {1993},
  series =	 {ACM Doctoral Dissertation Award},
  address =	 mit_a
}

@InProceedings{saraswat2007x10,
  author =	 {Vijay A. Saraswat and Vivek Sarkar and Christoph von
		 Praun},
  title =	 {X10: concurrent programming for modern architectures},
  booktitle =	 {PPoPP '07: Proceedings of the 12th ACM SIGPLAN symposium on
		 Principles and practice of parallel programming},
  year =	 {2007},
  pages =	 {271--271},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/1229428.1229483},
  isbn =	 {978-1-59593-602-8},
  location =	 {San Jose, California, USA},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1229428.1229483}
}

@Book{sather1983understanding,
  author =	 {Jim Sather},
  title =	 {Understanding the {Apple II}},
  publisher =	 {Quality Software},
  year =	 1983,
  address =	 {Reseda, CA},
  annote =	 {An excellent reference on the Apple II circuitry, including
		 the Disk II. Clearly a labor of love.}
}

@Article{savage1997eraser,
  author =	 {Stefan Savage and Michael Burrows and Greg Nelson and
		 Patrick Sobalvarro and Thomas Anderson},
  title =	 {Eraser: a Dynamic Data Race Detector for Multi-threaded
		 Programs},
  journal =	 {ACM Transactions on Computer Systems},
  year =	 1997,
  volume =	 15,
  number =	 4,
  pages =	 {391--411},
  month =	 nov,
  annote =	 {Used by the Helgrind tool, part of valgrind. Testing-based,
		 so depends on the test case, but not the scheduler. Nice
		 stuff. Appeared earlier that year at SOSP.}
}

@InProceedings{savoj1990use,
  author =	 {Hamid Savoj and Robert K. Brayton},
  title =	 {The Use of Observability and External Don't Cares for the
		 Simplification of Multi-Level Networks},
  booktitle =	 dac90,
  year =	 1990,
  pages =	 {297--301},
  address =	 dac90a,
  month =	 jun,
  annote =	 {Cited by brayton2001compatible.
		 
		 Describes an algorithm for computing observability don't
		 cares. Part of MIS-II.}
}

@InProceedings{saxena2003scaling,
  author =	 {P. Saxena and N. Menezes and P. Cocchini and D.A.
		 Kirkpatrick},
  title =	 {The scaling challenge: can correct-by-construction design
		 help?},
  booktitle =	 ispd,
  year =	 2003,
  pages =	 {51-58},
  affiliation =	 {Intel Labs (CAD Research), Hillsboro, OR},
  annote =	 {Major confirmation of the impact of latency on physical
		 design. Nice study on the alarming increase number of
		 sequential repeaters and pipelined wire. It explains why the
		 50k-block based methodology of Keutzer and Sylvester is not
		 effective.},
  entered =	 {Luca Carloni, 11/13/03},
  keywords =	 {buffers, repeaters, latency, interconnect fabric},
  oldkey =	 {saxena03},
  sedtransform = {s/saxena03/saxena2003scaling/}
}

@Article{saxena2004repeater,
  author =	 {P. Saxena and N. Menezes and P. Cocchini and D.A.
		 Kirkpatrick},
  title =	 {Repeater Scaling and its Impact on {CAD}},
  journal =	 transcad,
  year =	 2004,
  volume =	 23,
  number =	 4,
  pages =	 {451-462},
  month =	 apr
}

@Article{schaps1999compiler,
  author =	 {Gary L. Schaps},
  title =	 {Compiler Construction with {ANTLR} and {Java}},
  journal =	 {Dr.\ Dobb's Journal},
  year =	 1999,
  volume =	 24,
  number =	 3,
  pages =	 {84--89},
  month =	 mar,
  annote =	 {Mentioned on ANTLR home page.},
  url =		 {http://www.ddj.com/articles/1999/9903/},
  bdsk-url-1 =	 {http://www.ddj.com/articles/1999/9903/}
}

@InProceedings{schaumont1998programming,
  author =	 {Patrick Schaumont and Serge Vernalde and Luc Rijnders and
		 Marc Engels and Ivo Bolsens},
  title =	 {A Programming Environment for the Design of Complex High
		 Speed {ASICs}},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {315--320},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Cited by de-micheli1999hardware. Describes OCAPI.
		 
		 Heavily DSP-centric.}
}

@InProceedings{scheffer2002methodologies,
  author =	 {L. Scheffer},
  title =	 {Methodologies and Tools for Pipelined On-Chip
		 Interconnect},
  booktitle =	 iccd,
  year =	 2002,
  pages =	 {152-157},
  month =	 oct,
  affiliation =	 {Cadence Design Systems},
  annote =	 {Citing the CAV, ICCAD, and TCAD paper.},
  entered =	 {Luca Carloni,8/15/2003},
  keywords =	 {wire pipelining, NOC}
}

@InProceedings{schelle2005cusp,
  author =	 {Graham Schelle and Dirk Grunwald},
  title =	 {{CUSP}: a modular framework for high speed network
		 applications on {FPGAs}},
  booktitle =	 {Proceedings of the International Symposium on
		 Field-Programmable Gate Arrays (FPGA)},
  year =	 2005,
  pages =	 {246--257},
  address =	 {Monterey, California},
  doi =		 {http://doi.acm.org/10.1145/1046192.1046224},
  isbn =	 {1-59593-029-9},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1046192.1046224}
}

@Book{schmidt1986denotational,
  author =	 {David A. Schmidt},
  title =	 {Denotational Semantics: {A} Methodology for Language
		 Development},
  publisher =	 {Allyn and Bacon},
  year =	 {1986},
  annote =	 {A reasonable introduction to the subject. Technical, but
		 with real-world applications.}
}

@Proceedings{schmidt1988advances,
  title =	 {Advances in Database Technology - {EDBT} '88},
  year =	 {1988},
  editor =	 {J. W. Schmidt and S. Ceri and M. Missikoff},
  volume =	 {303},
  series =	 lncs,
  address =	 {Venice, Italy},
  month =	 mar,
  publisher =	 sv,
  booktitle =	 {Advances in Database Technology - {EDBT} '88}
}

@InProceedings{schmidt1998data,
  author =	 {David A. Schmidt},
  title =	 {Data Flow Analysis is Model Checking of Abstract
		 Interpretations},
  booktitle =	 popl,
  year =	 1998,
  pages =	 {38--48},
  address =	 {San Diego, California},
  month =	 jan,
  annote =	 {Ed Clarke recommended it. Rather opaque. Takes a very
		 mathematical view of abstract interpretation and relates it
		 to compiler dataflow analysis. Not very useful.},
  url =		 {http://www.cis.ksu.edu/~schmidt},
  bdsk-url-1 =	 {http://www.cis.ksu.edu/~schmidt}
}

@InProceedings{schmidt1998program,
  author =	 {David A. Schmidt and Bernhard Steffan},
  title =	 {Program Analysis as Model Checking of Abstract
		 Interpretations},
  booktitle =	 sas,
  year =	 1998,
  series =	 lncs,
  volume =	 1503,
  address =	 {Pisa, Italy},
  month =	 sep,
  publisher =	 sv,
  annote =	 {Longer version of schmidt1998data?},
  url =		 {http://www.cis.ksu.edu/~schmidt},
  bdsk-url-1 =	 {http://www.cis.ksu.edu/~schmidt}
}

@InProceedings{schnarr2001facile,
  author =	 {Eric C. Schnarr and Mark D. Hill and James R. Larus},
  title =	 {Facile: A Language and Compiler For High-Performance
		 Processor Simulators},
  booktitle =	 pldi,
  year =	 2001,
  pages =	 {FIXME},
  address =	 {Snowbird, Utah},
  month =	 jun,
  annote =	 {Interesting: the idea is to cache the results of executing
		 instructions or small sequences thereof and play them back
		 quickly as needed. They pitch it as a form of runtime
		 partial evaluation.
		 
		 The approach seems well-suited to the out-of-order processor
		 architectures they are simulating because the same patterns
		 tend to crop up again and again. Where else could this
		 approach be applied?}
}

@InProceedings{schneider2000verified,
  author =	 {Klaus Schneider},
  title =	 {A Verified Hardware Synthesis for {Esterel} Programs},
  booktitle =	 {Proceedings of the International IFIP Workshop on
		 Distributed and Parallel Embedded Systems (DIPES)},
  year =	 2000,
  address =	 {Paderborn, Germany},
  annote =	 {Translating Esterel into his Quartz language},
  optmonth =	 {FIXME},
  optpages =	 {FIXME},
  url =		 {http://goethe.ira.uka.de/~schneider/},
  bdsk-url-1 =	 {http://goethe.ira.uka.de/~schneider/}
}

@InProceedings{schneider2001new,
  author =	 {Klaus Schneider and M. Wenz},
  title =	 {A New Method for Compiling Schizophrenic Synchronous
		 Programs},
  booktitle =	 cases,
  year =	 2001,
  address =	 cases2001a,
  month =	 nov,
  annote =	 {Translate Esterel into Quartz to fix reincarnation at the
		 source level.},
  optpages =	 {FIXME}
}

@InProceedings{schneider2002proving,
  author =	 {Klaus Schneider},
  title =	 {Proving the Equivalence of Microstep and Macrostep
		 Semantics},
  booktitle =	 {Proceedings of the 15th International Conference on Theorem
		 Proving in Higher Order Logics (TPHOLs)},
  year =	 2002,
  series =	 lncs,
  volume =	 2410,
  address =	 {Hampton, Virginia},
  month =	 aug,
  publisher =	 sv,
  annote =	 {Formal matching of semantics.}
}

@InProceedings{schoeberl2004real-time,
  author =	 {Martin Schoeberl},
  title =	 {Real-Time Scheduling on a {Java} Processor},
  booktitle =	 {Proceedings of the 10th International Conference on
		 Real-Time and Embedded Computing Systems and Applications
		 (RTCSA)},
  year =	 2004,
  address =	 {Gothenburg, Sweden},
  month =	 aug,
  annote =	 {User-defined schedulers possible. Not especially
		 relevant.},
  optpages =	 {FIXME}
}

@InProceedings{schoeberl2005design,
  author =	 {Martin Schoeberl},
  title =	 {Design and Implementation of an Efficient Stack Machine},
  booktitle =	 {Proceedings of the 12th IEEE Reconfigurable Architecture
		 Workshop (RAW)},
  year =	 2005,
  address =	 {Denver, Colorado},
  month =	 apr,
  annote =	 {Off http://www.jopdesign.com/doc/stack.pdf.
		 
		 Very "stack machine" oriented as well as Java-focused.
		 Relevant, though.},
  optpages =	 {FIXME}
}

@InProceedings{schoeberl2006time,
  author =	 {Martin Schoeberl},
  title =	 {A Time Predictable {J}ava Processor},
  booktitle =	 date,
  year =	 2006,
  pages =	 {800--805},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Sounds a lot like our PRET ideas.}
}

@InProceedings{scholl1997function,
  author =	 {Christoph Scholl and Rolf Drechsler and Bernd Becker},
  title =	 {Function Simulation using Binary Decision Diagrams},
  booktitle =	 {Proceedings of the IEEE/ACM International Conference on
		 Computer-Aided Design},
  year =	 {1997},
  pages =	 {8--12}
}

@TechReport{schols1988notes,
  author =	 {Huub M. J. L. Schols},
  title =	 {Notes on Delay-Insensitive Communication},
  institution =	 {Department of Mathematics and Computing Science, Eindhoven
		 University of Technology},
  year =	 1988,
  number =	 {88/06},
  address =	 {PO Box 513, 5600 MB Eindhoven, The Netherlands},
  month =	 mar,
  annote =	 {From Cheoljoo's webpage,
		 http://www1.cs.columbia.edu/~cjeong/readings/
		 
		 Starts with trace theory.}
}

@InProceedings{scholz1995four,
  author =	 {Enno Scholz},
  title =	 {Four Concurrency Primitives for {Haskell}},
  booktitle =	 {ACM/IFIP Haskell Workshop},
  year =	 1995,
  pages =	 {1--12},
  address =	 {La Jolla, California},
  month =	 jun,
  note =	 {Yale Research Report YALE/DCS/RR--1075},
  annote =	 {Not what's currently implemented? send, receive, fork,
		 newChan. "Processes communicate by point-to-point,
		 synchronous message-passing on typed, first-class channels."
		 Interesting collection of other mechanisms -- concurrent ML
		 and Ada -- ported to Haskell.},
  url =		 {http://haskell.org/haskell-workshop/1995/index.html},
  bdsk-url-1 =	 {http://haskell.org/haskell-workshop/1995/index.html}
}

@Article{schorr1964computer-aided,
  author =	 {H. Schorr},
  title =	 {Computer-Aided Digital System Design and Analysis using a
		 Register Transfer Language},
  journal =	 {IEEE Transactions on Electronic Computers},
  year =	 1964,
  volume =	 {EC--13},
  pages =	 {730-737},
  month =	 dec,
  annote =	 {Very very early language. chu1965algol-like cites a
		 Princeton tech. report by the same author.}
}

@InProceedings{schuette1991instruction-level,
  author =	 {Michael A. Schuette and John P. Shen},
  title =	 {An instruction-level performance analysis of the Multiflow
		 TRACE 14/300},
  booktitle =	 {Proceedings of the annual international symposium on
		 Microarchitecture (MICRO)},
  year =	 1991,
  pages =	 {2--11},
  address =	 {Albuquerque, New Mexico},
  annote =	 {Cited by santos1997functional. Shows some very low
		 utilization figures for a pipelined processor.},
  doi =		 {http://doi.acm.org/10.1145/123465.123468},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/123465.123468}
}

@Article{schultz2003automatic,
  author =	 {Ulrik P. Schultz and Julia L. Lawall and Charles Consel},
  title =	 {Automatic program specialization for {Java}},
  journal =	 toplas,
  year =	 2003,
  volume =	 25,
  number =	 4,
  pages =	 {452--499},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/778559.778561},
  issn =	 {0164-0925},
  publisher =	 {ACM Press},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/778559.778561}
}

@InProceedings{schulz2000introduction,
  author =	 {Steven E. Schulz},
  title =	 {An Introduction to {SLDL} and Rosetta},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {571--572},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Luc Semeria pointed me to this. Acknowledges the
		 least-common-denominator issue. Rosetta: multiple views,
		 each termed a facet. Has predefined domains. Semantic
		 backplain? Rosetta looks a little like VHDL and Verilog.
		 Objects have interfaces and bodies.},
  url =		 {http://www.inmet.com/SLDL},
  bdsk-url-1 =	 {http://www.inmet.com/SLDL}
}

@Article{schulzkey2004object,
  author =	 {C. Schulz-Key and M. Winterholer and T. Schweizer and T.
		 Kuhn and W. Rosenstiel},
  title =	 {Object-Oriented Modeling and Synthesis of {SystemC}
		 Specifications},
  journal =	 asp-dac,
  year =	 2004,
  volume =	 00,
  pages =	 {238-243},
  address =	 {Los Alamitos, CA, USA},
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/ASPDAC.2004.147}
		 ,
  isbn =	 {0-7803-8175-0},
  publisher =	 {IEEE Computer Society},
  bdsk-url-1 =	 {http://doi.ieeecomputersociety.org/10.1109/ASPDAC.2004.147}
		 
}

@Book{schwartz1993learning,
  author =	 {Randal L. Schwartz},
  title =	 {Learning Perl},
  publisher =	 ora,
  year =	 {1993},
  address =	 ora_a,
  annote =	 {Cody's, 950125}
}

@InProceedings{scott1971toward,
  author =	 {Dana Scott and Christopher Strachey},
  title =	 {Toward a Mathematical Semantics for Computer Languages},
  booktitle =	 {Proceedings of the Symposium on Computers and Automata},
  year =	 {1971},
  pages =	 {19--46},
  month =	 apr,
  organization = {Polytechnic Institute of Brooklyn}
}

@InProceedings{scott1972lattice,
  author =	 {Dana Scott},
  title =	 {Lattice Theory, Data Types and Semantics},
  editor =	 {Randall Rustin},
  booktitle =	 {Formal Semantics of Programming Languages},
  year =	 {1972},
  pages =	 {65--106},
  publisher =	 ph,
  annote =	 {A very readable discussion of ``why lattices,'' taken
		 directly from a talk at a symposium. The fundamental result
		 he gives is that the limit of recursively constructing
		 functions, starting with D_1 \rightarrow D_1, and using the
		 recursion D_n = [ D_{n-1} \rightarrow D_{n-1}] produces a
		 limit, D_{\infty} = [ D_{\infty} \rightarrow D_{\infty} ],
		 useful for recursive function theory.}
}

@Book{scott2000programming,
  author =	 {Michael L. Scott},
  title =	 {Programming Language Pragmatics},
  publisher =	 mk,
  year =	 2000,
  address =	 mk_a,
  annote =	 {Used for a variety of programming language courses.},
  url =		 {http://www.cs.rochester.edu/u/www/u/scott/pragmatics/home.html}
		 ,
  bdsk-url-1 =	 {http://www.cs.rochester.edu/u/www/u/scott/pragmatics/home.html}
		 
}

@Book{scragg1974history,
  author =	 {D. G. Scragg},
  title =	 {A History of {English} Spelling},
  publisher =	 {Manchester University Press/Barnes \& Noble Books},
  year =	 {1974},
  series =	 {Mont Follik},
  annote =	 {Recommended by SED:sampson:85a},
  number =	 {3}
}

@Article{seawright1994clairvoyant,
  author =	 {Andrew Seawright and Forrest Brewer},
  title =	 {Clairvoyant: A Synthesis System for Production-Based
		 Specification},
  journal =	 transvlsi,
  year =	 1994,
  volume =	 2,
  number =	 2,
  pages =	 {172--185},
  month =	 jun,
  annote =	 {Luciano (?) referred me to this re: encoding of Esterel
		 states.
		 
		 Probably Seawright's thesis, which later turned into
		 Synopsys' Protocol Compiler product.}
}

@InProceedings{seawright1996system,
  author =	 {Andrew Seawright and Ulrich Holtmann and Wolfgang Weyer and
		 Berry Pangrle and Rob Verbrugghe and Joseph Buck},
  title =	 {A System for Compiling and Debugging Structured Data
		 Processing Controllers},
  booktitle =	 {Proceedings of the European Design Automation Conference},
  year =	 {1996},
  address =	 {Geneva, Switzerland},
  month =	 sep,
  annote =	 {Describes Dali, later called Protocol Compiler}
}

@InProceedings{seawright1998partitioning,
  author =	 {Andrew Seawright and Wolfgang Meyer},
  title =	 {Partitioning and optimizing controllers synthesized from
		 hierarchical high-level descriptions},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {770--775},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Protocol Compiler algorithm. Starts from
		 regular-expression-like specifications.
		 
		 Takes subtrees (subexpressions) of the regular expression
		 specification, enumerates their states, and resynthesizes
		 them optimally.}
}

@Article{seger1994generalized,
  author =	 {Carl-Johan H. Seger and Janusz A. Brzozowski},
  title =	 {Generalized Ternary Simulation of Sequential Circuits},
  journal =	 {Informatique th\'eorique et Applications},
  year =	 {1994},
  volume =	 {28},
  number =	 {3--4},
  pages =	 {159--186},
  annote =	 {The original presentation of the ternary theory presented
		 in their Asynchronous Circuits book}
}

@InProceedings{seidner1983interactive,
  author =	 {Rich Seidner and Nick Tindall},
  title =	 {Interactive Debug Requirements},
  booktitle =	 {Proceedings of the {ACM} {SIGSOFT/SIGPLAN} Software
		 Engineering Symposium on High-Level Debugging, Pacific
		 Grove, {CA}, {USA}, 20--23 March 1983},
  year =	 {1983},
  series =	 {SIGPLAN Notices, 18(8):9--22, August 1983}
}

@InProceedings{semeraro2002energy-efficient,
  author =	 {G. Semeraro and G. Magklis and R. Balasubramonian and D. H.
		 Albonesi and S. Dwaradasas and M. L. Scott},
  title =	 {Energy-efficient processor design using multiple clock
		 domains with dynamic voltage and frequency scaling},
  booktitle =	 {Proc. Intl. Symp. on High Performance Computer
		 Architecture},
  year =	 {2002},
  oldkey =	 {semeraro02},
  sedtransform = {s/semeraro02/semeraro2002energy-efficient/}
}

@InProceedings{semeria1998encoding,
  author =	 {Luc S\'em\'eria and Giovanni De Micheli},
  title =	 {Encoding of Pointers for Hardware Synthesis},
  booktitle =	 {Proceedings of the International Workshop on IP-Based
		 Synthesis and System Design (IWLAS)},
  year =	 1998,
  pages =	 {57--63},
  address =	 {Grenoble, France},
  month =	 dec,
  annote =	 {More of Luc's pointer stuff},
  url =		 {http://azur.stanford.edu/~lucs/paper},
  bdsk-url-1 =	 {http://azur.stanford.edu/~lucs/paper}
}

@InProceedings{semeria1998spc,
  author =	 {Luc S\'em\'eria and Giovanni De Micheli},
  title =	 {{SpC}: Synthesis of Pointers in {C}, Application of Pointer
		 Analysis to the Behavioral Synthesis from {C}},
  booktitle =	 iccad,
  year =	 1998,
  pages =	 {321--326},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Luc's pointer analysis for SystemC},
  url =		 {http://azur.stanford.edu/~lucs/paper},
  bdsk-url-1 =	 {http://azur.stanford.edu/~lucs/paper}
}

@InProceedings{semeria2000memory,
  author =	 {Luc S\'em\'eria and Koichi Sato and Giovanni De Micheli},
  title =	 {Memory Representation and Hardware Synthesis of {C} Code
		 with Pointers and Complex Data Structures},
  booktitle =	 {Proceedings of the Synthesis and System Integration of
		 Mixed Technologies Workshop (SASIMI)},
  year =	 2000,
  pages =	 {43--48},
  address =	 {Kyoto, Japan},
  month =	 apr,
  annote =	 {More of Luc's pointer stuff},
  url =		 {http://azur.stanford.edu/~lucs/paper},
  bdsk-url-1 =	 {http://azur.stanford.edu/~lucs/paper}
}

@InProceedings{semeria2000methodology,
  author =	 {Luc S\'em\'eria and Abhijit Ghosh},
  title =	 {Methodology for Hardware/Software Co-verification in
		 {C/C++}},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {405--408},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Luc pointed me to this.}
}

@InProceedings{semeria2000resolution,
  author =	 {Luc S\'em\'eria and Koichi Sato and Giovanni De Micheli},
  title =	 {Resolution of Dynamic Memory Allocation and Pointers for
		 the Behavioral Synthesis from {C}},
  booktitle =	 date,
  year =	 2000,
  pages =	 {312--319},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {More of Luc's pointer stuff},
  url =		 {http://azur.stanford.edu/~lucs/paper},
  bdsk-url-1 =	 {http://azur.stanford.edu/~lucs/paper}
}

@Article{semeria2001resolution,
  author =	 {Luc S\'em\'eria and Giovanni {De Micheli}},
  title =	 {Resolution, Optimization, and Encoding of Pointer Variables
		 for the Behavioral Synthesis from {C}},
  journal =	 transcad,
  year =	 2001,
  volume =	 20,
  number =	 2,
  pages =	 {213--233},
  month =	 feb,
  annote =	 {From Luc's website.},
  url =		 {http://azur.stanford.edu/~lucs/paper/},
  bdsk-url-1 =	 {http://azur.stanford.edu/~lucs/paper/}
}

@Article{semeria2001synthesis,
  author =	 {Luc S\'em\'eria and Koichi Sato and Giovanni {De Micheli}},
  title =	 {Synthesis of Hardware Models in {C} with Pointers and
		 Complex Data Structures},
  journal =	 transvlsi,
  year =	 2001,
  volume =	 9,
  number =	 6,
  pages =	 {743--756},
  month =	 {dec},
  annote =	 {From Luc's website.}
}

@InProceedings{sentovich1992sequential,
  author =	 {Ellen M. Sentovich and Kanwar Jit Singh and Cho Moon and
		 Hamid Savoj and Robert K. Brayton and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Sequential circuit design using synthesis and
		 optimization},
  booktitle =	 iccd,
  year =	 1992,
  pages =	 {328--333},
  address =	 {Cambridge, Massachusetts},
  month =	 oct,
  annote =	 {A conference paper on SIS.
		 
		 Starts from either a state transition table or a logic-level
		 description.
		 
		 Built on MIS-II, talks about STG extraction "The stg_extract
		 operation should be used with caution as the STG may be too
		 large to extract."
		 
		 Includes retiming, retiming and resynthesis, and retiming
		 don't cares. "Finally, sequential don't cares based on
		 unreachable states can be computed and used during node
		 minimization." Mentions implicit state enumeration.
		 
		 Really nice overview; better than the technical report.}
}

@TechReport{sentovich1992sis,
  author =	 {Ellen M. Sentovich and Kanwar Jit Singh and Luciano Lavagno
		 and Cho Moon and Rajeev Murgai and Alexander Saldanha and
		 Hamid Savoj and Paul R. Stephan and Robert K. Brayton and
		 Alberto Sangiovanni-Vincentelli},
  title =	 {{SIS}: A System for Sequential Circuit Synthesis},
  institution =	 ucb,
  year =	 1992,
  number =	 {UCB/ERL M92/41},
  month =	 may,
  annote =	 {The seminal reference on SIS.}
}

@InProceedings{sentovich1993multiple,
  author =	 {Ellen Sentovich and Vigyan Singhal and Robert Brayton},
  title =	 {Multiple Boolean Relations},
  booktitle =	 iwls,
  year =	 1993,
  address =	 iwls_a,
  month =	 may,
  annote =	 {Discusses how you might characterize complex don't-care
		 situations, such as what might arise when two FSMs are
		 connected together. Sequential don't-cares can be fairly
		 complex and the freedom is not as simple as, say, a
		 seven-segment decoder.
		 
		 I read this thinking it would be good for the IWLS 2002
		 paper, but it actually isn't that helpful. }
}

@InProceedings{sentovich1996brief,
  author =	 {Ellen M. Sentovich},
  title =	 {A Brief Study of {BDD} Package Performance},
  booktitle =	 fmcad,
  year =	 1996,
  series =	 lncs,
  volume =	 1166,
  pages =	 {389--403},
  address =	 {Palo Alto, California},
  month =	 nov,
  annote =	 {Compares some BDD packages using experiments.}
}

@InProceedings{sentovich1996latch,
  author =	 {Ellen M. Sentovich and Horia Toma and G\'erard Berry},
  title =	 {Latch Optimization in Circuits Generated from High-Level
		 Descriptions},
  booktitle =	 iccad,
  year =	 1996,
  pages =	 {428--435},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Like touati1993optimized, the idea of exploring the
		 reachable state set with an eye toward identifying latches
		 that can be easily removed. Also does local reencoding of
		 groups of latches (one-hot to log n for small groups,
		 etc).}
}

@InProceedings{sentovich1997efficient,
  author =	 {Ellen M. Sentovich and Horia Toma and G\'erard Berry},
  title =	 {Efficient Latch Optimization Using Exclusive Sets},
  booktitle =	 dac97,
  year =	 1997,
  pages =	 {8--11},
  address =	 dac97a,
  month =	 jun,
  annote =	 {A condensation of toma1996latch. Uses the reachable state
		 space of the FSM to reduce the number of latches through
		 reencoding.}
}

@InProceedings{sereni2003static,
  author =	 {Damien Sereni and Oege de Moor},
  title =	 {Static analysis of aspects},
  booktitle =	 {Proceedings of the 2nd international conference on
		 Aspect-oriented software development},
  year =	 2003,
  pages =	 {30--39},
  address =	 {Boston, Massachusetts},
  month =	 mar,
  annote =	 {Found through a random search of aspect-oriented things.
		 
		 Talks about adding additional code that watches the sequence
		 of function calls and invokes "advice" code where it is
		 desired based on a regular-expression-like specification of
		 where things should go. Main focus is on doing this
		 efficiently. I don't really see what the "static analysis"
		 part of the title refers to. Statically optimizing the
		 simulation of the resulting FSMs, perhaps.}
}

@Manual{serialata2001serialata,
  title =	 {Serial {ATA}: High Speed Serialized {AT} Attachment},
  organization = {Serial ATA Workgroup},
  month =	 aug,
  year =	 2001,
  note =	 {www.serialata.org},
  annote =	 {From Mike Kishinevsky. 307-page document describing the
		 serial protocol for internal disk interfaces. Everything
		 from physical connector issues to layers 1, 2, and 3.
		 Proposed as an example of a protocol that might be
		 appropriate for synthesizing hardware from Esterel.
		 
		 http://www.serialata.org/cgi-bin/SerialATA10gold.zip}
}

@InProceedings{sermulins2005cache,
  author =	 {Janis Sermulins and William Thies and Rodric Rabbah and
		 Saman Amarasinghe},
  title =	 {Cache aware optimization of stream programs},
  booktitle =	 lctes,
  year =	 {2005},
  pages =	 {115--126},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/1065910.1065927},
  isbn =	 {1-59593-018-3},
  location =	 {Chicago, Illinois, USA},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1065910.1065927}
}

@Manual{sgi1999c,
  title =	 {C Language Reference Manual},
  organization = {Silicon Graphics, Inc.},
  year =	 1999,
  url =		 {http://www.hipecc.twsu.edu/C Lang Ref Man.pdf},
  bdsk-url-1 =	 {http://www.hipecc.twsu.edu/C%20Lang%20Ref%20Man.pdf}
}

@TechReport{sgroi1998quasi-static,
  author =	 {Marco Sgroi and Luciano Lavagno and Alberto
		 Sangiovanni-Vincentelli},
  title =	 {Quasi-Static Scheduling of Free-Choice {Petri} Nets},
  institution =	 ucb,
  year =	 1998,
  number =	 {UCB/ERL M98/9},
  annote =	 {Companion to their 1999 DAC paper. Describes a way of doing
		 partial scheduling on asynchronous systems to synthesize
		 software.},
  url =		 {http://www-cad.eecs.berkeley.edu/~sgroi/qss.ps},
  bdsk-url-1 =	 {http://www-cad.eecs.berkeley.edu/~sgroi/qss.ps}
}

@InProceedings{sgroi1999synthesis,
  author =	 {Marco Sgroi and Luciano Lavagno and Yosinori Watanabe and
		 Alberto Sangiovanni-Vincentelli},
  title =	 {Synthesis of Embedded Software Using Free-Choice {Petri}
		 Nets},
  booktitle =	 dac99,
  year =	 1999,
  pages =	 {805--810},
  address =	 dac99a,
  month =	 jun
}

@Article{sha1990priority,
  author =	 {Lui Sha and Raghunathan Rajkumar and John Lehoczky},
  title =	 {Priority Inheritance Protocols: An Approach to Real-Time
		 Synchronization},
  journal =	 transcomp,
  year =	 1990,
  volume =	 39,
  number =	 9,
  pages =	 {1175--1184},
  month =	 sep,
  annote =	 {Interesting. John is my mother's college roommate's
		 husband, at CMU.
		 
		 Good definition of priority inversion: higher-priority task
		 being blocked by a lower-priority one.
		 
		 Nasty scenario: p3 gets lock, starts critical section, p1
		 preempts p3, blocks waiting for p3 to finish, then p2
		 preempts p3 for a while.}
}

@Article{sha2004real,
  author =	 {Lui Sha and Tarek Abdelzaher and Karl-Erik \AA{}rz\'en and
		 Anton Cervin and Theodore Baker and Alan Burns and Giorgio
		 Buttazzo and Marco Caccamo and John Lehoczky and Aloysius K.
		 Mok},
  title =	 {Real Time Scheduling Theory: A Historical Perspective},
  journal =	 {Real-Time Systems},
  year =	 2004,
  volume =	 28,
  number =	 {2--3},
  pages =	 {101--155},
  month =	 nov,
  annote =	 {Part of a special anniversary issue}
}

@TechReport{shah2008memory,
  author =	 {Nishant R. Shah},
  title =	 {Memory Issues in {PRET} Machines},
  institution =	 cucs,
  year =	 2008,
  number =	 {CUCS--059--08},
  address =	 nyny,
  month =	 dec,
  annote =	 {Mostly information about DDR2 and how it might work in the
		 PRET world. Basic result: it is pipelined, with some
		 restrictions, but should work as such. Probably want some
		 sort of TTP-like controller to arbitrate among banks to
		 facilitate sharing.}
}

@InProceedings{shamehri1993usability,
  author =	 {Nahid Shamehri and Mariam Kamkar and Peter Fritzson},
  title =	 {Usability Criteria for Automated Debugging Systems},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {749},
  pages =	 {16--39},
  publisher =	 kl,
  annote =	 {A detailed description of a number of systems.}
}

@Article{shamir1979linear,
  author =	 {Adi Shamir},
  title =	 {A Linear Time Algorithm for Finding Minimum Cutsets in
		 Reducible Graphs},
  journal =	 {SIAM Journal on Computing},
  year =	 {1979},
  volume =	 {8},
  number =	 {4},
  pages =	 {645--655},
  month =	 nov,
  annote =	 {Reducible graphs only.}
}

@InProceedings{shankar2001detecting,
  author =	 {Umesh Shankar and Kunal Talwar and Jeffrey S. Foster and
		 David Wagner},
  title =	 {Detecting Format String Vulnerabilities With Type
		 Qualifiers},
  booktitle =	 {Proceedings of the 10th USENIX Security Symposium},
  year =	 2001,
  pages =	 {201--216},
  address =	 {Washington, DC},
  month =	 aug,
  annote =	 {Angelos pointed this out to me. Using type system-like
		 analysis to detect unsafe printf statements. Basic idea:
		 data that could come from an attacker is "tainted" Follow
		 its path through the program. It is an error for tainted
		 data to be interpreted as a format string. Perl has a
		 mechanism like this. Subtyping: untainted is a subtype of
		 tainted.
		 
		 Problem: printf(buf) and printf("%s", buf) appear to do the
		 same thing.
		 
		 Uses a type qualifier package from Aiken (Berkeley). And an
		 annotation gui (PAM) for emacs, also from Berkeley.}
}

@Article{shankar2005runtime,
  author =	 {Ajeet Shankar and S. Subramanya Sastry and Rastislav
		 Bod\'{\i}k and James E. Smith},
  title =	 {Runtime specialization with optimistic heap analysis},
  journal =	 {SIGPLAN Not.},
  year =	 2005,
  volume =	 40,
  number =	 10,
  pages =	 {327--343},
  address =	 {New York, NY, USA},
  doi =		 {http://doi.acm.org/10.1145/1103845.1094837},
  issn =	 {0362-1340},
  publisher =	 {ACM},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1103845.1094837}
}

@Article{shannon1938symbolic,
  author =	 {Claude Elwood Shannon},
  title =	 {A Symbolic Analysis of Relay and Switching Circuits},
  journal =	 {Transactions of the American Institute of Electrical
		 Engineers},
  year =	 1938,
  volume =	 57,
  pages =	 {713--723},
  annote =	 {The first to make the connection to Boolean logic and
		 switching circuits.}
}

@MastersThesis{shannon1940symbolic,
  author =	 {Claude Elwood Shannon},
  title =	 {A symbolic analysis of relay and switching circuits},
  school =	 {Massachusetts Institute of Technology},
  year =	 1940,
  annote =	 {A very early work on switching logic.}
}

@Article{shannon1998communication,
  author =	 {Claude Elwood Shannon},
  title =	 {Communication in the Presence of Noise},
  journal =	 procieee,
  year =	 1998,
  volume =	 86,
  number =	 2,
  pages =	 {447--457},
  month =	 feb,
  annote =	 {A reprint of the classic paper. The IEEE publishes a book
		 containing the collected papers of Shannon.}
}

@InProceedings{shao2009compositional,
  author =	 {Baolin Shao and Nalini Vasudevan and Stephen A. Edwards},
  title =	 {Compositional Deadlock Detection for Rendezvous
		 Communication},
  booktitle =	 emsoft,
  year =	 2009,
  pages =	 {59--66},
  address =	 {Grenoble, France},
  month =	 oct,
  annote =	 {How to avoid using NuSMV by abstracting explicit machines
		 along the way.},
  selectivity =	 {33/106 = 31\%}
}

@Book{shapiro1983algorithmic,
  author =	 {Ehud Y. Shapiro},
  title =	 {Algorithmic Program Debugging},
  publisher =	 mit,
  year =	 {1983},
  series =	 {ACM Distinguished Dissertations},
  address =	 mit_a,
  annote =	 {Excellent writing. Describes a formal way to query the
		 programmer about the vailidity of his program.}
}

@InProceedings{shapiro1997fast,
  author =	 {Marc Shapiro and Susan Horwitz},
  title =	 {Fast and Accurate Flow-Insensitive Points-to Analysis},
  booktitle =	 popl,
  year =	 {1997},
  pages =	 {1--14},
  address =	 {Paris, France},
  month =	 jan
}

@TechReport{sharp2000flash,
  author =	 {Richard W. Sharp and Alan Mycroft},
  title =	 {The {FLaSH} Compiler: Efficient Circuits from Functional
		 Specifications},
  institution =	 {AT\&T Laboratories Cambridge},
  year =	 2000,
  number =	 {tr.2000.3},
  annote =	 {Interesting way to synthesize controllers and insert clock
		 cycles. I received this originally because it was submitted
		 to ACM TOPLAS.},
  url =		 {http://www.cl.cam.ac.uk/users/am/papers/},
  bdsk-url-1 =	 {http://www.cl.cam.ac.uk/users/am/papers/}
}

@Book{shaw2001real-time,
  author =	 {Alan C. Shaw},
  title =	 {Real-Time Systems and Software},
  publisher =	 jw,
  year =	 2001,
  address =	 jw_a,
  annote =	 {I met Shaw at U. Washington. Nice survey of real-time
		 issues, including scheduling, clock distribution, and
		 operating systems. Example is air-traffic control systems.}
}

@InProceedings{sheeran1984mufp,
  author =	 {Mary Sheeran},
  title =	 {{$\mu$FP}, An Algebraic {VLSI} Design Language},
  booktitle =	 lfp,
  year =	 1984,
  pages =	 {104--112},
  address =	 {Austin, Texas},
  month =	 aug,
  annote =	 {One of the SCP reviewers said I should cite this. UNREAD.
		 
		 Columbia has it? QA76.73 .L23 A26 1984}
}

@InProceedings{sheeran1998tutorial,
  author =	 {Mary Sheeran and Gunnar St\aa{}lmarck},
  title =	 {Tutorial on St\aa{}lmarck's Proof Procedure for
		 Propositional Logic},
  booktitle =	 fmcad,
  year =	 1998,
  series =	 lncs,
  volume =	 1522,
  pages =	 {82--99},
  address =	 {Palo Alto, California},
  month =	 nov,
  publisher =	 sv,
  annote =	 {Berry suggested I look at this. Tom gave me these
		 proceedings.}
}

@InProceedings{shelton2001developing,
  author =	 {Charles P. Shelton and Philip Koopman},
  title =	 {Developing a Software Architecture for Graceful Degradation
		 in an Elevator Control System},
  booktitle =	 {Proceedings of the Workshop on Reliability in Embedded
		 Systems},
  year =	 2001,
  address =	 {New Orleans, Louisana},
  month =	 oct,
  annote =	 {Part of the RoSES project at CMU. Really not much here.
		 They describe a paper design for an elevator controller, but
		 there aren't any results that suggest that something
		 actually happened.}
}

@InProceedings{shelton2002using,
  author =	 {Charles P. Shelton and Philip Koopman},
  title =	 {Using Architectural Properties to Model and Measure
		 System-Wide Graceful Degredation},
  booktitle =	 {Proceedings of the Workshop on Reliability in Embedded
		 Systems},
  year =	 2002,
  address =	 {New Orleans, Louisana},
  month =	 oct,
  annote =	 {Part of the RoSES project at CMU. Rather airy. Discusses
		 the elevator controller and another in the context of how to
		 degrade gracefully. Not much here.}
}

@InProceedings{shen1993probalistic,
  author =	 {Amelia Shen and Srinivas Devadas and Abhijit Gosh},
  title =	 {Probalistic Construction and Manipulation of Free Boolean
		 Diagrams},
  booktitle =	 iccad,
  year =	 {1993},
  month =	 nov,
  annote =	 {Free BDDs plus nodes with AND, OR, and XOR behavior.
		 Intended for use with probabilistic verification (evaluate
		 on a boolean field of 2^n, not just two, values)}
}

@Book{sherman1985paragon,
  author =	 {Mark Steven Sherman},
  title =	 {Paragon: {A} Language Using Type Hierarchies for the
		 Specification, Implementation, and Selection of Abstract
		 Data Types},
  publisher =	 sv,
  year =	 {1985},
  volume =	 {189},
  series =	 lncs,
  annote =	 {Well-written description of a language that supports
		 multiple implementations of data types through a
		 hierarchical structure. Uses attributes to guide a
		 type-selection process.}
}

@Article{shimizu1989cpc,
  author =	 {Kentaro Shimizu and Eiichi Goto and Shuichi Ichikawa},
  title =	 {{CPC} (Cyclic Pipeline Computer)---An architecture suited
		 for {Josephson} and pipelined-memory machines},
  journal =	 transcomp,
  year =	 1989,
  volume =	 38,
  number =	 6,
  pages =	 {825--832},
  month =	 jun,
  annote =	 {More fundamental on interleaved pipelines. Cited by
		 mccrackin1991eliminating. A bit bizarre in that they're
		 worrying about Josephson logic (e.g., for quantum devices),
		 but this is an environment where pipelining is almost free
		 and also makes sense for memory.
		 
		 Cites the Denelcor HEP machine, which is cited in a 1985
		 book.}
}

@Article{shimizu2007cell,
  author =	 {Kanna Shimizu and H. Peter Hofstee and John S. Liberty},
  title =	 {{Cell} {Broadband} {Engine} processor vault security
		 architecture},
  journal =	 {IBM Journal of Research and Development},
  year =	 2007,
  volume =	 51,
  number =	 5,
  pages =	 {521--528},
  month =	 sep,
  annote =	 {About how they use an SPE as an "encryption" vault for
		 holding secure keys, performing secure operations on
		 encrypted data, etc.
		 
		 "The PPE runs the operation system" "The SPEs are the
		 computational workhorses"
		 
		 Secure processing vault: use a hypervisor/virtual machine
		 monitor. "In the Cell/B.E. processor, the vault is realized
		 as an SPE running in a mode in which it has effectively
		 disengaged itself from the bus and, by extension, the rest
		 of the system."
		 
		 So they do have one SPE running in a "secure mode" for some
		 application. Basically, the SPE can't be read or written by
		 anything else in the system.
		 
		 They have a secure boot feature in which the first software
		 that starts is checked as being legitimate.
		 
		 In hardware, they hold the master encryption key.
		 
		 So the isolated SPE can run various encryption things
		 without exposing the key.
		 
		 I also found
		 
		 http://www.ibm.com/developerworks/power/library/pa-cellsecurity/
		 
		 which
		 appears to be a distillation of this paper. }
}

@InProceedings{shiple1996analysis,
  author =	 {Thomas R. Shiple and Vigyan Singhal and Robert K. Brayton
		 and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Analysis of Combinational Cycles in Sequential Circuits},
  booktitle =	 {Proceedings of the International Symposium on Circuits and
		 Systems (ISCAS)},
  year =	 {1996},
  volume =	 {IV},
  pages =	 {592--595},
  month =	 may,
  url =		 {ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/iscas96.SS.ps.Z}
		 ,
  bdsk-url-1 =	 {ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/iscas96.SS.ps.Z}
		 
}

@InProceedings{shiple1996constructive,
  author =	 {Thomas R. Shiple and G\'erard Berry and Herv\'e Touati},
  title =	 {Constructive Analysis of Cyclic Circuits},
  booktitle =	 {Proceedings of the European Design and Test Conference},
  year =	 {1996},
  pages =	 {328--333},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Describes some of the analysis that goes into the Esterel
		 V5 compiler},
  opturl =	 {ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/edtc96.SBT.ps.Z}
		 
}

@PhDThesis{shiple1996formal,
  author =	 {Thomas Robert Shiple},
  title =	 {Formal Analysis of Synchronous Circuits},
  school =	 ucb,
  year =	 1996,
  month =	 oct,
  note =	 {Memorandum UCB/ERL M96/76},
  annote =	 {Tom's PhD thesis in which he links the up-bounded delay
		 model to three-valued simulation.}
}

@TechReport{shiple2002logical,
  author =	 {Thomas R. Shiple and G\'erard Berry and Robert K. Brayton
		 and Alberto L. Sangiovanni-Vincentelli},
  title =	 {Logical Analysis of Combinational Cycles},
  institution =	 ucb,
  year =	 2002,
  number =	 {UCB/ERL M02/21},
  month =	 jun,
  annote =	 {Tech report version of Tom's proposed paper summarizing the
		 combinational cycles part of his thesis. Apparently
		 submitted for publication and rejected.}
}

@InProceedings{shukla2003high,
  author =	 {Sandeep Shukla and Stephen A. Edwards and Jean-Pierre
		 Talpin and Rajesh K. Gupta},
  title =	 {Tutorial: High level modeling and validation methodologies
		 for embedded systems: bridging the productivity gap},
  booktitle =	 {Proceedings of the 16th International Conference on VLSI
		 Design},
  year =	 2003,
  pages =	 {9--14},
  address =	 {New Delhi, India},
  month =	 jan,
  annote =	 {Really, a tutorial.},
  url =		 {http://dx.doi.org/10.1109/ICVD.2003.1183104},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/ICVD.2003.1183104}
}

@TechReport{sieling1995new,
  author =	 {Detlef Sieling},
  title =	 {New Lower Bounds and Hierarchy Results for Restricted
		 Branching Programs},
  institution =	 {Electronic Colloquium on Computational Complexity},
  year =	 {1995},
  number =	 {TR95-002},
  month =	 jan,
  url =		 {ftp://ftp.eccc.uni-trier.de/pub/eccc/reports/1995/TR95-002/index.html}
		 ,
  bdsk-url-1 =	 {ftp://ftp.eccc.uni-trier.de/pub/eccc/reports/1995/TR95-002/index.html}
		 
}

@InProceedings{siepmann1989objectoriented,
  author =	 {E. Siepmann and G. Zimmermann},
  title =	 {An Object-Oriented Datamodel for the {VLSI} Design System
		 {PLAYOUT}},
  booktitle =	 dac89,
  year =	 {1989},
  pages =	 {814--817},
  address =	 dac89a,
  annote =	 {Terrible!}
}

@Book{siewiorek1982computer,
  author =	 {Daniel P. Siewiorek and C. Gordon Bell and Allen Newell},
  title =	 {Computer Structures: Principles and Examples},
  publisher =	 mgh,
  year =	 1982,
  annote =	 {Cray-1? From Gordon Bell's homepage:},
  url =		 {http://research.microsoft.com/~GBell/CGB%20Files/Computer%20Structures%20Principles%20and%20Examples%201982%20ng%20c.pdf}
		 ,
  bdsk-url-1 =	 {http://research.microsoft.com/~GBell/CGB%20Files/Computer%20Structures%20Principles%20and%20Examples%201982%20ng%20c.pdf}
		 
}

@Book{silberschatz1998operating,
  author =	 {Abraham Silberschatz and Peter B. Galvin},
  title =	 {Operating System Concepts},
  publisher =	 aw,
  year =	 1998,
  address =	 aw_a,
  edition =	 {Fifth},
  annote =	 {Borrowed from Luc Semeria. Used in Stanford's cs140
		 operating systems class. Mentions the Nachos teaching OS
		 from Berkeley. http://www.stanford.edu/classes/cs140}
}

@Book{silberschatz2004operating,
  author =	 {Abraham Silberschatz and Peter Baer Galvin and Greg Gagne},
  title =	 {Operating System Concepts},
  publisher =	 jw,
  year =	 2004,
  edition =	 {Seventh},
  annote =	 {I have a copy of the sixth edition; the seventh apparently
		 has a chapter on real-time and embedded OSes}
}

@PhDThesis{silva1994active,
  author =	 {M\'ario Jorge Silva},
  title =	 {Active Documentation for {VLSI} Design},
  school =	 ucb,
  year =	 {1994},
  month =	 dec,
  url =		 {http://http.cs.berkeley.edu/~msilva},
  bdsk-url-1 =	 {http://http.cs.berkeley.edu/~msilva}
}

@Book{simon1996sciences,
  author =	 {Herbert A. Simon},
  title =	 {The Sciences of the Artificial},
  publisher =	 {MIT Press},
  year =	 1996,
  edition =	 {Third},
  annote =	 {Perhaps the starting point for the Science of Design
		 program. Has a little about designing complex systems, most
		 just a discussion of estimating things.}
}

@Book{simon1999embedded,
  author =	 {David E. Simon},
  title =	 {An Embedded Software Primer},
  publisher =	 aw,
  year =	 1999,
  address =	 aw_a,
  annote =	 {Borrowed from Stan. Looks more comprehensive than
		 barr1999programming. Talks about RTOSes, although the
		 hardware section looks laughable.}
}

@InProceedings{simone1994compositional,
  author =	 {R. de Simone and A. Ressouche},
  title =	 {Compositional Semantics of {ESTEREL} and Verification by
		 Compositional Reduction},
  booktitle =	 {Computer Aided Verification: 6th International Conference,
		 CAV '94, Stanford, California, June 21--23},
  year =	 {1994},
  series =	 lncs,
  volume =	 {818},
  pages =	 {441--453},
  publisher =	 sv,
  annote =	 {A way to decompose ESTEREL at a high-level, and use this to
		 simplify verification tasks}
}

@InProceedings{simons1990foundation,
  author =	 {Barbara Simons and David Alpern and Jeanne Ferrante},
  title =	 {A Foundation for Sequentializing Parallel Code},
  booktitle =	 {2nd Annual ACM Symposium on Parallel Algorithms and
		 Architectures},
  year =	 {1990},
  pages =	 {350--359},
  address =	 {Island of Crete, Greece},
  month =	 jul,
  organization = {ACM},
  annote =	 {Follows Ferrante's work.},
  keywords =	 {program dependence graph, linearizing parallel code}
}

@TechReport{simons1993efficient,
  author =	 {Barbara Simons and Jeanne Ferrante},
  title =	 {An Efficient Algorithm for Constructing a Control Flow
		 Graph for Parallel Code},
  institution =	 {IBM, Santa Teresa Laboratory},
  year =	 1993,
  number =	 {TR--03.465},
  address =	 {San Jose, California},
  month =	 feb,
  annote =	 {Got it by mailing reports@ibm.com. More of the
		 sequentializing parallel code work.},
  keywords =	 {program dependence graph, linearizing parallel code}
}

@InProceedings{singh1988timing,
  author =	 {Kanwar Jit Singh and Albert R. Wang and Robert K. Brayton
		 and Alberto Sangiovanni-Vincentelli},
  title =	 {Timing Optimization of Combinational Logic},
  booktitle =	 iccad,
  year =	 {1988},
  pages =	 {282--285},
  annote =	 {Decomposition, etc., to improve timing. McGeer cites
		 this.}
}

@PhDThesis{singh1992performance,
  author =	 {Kanwar Jit Singh},
  title =	 {Performance optimization of digital circuits},
  year =	 {1992},
  address =	 {Berkeley, CA, USA},
  order_no =	 {UMI Order No. GAX93-30731},
  publisher =	 {University of California at Berkeley}
}

@Article{singh2000synthesis,
  author =	 {Montek Singh and Steven M. Nowick},
  title =	 {Synthesis for Logical Initializability of Synchronous
		 Finite-State Machines},
  journal =	 transvlsi,
  year =	 2000,
  volume =	 8,
  number =	 5,
  pages =	 {542--557},
  month =	 oct,
  annote =	 {Montek pointed me to this: about initializability of
		 finite-state machines and X-valued simulation. Related to my
		 cyclic circuit work?}
}

@InProceedings{singh2004generalized,
  author =	 {Montek Singh and Michael Theobald},
  title =	 {Generalized Latency-Insensitive Systems for Single-Clock
		 and Multi-Clock Architectures},
  booktitle =	 date,
  year =	 2004,
  pages =	 {21008-21013},
  month =	 feb,
  affiliation =	 {UC Berkeley},
  annote =	 {Cites DAC00, TCAD01, ICCAD99, CAV99. Also interesting point
		 on clock pausing vs. clock gating},
  entered =	 {Luca Carloni,8/15/2003},
  keywords =	 {desynchronization, GALS, formal methods}
}

@InProceedings{singhal1995exploiting,
  author =	 {Vigyan Singhal and Carl Pixley and Adnan Aziz and Robert K.
		 Brayton},
  title =	 {Exploiting power-up delay for sequential optimization},
  booktitle =	 {Proceedings of the European Design Automation Conference},
  year =	 1995,
  pages =	 {54--59},
  address =	 {Brighton, England},
  month =	 dec,
  annote =	 {More don't-cares. More about start-up transients and safe
		 replaceability.}
}

@Article{sites1993binary,
  author =	 {Richard L. Sites and Anton Chernoff and Matthew B. Kirk and
		 Maurice P. Marks and Scott G. Robinson},
  title =	 {Binary Translation},
  journal =	 cacm,
  year =	 1993,
  volume =	 36,
  number =	 2,
  pages =	 {69--81},
  month =	 feb,
  annote =	 {From John Regehr: talks about translating binaries from VAX
		 and MIPS to Alpha.}
}

@Article{skillicorn1998models,
  author =	 {David B. Skillicorn and Domenico Talia},
  title =	 {Models and Languages for Parallel Computation},
  journal =	 surveys,
  year =	 1998,
  volume =	 30,
  number =	 2,
  pages =	 {123--169},
  month =	 jun,
  annote =	 {Cited by paul2003programmers. Nicely written. Lists a
		 number of reasonable criteria for successful parallel
		 programming languages, pointing out a number of significant
		 challenges.
		 
		 The conclusions are interesting: low-level models are losing
		 interest, things are shifting to partially abstract models
		 that hide some aspects of the parallel architecture from the
		 programmer, and that there are some reasonable very abstract
		 models.}
}

@Article{slack1993zootype,
  author =	 {J. M. W. Slack and P. W. H. Holland and C. F. Graham},
  title =	 {The zootype and the phylotypic stage},
  journal =	 {Nature},
  year =	 1993,
  volume =	 361,
  number =	 6412,
  pages =	 {490--492},
  month =	 feb,
  annote =	 {Suggested by Mark Siegal. Idea is that many organisms pass
		 through a common intermediate stage during their development.
		 
		 "An animal is an organism that displays a particular spatial
		 patterns of gene expression, and we define this pattern as
		 the zootype."
		 
		 "The genes of the zootype are not, in general, activated in
		 the earliest stages of development [...] the peak expression
		 [...] is displayed at the phylotypic stage."
		 
		 Basic idea is that all animals share a particular pattern of
		 gene expression that shows up somewhat later in their
		 development.}
}

@Article{smith1995correct,
  author =	 {Scott F. Smith and Amy E. Zwarico},
  title =	 {Correct Compilation of Specifications to Deterministic
		 Asynchronous Circuits},
  journal =	 {Formal Methods in System Design},
  year =	 1995,
  volume =	 7,
  number =	 3,
  pages =	 {155--226},
  month =	 nov,
  annote =	 {More delay-insensitive stuff. Focuses on determinism.
		 Introduces a CSP variant similar to Martin's. Very formal in
		 their presentation; hard to keep straight exactly what
		 they're trying to get across. Mostly places Martin & Burns
		 technique on a stronger mathematical footing and providing
		 proof.
		 
		 Conclusion 4 is "all hazard-free, arbiter-free asynchronous
		 circuits are observably deterministic." Page 15 and Appendix
		 B (p 39-). Yikes -- a very complex proof. Basically, a
		 confluence proof, i.e., that if from A you can get to B or
		 C, then they can both get to D. "in the spirit of the
		 diamond property for the untyped lambda calculus." Very,
		 very involved. They do case splitting on 28 different cases.
		 Comes from considering all seven single-step reduction
		 rules. Actually, only two pages of proof. Seem to have ERROR
		 rules for the cases that would otherwise be nondeterministic
		 (p. 12). Reading while writing, writing while writing,
		 multiple true guards, multiple enabled passive ports.
		 Tricky: these errors are a function of the behavior of the
		 system, not just of its structure.
		 
		 Actually, interesting to see how they put together their
		 formalism: as a series of rewrite rules, i.e., the
		 operational semantics.
		 
		 CSP: assignment of variables to expressions, read and write
		 to channels, guarded commands, infinite repetition. Also
		 allows "probe," which can check if a port is waiting to
		 communicate.
		 
		 Their determinism proof is almost a tautology: they define
		 dynamic error conditions for all nondeterministic behavior
		 (e.g., races) and show that if they don't occur that the
		 system is confluent. Actually, tricky to do mathematically,
		 but no big surprise.}
}

@InProceedings{smith1996extending,
  author =	 {Michael D. Smith},
  title =	 {Extending {SUIF} for Machine-Dependent Optimizations},
  booktitle =	 {Proceedings of the First SUIF Compiler Workshop},
  year =	 1996,
  pages =	 {14--25},
  address =	 {Stanford, California},
  month =	 jan,
  annote =	 {Citation for the MachSUIF system?}
}

@InProceedings{smith1996vhdl,
  author =	 {Douglas J. Smith},
  title =	 {{VHDL} \& {Verilog} Compared \& Constrasted --- Plus
		 Modeled Examples Written in {VHDL}, {Verilog}, and {C}},
  booktitle =	 dac96,
  year =	 1996,
  pages =	 {771--776},
  address =	 dac96a,
  month =	 jun,
  annote =	 {Giofranco Bohonome mentioned this in his project report for
		 4995. Not a great paper. LOC differences seem mostly be due
		 to poor style on the part of the author (lines with single
		 braces, for example). Reasonable survey of language
		 features. }
}

@InProceedings{smith1998automated,
  author =	 {James Smith and Giovanni {De Micheli}},
  title =	 {Automated Composition of Hardware Components},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {14--19},
  address =	 dac98a,
  month =	 jun,
  annote =	 {Generating a cycle-accurate synchronous interface between
		 two hardware subsystems starting from their HDL
		 descriptions. Really a state machine controller synthesis
		 problem.}
}

@Manual{smith2000introduction,
  author =	 {Michael D. Smith and Glenn Holloway},
  title =	 {An Introduction to {Machine SUIF} and its Portable
		 Libraries for Analysis and Optimization},
  organization = {Harvard University},
  year =	 2000,
  note =	 {Machine SUIF documentation set},
  annote =	 {Mike Smith's suggestion about what to cite for MachSUIF.},
  url =		 {http://www.eecs.harvard.edu/machsuif/},
  bdsk-url-1 =	 {http://www.eecs.harvard.edu/machsuif/}
}

@InProceedings{smith2001parallel,
  author =	 {L. A. Smith and J. M. Bull and J. Obdrz\'{a}lek},
  title =	 {A parallel java grande benchmark suite},
  booktitle =	 {Supercomputing '01: Proceedings of the 2001 ACM/IEEE
		 conference on Supercomputing (CDROM)},
  year =	 {2001},
  pages =	 {8--8},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/582034.582042},
  isbn =	 {1-58113-293-X},
  location =	 {Denver, Colorado},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/582034.582042}
}

@Book{smith2005virtual,
  author =	 {James E. Smith and Ravi Nair},
  title =	 {Virtual Machines},
  publisher =	 mk,
  year =	 2005,
  annote =	 {Broad discission of virtual machines ranging from the JVM
		 to things like VMware.}
}

@TechReport{smith2008static,
  author =	 {Dave Aaron Smith and Nalini Vasudevan and Stephen Edwards},
  title =	 {Static Deadlock Detection in {SHIM} with an Automata Type
		 Checking System},
  institution =	 cucs,
  year =	 2008,
  number =	 {CUCS--053--08},
  address =	 nyny,
  month =	 dec,
  annote =	 {Rather failed attempt}
}

@InProceedings{snavely2006photo,
  author =	 {Noah Snavely and Steven M. Seitz and Richard Szeliski},
  title =	 {Photo tourism: Exploring photo collections in {3D}},
  booktitle =	 {Proceedings of SIGGRAPH},
  year =	 2006,
  pages =	 {835--846},
  address =	 {Boston, Massachusetts},
  month =	 jul,
  annote =	 {Mentioned by Shree for Martha and my accelerator proposal.
		 Taking a group of pictures of the same object, figuring out
		 where each was taken from, reconstructing a 3D model, then
		 resynthesizing the image.
		 
		 Find keypoints on each image, then uses this to estimate
		 locations of the cameras, builds a dot cloud, then lets you
		 navigate it.
		 
		 Really nifty GUI in addition to the machinery behind the
		 system.}
}

@InProceedings{socha1989voyeur,
  author =	 {David Socha and Mar L. Bailey and David Notkin},
  title =	 {Voyeur: Graphical Views of Parallel Programs},
  booktitle =	 {Proceedings of the ACM SIGPLAN and SIGOPS Workshop on
		 Parallel and Distributed Debugging, Madison, WI, USA, 5--6
		 May 1988},
  year =	 {1989},
  series =	 {SIGPLAN Notices, 24(1):206--215},
  month =	 jan
}

@InProceedings{soderman1998implementing,
  author =	 {Donald Soderman and Yuri Panchul},
  title =	 {Implementing {C} algorithms in reconfigurable hardware
		 using {C2Verilog}},
  booktitle =	 {Proceedings of the IEEE Symposium on FPGAs for Custom
		 Computing Machines (FCCM)},
  year =	 1998,
  pages =	 {339--342},
  address =	 {Los Alamitos, CA},
  month =	 apr,
  annote =	 {C Level Design pair. They were CompiLogic then. Nice
		 description of what it does.
		 
		 The C2Verilog compiler performs global analysis to cluster
		 operations into multiple Verilog always blocks and
		 concurrent assignments to achieve efficient parallel
		 execution. State machines are created for loops, shared
		 arithmetic macros, and external memory interfaces. The
		 optimum performance is obtained by iterating through various
		 C code modifications, compiler options, and logic synthesis
		 preferences. This allows insertion of registers and wait
		 states to balance propagation delays . }
}

@Misc{soderman1998implementing1,
  author =	 {Donald Soderman},
  title =	 {Implementing {C} Designs in Hardware},
  year =	 1998,
  note =	 {www.asicdsn.com/c2hw.pdf. ``Portions presented at
		 DesignCon98, 1998 Intl.\ Verilog Conf., and 1998 FPGA
		 Configurable Computing Machine Conf.''},
  annote =	 {Soderman used to be with C Level Design (along with Yuri
		 Panchul). CEO of Compilogic. Describes what their C2Verilog
		 compiler did?
		 
		 Appeared in DesignCon98, FCCM 1998, }
}

@InProceedings{soderman1998implementing2,
  author =	 {Donald Soderman and Yuri Panchul},
  title =	 {Implementing {C} designs in hardware: a full-featured {ANSI
		 C} to {RTL} {Verilog} compiler in action},
  booktitle =	 {Proceedings of the 1998 International Verilog HDL
		 Conference (IVC)},
  year =	 1998,
  pages =	 {22--29},
  address =	 {Santa Clara, California},
  month =	 mar,
  annote =	 {Yet another description of the C2Verilog compiler.
		 
		 Functions and structures are expressed as state machines for
		 
		 Pointer/array indirection requiring memory access
		 
		 while, do, for, or goto statements
		 
		 calls to another function including a state machine
		 
		 Looks like meta-information (how many bits to use, etc.) are
		 specified through a GUI.
		 
		 }
}

@InProceedings{sofronis2006memory,
  author =	 {Christos Sofronis and Stavros Tripakis and Paul Caspi},
  title =	 {A memory-optimal buffering protocol for preservation of
		 synchronous semantics under preemptive scheduling},
  booktitle =	 emsoft,
  year =	 2006,
  pages =	 {21--33},
  address =	 {New York, NY, USA},
  publisher =	 {ACM},
  doi =		 {http://doi.acm.org/10.1145/1176887.1176892},
  isbn =	 {1-59593-542-8},
  location =	 {Seoul, Korea},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1176887.1176892}
}

@Misc{somenzi1998cudd,
  author =	 {Fabio Somenzi},
  title =	 {{CUDD}: {CU} Decision Diagram Package Release},
  year =	 1998,
  text =	 {F. Somenzi. CUDD: CU Decision Diagram Package Release
		 2.3.0. University of Colorado at Boulder, 1998.},
  url =		 {http://vlsi.colorado.edu/\char`\~fabio/CUDD/},
  bdsk-url-1 =	 {http://vlsi.colorado.edu/%5Cchar%60%5C~fabio/CUDD/}
}

@Book{sommer1993frank,
  author =	 {Robin Langley Sommer},
  title =	 {Frank Lloyd Wright: American Architect for the Twentieth
		 Century},
  publisher =	 {Smithmark},
  year =	 {1993},
  address =	 {New York},
  annote =	 {Gift of the Hemmeters, Christmas 1994}
}

@Book{sommerville2004software,
  author =	 {Ian Sommerville},
  title =	 {Software Engineering},
  publisher =	 {Pearson},
  year =	 2004,
  edition =	 {Seventh},
  annote =	 {Al used this for his software engineering class.}
}

@InProceedings{soni1995software,
  author =	 {Dilip Soni and Robert L. Nord and Christine Hofmeister},
  title =	 {Software architecture in industrial applications},
  booktitle =	 icse,
  year =	 1995,
  pages =	 {196--207},
  address =	 {Seattle, Washington},
  month =	 apr,
  annote =	 {Cited by a webpage on the Linux kernel. They're from
		 Siemens. }
}

@Article{sosic1996unison,
  author =	 {Rok Sosi\v{c} and Jun Gu and Robert R. Johnson},
  title =	 {The Unison Algorithm: Fast Evaluation of Boolean
		 Expressions},
  journal =	 todaes,
  year =	 {1996},
  volume =	 {1},
  number =	 {4},
  pages =	 {456--477},
  month =	 oct,
  annote =	 {Adnan suggested I look at this. Basically, how to evaluate
		 tree-structured boolean expressions. Allows parallel
		 evaluation of expressions with the same tree structure.
		 Clever, but useless for DAGs.}
}

@InProceedings{soteriou2004design-space,
  author =	 {V. Soteriou and L. Peh},
  title =	 {Design-Space Exploration of Power-Aware On/Off
		 Interconnection Networks},
  booktitle =	 iccd,
  year =	 {2004},
  month =	 oct,
  oldkey =	 {soteriou04},
  sedtransform = {s/soteriou04/soteriou2004design-space/}
}

@InProceedings{souyris2005computing,
  author =	 {Jean Souyris and Erwan Le Pavec and Guillaume Himbert and
		 Victor J\'egu and Guillaume Borios and Reinhold Heckmann},
  title =	 {Computing the Worst Case Execution Time of an Avionics
		 Program by Abstract Interpretation},
  booktitle =	 {Proceedings of the Fifth International Workshop on
		 Worst-Case Execution Time Analysis (WCET)},
  year =	 2005,
  pages =	 {21--24},
  address =	 {Palma de Mallorca, Spain},
  month =	 jul,
  annote =	 {Part of the WCET paper (aiT tool)}
}

@InProceedings{soviani2004improving,
  author =	 {Cristian Soviani and Jia Zeng and Stephen A. Edwards},
  title =	 {Improved Controller Synthesis from Esterel},
  booktitle =	 date,
  year =	 2004,
  address =	 {Paris, France},
  month =	 mar,
  note =	 {Rejected.},
  annote =	 {First paper describing CEC. Mostly about state assignment.
		 Rejected}
}

@TechReport{soviani2004improving1,
  author =	 {Cristian Soviani and Jia Zeng and Stephen A. Edwards},
  title =	 {Improved Controller Synthesis from {Esterel}},
  institution =	 cucs,
  year =	 2004,
  number =	 {CUCS--015--04},
  address =	 nyny,
  annote =	 {Rejected DATE paper.}
}

@TechReport{soviani2004sequential,
  author =	 {Cristian Soviani and Jia Zeng and Stephen A. Edwards},
  title =	 {Sequential Challenges in Synthesizing {Esterel}},
  institution =	 cucs,
  year =	 2004,
  number =	 {CUCS--051--04},
  address =	 nyny,
  month =	 dec,
  annote =	 {Cristian's experiments in generating good circuits from
		 Esterel.}
}

@InProceedings{soviani2005adding,
  author =	 {Cristian Soviani and Stephen A. Edwards and Angelos
		 Keromytis},
  title =	 {Adding a Flow-Oriented Paradigm to Commodity Operating
		 Systems},
  booktitle =	 {Proceedings of the Workshop on Interaction between
		 Operating System and Computer Architecture (IOSCA)},
  year =	 2005,
  pages =	 {1--6},
  address =	 {Austin, Texas},
  month =	 oct,
  annote =	 {October 8th, 8:00 in the morning. My first paper with
		 Angelos. Talks about his CAREER idea of configuring
		 peripherals to talk to each other, taking main memory out of
		 the loop.},
  url =		 {http://www.ideal.ece.ufl.edu/iosca/},
  bdsk-url-1 =	 {http://www.ideal.ece.ufl.edu/iosca/}
}

@InProceedings{soviani2005challenges,
  author =	 {Cristian Soviani and Stephen A. Edwards},
  title =	 {Challenges in Synthesizing Fast Control-Dominated
		 Circuits},
  booktitle =	 iwls,
  year =	 2005,
  pages =	 {326--332},
  address =	 {Lake Arrowhead, California},
  month =	 jun,
  annote =	 {Just a series of experimental results. Only accepted as a
		 poster.},
  selectivity =	 {34 posters/67 = 51\%}
}

@InProceedings{soviani2005high-level,
  author =	 {Cristian Soviani and Olivier Tardieu and Stephen A.
		 Edwards},
  title =	 {High-Level Optimization by Combining Retiming and {Shannon}
		 Decomposition},
  booktitle =	 iwls,
  year =	 2005,
  pages =	 {16--23},
  address =	 {Lake Arrowhead, California},
  month =	 jun,
  annote =	 {Clever work on performing Shannon decomposition as a
		 technology-mapping phase and considering the effects of
		 retiming as a side-effect. Accepted as a paper.},
  selectivity =	 {33/67 = 49\%}
}

@InProceedings{soviani2006optimizing,
  author =	 {Cristian Soviani and Olivier Tardieu and Stephen A.
		 Edwards},
  title =	 {Optimizing Sequential Cycles through {Shannon}
		 Decomposition and Retiming},
  booktitle =	 date,
  year =	 2006,
  pages =	 {1085--1090},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Cristian's first real conference paper.},
  selectivity =	 {233/834 = 28\%, \textbf{Best paper award}.},
  url =		 {http://portal.acm.org/citation.cfm?id=1131781&coll=ACM&dl=ACM&CFID=18639885&CFTOKEN=80577686}
		 ,
  bdsk-url-1 =	 {http://portal.acm.org/citation.cfm?id=1131781&coll=ACM&dl=ACM&CFID=18639885&CFTOKEN=80577686}
		 
}

@InProceedings{soviani2006synthesis,
  author =	 {Cristian Soviani and Ilija Had\v{z}i\'{c} and Stephen A.
		 Edwards},
  title =	 {Synthesis of High-Performance Packet Processing Pipelines},
  booktitle =	 dac06,
  year =	 2006,
  pages =	 {679--682},
  address =	 dac06a,
  month =	 jul,
  annote =	 {Short paper, but we got in anyway. About clustering things
		 into wide words and handling the insertion and deletion of
		 bytes.},
  selectivity =	 {180/865 = 20\%},
  url =		 {http://doi.acm.org/10.1145/1146909.1147081},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1146909.1147081}
}

@InProceedings{soviani2007fifo,
  author =	 {Cristian Soviani and Stephen A. Edwards},
  title =	 {{FIFO} Sizing for High-Performance Pipelines},
  booktitle =	 iwls,
  year =	 2007,
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {Rejected from DAC, but accepted at IWLS},
  optpages =	 {FIXME}
}

@PhDThesis{soviani2007high,
  author =	 {Cristian Soviani},
  title =	 {High Level Synthesis for Packet Processing Pipelines},
  school =	 {Columbia University},
  year =	 2007,
  address =	 nyny,
  month =	 oct,
  note =	 {CUCS--041--07},
  annote =	 {Cristian's thesis and my first PhD student to deposit.
		 Describes his PEG-to-packet-processor synthesis technique
		 and his Shannon-and-retiming technique that won us the DATE
		 best paper award.}
}

@Article{soviani2007optimizing,
  author =	 {Cristian Soviani and Olivier Tardieu and Stephen A.
		 Edwards},
  title =	 {Optimizing Sequential Cycles through {Shannon}
		 Decomposition and Retiming},
  journal =	 transcad,
  year =	 2007,
  volume =	 26,
  number =	 3,
  pages =	 {456--467},
  month =	 mar,
  annote =	 {Journal version of our DATE paper.},
  url =		 {http://dx.doi.org/10.1109/TCAD.2006.890583},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/TCAD.2006.890583}
}

@Article{soviani2009synthesis,
  author =	 {Cristian Soviani and Ilija Had\v{z}i\'{c} and Stephen A.
		 Edwards},
  title =	 {Synthesis and Optimization of Pipelined Packet Processors},
  journal =	 transcad,
  year =	 2009,
  volume =	 28,
  number =	 2,
  pages =	 {231--244},
  month =	 feb,
  annote =	 {Sort of a version of Cristian's thesis},
  url =		 {http://dx.doi.org/10.1109/TCAD.2008.2009168},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/TCAD.2008.2009168}
}

@InProceedings{spang1993beacon,
  author =	 {III H. A. Spang and A. Wadhwa and C. M. Rimvall and R.
		 Knopf and M. Radecki and M. Idelchik},
  title =	 {The {BEACON} Block-Diagram Environment},
  booktitle =	 {Proceedings of the 12th Triennial World Congress of the
		 International Federation of Automatic Control},
  year =	 {1993},
  volume =	 {2: Robust Control, Design and Software},
  pages =	 {749--754},
  address =	 {Sydney, NSW, Australia},
  month =	 jul,
  publisher =	 els
}

@Article{spanias96software,
  author =	 {Andreas Spanias and Edward Painter},
  title =	 {A software tool for introducing speech coding fundamentals
		 in a {DSP} course},
  journal =	 transedu,
  year =	 1996,
  volume =	 39,
  number =	 2,
  pages =	 {143--152},
  month =	 may,
  annote =	 {Using MATLAB in a DSP course}
}

@InProceedings{spear2006solving,
  author =	 {Michael F. Spear and Tom Roeder and Orion Hodson and Galen
		 C. Hunt and Steven Levi},
  title =	 {Solving the starting problem: device drivers as
		 self-describing artifact},
  booktitle =	 {Proceedings of the European Conference on Computer Systems
		 (EuroSys)},
  year =	 2006,
  pages =	 {45--57},
  address =	 {Leuven, Belgium},
  month =	 apr,
  annote =	 {Recommended by Junfeng. Very relevant to the ESAL project.
		 
		 "Application Abstraction" -- requirements of device drivers
		 from user annotations for reasoning both during runtime and
		 statically about what's used.
		 
		 Notion of "device driver manifest". Dead on. "Application
		 abstraction"
		 
		 What I/O ports it uses, what DMA ranges it will use, what
		 other things it talks to.
		 
		 Bibliography:
		 
		 C. Dodge, C. Irvine, and T. Nguyen. A Study of
		 Initialization in Linux and OpenBSD. SIGOPS Operating
		 Systems Review, 39(2):79-93, 2005.
		 
		 E. C. Bailey. Maximum RPM, Red Hat Software, First Edition,
		 1997.
		 
		 Debian package manager
		 
		 Gentoo Portage
		 
		 www.freebsd.org/ports/
		 
		 Compaq's Vesta project (Heydon et al, Compaq Technical
		 report 168, 2001)
		 
		 J. DeTreville. Making system configuration more declarative.
		 HotOS X, Senta Fe, 2005.
		 
		 E. S. Raymond. The CML2 Language.
		 www.catb.org/~esr/cml2/cml2-paper.html 2000 "Configuration
		 Menu Language" Linux kernel configuration. Very relevant to
		 ESAL. Uses a SAT engine to satisfy things.
		 
		 D. Engler et al. Checking System rules... OSDI 2000
		 
		 Fraser et al. Safe Hardware Access with the Xen... OASIS
		 workshop, ASPLOS 2004
		 
		 Sun et al. HAIL... Emsoft 2005
		 
		 Swift et al. Improving the Reliability of Commodity
		 Operating Systems SOSP 2003.
		 
		 Yang et al. Using Model Checking to Find... OSDI 2004
		 
		 }
}

@InProceedings{spirakis2003leading-edge,
  author =	 {G. S. Spirakis},
  title =	 {Leading-edge and future design challenges---is the
		 classical {EDA} ready?},
  booktitle =	 dac03,
  year =	 2003,
  pages =	 {416},
  address =	 dac03a,
  month =	 jun,
  entered =	 {Luca Carloni,11/18/02},
  oldkey =	 {spirakis_dac03},
  sedtransform = {s/spirakis_dac03/spirakis2003leading-edge/}
}

@InProceedings{sridharan2005demand-driven,
  author =	 {Manu Sridharan and Denis Gopan and Lexin Shan and Rastislav
		 Bodik},
  title =	 {Demand-Driven Points-to Analysis for {Java}},
  booktitle =	 oopsla,
  year =	 2005,
  pages =	 {59--76},
  address =	 {San Diego, California},
  month =	 oct
}

@InProceedings{sridharan2006refinement-based,
  author =	 {Manu Sridharan and Rastislav Bodik},
  title =	 {Refinement-based context-sensitive points-to analysis for
		 {Java}},
  booktitle =	 pldi,
  year =	 2006,
  pages =	 {387--400},
  address =	 {Ottawa, Canada},
  month =	 jun,
  oldkey =	 {manu2},
  sedtransform = {s/manu2/sridharan2006refinement-based/}
}

@InProceedings{srinivasan2004linear,
  author =	 {K. Srinivasan and K. S. Chatha and G. Konjevod},
  title =	 {Linear Programming based Techniques for Synthesis of
		 Network-on-Chip Architectures},
  booktitle =	 iccd,
  year =	 {2004},
  pages =	 {422-429},
  month =	 oct,
  oldkey =	 {srinivasan04},
  sedtransform = {s/srinivasan04/srinivasan2004linear/}
}

@Article{stankovic2004real-time,
  author =	 {John A. Stankovic and Raj Rajkumar},
  title =	 {Real-Time Operating Systems},
  journal =	 {Real-Time Systems},
  year =	 2004,
  volume =	 28,
  number =	 {2--3},
  pages =	 {237--253},
  month =	 nov,
  annote =	 {Part of a special anniversary issue}
}

@Article{stankovic2005opportunities,
  author =	 {John A. Stankovic and Insup Lee and Aloysius Mok and Raj
		 Rajkumar},
  title =	 {Opportunities and Obligations for Physical Computing
		 Systems},
  journal =	 computer,
  year =	 2005,
  volume =	 38,
  number =	 11,
  pages =	 {23--31},
  month =	 nov,
  annote =	 {Suggested reading for the Dagstuhl workshop on quantitative
		 aspects of Embedded Systems. Mostly the wireless sensor
		 network view of the world.}
}

@InProceedings{stanley-marbell2006adaptive,
  author =	 {Philip Stanley-Marbell and Kanishka Lahiri and Anand
		 Raghunathan},
  title =	 {Adaptive Data Placement in an Embedded Multiprocessor
		 Thread Library},
  booktitle =	 date,
  year =	 2006,
  pages =	 {698--699},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {About an extension to Pthreads that allows explicit
		 placement requests for data structures, i.e., for
		 distributed memory systems.}
}

@Article{stappert2000complete,
  author =	 {Friedhelm Stappert and Peter Altenbernd},
  title =	 {Complete worst-case execution time analysis of
		 straight-line hard real-time programs},
  journal =	 {Journal of Systems Architecture: the EUROMICRO Journal},
  year =	 2000,
  volume =	 46,
  number =	 4,
  pages =	 {339--355},
  month =	 feb,
  annote =	 {WCET paper. explicit path enumeration.}
}

@InProceedings{stark1987concurrent,
  author =	 {Eugene W. Stark},
  title =	 {Concurrent transition system semantics of process
		 networks},
  booktitle =	 popl,
  year =	 1987,
  pages =	 {199--210},
  address =	 {Munich, Germany},
  month =	 jan,
  annote =	 {Found randomly. Uses concurrent transition systems (his own
		 work) to link Kahn networks to other formalisms, although
		 with the eye toward modeling nondeterminism. Connects Kahn
		 to automaton and labeled transition system like CSP, etc.
		 
		 Rather abstruse. Stark casts everything in terms of his own
		 formalism, which is peppered with monoids, etc. Basically,
		 he hits everything with his hammer.
		 
		 Not clear that it's helpful. His formalism is tricky.
		 
		 Question about Kahn: his denotational model is sound, but is
		 his operational model equivalent? Kahn doesn't spend much
		 time addressing this.}
}

@InProceedings{stark1990relations,
  author =	 {Eugene Stark},
  title =	 {On the Relations Computable by a Class of Concurrent
		 Automata},
  booktitle =	 popl,
  year =	 1990,
  pages =	 {FIXME},
  address =	 {FIXME},
  month =	 jan,
  publisher =	 {ACM},
  annote =	 {Monotone input/output automata. Seems to be mostly
		 concerned with trying to show that certain merge operations
		 are impossible under some definition of deterministic
		 automata. Bears some similarity to our work, but makes
		 similar assumptions about the receptivity of a process that
		 Lynch and Stark did.}
}

@TechReport{steensgaard1993sequentializing,
  author =	 {Bjarne Steensgaard},
  title =	 {Sequentializing Program Dependence Graphs for Irreducible
		 Programs},
  institution =	 {Microsoft},
  year =	 {1993},
  number =	 {MSR-TR-93-14},
  month =	 oct,
  keywords =	 {program dependence graph},
  url =		 {ftp://ftp.research.microsoft.com/pub/TR/TR-93-14.ps},
  bdsk-url-1 =	 {ftp://ftp.research.microsoft.com/pub/TR/TR-93-14.ps}
}

@Unpublished{steensgaard1993sequentializing*1,
  author =	 {Bjarne Steensgaard},
  title =	 {Sequentializing Program Dependence Graphs for Irreducible
		 Programs},
  year =	 {1993},
  note =	 {Microsoft Research: follow-up to his MSR-TR-93-14},
  keywords =	 {program dependence graph},
  url =		 {ftp://ftp.research.microsoft.com/pub/analysts/sequent.ps.Z}
		 ,
  bdsk-url-1 =	 {ftp://ftp.research.microsoft.com/pub/analysts/sequent.ps.Z}
		 
}

@InProceedings{steensgaard1996points-to,
  author =	 {Bjarne Steensgaard},
  title =	 {Points-to Analysis in Almost Linear Time},
  booktitle =	 popl,
  year =	 1996,
  pages =	 {32--41},
  address =	 {St. Petersburg Beach, Florida},
  month =	 jan,
  annote =	 {Algorithms for this. Luc Semeria pointed me to this. Monica
		 project. },
  url =		 {http://research.microsoft.com/~rusa/papers.html},
  bdsk-url-1 =	 {http://research.microsoft.com/~rusa/papers.html}
}

@InProceedings{stefanov2004system,
  author =	 {Todor Stefanov and Claudiu Zissulescu and Alexandru Turjan
		 and Bart Kienhuis and Ed Deprettere},
  title =	 {System Design Using {Kahn} Process Networks: The
		 {Compaan/Laura} Approach},
  booktitle =	 date,
  year =	 2004,
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {Like our EMSOFT submission? Sort-of: converts Matlab models
		 into Kahn networks (that's the Compaan part) that can then
		 be synthesized in hardware or software (Laura - Leiden
		 Architecture Research Exploration Tool).
		 
		 Coming from the FPGA community and has quite an FPGA bias.
		 
		 Works in an M-JPEG encoder. Cites YAPI: dekock2000yapi.
		 
		 Translates a sequential MATLAB program into a concurrent
		 Kahn network.
		 
		 What about buffer sizing? Not clear.},
  optpages =	 {FIXME}
}

@InProceedings{steiner1988kerberos,
  author =	 {Jennifer G. Steiner and Clifford Neuman and Jeffrey I.
		 Schiller},
  title =	 {Kerberos: An Authentication Service for Open Network
		 Systems},
  booktitle =	 {USENIX Association Winter Conference Dallas 1988.
		 Proceedings},
  year =	 {1988},
  pages =	 {191--202},
  month =	 feb,
  url =		 {ftp://athena-dist.mit.edu/pub/kerberos/doc/usenix.PS},
  bdsk-url-1 =	 {ftp://athena-dist.mit.edu/pub/kerberos/doc/usenix.PS}
}

@InProceedings{steinke2002assiging,
  author =	 {Stefan Steinke and Lars Wehmeyer and Bo-Sik Lee and Peter
		 Marwedel},
  title =	 {Assigning program and data objects to scratchpad for energy
		 reduction},
  booktitle =	 date,
  year =	 2002,
  pages =	 {409--415},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Scratchpad Memory}
}

@Article{stephan1996combinational,
  author =	 {Paul Stephan and Robert K. Brayton and Alberto L.
		 Sangiovanni-Vincentelli},
  title =	 {Combinational Test Generation Using Satisfiability},
  journal =	 transcad,
  year =	 {1996},
  volume =	 {15},
  number =	 {9},
  pages =	 {1167--1176},
  month =	 sep,
  annote =	 {Yuji printed this out for me. It describes Stephan's TEGUS
		 algorithm, used within SIS.}
}

@InProceedings{stephenson2000bitwidth,
  author =	 {Mark Stephenson and Jonathan Babb and Saman Amarasinghe},
  title =	 {Bitwidth Analysis with Application to Silicon Compilation},
  booktitle =	 pldi,
  year =	 2000,
  pages =	 {108--120},
  address =	 {Vancouver, British Columbia, Canada},
  month =	 jun,
  annote =	 {Part of the PLDI conference Monica chaired. Discusses
		 figuring out widths of integers (loop boundaries, etc.) in
		 the DeepC compiler from MIT.},
  url =		 {http://www.cag.lcs.mit.edu/bitwise/},
  bdsk-url-1 =	 {http://www.cag.lcs.mit.edu/bitwise/}
}

@Book{sterling1986art,
  author =	 {Leon Sterling and Ehud Shapiro},
  title =	 {The Art of {Prolog}},
  publisher =	 mit,
  year =	 1986,
  address =	 mit_a,
  annote =	 {Simon Parsons calls it the best book on Prolog.}
}

@Article{stewart199030a,
  author =	 {David B. Stewart},
  title =	 {30 Pitfalls for Real-Time Software Developers, Part 1},
  journal =	 {Embedded Systems Programming},
  year =	 1999,
  volume =	 12,
  number =	 11,
  pages =	 {32--41},
  month =	 oct,
  annote =	 {Mentions software timing loops. Looks like the fellow who
		 didn't get tenure at University of Maryland after whom I
		 interviewed.},
  url =		 {http://www.embedded.com/1999/9910/9910feat1.htm},
  bdsk-url-1 =	 {http://www.embedded.com/1999/9910/9910feat1.htm}
}

@InProceedings{stitt2005new,
  author =	 {Greg Stitt and Frank Vahid},
  title =	 {New Decompilation Techniques for Binary-level Co-processor
		 Generation},
  booktitle =	 iccad,
  year =	 2005,
  pages =	 {546--554},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Frank's idea of speeding up code sequences without changing
		 the ISA}
}

@InProceedings{stocks1998comparing,
  author =	 {P. Stocks and B. Ryder and W. Landi and S. Zhang},
  title =	 {Comparing flow and context sensitivity on the
		 modification-side-effects problem},
  booktitle =	 {Proceedings of the International Symposium on Software
		 Testing and Analysis (ISSTA)},
  year =	 1998,
  pages =	 {21--31},
  address =	 {Clearwater Beach, Florida},
  month =	 mar,
  oldkey =	 {stocks1998comparing},
  sedtransform = {s/stocks1998comparing/stocks1998comparing/}
}

@InProceedings{stok1992false,
  author =	 {Leon Stok},
  title =	 {False loops through resource sharing},
  booktitle =	 iccad,
  year =	 1992,
  pages =	 {345--348},
  address =	 {San Jose, California},
  month =	 nov,
  annote =	 {Cited by Malik as motivation for dealing with cyclic
		 combinational cycles.}
}

@InProceedings{stoll1992high-level,
  author =	 {A. Stoll and P. Duzy},
  title =	 {High-Level Synthesis from {VHDL} with Exact Timing
		 Constraints},
  booktitle =	 dac92,
  year =	 1992,
  pages =	 {188--193},
  address =	 dac92a,
  month =	 jun,
  annote =	 {Cited by knapp1995behavioral. Describes the CALLAS system.
		 Compiles VHDL. Rather vague and rambling.}
}

@InProceedings{stone1989graphical,
  author =	 {Janice M. Stone},
  title =	 {A Graphical Representation of Concurrent Processes},
  booktitle =	 {Proceedings of the ACM SIGPLAN and SIGOPS Workshop on
		 Parallel and Distributed Debugging, Madison, WI, USA, 5--6
		 May 1988},
  year =	 {1989},
  series =	 {SIGPLAN Notices, 24(1):226--235},
  month =	 jan
}

@Article{storey2000how,
  author =	 {Margaret-Anne D. Storey and Ken Wong and Hausi A. M\"uller},
  title =	 {How do program understanding tools affect how programmers
		 understand programs?},
  journal =	 scicompprog,
  year =	 2000,
  volume =	 36,
  number =	 {2--3},
  pages =	 {183--207},
  month =	 mar,
  annote =	 {Just an example of a Science of Computer Programming
		 journal article.}
}

@Book{stoy1977denotational,
  author =	 {Joseph Stoy},
  title =	 {Denotational Semantics: The Scott-Strachey Approach to
		 Programming Language Theory},
  publisher =	 mit,
  year =	 {1977},
  address =	 mit_a,
  annote =	 {Uses lattices as the basis of everything. Poorly typeset.}
}

@Article{stoyenko1991analyzing,
  author =	 {Alexander D. Stoyenko and V. Carl Hamacher and Richard C.
		 Holt},
  title =	 {Analyzing hard-real-time programs for guaranteed
		 schedulability},
  journal =	 tosem,
  year =	 1991,
  volume =	 17,
  number =	 8,
  pages =	 {737--750},
  month =	 aug,
  annote =	 {More on Real-time Euclid and WCET-related things.
		 
		 Stoyenko is from Toronto, where his PhD thesis was on Euclid
		 "A real-time language with a scheduability analyzer"
		 (1987)}
}

@InProceedings{stoyle2005mutatis,
  author =	 {Gareth Stoyle and Michael Hicks and Gavin Bierman and Peter
		 Sewell and Iulian Neamtiu},
  title =	 {\emph{Mutatis Mutandis}: Safe and Flexible Dynamic Software
		 Updating},
  booktitle =	 popl,
  year =	 2005,
  pages =	 {183--194},
  address =	 {Long Beach, California},
  month =	 jan,
  annote =	 {Al pointed me to this. Idea is to identify when a data or
		 type update to a running program is safe. Present a core
		 calculus "Proteus" that talks about this.
		 
		 Nice little section analyzing what changed between versions
		 of the Linux kernel, BIND, and some other programs. They
		 said they used a custom tool for this.
		 
		 When they update a type, they require the user to provide a
		 function mapping the old to a new.
		 
		 Their main concern is whether code will be executed that
		 manipulates details about the old type once the change has
		 been made. They have a mechanism for checking whether a
		 particular update is safe.
		 
		 They implemented this for C on top of CIL.}
}

@Article{strauss2000digital,
  author =	 {Will Strauss},
  title =	 {Digital Signal Processing: The New Semiconductor Industry
		 Technology Driver},
  journal =	 {IEEE Signal Processing Magazine},
  year =	 2000,
  volume =	 17,
  number =	 2,
  pages =	 {27--35},
  month =	 mar,
  annote =	 {From Brian. Discusses DSP processor fabrication economics,
		 arguing it's growing very quickly and will overtake MPUs.}
}

@InProceedings{strehl1999scheduling,
  author =	 {Karsten Strehl and Lothar Thiele and Dirk Ziegenbein and
		 Rolf Ernst and J\"uergen Teich},
  title =	 {Scheduling Hardware/Software Systems Using Symbolic
		 Techniques},
  booktitle =	 {Proceedings of the 7th International Workshop on
		 Hardware/Software Codesign (CODES '99)},
  year =	 1999,
  pages =	 {173--177},
  address =	 {Rome, Italy},
  month =	 may,
  annote =	 {Mentioned by one of my TODAES reviewers as a way to
		 restrict state space by imposing constraints.
		 
		 Goes from the FunState model (Petri-net-like dataflow and
		 FSMs) using BDDs to do symbolic scheduling. Interesting, but
		 more focused on how to make intelligent choices than how to
		 generate code, say. Related to Forrest Brewer and Steve
		 Haynal's work on the same subject.}
}

@Article{strom1986typestate,
  author =	 {R. E. Strom and S. Yemini},
  title =	 {Typestate: A programming language concept for enhancing
		 software reliability},
  journal =	 transse,
  year =	 1986,
  volume =	 12,
  number =	 1,
  pages =	 {157--171},
  address =	 {Piscataway, NJ, USA},
  issn =	 {0098-5589},
  publisher =	 {IEEE Press}
}

@Article{stroud1988behavioral,
  author =	 {Charles E. Stroud and Ronald R. Munoz and David A. Pierce},
  title =	 {Behavioral Model Synthesis with Cones},
  journal =	 ieeedtc,
  year =	 1988,
  volume =	 5,
  number =	 3,
  pages =	 {22-30},
  month =	 jul,
  annote =	 {Cited by de-micheli1999hardware.
		 
		 Takes C functions and treats them as combinational logic.
		 Feeds the function to Espresso.
		 
		 Nice looking code: accepts conditionals, arithmetic, and
		 loops.
		 
		 Reasonable bibliography, but doesn't cite anything else that
		 considers C.
		 
		 Uses a C subset, does not insert any clock cycles. Starts
		 with logic equations, but feeds them to Espresso.}
}

@Book{stroustrup1991c,
  author =	 {Bjarne Stroustrup},
  title =	 {The {C}++ Programming Language},
  publisher =	 aw,
  year =	 {1991},
  address =	 aw_a,
  edition =	 {Second}
}

@Book{stroustrup1994design,
  author =	 {Bjarne Stroustrup},
  title =	 {The Design and Evolution of {C++}},
  publisher =	 aw,
  year =	 1994,
  address =	 aw_a,
  annote =	 {The history of C++}
}

@Book{stroustrup1997c,
  author =	 {Bjarne Stroustrup},
  title =	 {The {C}++ Programming Language},
  publisher =	 aw,
  year =	 {1997},
  address =	 aw_a,
  edition =	 {Third}
}

@Misc{strowger1891automatic,
  author =	 {Almon Brown Strowger},
  title =	 {Automatic Telephone Exchange},
  howpublished = {US Patent 447,918},
  year =	 1891,
  month =	 mar,
  annote =	 {First stepping switch for an automatic telephone
		 exchange.}
}

@InProceedings{su2007autobash,
  author =	 {Ya-Yunn Su and Mona Attariyan and Jason Flinn},
  title =	 {{AutoBash}: Improving configuration management with
		 operating system causality analysis},
  booktitle =	 sosp,
  year =	 2007,
  pages =	 {FIXME},
  address =	 {Stevenson, Washington},
  month =	 oct,
  annote =	 {Mentioned by Junfeng.
		 
		 Uses speculative execution to make it easier to configure
		 systems. It provides mechanisms for considering different
		 fixes, testing each, and rolling system state back should
		 the fix prove ineffective. Based on their Speculator system
		 for the Linux kernel that provides checkpointing and
		 rollback. Looks for causal relationships among processes,
		 files, pipes, and so forth.
		 
		 Mentions S. T. King and P. M Chen's BackTracker for finding
		 intrusions. SOSP 2003.
		 
		 }
}

@TechReport{subramaniam2006macshim,
  author =	 {Neesha Subramaniam and Ohan Oda and Stephen A. Edwards},
  title =	 {MacShim: Compiling MATLAB to a Scheduling-Independent
		 Concurrent Language},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--038--06},
  address =	 nyny,
  month =	 sep,
  annote =	 {Tech. report version of the rejected LCPC paper}
}

@Article{sugerman2009gramps,
  author =	 {Jeremy Sugerman and Kayvon Fatahalian and Solomon Boulos
		 and Kurt Akeley and Pat Hanrahan},
  title =	 {{GRAMPS}: A Programming Model for Graphics Pipelines},
  journal =	 {ACM Transactions on Graphics},
  year =	 2009,
  volume =	 28,
  number =	 1,
  pages =	 {1--11}
}

@Misc{sun1995java,
  author =	 {{Sun Microsystems}},
  title =	 {The {Java} Language: An Overview},
  year =	 1994,
  annote =	 {The Java language white paper.},
  url =		 {http://java.sun.com/docs/white/index.html},
  bdsk-url-1 =	 {http://java.sun.com/docs/white/index.html}
}

@InProceedings{sun2005hail,
  author =	 {Jun Sun and Wanghong Yuan and Mahesh Kallahalla and Nayeem
		 Islam},
  title =	 {{HAIL}: a language for easy and correct device access},
  booktitle =	 emsoft,
  year =	 2005,
  pages =	 {1--9},
  address =	 {Jersey City, New Jersey},
  month =	 sep,
  annote =	 {For the ESAL stuff}
}

@Article{sun2009reevaluating,
  author =	 {Xian-He Sun and Yong Chen},
  title =	 {Reevaluating Amdahl's law in the multicore era},
  journal =	 {Parallel and Distributed Computing},
  year =	 {2009},
  note =	 {In press; doi: 10.1016/j.jpdc.2009.05.002 },
  optkey =	 {},
  optvolume =	 {FIXME},
  optnumber =	 {FIXME},
  optpages =	 {FIXME},
  optmonth =	 {FIXME},
  optannote =	 {Central observation: memory access is a fundamental
		 problem, but not as insurmountable as hill2008amdahls
		 suggests. Cites pollack1999new as the source of Pollack's
		 rule}
}

@Book{sutherland1999verilog,
  author =	 {Stuart Sutherland},
  title =	 {The {Verilog} {PLI} Handbook},
  publisher =	 kl,
  year =	 1999,
  address =	 kl_a,
  annote =	 {From the Kluwer catalog}
}

@InProceedings{sutherland2000ieee,
  author =	 {Stuart Sutherland},
  title =	 {The {IEEE} {Verilog} 1364--2001 Standard: What's New, and
		 Why You Need It},
  booktitle =	 {HDLCon},
  year =	 2000,
  pages =	 {FIXME},
  address =	 {FIXME},
  month =	 mar,
  annote =	 {From www.verilog-2001.com, Sutherland HDL.
		 
		 Lists configurations, generate, constant functions (e.g.,
		 for calculating bus widths), computed part selects of
		 vectors (e.g., word[byte_num * +: 8]), signed arithmetic
		 (e.g., reg signed [31:0] data;), an exponentiation operator
		 **, re-entrant tasks and recursive functions, combinational
		 logic sensitivity (e.g., always @*), comma-separated
		 sensitivity lists (e.g., always @(a,b,c)), better file I/O
		 system functions, name-based parameter passing, combined
		 port and data type declarations (e.g., output reg [7:0] y;),
		 ANSI-style ports (e.g., module mux8(output reg [7:0] y,
		 input wire [7:0] a);), initial register assignment (reg a =
		 0;) }
}

@Article{sutter2005fundamental,
  author =	 {Herb Sutter},
  title =	 {A Fundamental Turn Toward Concurrency in Software},
  journal =	 {Dr.\ Dobb's Journal},
  year =	 2005,
  volume =	 30,
  number =	 3,
  pages =	 {16--22},
  month =	 mar,
  annote =	 {About the importance of multicores, etc. "The Free Lunch is
		 Over" Stresses how difficult race-related concurrency bugs
		 are to identify, find in testing, and how they tend to lurk
		 until you have a true multi-CPU system. Really nice
		 arguments. "We desperately need a higher-level programming
		 model for concurrency than languages offer today."}
}

@InProceedings{suzuki1996efficient,
  author =	 {Kei Suzuki and Alberto Sangiovanni-Vincentelli},
  title =	 {Efficient Software Performance Estimations for
		 Hardware/Software Codesign},
  booktitle =	 dac96,
  year =	 {1996},
  pages =	 {605--610},
  address =	 dac96a,
  month =	 jun,
  annote =	 {Estimating speed of CFSMs}
}

@InProceedings{svensson2004synchronous,
  author =	 {C. Svensson},
  title =	 {Synchronous Latency Insensitive Design},
  booktitle =	 async,
  year =	 {2004},
  oldkey =	 {svensson_asynch04},
  sedtransform = {s/svensson_asynch04/svensson2004synchronous/}
}

@InProceedings{swamy1997efficient,
  author =	 {Gitanjali Swamy and Stephen Edwards and Robert Brayton},
  title =	 {Efficient Verification and Synthesis using Design
		 Commonalities},
  booktitle =	 iwls,
  year =	 1997,
  address =	 iwls_a,
  month =	 may,
  annote =	 {Gitanjali and my work on comparing designs. Sponsored by
		 ACM SIGDA.},
  url =		 {http://www.ee.princeton.edu/iwls97.html},
  bdsk-url-1 =	 {http://www.ee.princeton.edu/iwls97.html}
}

@InProceedings{swamy1998efficient,
  author =	 {Gitanjali Swamy and Stephen Edwards and Robert Brayton},
  title =	 {Efficient Verification and Synthesis using Design
		 Commonalities},
  booktitle =	 {Proceedings of the Eleventh International Conference on
		 VLSI Design (VLSI'98)},
  year =	 1998,
  pages =	 {542--551},
  address =	 {Chennai, India},
  month =	 jan,
  annote =	 {Gitanjali and my work on comparing designs. Sponsored by
		 IEEE Computer Society, IEEE Circuits and Systems Society,
		 ACM SIGDA, and the VLSI Society of India},
  oldurl =	 {http://veena.ee.virginia.edu/~mrs8n/vlsi98.html}
}

@InProceedings{swift2003improving,
  author =	 {Michael M. Swift and Brian N. Bershad and Henry M. Levy},
  title =	 {Improving the reliability of commodity operating systems},
  booktitle =	 sosp,
  year =	 2003,
  pages =	 {207--222},
  address =	 {Bolton Landing, New York},
  month =	 oct,
  annote =	 {For the ESAL stuff}
}

@Book{szor2005art,
  author =	 {Peter Szor},
  title =	 {The Art of Computer Virus Research and Defense by Peter
		 Szor},
  publisher =	 aw,
  year =	 2005,
  series =	 {Symantec Press},
  annote =	 {Suggested by Sal: the standard book on computer viruses.
		 
		 A nice set of examples on scanners, hashing, etc.
		 
		 Running the code on a simulator. }
}

@Article{takach1995scheduling,
  author =	 {Andr\'es Takach and Wayne Wolf},
  title =	 {Scheduling constraint generation for communicating
		 processes},
  journal =	 transvlsi,
  year =	 1995,
  volume =	 3,
  number =	 2,
  pages =	 {215--230},
  month =	 jun,
  annote =	 {Relevant to the SHIM-to-hardware stuff. Very relevant about
		 understanding the interaction among processes and how to
		 project timing constraints down to them.}
}

@InProceedings{takahashi2000thread,
  author =	 {Mizuki Takahashi and Nagisa Ishiura and Akihisa Yamada and
		 Takashi Kambe},
  title =	 {Thread partitioning method for hardware compiler {Bach}},
  booktitle =	 asp-dac,
  year =	 2000,
  pages =	 {303--308},
  address =	 {Yokohama, Japan},
  publisher =	 {ACM Press},
  annote =	 {Recommended by one of the reviewers for my IWLS 2004 paper.
		 
		 Bach "system is modeled as communicating processes running
		 in parallel."
		 
		 See also kambe2001c-based, sakurai1999scheduling },
  daoi =	 {http://doi.acm.org/10.1145/368434.368647},
  isbn =	 {0-7803-5974-7}
}

@InProceedings{takeuchi2005os,
  author =	 {Tadashi Takeuchi},
  title =	 {{OS} Debugging Method Using a Lightweight Virtual Machine
		 Monitor},
  booktitle =	 date,
  year =	 2005,
  pages =	 {1058--1059},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Cute little idea: add a single little virtual
		 something-or-other to debug OSes at near full speed.
		 Interesting for device drivers?}
}

@TechReport{talpin2003component-based,
  author =	 {Jean-Pierre Talpin and Bruno {Le Dez} and Abdoulaye
		 Gamati\'e and Paul {Le Guernic} and David Berner},
  title =	 {Component-based engineering of real-time {Java}
		 applications on a polychronous design platform},
  institution =	 {INRIA},
  year =	 2003,
  number =	 4744,
  month =	 feb,
  annote =	 {Jean-Pierre sent me this one: Java and Signal}
}

@InProceedings{talpin2003polychrony,
  author =	 {J. P. Talpin and P. Le Guernic and S. K. Shukla and R.
		 Gupta and F. Doucet},
  title =	 {Polychrony for formal refinement-checking in a system-level
		 design methodology},
  booktitle =	 {Application of Concurrency to System Design (ACSD'2003)},
  year =	 2003,
  pages =	 {9-19},
  affiliation =	 {INRIA, IRISA, Virginia Tech, UCSD},
  annote =	 {Cites my CAV99 paper},
  entered =	 {Luca Carloni, 1/21/03},
  keywords =	 {Systems-on-Chip, interconnect synthesis, latency},
  oldkey =	 {talpinacsd03},
  sedtransform = {s/talpinacsd03/talpin2003polychrony/}
}

@Article{talpin2005algebraic,
  author =	 {J. P. Talpin and P. Le Guernic},
  title =	 {An algebraic theory for behavioral modeling and protocol
		 synthesis in system design},
  journal =	 jfmsd,
  year =	 {to appear in 2005},
  affiliation =	 {INRIA, IRISA},
  annote =	 {Cites my CAV99 paper and EMSOFT03 paper},
  entered =	 {Luca Carloni, 4/21/04},
  keywords =	 {Systems-on-Chip, interconnect synthesis, latency},
  oldkey =	 {talpinjfsd05},
  publisher =	 {Kluwer Academic Publishers},
  sedtransform = {s/talpinjfsd05/talpin2005algebraic/}
}

@Article{tan1993real-time,
  author =	 {B. T. G. Tan and S. L. Gan},
  title =	 {Real-Time Implementation of Asymmetrical Frequency
		 Modulation Synthesis},
  journal =	 jaes,
  year =	 {1993},
  volume =	 {41},
  number =	 {5},
  pages =	 {357--363},
  month =	 may,
  annote =	 {Another variation of the FM principle. This time, an r^n
		 term is placed in front of the harmonics by multiplying in
		 an exponential function.}
}

@Article{tan1994real-time,
  author =	 {B. T. G. Tan and S. L. Gan and S. M. Lim and S. H. Tang},
  title =	 {Real-Time Implementation of Double Frequency Modulation
		 ({DFM}) Synthesis},
  journal =	 jaes,
  year =	 {1994},
  volume =	 {42},
  number =	 {11},
  pages =	 {918--926},
  month =	 nov,
  annote =	 {A variation on FM where two sine functions are placed in
		 the argument. Similar trick to Chowning.}
}

@Book{tanenbaum1992modern,
  author =	 {Andrew S. Tanenbaum},
  title =	 {Modern Operating Systems},
  publisher =	 ph,
  year =	 1992,
  address =	 ph_a,
  annote =	 {Is this the textbook?}
}

@Book{tanenbaum1996operating,
  author =	 {Andrew S. Tanenbaum and Albert S. Woodhull},
  title =	 {Operating Systems: Design and Implementation},
  publisher =	 ph,
  year =	 1996,
  address =	 ph_a,
  edition =	 {Second},
  annote =	 {Apparently another popular operating systems textbook. See
		 also SED:silberschatz:98a.}
}

@InProceedings{tarafdar1998dt-model,
  author =	 {Shantanu Tarafdar and Miriam Leeser},
  title =	 {The {DT}-Model: High-Level Synthesis Using Data Transfers},
  booktitle =	 dac98,
  year =	 1998,
  pages =	 {114--117},
  address =	 dac98a,
  month =	 jun,
  annote =	 {FIXME}
}

@InProceedings{tardieu2003instantaneous,
  author =	 {Olivier Tardieu and Robert {de Simone}},
  title =	 {Instantaneous Termination in Pure {Esterel}},
  booktitle =	 sas,
  year =	 2003,
  series =	 lncs,
  volume =	 {2694},
  pages =	 {91--108},
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {I was shown this early: clever ways to understand certain
		 cycles in Esterel programs.}
}

@InProceedings{tardieu2004curing,
  author =	 {Olivier Tardieu and Robert {de Simone}},
  title =	 {Curing Schizophrenia by Program Rewriting in {Esterel}},
  booktitle =	 memocode,
  year =	 2004,
  address =	 {San Diego, California},
  month =	 jun
}

@InProceedings{tardieu2004gotopause,
  author =	 {Olivier Tardieu},
  title =	 {Goto and Concurrency: Introducing Safe Jumps in {Esterel}},
  booktitle =	 slap,
  year =	 2004,
  series =	 {Electronic Notes in Theoretical Computer Science},
  address =	 {Barcelona, Spain},
  publisher =	 {Elsevier}
}

@InProceedings{tardieu2005approximate,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Approximate Reachability for Dead Code Elimination in
		 {Esterel$^*$}},
  booktitle =	 {Proceedings of the Third International Symposium on
		 Automated Technology for Verification and Analysis (ATVA)},
  year =	 2005,
  series =	 lncs,
  volume =	 3707,
  pages =	 {323--337},
  address =	 {Taipei, Taiwan},
  month =	 oct,
  annote =	 {Was rejected from SAS, mostly because of an awful typo.
		 Talks about how to do dead code elimination after
		 approximate reachability for Olivier's version of Esterel
		 that includes goto statements.},
  selectivity =	 {33/95 = 35\%},
  url =		 {http://dx.doi.org/10.1007/11562948_25},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/11562948_25}
}

@InProceedings{tardieu2006rshim,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {{R-SHIM}: Deterministic Concurrency with Recursion and
		 Shared Variables},
  booktitle =	 memocode,
  year =	 2006,
  pages =	 202,
  address =	 {Napa, California},
  month =	 jul,
  annote =	 {A poster. Introducing recursion and pass-by-value vs.
		 reference arguments.},
  selectivity =	 {17 papers + 6 posters / 43 = 53\%},
  url =		 {http://dx.doi.org/10.1109/MEMCOD.2006.1695931},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/MEMCOD.2006.1695931}
}

@InProceedings{tardieu2006scheduling-independent,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Scheduling-Independent Threads and Exceptions in {SHIM}},
  booktitle =	 emsoft,
  year =	 2006,
  pages =	 {142--151},
  address =	 {Seoul, Korea},
  month =	 oct,
  annote =	 {Exceptions and formal semantics of the new, imperative
		 SHIM.},
  selectivity =	 {31/94 = 33\%},
  url =		 {http://doi.acm.org/10.1145/1176887.1176908},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1176887.1176908}
}

@TechReport{tardieu2006scheduling-independent1,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Scheduling-Independent Threads and Exceptions in {SHIM}},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--036--06},
  address =	 nyny,
  month =	 sep,
  annote =	 {Tech. report version of the Emsoft 2006 paper, extended.}
}

@TechReport{tardieu2006specifying,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Specifying Confluent Processes},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--037--06},
  address =	 nyny,
  month =	 sep,
  annote =	 {Tech. report version of our rejected 2005 POPL paper.}
}

@InProceedings{tardieu2007instantaneous,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Instantaneous Transitions in {Esterel}},
  booktitle =	 {Proceedings of the Workshop on Model-Driven High-Level
		 Programming of Embedded Systems (SLA++P)},
  year =	 2007,
  address =	 {Braga, Portugal},
  month =	 mar,
  annote =	 {Was rejected last year, got good reviews this year.},
  optpages =	 {FIXME},
  selectivity =	 {9/16 = 56\%}
}

@InProceedings{tardieu2007proof,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {A Proof of Scheduling Independence in {SHIM}},
  booktitle =	 esop,
  year =	 2007,
  annote =	 {Rejected}
}

@Article{tardieu2007scheduling-independent,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Scheduling-Independent Concurrency in {SHIM}},
  journal =	 tecs,
  year =	 2006,
  note =	 {Submitted},
  annote =	 {Our Emsoft paper in journal form},
  optmonth =	 {FIXME},
  optnumber =	 {FIXME},
  optpages =	 {FIXME},
  optvolume =	 {FIXME}
}

@InProceedings{tardieu2007scheduling-independent-concur,
  author =	 {Olivier Tardieu and Stephen A. Edwards},
  title =	 {Scheduling-Independent Multiway Rendezvous},
  booktitle =	 {Proceedings of the International Conference on Concurrency
		 Theory (CONCUR)},
  year =	 2007,
  address =	 {Lisboa, Portugal},
  month =	 sep,
  note =	 {Submitted},
  annote =	 {Rejected from ESOP},
  optpages =	 {FIXME}
}

@InProceedings{tarditi2006accelerator,
  author =	 {David Tarditi and Sidd Puri and Jose Oglesby},
  title =	 {Accelerator: using data parallelism to program {GPUs} for
		 general-purpose uses},
  booktitle =	 asplos,
  year =	 2006,
  pages =	 {325--335},
  address =	 {San Jose, California},
  month =	 oct,
  doi =		 {http://doi.acm.org/10.1145/1168857.1168898},
  annote =	 {Mentioned by Satnam Singh. A technique for controlling GPUs
		 with a data-parallel C++-like library. Relevant to Martha
		 and my proposal about accelerators.
		 
		 }
}

@Article{tarjan1972depth-first,
  author =	 {Robert Tarjan},
  title =	 {Depth-First Search and Linear Graph Algorithms},
  journal =	 {SIAM Journal on Computing},
  year =	 1972,
  volume =	 1,
  number =	 2,
  pages =	 {146--160},
  month =	 jun,
  annote =	 {The first presentation of the linear strongly-connected
		 components algorithm.}
}

@Book{tarjan1983data,
  author =	 {Robert Endre Tarjan},
  title =	 {Data Structures and Network Algorithms},
  publisher =	 {Society for Industrial and Applied Mathematics},
  year =	 {1983},
  series =	 {CMBS-NSF Regional Conference Series in Applied
		 Mathematics},
  number =	 {44}
}

@Article{tarjan1983improved,
  author =	 {Robert E. Tarjan},
  title =	 {An Improved Algorithm for Hierarchical Clustering Using
		 Strong Components},
  journal =	 ipl,
  year =	 1983,
  volume =	 17,
  number =	 1,
  pages =	 {37--41},
  month =	 jul
}

@Article{tarski1955lattice-theoretical,
  author =	 {Alfred Tarski},
  title =	 {A Lattice-Theoretical Fixpoint Theorem and its
		 Applications},
  journal =	 {Pacific Journal of Mathematics},
  year =	 1955,
  volume =	 5,
  number =	 2,
  pages =	 {285--309},
  month =	 jun,
  annote =	 {The original fixed point theorem?
		 
		 Fixed points on a lattice are themselves a lattice. No
		 mention of CPOs, iterating, although it gets close.}
}

@Article{taur1997cmos,
  author =	 {Y. Taur and A. Buchanan and W. Chen and D. J. Frank and K.
		 E. Ismail and S.-H. Lo and G. A. Sai-Halasz and R. G.
		 Viswanathan and H.-J. C. Wann and S. J. Wind and H.-S.
		 Wong},
  title =	 {{CMOS} scaling into the nanometer regime},
  journal =	 procieee,
  year =	 1997,
  volume =	 85,
  number =	 4,
  pages =	 {486-504},
  month =	 apr,
  oldkey =	 {taur97},
  sedtransform = {s/taur97/taur1997cmos/}
}

@InProceedings{taylor1984magics,
  author =	 {G. S. Taylor and J. K. Ousterhout},
  title =	 {Magic's Incremental Design-Rule Checker},
  booktitle =	 dac84,
  year =	 {1984},
  pages =	 {160--165},
  annote =	 {Adds update rectangles, on which a background process runs
		 DRC}
}

@Article{taylor2002raw,
  author =	 {Michael Bedford Taylor and Jason Kim and Jason Miller and
		 David Wentzlaff and Fae Ghodrat and Ben Greenwald and Henry
		 Hoffmann and Paul Johnson and Jae-Wook Lee and Walter Lee
		 and Albert Ma and Arvind Saraf and Mark Seneski and Nathan
		 Shnidman and Volker Strumpen Matt Frank and Saman
		 Amarasinghe and Anant Agarwal},
  title =	 {The {Raw} Microprocessor: A Computational Fabric for
		 Software Circuits and General Purpose Programs},
  journal =	 {IEEE Micro},
  year =	 2002,
  volume =	 22,
  number =	 2,
  pages =	 {25--35},
  month =	 {March/April},
  annote =	 {Cited by taylor2004evaluation. Also talks about
		 implementing an ASIC version of it with 16 tiles. More about
		 the architecture, including a floorplan.
		 
		 Very elaborate router, which includes a significant chunk of
		 RAM. Brags about the low latency of inter-tile communication
		 (three cycles). Both static and dynamic routing
		 operations.}
}

@InProceedings{taylor2004evaluation,
  author =	 {Michael Bedford Taylor and Walter Lee and Jason Miller and
		 David Wentzlaff and Ian Bratt and Ben Greenwald and Henry
		 Hoffmann and Paul Johnson and Jason Kim and James Psota and
		 Arvind Saraf and Nathan Shnidman and Volker Strumpen and
		 Matt Frank and Saman Amarasinghe and Anant Agarwal},
  title =	 {Evaluation of the {Raw} Microprocessor: An
		 Exposed-Wire-Delay Architecture for {ILP} and Streams},
  booktitle =	 {Proceedings of the International Symposium on Computer
		 Architecture (ISCA)},
  year =	 2004,
  pages =	 {2--13},
  address =	 {Munich, Germany},
  month =	 jun,
  annote =	 {Another of the Raw papers. Actually implemented the chip in
		 silicon (as an ASIC), with 16 tiles. Lots of motivation,
		 architecture description. Compared with an Intel P3 (same
		 process), and looked at frequencies, power consumption. Nice
		 statistics on cache sizes, etc. They only have a 32K L1
		 cache. Talks about StreamIt. Piles and piles of experimental
		 results. Focuses mostly on performance.
		 
		 "8-stage in-order single-issue MIPS-style pipeline, 4-stage
		 single-precision FPU, a 32KB data cache, 32KB of
		 software-managed instruction cache, and 64KB of
		 software-managed instruction cache for the static router"
		 
		 Register file used to be central data communication system,
		 then it became the pipeline bypass network. For Raw, it's
		 more the inter-tile communication network, a sort of 2D
		 bypass network.
		 
		 Cites Taylor et al. in IEEE Micro (Mar 2002), 25--35}
}

@InProceedings{teich1998buffer,
  author =	 {J\"{u}rgen Teich and Eckart Zitzler and Shuvra S.
		 Bhattacharyya},
  title =	 {Buffer Memory Optimization in {DSP} Applications---An
		 Evolutionary Approach},
  booktitle =	 {Proceedings of Parallel Problem Solving from Nature
		 (PPSN)},
  year =	 1998,
  series =	 lncs,
  volume =	 1498,
  pages =	 {885--896},
  address =	 {Amsterdam, The Netherlands},
  month =	 sep,
  publisher =	 {Springer-Verlag},
  isbn =	 {3-540-65078-4}
}

@Article{teifel2004asynchronous,
  author =	 {John Teifel and Rajit Manohar},
  title =	 {An Asynchronous Dataflow {FPGA} Architecture},
  journal =	 transcomp,
  year =	 2004,
  volume =	 53,
  number =	 11,
  pages =	 {1376--1392},
  month =	 nov,
  annote =	 {Mentioned by Jacky. Lots about circuit implementations,
		 wiring speeds and costs. Very complete piece of work.}
}

@Article{tendler2002power4,
  author =	 {J. M. Tendler and J. S. Dodson and J. S. Field and H. Le
		 and B. Sinharoy},
  title =	 {Power4 system microarchitecture},
  journal =	 {IBM Journal of Research and Development},
  year =	 2002,
  volume =	 46,
  number =	 1,
  pages =	 {5-26},
  month =	 mar,
  affiliation =	 {IBM},
  annote =	 {dual core architecture},
  entered =	 {Luca Carloni,10/5/04},
  oldkey =	 {tendler02},
  sedtransform = {s/tendler02/tendler2002power4/}
}

@Article{tennenhouse2000proactive,
  author =	 {David Tennenhouse},
  title =	 {Proactive computing},
  journal =	 cacm,
  year =	 2000,
  volume =	 43,
  number =	 5,
  pages =	 {43--50},
  month =	 may,
  annote =	 {Cited by Barrett and Pack (the embedded 68hc12 book).
		 
		 Nice statistics on CPU shipments in 2000. 8.2 billion total,
		 statistics attributed to DARPA, actually a presentation he
		 made, in which he cites Dataquest numbers.},
  url =		 {http://www.darpa.mil/darpatech99/Presentations/itopdf/itooverview.pdf}
		 ,
  bdsk-url-1 =	 {http://www.darpa.mil/darpatech99/Presentations/itopdf/itooverview.pdf}
		 
}

@InProceedings{terauchi2006capability,
  author =	 {Tachio Terauchi and Alex Aiken},
  title =	 {A Capability Calculus for Concurrency and Determinism.},
  booktitle =	 {CONCUR},
  year =	 2006,
  pages =	 {218--232},
  annote =	 {was "capability2006terauchi"},
  bibsource =	 {DBLP, http://dblp.uni-trier.de},
  ee =		 {http://dx.doi.org/10.1007/11817949_15}
}

@TechReport{thapar2006arrays,
  author =	 {Smridh Thapar and Olivier Tardieu and Stephen A. Edwards},
  title =	 {Arrays in {SHIM}: A Proposal},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--047--06},
  address =	 nyny,
  month =	 dec,
  annote =	 {Proposal for adding shared arrays to SHIM. Not
		 implemented.}
}

@TechReport{the-c2a-group1993projet,
  author =	 {{The C2A Group}},
  title =	 {Projet Synchrone: Les Formats Communs des Languages
		 Synchrones (Common Formats for the Synchronous Languages)},
  institution =	 {INRIA},
  year =	 {1993},
  number =	 {157},
  month =	 jun,
  note =	 {Translated from the French by Wendell Baker},
  url =		 {http://www.baker.com/wbaker/publications/index.html},
  bdsk-url-1 =	 {http://www.baker.com/wbaker/publications/index.html}
}

@Manual{the-ptolemy-group1995almagest,
  author =	 {{The Ptolemy Group}},
  title =	 {The Almagest Volume 4: Ptolemy 0.5 Kernel Manual},
  organization = ucb,
  year =	 {1995},
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/almagest/index.html}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/almagest/index.html}
		 
}

@Manual{the-ptolemy-group1996almagest,
  author =	 {{The Ptolemy Group}},
  title =	 {The Almagest Volume 1: Ptolemy 0.6 User's Manual},
  organization = ucb,
  year =	 {1996},
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/almagest/index.html}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/almagest/index.html}
		 
}

@Manual{the-ptolemy-group1996almagest*1,
  author =	 {{The Ptolemy Group}},
  title =	 {The Almagest Volume 3: Ptolemy 0.6 Programmer's Manual},
  organization = ucb,
  year =	 {1996},
  url =		 {http://ptolemy.eecs.berkeley.edu/papers/almagest/index.html}
		 ,
  bdsk-url-1 =	 {http://ptolemy.eecs.berkeley.edu/papers/almagest/index.html}
		 
}

@TechReport{the-vis-group1995vis,
  author =	 {{The VIS Group}},
  title =	 {{VIS}: {A} System for Verification and Synthesis},
  institution =	 ucb,
  year =	 {1995},
  number =	 {UCB/ERL M95/104},
  month =	 dec,
  annote =	 {Collection of the paper, the User's Manual, the Programer's
		 Manual, the CTL and BLIF manuals, and the Engineering
		 Manual}
}

@InProceedings{thekkath1994effectiveness,
  author =	 {Radhika Thekkath and Susan J. Eggers},
  title =	 {The effectiveness of multiple hardware contexts},
  booktitle =	 asplos,
  year =	 1994,
  series =	 {ACM SIGPLAN Notices},
  volume =	 29,
  pages =	 {328--337},
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {Referenced by dean2004efficient. ASPLOS is probably a good
		 venue for my real-time processor stuff. March dealine.},
  number =	 11
}

@Article{thibault1999domain-specific,
  author =	 {Scott A. Thibault and Renaud Marlet and Charles Consel},
  title =	 {Domain-specific languages: from design to implementation
		 application to video device drivers generation},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {363--377},
  month =	 may,
  annote =	 {Part of a special issue.
		 
		 Excellent paper. They propose a methodology (mostly, look
		 for patterns), then generate a language, write an
		 interpreter for it, and build a compiler by fusing the
		 interpreter with a partial evaluator which they wrote.
		 
		 They apply this to build video card drivers from XFree86.
		 Their bottom line: their drivers are about 1/9th the size of
		 the corresponding C ones with comparable performance.
		 
		 This is very interesting, but somewhat trivial since the
		 semantics of the language are straightforward: no
		 concurrency, no real-time constraints. But it's a great
		 example of a device-driver language and suggestions about
		 how to extend things.}
}

@Article{thiele2004design,
  author =	 {Lothar Thiele and Reinhard Wilhelm},
  title =	 {Design for Timing Predictability},
  journal =	 {Real-Time Systems},
  year =	 2004,
  volume =	 28,
  number =	 {2--3},
  pages =	 {157--177},
  month =	 {November-December},
  annote =	 {Suggested reading for the Dagstuhl workshop on quantitative
		 aspects of Embedded Systems.}
}

@Misc{thies2001streamit,
  author =	 {W. Thies and M. Karczmarek and M. Gordon and D. Maze and J.
		 Wong and H. Ho and M. Brown and S. Amarasinghe},
  title =	 {{StreamIt}: {A} Compiler for Streaming Applications},
  year =	 2001,
  month =	 dec,
  note =	 {MIT-LCS Technical Memo TM-622, Cambridge, MA},
  url =		 {citeseer.ist.psu.edu/article/thies01streamit.html},
  bdsk-url-1 =	 {citeseer.ist.psu.edu/article/thies01streamit.html}
}

@InProceedings{thies2002streamit,
  author =	 {William Thies and Michal Karczmarek and Saman Amarasinghe},
  title =	 {{StreamIt}: A Language for Streaming Applications},
  booktitle =	 {Proceedings of the International Conference on Compiler
		 Construction (CC)},
  year =	 2002,
  series =	 lncs,
  volume =	 2304,
  pages =	 {179--196},
  address =	 {Grenoble, France},
  month =	 apr,
  annote =	 {Main StreamIt paper. Talks about the cyclo-static dataflow
		 model they employ and really just a prototype compiler. Some
		 interesting examples, though.}
}

@InProceedings{thies2005teleport,
  author =	 {William Thies and Michal Karczmarek and Janis Sermulins and
		 Rodric Rabbah and Saman Amarasinghe},
  title =	 {Teleport Messaging for Distributed Stream Programs},
  booktitle =	 ppopp,
  year =	 2005,
  pages =	 {224--235},
  address =	 {Chicago, Illinois},
  month =	 jun,
  annote =	 {Part of the StreamIt project. Talks about out-of-band
		 messaging in a stream environment. In part, the inspiration
		 for SHIM's exceptions.}
}

@Article{thiruvathukal2004gentoo,
  author =	 {G. K. Thiruvathukal},
  title =	 {Gentoo {Linux}: The Next Generation of {Linux}},
  journal =	 {Computing in Science \& Engineering},
  year =	 2004,
  volume =	 6,
  number =	 5,
  pages =	 {66--74},
  month =	 sep,
  annote =	 {Found by Bob Paddock.}
}

@InProceedings{thoen1995real-time,
  author =	 {Filip Thoen and Marco Cornero and Gert Goossens and Hugo
		 {De Man}},
  title =	 {Real-Time Multi-tasking in Software Synthesis for
		 Information Processing Systems},
  booktitle =	 {Proceedings of the 1st International Symposium on System
		 Synthesis},
  year =	 {1995},
  address =	 {Cannes, France},
  month =	 sep,
  annote =	 {Talks about their constraint graph, a mechanism for
		 software synthesis that includes real-time constraints.
		 Looks a little like my continuation graph, but does not give
		 concrete algorithms.},
  url =		 {http://imec.be/vsdm/projects/sw_synthesis/},
  bdsk-url-1 =	 {http://imec.be/vsdm/projects/sw_synthesis/}
}

@InProceedings{thoen1996multi-thread,
  author =	 {Filip Thoen and Gert Goossens and Jan {Van Der Steen} and
		 Hugo {De Man}},
  title =	 {The Multi-Thread Graph Model for Embedded Software
		 Synthesis},
  booktitle =	 {Proceedings of the Sixth Workshop on Synthesis and System
		 Integration of Mixed Technologies (SASIMI)},
  year =	 {1996},
  address =	 {Fukuoka, Kyushu, Japan},
  month =	 nov,
  annote =	 {Another in the series about the multi-thread graph model.},
  url =		 {http://imec.be/vsdm/projects/sw_synthesis/},
  bdsk-url-1 =	 {http://imec.be/vsdm/projects/sw_synthesis/}
}

@InProceedings{thoen1997multi-thread,
  author =	 {Filip Thoen and Jan {Van Der Steen} and Gjalt {de Jong} and
		 Gert Goossens and Hugo {De Man}},
  title =	 {Multi-Thread Graph: {A} System Model for Real-Time Embedded
		 Software Synthesis},
  booktitle =	 {Proceedings of the European Design and Test Conference},
  year =	 {1997},
  address =	 {Paris, France},
  month =	 mar,
  annote =	 {Another like SED:thoem:96a},
  url =		 {http://imec.be/vsdm/projects/sw_synthesis/},
  bdsk-url-1 =	 {http://imec.be/vsdm/projects/sw_synthesis/}
}

@Book{thoen2000modeling,
  author =	 {Filip Thoen and Francky Catthoor},
  title =	 {Modeling, Verification, and Exploration of Task-Level
		 Concurrency in Real-Time Embedded Systems},
  publisher =	 kl,
  year =	 2000,
  address =	 kl_a,
  annote =	 {Part of the batch I got from Kluwer from writing my book.
		 The introduction's not bad, but the rest of the book is
		 "here's my crazy idea and why it's so good."}
}

@Book{thomas1991verilog,
  author =	 {Donald E. Thomas and Philip R. Moorby},
  title =	 {The {Verilog} Hardware Description Language},
  publisher =	 kl,
  year =	 {1991},
  address =	 kl_a
}

@Book{thomas1998verilog,
  author =	 {Donald E. Thomas and Philip R. Moorby},
  title =	 {The {Verilog} Hardware Description Language},
  publisher =	 kl,
  year =	 {1998},
  address =	 kl_a,
  edition =	 {Fourth},
  annote =	 {Gift from Jennifer Evans at Kluwer}
}

@Book{thomas2002verilog,
  author =	 {Donald E. Thomas and Philip R. Moorby},
  title =	 {The {Verilog} Hardware Description Language},
  publisher =	 kl,
  year =	 {2002},
  address =	 kl_a,
  edition =	 {Fifth},
  annote =	 {Yet another edition.}
}

@Book{thornburg1992bay,
  author =	 {J. Thornburg},
  title =	 {Bay Area Rock Climbing},
  publisher =	 {Potlicker Press},
  year =	 {1992}
}

@InProceedings{thuau1992using,
  author =	 {Ghislaine Thuau and Bachir Berkane},
  title =	 {Using the Language {LUSTRE} for Sequential Circuit
		 Verification},
  editor =	 {Paulo Prinetto and Paolo Camurati},
  booktitle =	 {Correct Hardware Design Methodologies: Proceedings of the
		 Advanced Research Workshop on Correct Hardware Design
		 Methodologies, Turin, Italy, June 12-14, 1991},
  year =	 {1992},
  pages =	 {461--462},
  publisher =	 {North-Holland}
}

@Article{tian2005practical,
  author =	 {Xinmin Tian and Milind Girkar and Aart Bik and Hideki
		 Saito},
  title =	 {Practical Compiler Techniques on Efficient Multithreaded
		 Code Generation for {OpenMP} Programs},
  journal =	 {The Computer Journal},
  year =	 2005,
  volume =	 48,
  number =	 5,
  pages =	 {588--601},
  annote =	 {Focuses on OpenMP and Intel's compiler efforts. Very
		 interesting. Nice bibliography. Classical vectorization,
		 loop analysis, array access analysis, etc.},
  doi =		 {http://dx.doi.org/10.1093/comjnl/bxh109},
  bdsk-url-1 =	 {http://dx.doi.org/10.1093/comjnl/bxh109}
}

@Book{timbie1919essentials,
  author =	 {William Henry Timbie and Henry Harold Higbie},
  title =	 {Essentials of Alternating Currents},
  publisher =	 jw,
  year =	 1919,
  address =	 {New York},
  annote =	 {http://onlinebooks.library.upenn.edu/webbin/book/browse?type=lccn&key=TK
		 
		 http://djm.cc/dmoews.html
		 
		 http://djm.cc/library/Alternating_Currents_Timbie_Higbie_edited.pdf
		 TK1141 .T55},
  url =		 {http://onlinebooks.library.upenn.edu/webbin/book/lookupid?key=olbp36443}
		 ,
  bdsk-url-1 =	 {http://onlinebooks.library.upenn.edu/webbin/book/lookupid?key=olbp36443}
		 
}

@InProceedings{tip1993animators,
  author =	 {Frank Tip},
  title =	 {Animators for Generated Programming Environments},
  booktitle =	 {Automated and Algorithmic Debugging: First International
		 Workshop, {AADEBUG '93}, {Link\"oping}, Sweden, May 3--5,
		 1993: Proceedings},
  year =	 {1993},
  series =	 lncs,
  volume =	 {749},
  pages =	 {241--254},
  publisher =	 kl
}

@InProceedings{tjiang1992sharlit,
  author =	 {Steven W. K. Tjiang and John L. Hennessy},
  title =	 {Sharlit: a tool for building optimizers},
  booktitle =	 pldi,
  year =	 {1992},
  pages =	 {82--93},
  address =	 {New York, New York},
  doi =		 {http://doi.acm.org/10.1145/143095.143120},
  isbn =	 {0-89791-475-9},
  location =	 {San Francisco, California, United States},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/143095.143120}
}

@PhDThesis{toma1997analyse,
  author =	 {Horia Toma},
  title =	 {Analyse constructive et optimisation s\'equentielle des
		 circuits g\'en\'er\'es \`a partir du langage synchrone
		 r\'eactif Esterel [Constructive Analysis and Sequential
		 Optimization of Circuits Generated from the Synchronous
		 Reactive Language Esterel]},
  school =	 {\'Ecole des Mines de Paris},
  year =	 {1997},
  optannote =	 {Constructive analysis of the circuits. Dealing with cycles.
		 BDD-based approach. Causality analysis. Redundant and
		 incompatible latch removal.},
  optmonth =	 sep
}

@Article{tomasulo1967efficient,
  author =	 {Robert M. Tomasulo},
  title =	 {An Efficient Algorithm for Exploiting Multiple Arithmetic
		 Units},
  journal =	 {IBM Journal of Research and Development},
  year =	 1967,
  volume =	 11,
  number =	 1,
  pages =	 {25--33},
  month =	 jan
}

@InProceedings{touati1990implicit,
  author =	 {Herv\'e J. Touati and Hamid Savoj and Bill Lin and Robert
		 K. Brayton and Alberto Sangiovanni-Vincentelli},
  title =	 {Implicit State Enumeration of Finite State Machines using
		 {BDD}'s},
  booktitle =	 iccad,
  year =	 {1990},
  pages =	 {130--133},
  month =	 nov,
  annote =	 {Image computation, etc.}
}

@InProceedings{touati1991delay,
  author =	 {Herv\'e J. Touati},
  title =	 {Delay optimization of combinational logic circuits by
		 clustering and partial collapsing},
  booktitle =	 iccad,
  year =	 {1991},
  pages =	 {188--191},
  month =	 nov,
  annote =	 {Reduce depth}
}

@InProceedings{touati1992retiming,
  author =	 {Herv\'e J. Touati and N. Shenoy and A.
		 Sangiovanni-Vincentelli},
  title =	 {Retiming for table-lookup field programmable gate arrays},
  booktitle =	 fpga,
  year =	 1992,
  pages =	 8994
}

@InProceedings{touati1993optimized,
  author =	 {Herv\'e J. Touati and G\'erard Berry},
  title =	 {Optimized Controller Synthesis Using {Esterel}},
  booktitle =	 iwls,
  year =	 1993,
  address =	 iwls_a,
  month =	 may,
  annote =	 {Actually didn't appear in the printed workshop notes.
		 
		 They remove redundant registers and nets by doing BDD
		 analysis on the circuit. Look for redundant registers and
		 equivalent nets by exploring the reachable state space.
		 
		 Did a comparison with stamina/jedi implementations plus SIS
		 along with comparison to a manual implementation. A DMA
		 controller.
		 
		 See toma1996latch.}
}

@InProceedings{trajkovic2006graph,
  author =	 {Jelena Trajkovic and Mehrdad Reshadi and Bita Gorjiara and
		 Dan Gajski},
  title =	 {A Graph Based Algorithm for Data Path Optimization in
		 Custom Processors},
  booktitle =	 euromicro-dsd,
  year =	 2006,
  pages =	 {496--503},
  address =	 {Cavtat near Dubrovnik, Croatia},
  month =	 aug,
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/DSD.2006.7},
  annote =	 {Part of the NISC work.}
}

@Book{tschichold1991form,
  author =	 {Jan Tschichold},
  title =	 {The Form of the Book: Essays on the Morality of Good
		 Design},
  publisher =	 {Hartley \& Marks},
  year =	 {1991},
  annote =	 {Purchased 950712, Borders books in Emeryville, after a
		 suggestion from David Siegel.},
  url =		 {http://www.best.com/~dsiegel},
  bdsk-url-1 =	 {http://www.best.com/~dsiegel}
}

@InProceedings{tullsen1995simultaneous,
  author =	 {Dean M. Tullsen and Susan J. Eggers and Henry M. Levy},
  title =	 {Simultaneous Multithreading: Maximizing On-Chip
		 Parallelism},
  booktitle =	 {Proceedings of the 22nd Annual International Symposium on
		 Computer Architecture},
  year =	 {1995},
  pages =	 {392--403},
  address =	 {Santa Margherita Ligure, Italy},
  month =	 jun,
  publisher =	 acm,
  url =		 {citeseer.nj.nec.com/tullsen95simultaneous.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/tullsen95simultaneous.html}
}

@Unpublished{turbak1995applied,
  author =	 {Franklyn Turbak and David Gifford and Brian Reistad},
  title =	 {Applied Semantics of Programming Languages},
  year =	 {1995},
  note =	 {Unpublished textbook},
  annote =	 {Used as a textbook for CS 263},
  url =		 {http://nike.wellesley.edu/~fturbak/pubs/6821/},
  bdsk-url-1 =	 {http://nike.wellesley.edu/~fturbak/pubs/6821/}
}

@Article{turley2004processor,
  author =	 {Jim Turley},
  title =	 {Processor Shipments hit 6.5 billion units},
  journal =	 {Silicon Insider},
  year =	 2004,
  number =	 10,
  month =	 jan,
  annote =	 {Microprocessors and microcontrollers are the most
		 profitable segment of the semiconductor industry, by far.
		 They make up scarcely 2% of the unit volume of semiconductor
		 shipments yet account for 30% of the fiscal tonnage. (Memory
		 chips, in contrast, have about the same volume but half the
		 revenue.) Little wonder that processors are the object of so
		 much interest.
		 
		 Embedded processors -- those not used in PCs -- account for
		 98% of all processor shipments. Here at Silicon Insider, we
		 predict that 6.5 billion units of microprocessor and
		 microcontroller chips will make it out the door in 2004. In
		 comparison, PC processors (the other 2% of unit volume)
		 should reach about 170 million units.
		 
		 As in previous years, the bulk of processor shipments will
		 be 8-bit chips, with 16-bit and 4-bit chips tied for second
		 place. Thirty-two bit processors will continue to grow the
		 fastest, however, and also command the highest prices.},
  url =		 {http://www.jimturley.com/si/Issue10/Issue10.htm},
  bdsk-url-1 =	 {http://www.jimturley.com/si/Issue10/Issue10.htm}
}

@Article{turley2005rose,
  author =	 {Jim Turley},
  title =	 {A rose by any other name},
  journal =	 {EE Times},
  year =	 2005,
  month =	 {October 10},
  annote =	 {Embedded systems are all about hidden intelligence. I don't
		 mean acting stupid-which comes naturally enough to many of
		 us. I mean that embedded systems often hide their
		 sophistication under a black box. Whether it's a DVD
		 recorder, a music player, an antilock brake system or a
		 mobile communications device, the real guts of the system
		 are hidden behind colorful plastic and a recognized brand
		 name. The hardware and software are rarely the stars of the
		 show.
		 
		 Indeed, that's part and parcel of what makes an embedded
		 system: one where you don't really see the technology.
		 Contrast that with a computer (PC, Mac, workstation,
		 supercomputer-take your pick) where the technology is the
		 product. We talk about buying a 4-GHz PC with 512 Mbytes of
		 RAM, but never about an 8-bit microwave with six interrupts
		 and a 10-bit A/D. With computers, the guts come first (can
		 you say, "Intel Inside"?), whereas embedded products are
		 more coy and demure about their private parts.
		 
		 That's got to be frustrating for many embedded engineers.
		 Their work defines the product, yet the work itself goes
		 unnoticed. Indeed, it's generally required to be unnoticed.
		 An overly technoid product is often a failure in the market.
		 It's the deceptively simple ones that fly off the retail
		 shelves.
		 
		 It's also frustrating for many embedded designers to
		 describe what they do. If you work on a recognizable product
		 like an F/A-18 Hornet, a Whirlpool refrigerator or a Nokia
		 phone, you can proudly point to your work and say, "I did
		 that." For most of us, however, the "product" is a bit too
		 nerdy and unrecognizable for the general populace. Grandma
		 can grok a gramophone, but a real-time preemptive
		 multitasking scheduler might be a bit beyond her ken.
		 
		 In his excellent book The Invisible Computer: Why Good
		 Products Can Fail, the Personal Computer Is So Complex, and
		 Information Appliances Are the Solution, Donald A. Norman
		 makes the case that real computers are fairly uncommon but
		 invisible-that is, embedded-computers are everywhere. The
		 man is absolutely right, of course. By my own reckoning, the
		 average middle-class American household includes about 40 to
		 50 microprocessor-based devices, plus another 10 to 30 for
		 each car in the garage. Compare that with the number of PCs
		 in the same house (bearing in mind that a PC includes
		 several processors) and you've got an overwhelming advantage
		 for the little guys.
		 
		 Yet we're left staring at our shoes or waving our hands when
		 asked to describe an embedded system. We're embedded
		 designers and programmers, but we can't adequately define
		 what that means. The very term, embedded, is weighted with
		 contradictory and incompatible definitions, and it's not a
		 word most people use frequently. It's time for a better
		 description of what we do.
		 
		 The Invisible Computer makes a good start, but saying "I
		 design invisible computers" is unlikely to generate
		 comprehension. Explaining what "embedded" means is a bit
		 like explaining a joke: By the time you finish, you've lost
		 your audience. What we need is a better term for "embedded."
		 We've labored under this confusing banner long enough. It's
		 time for someone to propose a better one, so write in with
		 your suggestions. Your industry needs you.}
}

@Book{turner1993using,
  editor =	 {Kenneth J. Turner},
  title =	 {Using Formal Description Techniques: An Introduction to
		 Estelle, Lotos, and {SDL}},
  publisher =	 jw,
  year =	 {1993},
  address =	 jw_a,
  annote =	 {Primarily for Telecomm applications, Estelle is a system of
		 interacting FSMs described textually connected with infinite
		 event buffers. Time is continuous, and delays (range of time
		 predicates must hold) are explicit. Lotos is a textual
		 CSP-style parallel language. SDL is based loosely on FSMs,
		 but they're more like sequential processes, and has both
		 processes and communication diagrams. Communication is
		 through unlimited queues. It has a spiffy graphical
		 syntax.}
}

@Article{udding1986formal,
  author =	 {Jan Tijmen Udding},
  title =	 {A formal model for defining and classifying
		 delay-insensitive circuits and systems},
  journal =	 {Distributed Computing},
  year =	 1986,
  volume =	 1,
  number =	 4,
  pages =	 {197--204},
  annote =	 {His thesis out of Eindhoven was on a similar topic. From
		 Steve Nowick. Doesn't seem to be an electronic version.
		 
		 Starts with very Hoare-like trace theory. Defines commands,
		 a regular-expression-like way of defining trace sets
		 (sequencing, repetition, choice concurrency). "Delay
		 insensitive" means that when a mechanism and its environment
		 interact, computation and transmission interference (data
		 arriving too early or overwriting something else) do not
		 occur.
		 
		 Four constraints on traces: 1) Two identical transitions on
		 a single wire is impossible, (saa prohibited)
		 
		 2) The order in which data on two separate wires arrives is
		 not relevant (e.g., if a,b is allowed, b,a is also allowed)
		 (if sab then sba)
		 
		 3) Similar restriction for two wires going in opposite
		 directions: if both orders are allowed, the order should be
		 irrelevant. (if sab and sba are allowed, then for a trace t,
		 sabt and sbat exist).
		 
		 4) One signal can't disable the reception of another: if you
		 have a choice at a certain point, you must be able to
		 receive either. (sa and sb implies sab exists)
		 
		 Repeatedly cites results from van de Schenepsut ("Trace
		 Theory and VLSI Design")
		 
		 Interesting, but places constraints on the traces of
		 modules; doesn't give constructive ways to construct systems
		 that behave in a delay-insensitive manner.
		 
		 Interesting bibliography: http://edis.win.tue.nl/bibl.html
		 
		 Josephs and Udding also presented a paper in CAV 1990, An
		 Algebra for Delay-Insensitive Circuits.
		 
		 Delay-insensitive references: udding1986formal
		 josephs2000delay-insensitive dechering1999formalization
		 lucassen1994denotational berkel1991vlsi-programming
		 berkel1992handshake van-berkel1993handshake berkel1995vlsi
		 josephs1999modeling josephs2003analysis josephs1993overview
		 patra1993building keller1974towards patra1993building
		 patra1994efficient kishinevsky1994characterizing
		 schols1988notes peeters2001synchronous oleary1997synchronous
		 mallon1998building huffman1957design smith1995correct
		 martin1989programming
		 
		 Balsa stuff: janin2003simulation bardsley1998balsa },
  optmonth =	 {fixme}
}

@Misc{ueda1989tv,
  author =	 {Hiroo Ueda and Hiromitsu Yagi},
  title =	 {TV Game System Having Reduced Memory Needs},
  howpublished = {US Patent 4,824,106},
  year =	 1989,
  month =	 apr,
  annote =	 {The graphics controller for the Nintendo Entertainment
		 System. Basically, a description of sprite graphics.
		 Assigned to Ricoh and Nintendo.}
}

@Article{uhlig1994design,
  author =	 {Richard Uhlig and David Nagle and Tim Stanley and Trevor
		 Mudge and Stuart Sechrest and Richard Brown},
  title =	 {Design Tradeoffs for Software-Managed {TLBs}},
  journal =	 {ACM Transactions on Computer Systems},
  year =	 1994,
  volume =	 12,
  number =	 3,
  pages =	 {175--205},
  annote =	 {Recommended by Jose Brunheroto. TLB simulation related.
		 
		 Shows an interesting study for the MIPS R2000 processor
		 investigating the effect of different TLB organizations for
		 several OS's (Ultrix, OSF/1 and Mach 3.0). Runs on a
		 workstation containing the R2000, requires sophisticated
		 hardware for capturing the TLB information.},
  url =		 {citeseer.nj.nec.com/nagle93design.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/nagle93design.html}
}

@InCollection{ullman2004how,
  author =	 {Jeffrey Ullman},
  title =	 {How You Got Microsoft Word},
  booktitle =	 {Computer Science: Reflections on the Field, Reflections
		 from the Field},
  publisher =	 {National Academies Press},
  year =	 2004,
  pages =	 {161--166},
  annote =	 {Mentioned by Al. Talks about the Bell Labs nroff system,
		 Knuth's TeX, Xerox, and finally Microsoft.
		 
		 Basic idea is that nroff came from early work at MIT,
		 extended with EQN by Kernighan. TeX incorporated all of this
		 and lived on. PARC introduced WSYIWYG, laser printers, and
		 windows. All of this ultimately led to Microsoft Word.}
}

@InProceedings{ulrich1965time-sequenced,
  author =	 {E. G. Ulrich},
  title =	 {Time-Sequenced Logic Simulation based on Circuit Delay and
		 Selective Tracing of Active Network Paths},
  booktitle =	 {Proceedings of the 20th ACM National Conference},
  year =	 1965,
  pages =	 {437--448},
  annote =	 {Cited in roig1997formal as a seminal reference on
		 event-driven simulation.}
}

@Article{ulrich1969exclusive,
  author =	 {E. G. Ulrich},
  title =	 {Exclusive Simulation of Activity in Digital Networks},
  journal =	 cacm,
  year =	 1969,
  volume =	 12,
  number =	 2,
  pages =	 {102--110},
  month =	 feb,
  abstract =	 { A technique for simulating the detailed logic networks of
		 Large and active digital systems is described. Essential
		 objectives sought are improved ease and economy in model
		 generation, economy in execution time and space, and a
		 facility for handling simultaneous activities. The main
		 results obtained are a clear and useful separation of
		 structural and behavioural model description, a reduction of
		 manual tasks in converting Boolean logic into a structural
		 model, the elimination of manual processes in achieving
		 exclusive simulation of activity, an event-scheduling
		 technique which does not deteriorate in economy as the event
		 queue grows in length, and a simulation procedure which
		 deals effectively with any mixture of serial and
		 simultaneous activities. The passage of time is simulated in
		 a precise, quantitative fashion, and systems to be simulated
		 may be combinations of synchronous and asynchronous logic.
		 Certain aspects of the techniques described may be used for
		 the simulation of network structures other than digital
		 networks.},
  annote =	 {Cited in roig1997formal as a seminal reference on
		 event-driven simulation.}
}

@InProceedings{ulrich1973concurrent,
  author =	 {E. G. Ulrich and T. Baker},
  title =	 {The Concurrent Simulation of Nearly Identical Digital
		 Networks},
  booktitle =	 dac73,
  year =	 {1973},
  pages =	 {145--50},
  address =	 {Portland, OR},
  month =	 jun,
  publisher =	 {IEEE},
  note =	 {Also appears in \cite{acm198825}}
}

@Article{unger1959hazards,
  author =	 {Stephen H. Unger},
  title =	 {Hazards and Delays in Asynchronous Sequential Switching
		 Circuits},
  journal =	 {IRE Transactions on Circuit Theory},
  year =	 1959,
  volume =	 12,
  number =	 1,
  pages =	 {12--25},
  month =	 mar,
  annote =	 {Cited by Eichelberger. Lots of really basic definitions for
		 asynchronous logic, like "Essential Hazard." He was with
		 Bell Labs in 1959. Huffman was his advisor.}
}

@Article{ungerer2003survey,
  author =	 {Theo Ungerer and Borut Robi\v{c} and Jurij \v{S}ilc},
  title =	 {A survey of processors with explicit multithreading},
  journal =	 surveys,
  year =	 2003,
  volume =	 25,
  number =	 1,
  pages =	 {29--63},
  month =	 mar,
  annote =	 {Good survey, but nothing much on real-time issues.
		 Interleaved pipeline.}
}

@Book{unicode-consortium1996unicode,
  author =	 {The {Unicode Consortium}},
  title =	 {The Unicode Standard, Version 2.0},
  publisher =	 aw,
  year =	 {1996},
  address =	 aw_a,
  annote =	 {Saw it at Dagtuhl 1996. Every script imaginable.}
}

@Manual{union1999itu-t,
  title =	 {ITU-T Recommendation Z.100: Specification and Description
		 Language},
  organization = {International Telecommunication Union},
  address =	 {Place des Nations, CH-1221, Geneva 20, Switzerland},
  year =	 1999,
  annote =	 {The definition of SDL},
  url =		 {http://www.itu.int},
  bdsk-url-1 =	 {http://www.itu.int}
}

@Article{uresin1989sufficient,
  author =	 {Aydin \"Uresin and Michel Dubois},
  title =	 {Sufficient conditions for the convergence of asynchronous
		 iterations},
  journal =	 {Parallel Computing},
  year =	 1989,
  volume =	 10,
  number =	 1,
  pages =	 {83--92},
  month =	 mar,
  annote =	 {Cited by gesner1996non-monotone. UNREAD}
}

@Article{uresin1990parallel,
  author =	 {Aydin {\"U}resin and Michel Dubois},
  title =	 {Parallel Asynchronous Algorithms for Discrete Data},
  journal =	 jacm,
  year =	 1990,
  volume =	 37,
  number =	 3,
  pages =	 {588--606},
  month =	 jul,
  abstract =	 {Many problems in the area of symbolic computing can be
		 solved by iterative algorithms. Implementations of these
		 algorithms on multiprocessors can be synchronous or
		 asynchronous. Asynchronous implementations are potentially
		 more efficient because synchronization is a major source of
		 performance degradation in most multiprocessor systems. In
		 this paper, sufficient conditions for the convergence of
		 asynchronous iterations to desired solutions are given. The
		 main sufficient condition is shown to be also necessary for
		 the case of finite data domains. The results are applied to
		 prove the convergence of three asynchronous algorithms for
		 the all-pairs shortest path problem, the consistent labeling
		 problem, and a neural net model.}
}

@InProceedings{vachharajani2004liberty,
  author =	 {Manish Vachharajani and Neil Vachharajani and David I.
		 August},
  title =	 {The {Liberty} Structural Specification Language: A
		 High-Level Modeling Language for Component Reuse},
  booktitle =	 pldi,
  year =	 2004,
  month =	 jun,
  annote =	 {Part of the Liberty work},
  optaddress =	 {FIXME},
  optpages =	 {FIXME}
}

@Book{vahid2001embedded,
  author =	 {Frank Vahid and Tony G. Givargis},
  title =	 {Embedded System Design: A Unified Hardware/Software
		 Introduction},
  publisher =	 jw,
  year =	 2001,
  address =	 jw_a,
  annote =	 {I used this as the textbook for 4840 the first year.}
}

@Book{vaidyanathan1993multirate,
  author =	 {P. P. Vaidyanathan},
  title =	 {Multirate Systems and Filter Banks},
  publisher =	 ph,
  year =	 {1993}
}

@InProceedings{valeee-rai1999soot,
  author =	 {Raja Vale/'ee-Rai and Phong Co and Etienne Gagnon and
		 Laurie Hendren and Patrick Lam and Vijay Sundaresan},
  title =	 {Soot --- A {Java} Bytecode Optimization Framework},
  booktitle =	 {Proceedings of CASCON},
  year =	 1999,
  address =	 {Toronto, Ontario},
  month =	 oct,
  annote =	 {Used by the Bandera project as their Java compiler
		 infrastructure.},
  url =		 {http://www.sable.mcgill.ca/soot},
  bdsk-url-1 =	 {http://www.sable.mcgill.ca/soot}
}

@Book{valvano2007embedded,
  author =	 {Jonathan W. Valvano},
  title =	 {Embedded Microcomputer Systems: Real Time Interfacing},
  publisher =	 {Thomson},
  year =	 2007,
  edition =	 {Second},
  annote =	 {Another very microcontroller-centric embedded system
		 book.}
}

@Article{van-aelten1993verification,
  author =	 {Filip {Van Aelten} and Jonathan Allen and Srinivas
		 Devadas},
  title =	 {Verification of Relations between Synchronous Machines},
  journal =	 transcad,
  year =	 {1993},
  volume =	 {12},
  number =	 {12},
  pages =	 {1947--1959},
  month =	 dec
}

@Article{van-aelten1994event-based,
  author =	 {Filip {Van Aelten} and Jonathan Allen and Srinivas
		 Devadas},
  title =	 {Event-Based Verification of Synchronous, Globally
		 Controlled, Logic Designs Against Signal Flow Graphs},
  journal =	 transcad,
  year =	 {1994},
  volume =	 {13},
  number =	 {1},
  pages =	 {122--134},
  month =	 jan
}

@Book{van-berkel1993handshake,
  author =	 {Kees {van Berkel}},
  title =	 {Handshake Circuits: An Asynchronous Architecture for {VLSI}
		 Programming},
  publisher =	 cup,
  year =	 1993,
  annote =	 {Book version of berkel1992handshake -- his thesis.}
}

@Book{van-de-snepscheut1985trace,
  author =	 {Jan L. A. {Van de Snepscheut}},
  title =	 {Trace Theory and {VLSI} Design},
  publisher =	 sv,
  year =	 {1985},
  volume =	 {200},
  series =	 lncs,
  annote =	 {Contains an algorithm for minimizing a finite state machine
		 that reverses it, determinizes it, and reverses it again.
		 
		 The source of the trace theory used by Udding, who was a
		 colleague of Van de Snepscheut's. Dijkstra was also
		 apparently a friend.
		 
		 Defines a trace structure as a <trace set, alphabet> pair,
		 where a trace is a finite string of elements in the alphabet.
		 
		 In discussing prefix-closure, he writes
		 
		 "In the classic theory of finite state machines, a trace may
		 be fed into such a machine, thereby leading the machine
		 through a sequence of states. States are divided in two
		 classes: final and non-final states. In general, one is not
		 interested in the actual state of the machine that a trace
		 leads to, but merely in the class to which that state
		 belongs. Hence, some two-valued indicator is an essential
		 part of the mechanism and its specification. ... The trace
		 set consists of those traces that, formerly, led to a final
		 state."
		 
		 Very mathematical: definitions alternating with proofs.
		 Defines things like the weaving operator and looks at how
		 union and intersection distribute.
		 
		 Defines a regular-expression-like notation for speaking of
		 trace sets.
		 
		 Ultimately gets to delay-insensitive circuits. Defines
		 transmission interference and computation interference.}
}

@InProceedings{van-der-wolf1999mpeg,
  author =	 {Pieter {van der Wolf} and Paul Lieverse and Mudit Goel and
		 David {La Hei} and Kees Vissers},
  title =	 {An {MPEG-2} Decoder Case Study as a Driver for a System
		 Level Design Methodology},
  booktitle =	 {Proceedings of the Seventh International Workshop on
		 Hardware/Software Codesign (CODES)},
  year =	 1999,
  pages =	 {33--37},
  address =	 {Rome, Italy},
  month =	 may,
  annote =	 {Relevant to our little project. I was there, but I don't
		 remember it.},
  url =		 {http://www.cs.ucr.edu/~dalton/refdesign/docs/vanderwolf_codes99.pdf}
		 ,
  bdsk-url-1 =	 {http://www.cs.ucr.edu/~dalton/refdesign/docs/vanderwolf_codes99.pdf}
		 
}

@InProceedings{van-deursen1999understanding,
  author =	 {Arie van Deursen and Leon Moonen},
  title =	 {Understanding {COBOL} Systems using Inferred Types},
  editor =	 {S. Woods},
  booktitle =	 {Proceedings of the 7th International Workshop on Program
		 Comprehension},
  year =	 {1999},
  address =	 {Pittsburgh, Pennsylvania},
  month =	 may,
  publisher =	 {IEEE Computer Society Press},
  annote =	 {Tricky COBOL stuff: finding unused variable fields using
		 type inference. COBOL is really bizarre for this reason.}
}

@Article{van-deursen2000domain-specific,
  author =	 {Arie {van Deursen} and Paul Klint and Joost Visser},
  title =	 {Domain-Specific Languages---An Annotated Bibliography},
  journal =	 {ACM SIGPLAN Notices},
  year =	 2000,
  volume =	 25,
  number =	 6,
  pages =	 {FIXME},
  month =	 {FIXME},
  annote =	 {Cites basu1998promela. Focuses more on PIC and TROFF-like
		 languages, suggesting that may are implemented as
		 formalizing calls to a subroutine library. Excellent
		 collection. Calls them DSLs.},
  url =		 {http://www.cwi.nl/~jvisser/papers/},
  bdsk-url-1 =	 {http://www.cwi.nl/~jvisser/papers/}
}

@Article{van-glabbeek1997notes,
  author =	 {R. J. {van Glabbeek}},
  title =	 {Notes on the methodology of {CCS} and {CSP}},
  journal =	 {Theoretical Computer Science},
  year =	 1997,
  volume =	 177,
  number =	 2,
  pages =	 {329--349},
  month =	 may,
  annote =	 {From a Stanford theory website,
		 http://theory.stanford.edu/~rvg/process.html
		 
		 Survey of differences between CCS and CSP. Interesting.}
}

@Article{varvarigou1999reconfiguration,
  author =	 {Theodora A. Varvarigou and Miltiadis E. Anagnostou and
		 Sudhir R. Ahuja},
  title =	 {Reconfiguration models and algorithms for stateful
		 interactive processes},
  journal =	 transse,
  year =	 1999,
  volume =	 25,
  number =	 3,
  pages =	 {401--415},
  month =	 may,
  annote =	 {Part of a special issue. UNREAD}
}

@TechReport{vasudevan2006jpeg,
  author =	 {Nalini Vasudevan and Stephen A. Edwards},
  title =	 {A {JPEG} Decoder in {SHIM}},
  institution =	 cucs,
  year =	 2006,
  number =	 {CUCS--048--06},
  address =	 nyny,
  month =	 dec,
  annote =	 {Description of Nalini's implementation of a JPEG decoder.
		 Poor execution time results.}
}

@TechReport{vasudevan2008analysis,
  author =	 {Nalini Vasudevan and Olivier Tardieu and Julian Dolby and
		 Stephen A. Edwards},
  title =	 {Analysis of Clocks in X10 Programs (Extended)},
  institution =	 cucs,
  year =	 2008,
  number =	 {CUCS--052--08},
  address =	 nyny,
  month =	 dec,
  annote =	 {Includes Appendix for the CC Paper}
}

@InProceedings{vasudevan2008deterministic,
  author =	 {Nalini Vasudevan and Satnam Singh and Stephen A. Edwards},
  title =	 {A Deterministic Multi-Way Rendezvous Library for
		 {Haskell}},
  booktitle =	 ipdps,
  year =	 2008,
  pages =	 {1--12},
  address =	 {Miami, Florida},
  month =	 apr,
  annote =	 {First paper with Nalini},
  selectivity =	 {105/410 = 25\%}
}

@InProceedings{vasudevan2008static,
  author =	 {Nalini Vasudevan and Stephen A. Edwards},
  title =	 {Static Deadlock Detection for the {SHIM} Concurrent
		 Language},
  booktitle =	 memocode,
  year =	 2008,
  pages =	 {49--58},
  address =	 {Anaheim, California},
  month =	 jun,
  annote =	 {Uses NuSMV to model-check a synchronous model of a SHIM
		 program}
}

@InProceedings{vasudevan2009buffer,
  author =	 {Nalini Vasudevan and Stephen A. Edwards},
  title =	 {Buffer Sharing in {CSP}-like Programs},
  booktitle =	 memocode,
  year =	 2009,
  address =	 {Cambridge, Massachusetts},
  month =	 jul,
  annote =	 {About looking at communication patterns in SHIM},
  optpages =	 {151--160},
  selectivity =	 {15/42 = 36\%}
}

@InProceedings{vasudevan2009celling,
  author =	 {Nalini Vasudevan and Stephen A. Edwards},
  title =	 {Celling {SHIM}: Compiling Deterministic Concurrency to a
		 Heterogeneous Multicore},
  booktitle =	 sac,
  year =	 2009,
  volume =	 {III},
  pages =	 {1626--1631},
  address =	 {Honolulu, Hawaii},
  month =	 mar,
  annote =	 {How to move data around on the Cell for the SHIM
		 language.},
  selectivity =	 {1084/316 = 29\%}
}

@InProceedings{vasudevan2009compile,
  author =	 {Nalini Vasudevan and Olivier Tardieu and Julian Dolby and
		 Stephen A. Edwards},
  title =	 {Compile-Time Analysis and Specialization of Clocks in
		 Concurrent Programs},
  booktitle =	 cc,
  year =	 2009,
  series =	 lncs,
  volume =	 5501,
  pages =	 {48--62},
  address =	 {York, United Kingdom},
  month =	 mar,
  annote =	 {The X10 clock optimization stuff Nalini worked on with
		 Oliver at IBM during the summer of 2008.}
}

@InProceedings{vasudevan2009determinizing,
  author =	 {Nalini Vasudevan and Stephen A. Edwards},
  title =	 {A Determinizing Compiler},
  booktitle =	 {Programming Languages Design and Implementation (PLDI) -
		 Fun Ideas and Thoughts Session},
  year =	 2009,
  address =	 {Dublin, Ireland},
  month =	 jun,
  annote =	 {Nalini's crazy idea about a compiler that makes parallel
		 programs deterministic.},
  optpages =	 {FIXME}
}

@InProceedings{vaziri2006associating,
  author =	 {Mandana Vaziri and Frank Tip and Julian Dolby},
  title =	 {Associating synchronization constraints with data in an
		 object-oriented language},
  booktitle =	 popl,
  year =	 2006,
  pages =	 {334--345},
  address =	 {Charleston, South Carolina},
  month =	 jan
}

@InProceedings{vecchie2003syntax-driven,
  author =	 {Eric Vecchi\'e and Robert {de Simone}},
  title =	 {Syntax-driven behavior partitioning for model-checking of
		 {Esterel} programs},
  booktitle =	 slap,
  year =	 2003,
  address =	 {Barcelona, Spain},
  month =	 {FIXME},
  note =	 {Submitted},
  annote =	 {From Eric. Saw it at SYNCHRON 2003. Nice idea: use the
		 control structure of the Esterel program to choose which
		 states to pursue. Not a dramatic improvement, but not bad.},
  optpages =	 {FIXME}
}

@InProceedings{venkataramani2006leveraging,
  author =	 {Girish Venkataramani and Seth C. Goldstein},
  title =	 {Leveraging protocol knowledge in slack matching},
  booktitle =	 iccad,
  year =	 2006,
  pages =	 {724--729},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Mentioned by Peter Beerel as relevant to pipeline analysis.
		 
		 Very relevant to the TCAD paper -- talks about buffer sizing
		 in FIFOs, calls it "slack matching."
		 
		 They take a heuristic approach.
		 
		 Cite beerel2006slack, lu2003performance, and
		 prakash2006slack.
		 
		 Also mentions Burns 1991 PhD thesis at Utah,
		 nielson1994performance and xie1999bounding
		 
		 "To overcome these difficulties, we employ a trace-based
		 simulation technique to focus the analysis on the most
		 commonly expected input vectors." }
}

@InProceedings{venkataramani2007global,
  author =	 {Girish Venkataramani and Mihai Budiu and Chelcea Tiberiu
		 and Seth C. Goldstein},
  title =	 {Global Critical Path: A Tool for System-Level Timing
		 Analysis},
  booktitle =	 dac07,
  year =	 2007,
  pages =	 {783--786},
  address =	 dac07a,
  month =	 jun,
  annote =	 {Mentioned by Peter Beerel as relevant to pipeline analysis.
		 Cites some papers that have considered choice:
		 xie1999bounding and holgaard2000symbolic?
		 
		 It considers systems with choice, but is testing-based.
		 I.e., from a trace, they determine critical paths by looking
		 at causality.}
}

@Article{venkatesh1992spare,
  author =	 {G. A. Venkatesh and Charles N. Fischer},
  title =	 {SPARE: A Development Environment for Program Analysis
		 Algorithms},
  journal =	 transse,
  year =	 1992,
  volume =	 18,
  number =	 4,
  pages =	 {304--318},
  doi =		 {http://dx.doi.org/10.1109/32.129219},
  issn =	 {0098-5589},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/32.129219}
}

@InProceedings{vercauteren1997derivation,
  author =	 {Steven Vercauteren and Diederik Verkest and Gjant {de Jong}
		 and Bill Lin},
  title =	 {Derivation of Formal Representations from Process-Based
		 Specification and Implementation Models},
  booktitle =	 isss,
  year =	 1997,
  pages =	 {16--23},
  address =	 {Antwerp, Belgium},
  month =	 sep,
  annote =	 {Cited in lin1998software. More about translating a software
		 program into a Petri-net model. See also
		 de-jong1994communicating}
}

@InProceedings{vergauwen1994efficient,
  author =	 {B. Vergauwen and J. Wauman and J. Lewi},
  title =	 {Efficient Fixpoint Computation},
  booktitle =	 sas,
  year =	 1994,
  series =	 lncs,
  volume =	 864,
  pages =	 {314--328},
  address =	 {Namur, Belgium},
  month =	 sep,
  publisher =	 sv,
  annote =	 {Interesting?}
}

@InProceedings{verma2004cache-aware,
  author =	 {Manish Verma and Lars Wehmeyer and Peter Marwedel},
  title =	 {Cache-Aware Scratchpad Allocation Algorithm},
  booktitle =	 date,
  year =	 2004,
  pages =	 {FIXME},
  address =	 {Paris, France},
  month =	 feb,
  annote =	 {Looking at an algorithm for allocating scratchpad memory
		 that takes cache behavior into account.
		 
		 "Scratchpad memories are lower power, but require compiler
		 support. Most high-end embedded processors include both
		 caches and scratchpad memory." Their architecture has a
		 scratchpad off the instruction cache (perhaps for loops).
		 They're worried more about caching loops. A reference
		 (avissar2002optimal) describes allocation schemes.
		 
		 It seems like there's been plenty of work on scratchpad
		 memories and power reduction, etc. Can I apply my ideas to a
		 different aspect of processor design? Predictable power
		 behavior is another advantage of predictable
		 architectures.}
}

@InProceedings{vidal-naquet1994integration,
  author =	 {Guy Vidal-Naquet and Fr\'ed\'eric Boulanger},
  title =	 {Integration of Synchronous Modules in an Object Oriented
		 Language},
  booktitle =	 {Information Systems Correctness and Reusability: Selected
		 Papers from the {IS-CORE} Workshop},
  year =	 {1994},
  address =	 {Amsterdam},
  month =	 sep,
  publisher =	 {World Scientific},
  annote =	 {Alain suggested this. Synchronous modules with no feedback
		 in Ptolemy.},
  url =		 {ftp://ftp.supelec.fr/pub/cs/publications/Iscore95.ps.gz},
  bdsk-url-1 =	 {ftp://ftp.supelec.fr/pub/cs/publications/Iscore95.ps.gz}
}

@InProceedings{viljamaa2003reverse,
  author =	 {Jukka Viljamaa},
  title =	 {Reverse Engineering Framework Reuse Interfaces},
  booktitle =	 {Proceedings of the 9th European software engineering
		 conference held jointly with 10th ACM SIGSOFT international
		 symposium on Foundations of software engineering},
  year =	 2003,
  pages =	 {217--226},
  address =	 {Helsinki, Finland},
  month =	 sep,
  annote =	 {Paper to get an idea about SIGSOFT. A little bit of formal
		 stuff, and a case study, but no deep algorithms or detailed
		 numerical results.
		 
		 Interesting stuff: basically techniques for automatically
		 extracting information about a particular use of a
		 particular interface. Not that different than.}
}

@InProceedings{villa1989nova,
  author =	 {Tiziano Villa and Alberto Sangiovanni-Vincentelli},
  title =	 {{NOVA:} State Assignment of Finite State Machines for
		 Optimal Two-level Logic Implementations},
  booktitle =	 dac89,
  year =	 1989,
  pages =	 {327--332},
  address =	 dac89a,
  month =	 jun,
  annote =	 {Describes NOVA, Tiziano's two-level FSM minimizer.}
}

@Book{villa1997synthesis,
  author =	 {Tiziano Villa and Timothy Kam and Robert K. Brayton and
		 Alberto Sangiovanni-Vincentelli},
  title =	 {Synthesis of Finite State Machines: Logic Optimization},
  publisher =	 kl,
  year =	 1997,
  address =	 kl_a,
  annote =	 {Encoding problems. See also SED:kam:96a.}
}

@InProceedings{villa2007challenges,
  author =	 {O. Villa and D. P. Scarpazza and F. Petrini and J. F.
		 Peinador},
  title =	 {Challenges in Mapping Graph Exploration Algorithms on
		 Advanced Multi-core Processors},
  booktitle =	 ipdps,
  year =	 2007,
  pages =	 {1-10},
  publisher =	 {IEEE}
}

@Misc{virki2007global,
  author =	 {Tarmo Virki},
  title =	 {Global cell phone use at 50 percent},
  howpublished = {[Online]
		 http://www.reuters.com/article/technologyNews/idUSL2917209520071129}
		 ,
  year =	 2007,
  month =	 {November 29},
  note =	 {Reuters},
  annote =	 {Learned about it from a PC Week article.},
  text =	 {Global cell phone use at 50 percent Thu Nov 29, 2007
		 12:42pm EST HELSINKI (Reuters) - Worldwide mobile telephone
		 subscriptions reached 3.3 billion -- equivalent to half the
		 global population -- on Thursday, 26 years after the first
		 cellular network was launched, research firm Informa said.
		 Since the first Nordic Mobile Telephony (NMT) networks were
		 switched on in 1981 in Saudi Arabia, Sweden and Norway,
		 mobile phones have become the consumer electronics sector
		 with the largest volume of sales in the world. "The mobile
		 industry has constantly outperformed even the most
		 optimistic forecasts for subscriber growth," Mark Newman,
		 head of research at Informa said in a statement. "For
		 children growing up today the issue is not whether they will
		 get a mobile phone, it's a question of when," Newman said.
		 In recent years the industry has seen surging growth in
		 outskirts of China and India, helped by constantly falling
		 phone and call prices, with cellphone vendors already eyeing
		 inroads into Africa's countryside to keep up the growth. The
		 Nordic start for mobile telephony was the basis for the
		 success stories of Finnish Nokia (NOK1V.HE: Quote, Profile,
		 Research) and Sweden's Ericsson (ERICb.ST: Quote, Profile,
		 Research). Fast growth in Asian wireless markets has since
		 helped Korean Samsung Electronics (005930.KS: Quote,
		 Profile, Research) and LG Electronics (066570.KS: Quote,
		 Profile, Research) as well as China's ZTE (0763.HK: Quote,
		 Profile, Research) take their place among the top six
		 cellphone vendors globally. But although mobile
		 subscriptions have reached the equivalent of 50 percent of
		 the population, this does not mean that half the people in
		 the world now have a mobile phone, since Informa said 59
		 countries have mobile penetration of over 100 percent --
		 where some owners have more than one phone. "The economic
		 difference between the more mature markets and those in
		 developing countries is highlighted by the vast differences
		 in operators' revenues per user," Informa said. Hutchison
		 Whampoa's (0013.HK: Quote, Profile, Research) 3 operation
		 has an average revenue per user of just over $70 a month in
		 Britain, while Hutchison's Sri Lankan operator counts
		 revenues of below $3 per user. According to the
		 International Programs Center of the U.S. Census Bureau, the
		 total population of the world reached 6,634,294,193 on
		 Thursday. At the same time 2,571,563,279 people were using
		 the most widely used mobile technology, GSM (Global System
		 for Mobile communications), according to global trade body
		 GSM Association. The second largest mobile technology, CDMA,
		 had 421.4 million users at end September. (Reporting by
		 Tarmo Virki)}
}

@InProceedings{virtanen2000processor,
  author =	 {Seppo Virtanen and Johan Lilius and Tomi Westerlund},
  title =	 {A Processor Architecture for the {TACO} Protocol Processor
		 Development Framework},
  booktitle =	 {Proceedings of the 18th IEEE NorChip Conference},
  year =	 2000,
  pages =	 {FIXME},
  address =	 {Turku, Finland},
  month =	 nov,
  annote =	 {! UNREAD}
}

@InProceedings{virtanen2001taco,
  author =	 {Seppo Virtanen and John Lilius},
  title =	 {The {TACO} Protocol Processor Simulation Environment},
  booktitle =	 {Proceedings of the 9th International Symposium on
		 Hardware/Software Codesign (CODES)},
  year =	 2001,
  pages =	 {201--206},
  address =	 {Copenhagen, Denmark},
  month =	 apr,
  annote =	 {Simulator for their network processor family is based on
		 SystemC.},
  url =		 {http://users.utu.fi/seaavi/res1.html},
  bdsk-url-1 =	 {http://users.utu.fi/seaavi/res1.html}
}

@Article{vishwanathan2004overview,
  author =	 {Laxmi Vishwanathan and Dan Schaffer and Jock Tomlinson},
  title =	 {Overview of Memory Types and {DDR} Interface Design
		 Implementation},
  journal =	 {FPGA and Structured ASIC Journal},
  year =	 2004,
  month =	 {November 9},
  url =		 {http://www.fpgajournal.com/articles/20041109_lattice.htm},
  annote =	 {Nice discussion of how DDR interfacing is challenging on an
		 FPGA and how they (Lattice) do it.}
}

@InProceedings{visser2000model,
  author =	 {Willem Visser and Klaus Havelund and Guillaume Brat and
		 Seungjoon Park},
  title =	 {Model checking programs},
  booktitle =	 {Proceedings of Automated Software Engineering (ASE)},
  year =	 2000,
  pages =	 {3--11},
  address =	 {Grenoble, France},
  month =	 sep,
  annote =	 {Was brat2000model},
  doi =		 {http://dx.doi.org/10.1109/ASE.2000.873645},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/ASE.2000.873645}
}

@Article{visser2003model,
  author =	 {Willem Visser and Klaus Havelund and Guillaume Brat and
		 SeungJoon Park and Flavio Lerda},
  title =	 {Model Checking Programs},
  journal =	 {Automated Software Engineering},
  year =	 2003,
  volume =	 10,
  number =	 2,
  pages =	 {203--232},
  month =	 apr,
  annote =	 {About JavaPathFinder, an explicit-state model checking tool
		 for Java. More up-to-date than havelund2000model, which only
		 described a translator from Promela.}
}

@InProceedings{visweswariah2002death,
  author =	 {C. Visweswariah},
  title =	 {Death, Taxes, and Failing Chips},
  booktitle =	 tau,
  year =	 2002,
  month =	 dec,
  entered =	 {Luca Carloni,07/12/05},
  keywords =	 {design variability, DFM},
  oldkey =	 {visweswariah02},
  sedtransform = {s/visweswariah02/visweswariah2002death/}
}

@InProceedings{vivien2001incrementalized,
  author =	 {Frederic Vivien and Martin Rinard},
  title =	 {Incrementalized pointer and escape analysis},
  booktitle =	 pldi,
  year =	 {2001},
  pages =	 {35--46},
  oldkey =	 {vivien1},
  sedtransform = {s/vivien1/vivien2001incrementalized/}
}

@Book{voss2006pstricks,
  author =	 {Herbert Vo\s},
  title =	 {PSTricks: Grafik mit PostScript f\"ur \TeX{} und \LaTeX{}},
  publisher =	 {Lehmanns},
  year =	 2006,
  note =	 {In German.},
  annote =	 {Mentioned to be by Klaus Schneider. Actually useful, even
		 if it is in German.
		 
		 http://www.lob.de/}
}

@Article{vuillemin1994on,
  author =	 {Jean E. Vuillemin},
  title =	 {On Circuits and Numbers},
  journal =	 transcomp,
  year =	 1994,
  volume =	 43,
  number =	 8,
  pages =	 {868--879},
  month =	 aug,
  annote =	 {Berry cites this in his foundations article, among other
		 places.
		 
		 Ideas about how to build bit-serial circuits for various
		 unusual operators, including square root.}
}

@InProceedings{waddington2005high,
  author =	 {D.G. Waddington and B. Yao},
  title =	 {High Fidelity {C}++ Code Transformation},
  booktitle =	 {Proceedings of the 5th workshop on Language Descriptions,
		 Tools and Applications (LDTA)},
  year =	 {2005},
  oldkey =	 {proteus},
  sedtransform = {s/proteus/waddington2005high/}
}

@Book{wadge1985lucid,
  author =	 {William W. Wadge and Edward A. Ashcroft},
  title =	 {Lucid, The Dataflow Programming Language},
  publisher =	 ap,
  year =	 {1985},
  series =	 {A.P.I.C. Studies in Data Processing},
  number =	 {22}
}

@InProceedings{wagner2000first,
  author =	 {David Wagner and Jeffrey S. Foster and Eric A. Brewer and
		 Alexander Aiken},
  title =	 {A First Step towards Automated Detection of Buffer Overrun
		 Vulnerabilities},
  booktitle =	 {Proceedings of the Network and Distributed System Security
		 Symposium (NDSS)},
  year =	 2000,
  pages =	 {3--17},
  address =	 {San Diego, California},
  month =	 feb,
  annote =	 {Buffer Overrun Detection as a static (integer range)
		 analysis.
		 
		 From Angelos: Part of the Codiva project}
}

@InProceedings{wagner2001c,
  author =	 {Jens Wagner and Rainer Leupers},
  title =	 {C Compiler Design for an Industrial Network Processor},
  booktitle =	 lctes,
  year =	 2001,
  pages =	 {FIXME},
  address =	 {Snowbird, Utah},
  month =	 jun,
  annote =	 {Also presented at the 5th International Workshop on
		 Software and Compilers for Embedded Systems: SCOPES Scholss
		 Rheinfels, St. Goar, Germany, March 2001:
		 http://ls12-www.cs.uni-dortmund.de/scopes-01/program.html
		 
		 Targets the network processor proposed by Infineon designed
		 to handle bitsteam packing/unpacking by allowing fields
		 within registers to be accessed, even those spanning two or
		 more registers.
		 
		 Idea: provide library functions recognized by the compiler
		 that allow more direct access to fields within variables.
		 Also, allow "register int a[3]"
		 
		 They built this on their LANCE C compiler system developed
		 at Dortmund.
		 
		 Register allocation is the most difficult problem, since
		 registers may have to be allocated in blocks.
		 
		 Leupers is into code generation for DSPs and other embedded
		 processors},
  url =		 {http://ls12-www.cs.uni-dortmund.de/~leupers/},
  bdsk-url-1 =	 {http://ls12-www.cs.uni-dortmund.de/~leupers/}
}

@Book{wagner2005robustness,
  author =	 {Andreas Wagner},
  title =	 {Robustness and Evolvability in Living Systems},
  publisher =	 {Princeton University Press},
  year =	 2005,
  annote =	 {Suggested by Mark Siegal. Review suggests that the main
		 idea is that organisms build structures that don't change
		 much when mutated.
		 
		 Hypotheses from the introductory chapter:
		 
		 "Most problem the living have solved have an astronomical
		 number of equivalent solutions, which can be thought of
		 existing in a vast neutral space."
		 
		 "Biological systems are mutationally robust for two reasons.
		 First, robust systems are easier to find in the blindly
		 grouping search o biological evolution, simply because of
		 the large neutral space associated with them. Second,
		 natural selection can futher increase robustness by
		 incremental evolution of a system within a neutral space."
		 
		 "Either mutations or nongenetic change can drive incremental
		 evolution of mutational robustness."
		 
		 "Robustness and neutral mutations are key to evolutionary
		 innovation"
		 
		 "Redundancy of a system's parts is a minor mechanistic cause
		 of robustness to mutation. More important is distributed
		 robustness."
		 
		 "Fragility in a biological system, the opposite of
		 robustness, can have several evolutionary causes."
		 
		 "Many natural systems below and beyond living organisms show
		 great robustness to changes in their parts. Such robustness
		 can also increase over time, but the cause is usually
		 self-organization instead of natural selection."
		 
		 "Many of the mechanistic principles that underlie robustness
		 in living systems can also be observed in man-made,
		 engineered systems."
		 
		 First few chapters talk about DNA-level robustness. Lot of
		 it has an error-correcting-code flavor; not terribly
		 relevant to our SoD proposal.
		 
		 Amazing: RNA itself has secondary structure, something like
		 protein folding due to weak interactions between nearby
		 strands. There's an elaborate language for it, and
		 equivalent tricky analysis. Wagner appears to work on this.
		 The hypothesis is that these networks are themselves robust
		 to single nucleotide changes.
		 
		 He then moves on to proteins, again arguing the point that
		 many amino acid sequences can have roughly the same
		 structure.
		 
		 Part II of the book starts with a discussion of robustness
		 in gene expression, taking the Even-skipped gene and its
		 role in Drosophila development as an example. This is
		 regulatory (transcriptional) DNA robustness. The idea is
		 that there are different ways to regulate this gene that
		 work equally well.
		 
		 Next are metabolic pathways. It appears that there's some
		 basis for these being robust just on chemical grounds.
		 
		 Metabolic networks: Lots of math here, and graph theory. His
		 argument is that just graph structure isn't enough to
		 explain things; the flux through the pathways also matters.
		 
		 Gene expression in Drosophila. Talks about robustness here.
		 An herical idea: robustness is in part due to many
		 interactions, otherwise every little change would affect
		 something directly, regardless of the others. This actually
		 goes against the isolation/modularity model. p171
		 
		 Chapter 12 is about the many ways of building the same thing
		 and how this leads to robustness.
		 
		 Third part of the book is about the common principles
		 underlying all these forms of robustness. Ch 13: neutral
		 spaces.
		 
		 Ch 14: Does robustness help or hinder mutability?
		 
		 Ch 15: Redundancy or distributed robustness? Argues that
		 simple duplication is not the main mechanism, but that
		 instead distributed robustness: when one part of a system
		 fails, the other parts of the system don't take over
		 completely, but compensate. Rerouting through other parts of
		 a network.
		 
		 Ch 18: Sometimes fragility can be useful.
		 
		 Part IV: Robustness outside organisms. Ch 19: natural
		 systems and self-organization. }
}

@Article{waingold1997baring,
  author =	 {Elliot Waingold and Michael Taylor and Devabhaktuni
		 Srikrishna and Vivek Sarkar and Walter Lee and Victor Lee
		 and Jang Kim and Matthew Frank and Peter Finch and Rajeev
		 Barua and Jonathan Babb and Saman Amarasinghe and Anant
		 Agarwal},
  title =	 {Baring It All to Software: Raw Machines},
  journal =	 {Computer},
  year =	 {1997},
  volume =	 {30},
  number =	 {9},
  pages =	 {86--93},
  url =		 {citeseer.nj.nec.com/article/waingold97baring.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/article/waingold97baring.html}
}

@InProceedings{wakabayashi1992global,
  author =	 {K. Wakabayashi and H. Tanaka},
  title =	 {Global scheduling independent of control dependencies based
		 on condition vectors},
  booktitle =	 dac92,
  year =	 1992,
  pages =	 {112--115},
  address =	 dac92a,
  month =	 jun,
  annote =	 {FIXME}
}

@InProceedings{wakabayashi1999c-based,
  author =	 {Kazutoshi Wakabayashi},
  title =	 {C-based Synthesis Experiences with a Behavior Synthesizer,
		 {``Cyber''}},
  booktitle =	 date,
  year =	 1999,
  pages =	 {390--393},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Luc's papers mentioned this. There's almost nothing here,
		 just some examples of things they've done.
		 
		 From NEC.
		 
		 An EE Times article on it:
		 http://www.eetimes.com/news/98/1017news/nec.html
		 
		 Probably the same paper appeared in the NEC research
		 journal:
		 http://www.nec.co.jp/techrep/en/r_and_d/r00/r00-no3/rd413e06.html
		 
		 http://neasia.nikkeibp.com/nea/200201/eda_162488.html
		 },
  url =		 {http://jamaica.ee.pitt.edu/Archives/ProceedingArchives/Date/Date99/}
		 ,
  bdsk-url-1 =	 {http://jamaica.ee.pitt.edu/Archives/ProceedingArchives/Date/Date99/}
		 
}

@Article{wakabayashi2000c-based,
  author =	 {Kazutoshi Wakabayashi and Takumi Okamoto},
  title =	 {C-Based {SoC} Design Flow and {EDA} Tools: An {ASIC} and
		 System Vendor Perspective},
  journal =	 transcad,
  year =	 2000,
  volume =	 19,
  number =	 12,
  pages =	 {1507--1522},
  month =	 dec,
  annote =	 {Part of a nice special issue. Waka himself suggested
		 this.}
}

@InProceedings{wakabayashi2004c-based,
  author =	 {Kazutoshi Wakabayashi},
  title =	 {C-based Behavioral Synthesis and Verification: Analysis on
		 Industrial Design Examples},
  booktitle =	 dap-dac,
  year =	 2004,
  pages =	 {344-348},
  address =	 {Yokohama, Japan},
  month =	 jan,
  annote =	 {Waka sent this to me.}
}

@Book{wakerly1994digital,
  author =	 {John F. Wakerly},
  title =	 {Digital Design: Principles and Practices},
  publisher =	 ph,
  year =	 {1994},
  address =	 ph_a,
  edition =	 {Second},
  annote =	 {Purchased for CS 150, Spring 1995, a supplementary text}
}

@Article{walden1984automatic,
  author =	 {Kim Walden},
  title =	 {Automatic generation of make dependencies},
  journal =	 spe,
  year =	 1984,
  volume =	 14,
  number =	 6,
  pages =	 {575--585},
  month =	 jun,
  annote =	 {Looking for #include statements in .c files. Something like
		 cpp -M},
  doi =		 {10.1002/spe.4380140607},
  bdsk-url-1 =	 {http://dx.doi.org/10.1002/spe.4380140607}
}

@Article{walker1989amateur,
  author =	 {J. Walker},
  title =	 {The Amateur Scientist: The Mechanics of Rock Climbing, or
		 Surviving the Ultimate Physics Exam},
  journal =	 {Scientific American},
  year =	 {1989},
  month =	 jun,
  annote =	 {Cleaner discussion of \cite{SED:hudson:76}}
}

@InProceedings{wall1991limits,
  author =	 {David. W. Wall},
  title =	 {Limits of Instruction-Level Parallelism},
  booktitle =	 asplos,
  year =	 {1991},
  series =	 {SIGPLAN Notices, 26(4):176--189},
  address =	 {New York, NY},
  publisher =	 {ACM Press},
  annote =	 {Heavily cited},
  isbn =	 {0-89791-380-9},
  optnumber =	 {4},
  optpages =	 {176--189},
  optvolume =	 {26},
  url =		 {citeseer.nj.nec.com/wall90limits.html},
  bdsk-url-1 =	 {citeseer.nj.nec.com/wall90limits.html}
}

@Book{wall1991programming,
  author =	 {Larry Wall and Randal L. Schwartz},
  title =	 {Programming Perl},
  publisher =	 ora,
  year =	 {1991},
  address =	 ora_a,
  annote =	 {Cody's, 950125. Includes Quick Reference Guide.}
}

@TechReport{wall1994speculative,
  author =	 {David W. Wall},
  title =	 {Speculative Execution and Instruction-Level Parallelism},
  institution =	 {DEC Western Research Laboratory},
  year =	 1994,
  number =	 {TN--42},
  address =	 {Palo Alto, California},
  month =	 mar,
  annote =	 {FIXME
		 
		 citeseer.nj.nec.com/wall94speculative.html}
}

@Book{wall1996programming,
  author =	 {Larry Wall and Tom Christiansen and Randal L. Schwartz},
  title =	 {Programming Perl},
  publisher =	 ora,
  year =	 {1996},
  address =	 ora_a,
  edition =	 {Second},
  annote =	 {Saw it at Dagstuhl 1996. Includes Perl5}
}

@Article{wan2001design,
  author =	 {Marlene Wan and Hui Zhang and Varghese George and Martin
		 Benes and Arthur Abnous and Vandana Prabhu and Jan M.
		 Rabaey},
  title =	 {Design methodology of a low-energy reconfigurable
		 single-chip {DSP} system},
  journal =	 {Journal of VLSI Signal Processing Systems},
  year =	 2001,
  volume =	 28,
  number =	 {1--2},
  pages =	 {47--61},
  month =	 {May-June},
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{wang1993input,
  author =	 {Huey-Yih Wang and Robert K. Brayton},
  title =	 {Input don't care sequences in {FSM} networks},
  booktitle =	 iccad,
  year =	 1993,
  pages =	 {321--328},
  address =	 {Santa Clara, California},
  month =	 nov,
  annote =	 {Random search.
		 
		 Worries about sequences that you can't see, not just
		 combinations that do not occur. Interesting bibliography.}
}

@InProceedings{wang1998practical,
  author =	 {Tsu-Hua Wang and Thomas Edsall},
  title =	 {Practical {FSM} Analysis for {Verilog}},
  booktitle =	 {Proceedings of the International Verilog HDL Conference and
		 VHDL International Users Forum},
  year =	 1998,
  address =	 {Santa Clara, California},
  month =	 mar,
  annote =	 {Engineers from Cisco. Deriving FSMs from Verilog. Requires
		 a particular annotated coding style. Does brute-force
		 reachability and uses Dot to draw it. Has a PLI attachment
		 that uses information about FSMs to check coverage.},
  url =		 {http://computer.org/proceedings/ivc-viuf/8415/8415toc.htm},
  bdsk-url-1 =	 {http://computer.org/proceedings/ivc-viuf/8415/8415toc.htm}
}

@InProceedings{wang2000framework,
  author =	 {Lei Wang and Waibhav Tembe and Santosh Pande},
  title =	 {A Framework for Loop Distribution on Limited On-Chip Memory
		 Processors},
  booktitle =	 {Proceedings of the International Conference on Compiler
		 Construction (CC)},
  year =	 2000,
  series =	 lncs,
  volume =	 1781,
  pages =	 {141--156},
  address =	 {Berlin, Germany},
  month =	 mar,
  publisher =	 sv,
  annote =	 {Scratchpad Memory}
}

@InProceedings{wang2001formal,
  author =	 {Dong Wang and Pei-Hsin Ho and Jiang Long and James Kukula
		 and Yunshan Zhu and Tony Ma and Robert Damiano},
  title =	 {Formal Property Verification by Abstraction Refinement with
		 Formal, Simulation and Hybrid Engines},
  booktitle =	 dac01,
  year =	 2001,
  address =	 dac01a,
  month =	 jun,
  annote =	 {Second Ketchum paper},
  optpages =	 {FIXME}
}

@InProceedings{wang2003high-level,
  author =	 {Weidong Wang and Niraj K. Jha and Anand Raghunathan and
		 Sujit Dey},
  title =	 {High-level Synthesis of Multi-process Behavioral
		 Descriptions},
  booktitle =	 {Proceedings of the 16th International Conference on VLSI
		 Design},
  year =	 2003,
  pages =	 {467--473},
  address =	 {New Delhi, India},
  month =	 jan,
  annote =	 {Relevant to the SHIM-to-hardware stuff. Nice bibliography.
		 Cites the work by Rosenstiel on synchronization
		 identification. Starts from a SHIM-like specification. Looks
		 at resource sharing. Considers the notion of a critical path.
		 
		 Very relevant for Sampada. Exactly the idea of resource
		 budgeting and worrying about how balancing it leads to
		 minimal waiting times.
		 
		 Used NEC's CYBER system as a synthesis platform. Looks like
		 Jha worked with the NEC folks in Princeton. }
}

@InProceedings{wang2004fine-grain,
  author =	 {Chao Wang and Gary D. Hachtel and Fabio Somenzi},
  title =	 {Fine-Grain Abstraction and Sequential Don't Cares for Large
		 Scale Model Checking},
  booktitle =	 iccd,
  year =	 2004,
  pages =	 {112--118},
  address =	 {San Jose, California},
  month =	 oct,
  annote =	 {Interesting. Found during a random search. SAT and
		 sequential don't-cares?
		 
		 Actually, mostly about doing abstraction during
		 model-checking. Their main contribution is a way to abstract
		 not only state registers but also cut the Boolean network
		 and ideas about how to do this.
		 
		 They observe that when doing this, treating all inputs as
		 being completely unconstrained leads to terrible results, so
		 they propose calculating sequential don't-cares for these
		 inputs and applying them as constraints. This greatly
		 improves the behavior of their algorithm.
		 
		 They don't propose anything new for computing sequential
		 DCs; they rely on previous work by the same group that may
		 be worth reading.
		 
		 So it doesn't solve my problem particularly, but is another
		 interesting application of sequential don't-cares.}
}

@Book{wanhammar1999dsp,
  author =	 {Lars Wanhammar},
  title =	 {{DSP} Integrated Circuits},
  publisher =	 ap,
  year =	 1999,
  annote =	 {Recommended by Brian Evans}
}

@Article{want2002disappearing,
  author =	 {Roy Want and Gaetano Borriello and Trevor Pering and Keith
		 I. Farkas},
  title =	 {Disappearing Hardware},
  journal =	 {IEEE Pervasive Computing},
  year =	 2002,
  volume =	 1,
  number =	 1,
  pages =	 {36--47},
  month =	 jan,
  annote =	 {Cites tennenhouse2000proactive. Talks about Mark Weiser's
		 vision. Talks more about wireless, portable things that are
		 more computer-like. Talks about sensor networks, etc.}
}

@Article{ward1993abstracting,
  author =	 {Martin Ward},
  title =	 {Abstracting a Specification from Code},
  journal =	 {Journal of Software Maintenance: Research and Practice},
  year =	 1993,
  volume =	 5,
  number =	 2,
  pages =	 {101--122},
  month =	 jun,
  annote =	 {Found through random search. Very formal specifications,
		 worried about proofs of correctness. Extensive review of
		 related work, although he's more interested in formal
		 program transformations.
		 
		 Basic idea is to suck in program, translate it to "WSL" or
		 "wide spectrum language," something that's formal and can be
		 translated. Then use a series of program transformations to
		 convert it back to a spec. Quite a bit different from Chun
		 and my idea about extracting type information.},
  url =		 {http://www.dur.ac.uk/martin.ward/martin/papers/},
  bdsk-url-1 =	 {http://www.dur.ac.uk/martin.ward/martin/papers/}
}

@Book{watkinson1988art,
  author =	 {John Watkinson},
  title =	 {The Art of Digital Audio},
  publisher =	 {Focal Press},
  year =	 {1988},
  annote =	 {Purchased during James Boyk's EE/Mu 107 Class, 1991? From
		 OP-AMP technical books in LA.}
}

@Book{watkinson1994art,
  author =	 {John Watkinson},
  title =	 {The Art of Digital Audio},
  publisher =	 {Focal Press},
  year =	 {1994},
  address =	 {London},
  edition =	 {Second}
}

@Article{wawrzynek2007ramp,
  author =	 {John Wawrzynek and David Patterson and Mark Oskin and
		 Shih-Lien Lu and Christoforos E. Kozyrakis and James C. Hoe
		 and Derek Chiou and Krste Asanovic},
  title =	 {{RAMP}: Research Accelerator for Multiple Processors},
  journal =	 ieeemicro,
  year =	 2007,
  volume =	 27,
  number =	 2,
  pages =	 {46--57},
  month =	 mar
}

@Book{webster2000print,
  author =	 {Edward Webster},
  title =	 {Print Unchained: Fifty Years of Digital Printing,
		 1950--2000 and Beyond, A Saga of Invention and Enterprise},
  publisher =	 {DRA of Vermont},
  year =	 2000,
  address =	 {West Dover},
  annote =	 {Cited by the Wikipedia page as having information about
		 Centronics.
		 
		 A luscious coffee-table book about digital printing? I
		 didn't expect it. I used BorrowDirect through the Columbia
		 Libraries to get it. Fifty bucks from Oak Knoll, only
		 thirteen from A1Books (abebooks).
		 
		 On page 131, there's an interview with Robert Howard,
		 founder of Centronics. He writes that he, his PhD advisor An
		 Wang, and Prentice Robinsion worked out the standard
		 Centronics interface. They chose the connector because they
		 had 20000 spares from a scientific calculator Wang had
		 developed.
		 
		 The Centronics 101 dot-matrix printer was really the thing
		 that set the thing in motion, and it included the Centronics
		 standard parallel interface. Many places mention that it was
		 introduced in 1970.}
}

@Book{wegener1987complexity,
  author =	 {Ingo Wegener},
  title =	 {The Complexity of Boolean Functions},
  publisher =	 jw,
  year =	 1987,
  address =	 jw_a,
  annote =	 {Complexity results concentrating on logic circuits. Third
		 chapter is mostly "here's a bound for this class of
		 function." Also talks about lower bounds for certain classes
		 of circuits (and how hard this is). Last chapter is on
		 branching programs.
		 
		 The bound for circuits is 2^n / n. For branching programs,
		 asymptotically the same. BDDs are branching programs where
		 each variable is tested once (in the same order).
		 
		 He's recently published another book on the subject
		 specifically about BDDs:
		 
		 Branching programs and binary decision diagrams - theory and
		 applications (408 S.), SIAM Monographs on Discrete
		 Mathematics and Applications, 2000. },
  url =		 {http://www.eccc.uni-trier.de/eccc-local/ECCC-Books/wegener_book_readme.html}
		 ,
  bdsk-url-1 =	 {http://www.eccc.uni-trier.de/eccc-local/ECCC-Books/wegener_book_readme.html}
		 
}

@Article{wegener1994size,
  author =	 {Ingo Wegener},
  title =	 {The size of reduced {OBDD's} and Optimal Read-Once
		 Branching Programs for Almost all {Boolean} Functions},
  journal =	 transcomp,
  year =	 1994,
  volume =	 43,
  number =	 11,
  pages =	 {1262--1269},
  month =	 nov,
  annote =	 {Cited by Gropl. Talks about probabilities. Treats randomly
		 choosing a function as randomly choosing some number of
		 functions at each level of the BDD, something akin to
		 throwing balls into buckets and counting the number of
		 empties.
		 
		 This seems to be a key paper in this world, talking about
		 bounds and probability distributions.
		 
		 Only gives a probability of the form "The probability of the
		 number of nodes differing from the maximum by O(...) is
		 O(...)"
		 
		 Suggests an excellent way to think about BDD sizes: make a
		 cut and consider the number of functions that could be below
		 it and the number of arcs that could come from above.
		 
		 Relates some of the probabilities of these functions to
		 tossing n balls into m urns and counting the number of empty
		 urns.}
}

@Article{wegman1991constant,
  author =	 {Mark N. Wegman and F. Kenneth Zadeck},
  title =	 {Constant propagation with conditional branches},
  journal =	 toplas,
  year =	 1991,
  volume =	 13,
  number =	 2,
  pages =	 {181--210},
  month =	 apr,
  annote =	 {Conditional constant propagation, also described in
		 Muchnick and Appel. Version based on SSA takes into account
		 the flowgraph.
		 
		 Describe three algorithms, three classical, the fourth their
		 own creation.
		 
		 Simple constant propagation doesn't take into account which
		 statements may be executed. Sparse conditional constant
		 propagation does this computation using the SSA graph.
		 
		 Conditional constant prop. combines dead code elimination
		 and constant prop.: it does not propagate information along
		 all control edges until it is convinced that control may
		 flow there.
		 
		 Two worklists: SSA edges and flow graph edges. Only consider
		 SSA edges corresponding to executable flow graph edges.
		 
		 When updating an expression that controls a conditional
		 statement, add more flow graph edges to the worklist. }
}

@Article{wegner1976programming,
  author =	 {Peter Wegner},
  title =	 {Programming Languages---The First 25 Years},
  journal =	 transcomp,
  year =	 1976,
  volume =	 {C-25},
  number =	 12,
  pages =	 {1207--1225},
  month =	 dec,
  annote =	 {From Horowitz's Programming Languages: A grand tour}
}

@Article{wegner1997why,
  author =	 {Peter Wegner},
  title =	 {Why Interaction is More Powerful than Algorithms},
  journal =	 cacm,
  year =	 {1997},
  volume =	 {40},
  number =	 {5},
  pages =	 {80--91},
  month =	 may,
  annote =	 {Idea: Interaction produces very complex behaviors}
}

@Book{wehmeyer2006fast,
  author =	 {Lars Wehmeyer and Peter Marwedel},
  title =	 {Fast, Efficient and Predictable Memory Accesses},
  publisher =	 sv,
  year =	 2006,
  annote =	 {Referenced by another of Marwedel's books. Looks quite a
		 lot like a thesis. Definitely focused on embedded systems
		 applications, scratchpad memories, etc.}
}

@Article{wei1993parallel,
  author =	 {Jiawang Wei},
  title =	 {Parallel Asynchronous Iterations of Least Fixed Points},
  journal =	 {Parallel Computing},
  year =	 1993,
  volume =	 19,
  number =	 8,
  pages =	 {886--895},
  month =	 aug,
  annote =	 {Cited by gesner1996non-monotone.
		 
		 Excellent: a proof that the order in which you relax a
		 system of equations, even if you sometimes use old values,
		 the fixed point is the same. I should cite this.
		 
		 Relaxation = asynchronous iteration.
		 
		 Chaotic Iteration}
}

@InProceedings{weil2000efficient,
  author =	 {Daniel Weil and Val\'erie Bertin and Etienne Closse and
		 Michel Poize and Patrick Venier and Jacques Pulou},
  title =	 {Efficient Compilation of {Esterel} for Real-Time Embedded
		 Systems},
  booktitle =	 cases,
  year =	 2000,
  pages =	 {2--8},
  address =	 cases2000a,
  month =	 nov,
  annote =	 {Weil (daniel.weil@rd.francetelecom.fr) sent me this. See
		 also bertin1999nouvelle, bertin2000towards. Break an Esterel
		 program into halt points (awaits), generate code for each,
		 globally schedule.
		 
		 Main loop looks like "if halt point x is active, call
		 function for x", which updates state and may modify future
		 halt points. This is the SAXO-RT compiler.}
}

@InProceedings{weise1994value,
  author =	 {Daniel Weise and Roger F. Crew and Michael Ernst and Bjarne
		 Steensgaard},
  title =	 {Value Dependence Graphs: Representation Without Taxation},
  booktitle =	 {Proceedings of the Twenty First Annual ACM SIGPLAN-SIGACT
		 Symposium on Principles of Programming Languages},
  year =	 {1994},
  pages =	 {297--310},
  month =	 jan,
  annote =	 {Suggested by Karen Pieper},
  url =		 {ftp://ftp.research.microsoft.com/pub/analysts/vdg.ps},
  bdsk-url-1 =	 {ftp://ftp.research.microsoft.com/pub/analysts/vdg.ps}
}

@Article{weiser1982programmers,
  author =	 {Mark Weiser},
  title =	 {Programmers use Slices when Debugging},
  journal =	 cacm,
  year =	 {1982},
  volume =	 {25},
  number =	 {7},
  pages =	 {446--452},
  month =	 jul,
  annote =	 {Human experiments to motivate the slicing concept.}
}

@Article{weiser1984program,
  author =	 {Mark Weiser},
  title =	 {Program Slicing},
  journal =	 transse,
  year =	 {1984},
  volume =	 {SE-10},
  number =	 {4},
  pages =	 {352--357},
  month =	 jul,
  annote =	 {The definitive paper on slicing.}
}

@Article{welch2005supporting,
  author =	 {Benjamin J. Welch and Shobhit O. Kanaujia and Adarsh
		 Seetharam and Deepaksrivats Thirumalai and Alexander G.
		 Dean},
  title =	 {Supporting Demanding Hard-Real-Time Systems with {STI}},
  journal =	 transcomp,
  year =	 2005,
  volume =	 54,
  number =	 10,
  pages =	 {1188--1202},
  month =	 oct,
  annote =	 {Mentioned by an RTAS reviewer for our rejected RT processor
		 paper. Rather complete discussion, again a video generator
		 with various other things. Very complete.
		 
		 One of the nice bits of data is a report on the growth of
		 code from such integration. STI effectively unrolls the fast
		 thread to fit in the slower thread, so, say, the video
		 display code gets duplicated many times. They report
		 increases in the 12-14 times range.}
}

@InProceedings{weng2004pipelining,
  author =	 {Ning Weng and Tilman Wolf},
  title =	 {Pipelining vs. Multiprocessors --- Choosing the Right
		 Network Processor System Topology},
  booktitle =	 {Proceedings of the Workshop on Advanced Networking and
		 Communications Hardware (ANCHOR)},
  year =	 2004,
  address =	 {Munich, Germany},
  month =	 jun,
  annote =	 {In conjunction with The 31st Annual International Symposium
		 on Computer Architecture (ISCA 2004)}
}

@Book{weste1993principles,
  author =	 {Neil H. E. Weste and Kamran Eshraghian},
  title =	 {Principles of {CMOS} {VLSI} Design: A Systems Perspective},
  publisher =	 aw,
  year =	 1993,
  address =	 aw_a,
  edition =	 {Second}
}

@InProceedings{whaley1999compositional,
  author =	 {John Whaley and Martin Rinard},
  title =	 {Compositional Pointer and Escape Analysis for {Java}
		 Programs},
  booktitle =	 {Proceedings of the 14th Annual Conference on
		 Object-Oriented Programming Systems, Languages and
		 Applications (OOPSLA)},
  year =	 {1999},
  oldkey =	 {whaleyrinard},
  sedtransform = {s/whaleyrinard/whaley1999compositional/}
}

@TechReport{whitaker2001simulation,
  author =	 {Paul Whitaker},
  title =	 {The Simulation of Synchronous Reactive Systems in {Ptolemy
		 II}},
  institution =	 ucb,
  year =	 2001,
  number =	 {UCB/ERL M01/20},
  month =	 may,
  annote =	 {Implementing my SR domain in Ptolemy II. A master's
		 project.}
}

@InProceedings{whitam2006mcgrep,
  author =	 {Jack Whitham and Neil Audsley},
  title =	 {{MCGREP - A Predictable Architecture for Embedded Real-time
		 Systems}},
  booktitle =	 {Proc. RTSS},
  year =	 {2006},
  pages =	 {13--24}
}

@InProceedings{white2005accessing,
  author =	 {David White and Gerald L\"uttgen},
  title =	 {Accessing Databases within {Esterel}},
  editor =	 {Stephen A. Edwards and Nicolas Halbwachs and Reinhard v.
		 Hanxleden and Thomas Stauner},
  booktitle =	 {Synchronous Programming (SYNCHRON)},
  year =	 {2005},
  series =	 {Dagstuhl Seminar Proceedings},
  publisher =	 {Internationales Begegnungs- und Forschungszentrum (IBFI),
		 Schloss Dagstuhl, Germany},
  note =	 {http://drops.dagstuhl.de/opus/volltexte/2005/161},
  number =	 {04491},
  optaddress =	 {Dagstuhl, Germany},
  optannote =	 {Keywords: database esterel lego mindstorms},
  opturl =	 {http://drops.dagstuhl.de/opus/volltexte/2005/161 [date of
		 citation: 2005-01-01]}
}

@Article{wilhelm1996program,
  author =	 {Reinhard Wilhelm},
  title =	 {Program analysis---a toolmaker's perspective},
  journal =	 {ACM Computing Surveys},
  year =	 1996,
  volume =	 28,
  number =	 {4es},
  pages =	 177,
  annote =	 {Very short -- really asking what he wants of program
		 analysis},
  doi =		 {http://doi.acm.org/10.1145/242224.242454},
  issn =	 {0360-0300},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/242224.242454}
}

@InProceedings{wilhelm2000shape,
  author =	 {Reinhard Wilhelm and Shmuel Sagiv and Thomas W. Reps},
  title =	 {Shape Analysis},
  booktitle =	 cc,
  year =	 2000,
  series =	 lncs,
  volume =	 2027,
  pages =	 {1-17},
  address =	 {Berlin, Germany},
  month =	 mar,
  publisher =	 sv
}

@InProceedings{wilhelm2004timing,
  author =	 {Reinhard Wilhelm},
  title =	 {Timing Analysis and Timing Predictability},
  booktitle =	 {Formal Methods for Components and Objects},
  year =	 2004,
  series =	 lncs,
  volume =	 3657,
  pages =	 {317--323},
  address =	 {Leiden, The Netherlands},
  month =	 nov,
  annote =	 {From Reinhard's website. Not much there, actually. Cites
		 his work in the Embedded Systems Handbook.}
}

@InProceedings{wilhelm2008abstract,
  author =	 {Reinhard Wilhelm and Bj\"{o}rn Wachter},
  title =	 {Abstract Interpretation with Applications to Timing
		 Validation},
  booktitle =	 cav2008,
  year =	 2008,
  series =	 lncs,
  volume =	 5123,
  pages =	 {22--36},
  address =	 {Berlin/Heidelberg},
  publisher =	 {Springer-Verlag},
  doi =		 {http://dx.doi.org/10.1007/978-3-540-70545-1_6},
  isbn =	 {978-3-540-70543-7},
  location =	 cav2008_a,
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/978-3-540-70545-1_6}
}

@Article{wilhelm2008determination,
  author =	 {Reinhard Wilhelm and Jakob Engblom and Andreas Ermedahl and
		 Niklas Holsti and Stephan Thesing and David Whalley and
		 Guillem Bernat and Christian Ferdinand and Reinhold Heckmann
		 and Frank Mueller and Isabelle Puaut and Peter Puschner and
		 Jan Staschulat and Per Stenstr\"om},
  title =	 {The Determination of Worst-Case Execution Times: Overview
		 of the Methods and Survey of Tools},
  journal =	 tecs,
  year =	 2008,
  volume =	 7,
  number =	 3,
  pages =	 {36:1--36:53},
  month =	 apr,
  annote =	 {Got a preprint from Reinhard at Dagstuhl in 2007},
  doi =		 {http://doi.acm.org/10.1145/1347375.1347389},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/1347375.1347389}
}

@Article{wilkes1965slave,
  author =	 {Maurice V. Wilkes},
  title =	 {Slave Memories and Dynamic Storage Allocation},
  journal =	 {IEEE Transactions on Electronic Computers},
  year =	 1965,
  volume =	 {EC-14},
  number =	 2,
  pages =	 {270--271},
  month =	 apr,
  annote =	 {Early discussion of memory hierarchies. Slave memories =
		 Cache memory. Basic ideas of two-level memory hierarchy, tag
		 bits, how large the "cache line" should be (an entire block
		 or something else)},
  doi =		 {10.1109/PGEC.1965.264263 },
  abstract =	 {The use is discussed of a fast core memory of, say, 32000
		 words as a slave to a slower core memory of, say, one
		 million words in such a way that in practical cases the
		 effective access time is nearer that of the fast memory than
		 that of the slow memory.}
}

@Article{willett1993novell,
  author =	 {Shawn Willett},
  title =	 {Novell, National Semi team up on networking cards},
  journal =	 {Infoworld},
  year =	 1993,
  volume =	 15,
  number =	 43,
  pages =	 8,
  month =	 oct,
  annote =	 {Mentions Novell's "already-defunct" board line},
  text =	 { Novell, National Semi team up on networking cards Willett,
		 Shawn. InfoWorld. San Mateo: Oct 25, 1993. Vol. 15, Iss. 43;
		 pg. 8, 1 pgs Abstract (Summary)
		 
		 Novell Inc. and National Semiconductor Corp. are teaming up
		 to offer co-branded adapter cards to the end-user market at
		 aggressive prices. The 2 companies are also pledging to
		 cooperate in the development of multimedia and wireless
		 technologies. Under the agreement, National Semiconductor
		 will build a 16-bit ISA board, dubbed the Infomover NE2000,
		 whose architecture offers guaranteed compatibility with past
		 and future NetWare versions. Other adapter cards to be
		 offered are the Infomover NF3000, an FDDI card, and
		 Infomover 4100, a PCMCIA adapter card. Jump to indexing
		 (document details) Full Text (450 words) Copyright InfoWorld
		 Publications, Inc. Oct 25, 1993
		 
		 National Semiconductor Corp. is teaming up with Novell Inc.
		 to offer co-branded NE2000 Ethernet, PCMCIA, and FDDI
		 adapter cards to the end-user market at aggressive prices,
		 according to sources.
		 
		 The two companies are also pledging to cooperate in the
		 development of multimedia and wireless technologies. They
		 plan to announce the pact Tuesday in San Francisco.
		 
		 In the past, National Semiconductor has been a major
		 provider of Ethernet components to other Ethernet board
		 vendors, supplying chip sets to about 50 to 60 percent of
		 the market, analysts said.
		 
		 The companies' previous foray into end-user products with an
		 Ethernet board attracted little interest, observers said.
		 
		 Under the agreement, National Semiconductor will build a
		 16-bit ISA board, dubbed the Infomover NE2000, which will be
		 aggressively priced at $109 for a 10Base-T version and $119
		 for a coaxial version.
		 
		 The NE2000 architecture, which was originally developed by
		 Novell for its defunct board line, offers guaranteed
		 compatibility with past and future NetWare versions.
		 
		 Infomover NF3000, an FDDI card, will be sold for $1,395 for
		 the ISA version and from $1,695 to $1,995 for a UTP version
		 in quantity purchases. The Infomover 1100 is a PCMCIA
		 adapter card that will be priced at $249.
		 
		 All of the products will be tightly integrated with NetWare
		 and will be sold by Novell dealers under the Novel/National
		 Semiconductor name.
		 
		 In the area of multimedia, the two companies will jointly
		 work on a network architecture using ATM and high-speed
		 Ethernet to record and play back video from a NetWare server.
		 
		 National's wireless adapters, still under development, will
		 also support NetWare under the agreement.
		 
		 Industry observers said the push by the two large companies
		 will accelerate an already vicious price war on Ethernet
		 cards and could force industry leaders such as 3Com Corp.,
		 Intel Corp.. and Standard Microsystems Corp. to further cut
		 prices. (See "Price war ensues on Ethernet cards," August
		 16, page 1.)
		 
		 3Com's and Intel's boards do not conform to the NE2000
		 standard, but their drivers are NetWare compatible.
		 
		 "It's a crowded market," said Marshall Behling, marketing
		 manager at board vendor Accton Technology Corp." in San
		 Jose, Calif. "There are probably 60 offshore companies in
		 the market now for NE2000 boards."
		 
		 Low-end NE2000 "clone" boards are selling for as little as
		 \$59.
		 
		 Eagle Technology recently reduced board prices to $89 on its
		 10Base-T Ethernet card and to $109 on its NE2000 product.
		 
		 Eagle has a similar packaging arrangement with Novell for
		 its NE2000 product line, which coincidentally uses the
		 National chip set.
		 
		 "It will be interesting to see how this affects their OEM
		 business." said one analyst, who noted that other hardware
		 companies now offer low-priced Ethernet chip sets.
		 
		 Neither National Semiconductor nor Novell would comment on
		 the announcement. Indexing (document details) Subjects:
		 Software industry, Product development, Multimedia computer
		 applications, Microprocessors, Joint ventures, Electronics
		 industry, Printed circuit boards, Price wars, PC Cards,
		 Computer networks Classification Codes 9190 US, 9120 Product
		 specific treatment, 9000 Short article, 8650 Electrical,
		 electronics, instrumentation industries, 8302 Software &
		 computer services industry, 5250 Telecommunications systems,
		 5230 Hardware Locations: US Companies: National
		 Semiconductor Corp(Ticker:NSM, Duns:04-147-2986 ) , National
		 Semiconductor Corp., Novell Inc(Ticker:NOVL,
		 Duns:03-778-7298 ) , Novell Inc. Author(s): Willett, Shawn
		 Publication title: InfoWorld. San Mateo: Oct 25, 1993. Vol.
		 15, Iss. 43; pg. 8, 1 pgs Source type: Periodical ISSN:
		 01996649 ProQuest document ID: 516118 Text Word Count 450
		 Document URL:
		 http://proquest.umi.com/pqdweb?did=516118&Fmt=3&clientId=15403&RQT=309&VName=PQD
		 }
}

@PhDThesis{williamson1998synthesis,
  author =	 {Michael Cameron Williamson},
  title =	 {Synthesis of Parallel Hardware Implementations from
		 Synchronous Dataflow Graph Specifications},
  school =	 ucb,
  year =	 1998,
  month =	 may,
  note =	 {Available as UCB/ERL 968/45},
  annote =	 {VHDL from SDF}
}

@InProceedings{willink2002programming,
  author =	 {Edward D. Willink and Johan Eker and J\"orn W. Janneck},
  title =	 {Programming Specifications in {CAL}},
  booktitle =	 {Proceedings of the OOPSLA Workshop on Generative Techniques
		 in the Context of Model-Driven Architecture},
  year =	 2002,
  address =	 {Seattle, Washington},
  month =	 nov,
  annote =	 {A reference for Jorn's CAL dataflow language},
  url =		 {http://www.softmetaware.com/oopsla2002/mda-workshop.html},
  bdsk-url-1 =	 {http://www.softmetaware.com/oopsla2002/mda-workshop.html}
}

@Article{wilson1994suif,
  author =	 {Robert P. Wilson and Robert S. French and Christopher S.
		 Wilson and Saman P. Amarasinghe and Jennifer-Ann M. Anderson
		 and Steven W. K. Tjiang and Shih-Wei Liao and Chau-Wen Tseng
		 and Mary W. Hall and Monica S. Lam and John L. Hennessy},
  title =	 {{SUIF}: An Infrastructure for Research on Parallelizing and
		 Optimizing Compilers},
  journal =	 {ACM SIGPLAN Notices},
  year =	 1994,
  volume =	 29,
  number =	 12,
  pages =	 {31--37},
  annote =	 {The main reference on SUIF.}
}

@InProceedings{wilson1995efficient,
  author =	 {Robert P. Wilson and Monica S. Lam},
  title =	 {Efficient Context-Sensitive Pointer Analysis for {C}
		 Programs},
  booktitle =	 pldi,
  year =	 1995,
  pages =	 {1--12},
  address =	 {La Jolla, California},
  month =	 jun,
  annote =	 {How to represent and evaluate pointer information.},
  url =		 {http://suif.stanford.edu},
  bdsk-url-1 =	 {http://suif.stanford.edu}
}

@InProceedings{wingard2001micronetwork-based,
  author =	 {Drew Wingard},
  title =	 {Micronetwork-based integration for {SOCs}},
  booktitle =	 dac,
  year =	 {2001},
  pages =	 {677},
  month =	 jun,
  oldkey =	 {wingard01},
  sedtransform = {s/wingard01/wingard2001micronetwork-based/}
}

@Article{winograd1965time,
  author =	 {S. Winograd},
  title =	 {On the Time Required to Perform Addition},
  journal =	 jacm,
  year =	 1965,
  volume =	 12,
  number =	 2,
  pages =	 {277--285},
  month =	 apr,
  annote =	 {Ignores area: just concerned with the fastest possible.
		 
		 Subtle, theoretical result: log log \alpha(\mu): \alpha(\mu)
		 is the largest power of a prime which divides \mu = 2^n. }
}

@Book{winskel1993formal,
  author =	 {G. Winskel},
  title =	 {The Formal Semantics of Programming Languages: An
		 Introduction},
  publisher =	 mit,
  year =	 {1993},
  series =	 {Foundations of Computing},
  address =	 mit_a,
  annote =	 {Used by Tom Henzinger in his class.
		 http://www.cs.cornell.edu/Info/People/tah/cs611.html}
}

@Article{wirth1977toward,
  author =	 {Niklaus Wirth},
  title =	 {Toward a discipline of real-time programming},
  journal =	 cacm,
  year =	 1977,
  volume =	 20,
  number =	 8,
  pages =	 {577--583},
  month =	 aug,
  annote =	 {Cited by shaw2001real-time. Divides programming into
		 sequential, multiprogramming, and real-time. Advocates a
		 high-level proamming model for reasoning about concurrency
		 and execution time constraints. Talks a lot about verifying
		 such systems, monitors, semaphores, priority problems,
		 etc.}
}

@Article{woehr1999conversation,
  author =	 {Jack J. Woehr and Glenn E. Reeves},
  title =	 {A conversation with {Glenn Reeves}},
  journal =	 {Dr.\ Dobb's Journal},
  year =	 1999,
  volume =	 24,
  number =	 11,
  pages =	 {21--28},
  month =	 nov,
  annote =	 {About the Mars Pathfinder priority inversion bug.}
}

@InProceedings{wolf2000commbench,
  author =	 {Tilman Wolf and Mark Franklin},
  title =	 {Commbench --- A Telecommunications Benchmark for Network
		 Processors},
  booktitle =	 {Proceedings of the IEEE International Symposium on
		 Performance Analysis of Systems and Software},
  year =	 2000,
  pages =	 {154--162},
  address =	 {Austin, Texas},
  month =	 apr,
  annote =	 {I got this reference from Franklin when he was at Columbia.
		 It's a collection of 8 benchmarks, 4 header processing
		 (classification, etc.), 4 payload processing (LZW, JPEG)
		 programs designed for benchmarking network processors and
		 other switch-like devices. When I start working on my
		 language for communications protocols, this would be a good
		 starting point.},
  url =		 {http://www.ccrc.wustl.edu/~wolf/cb/},
  bdsk-url-1 =	 {http://www.ccrc.wustl.edu/~wolf/cb/}
}

@Book{wolf2000computers,
  author =	 {Wayne Wolf},
  title =	 {Computers as Components: Principles of Embedded Computer
		 Systems Design},
  publisher =	 mk,
  year =	 2000,
  address =	 mk_a,
  annote =	 {An undergraduate text. I helped to review an early
		 version.}
}

@Article{wolf2006half-million,
  author =	 {Wayne Wolf},
  title =	 {A Half-Million Strong at Least},
  journal =	 computer,
  year =	 2006,
  volume =	 39,
  number =	 9,
  pages =	 {109--110},
  month =	 sep,
  key =		 2006,
  annote =	 {Mentioned by Ragesh in the first IEEE Embedded Systems
		 Letters editorial},
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/MC.2006.290}
}

@Article{wong2006eight,
  author =	 {William Wong},
  title =	 {Eight 32-Bit Cores Take Flight in Multiprocessor
		 Microcontroller},
  journal =	 {Electronic Design},
  year =	 2006,
  month =	 {April 13},
  note =	 {ED Online ID \#12235},
  annote =	 {Release announcement of the Parallax Propeller chip.},
  url =		 {http://electronicdesign.com/Articles/ArticleID/12235/12235.html}
		 ,
  bdsk-url-1 =	 {http://electronicdesign.com/Articles/ArticleID/12235/12235.html}
		 
}

@InProceedings{woods1995gate-level,
  author =	 {Scott Woods and Giorgio Casinovi},
  title =	 {Gate-Level Simulation of Digital Circuits using
		 Multi-Valued Boolean Algebras},
  booktitle =	 iccad,
  year =	 {1995},
  pages =	 {413--419},
  annote =	 {Trying to simulate analog effects with more bits}
}

@Book{worth1981beneath,
  author =	 {Don Worth and Pieter Lechner},
  title =	 {Beneath Apple {DOS}},
  publisher =	 {Quality Software},
  year =	 1981,
  address =	 {Reseda, CA},
  annote =	 {The best reference describing the Apple II's DOS and disk
		 drives.}
}

@Article{wozniak1977apple,
  author =	 {Stephen Wozniak},
  title =	 {System Description: The {Apple-II}},
  journal =	 {Byte Magazine},
  year =	 1977,
  volume =	 2,
  number =	 5,
  pages =	 {34--43},
  month =	 may,
  annote =	 {Woz on the Apple II: graphics, breakout in Integer BASIC,
		 the monitor, Sweet16.}
}

@Article{wright1994practical,
  author =	 {Andrew K. Wright and Robert Cartwright},
  title =	 {A Practical Soft Type System for {Scheme}},
  journal =	 toplas,
  year =	 1994,
  volume =	 19,
  number =	 1,
  pages =	 {87--152},
  month =	 jan,
  annote =	 {Cited by ocallahan1997lackwit. Using type inference to
		 eliminate run-time checks.}
}

@Misc{x11webinfo,
  title =	 {Xelerated Network Processor},
  howpublished = {Information on the Web, {\tt http://www.xelerated.com/}},
  key =		 {Xelerated X11}
}

@InProceedings{xie1999bounding,
  author =	 {Aiguo Xie and Sangyun Kim and Peter A. Beerel},
  title =	 {Bounding Average Time Separations of Events in Stochastic
		 Timed {Petri} Nets with Choice},
  booktitle =	 async,
  year =	 1999,
  pages =	 {94--107},
  address =	 {Barcelona, Spain},
  month =	 apr,
  annote =	 {Cited by venkataramani2007global.
		 
		 Considers pipelines with choice, but only on stochastic
		 models and they're only going after average behavior.}
}

@PhDThesis{xie1999performance,
  author =	 {Aiguo Xie},
  title =	 {Performance Analysis of Asynchronous Circuits and Systems},
  school =	 {University of Southern California},
  year =	 1999,
  month =	 aug,
  annote =	 {Unlike synchronous circuits for which system performance
		 can be determined easily from the fixed clock cycle time, it
		 can be challenging to evaluate the performance of
		 asynchronous circuits. Even for the above simple example of
		 an asynchronous micropipeline where stages have arbitrarily
		 distributed data-processing delays, there is no known
		 approach to obtain the exact values of its average
		 throughput. As a result, asynchronous designers are often
		 forced to use ad hoc approaches to estimate system
		 performance at different levels of the design hierarchy. In
		 most cases, these ad hoc estimates are unreliable. Because
		 of the lack of CAD tools for performance evaluation to guide
		 the design choices, the designers either proceed without
		 sufficient confidence or have to delay the evaluation of
		 their designs until it is too late. Consequently, many
		 asynchronous designs have been unsuccessful, in the sense
		 that the final performance metrics are poorer than their
		 synchronous counterparts. }
}

@InProceedings{xiong2001spl,
  author =	 {Jianxin Xiong and Jeremy Johnson and Robert Johnson and
		 David Padua},
  title =	 {{SPL:} A Language and Compiler for {DSP} Algorithms},
  booktitle =	 pldi,
  year =	 2001,
  pages =	 {FIXME},
  address =	 {Snowbird, Utah},
  month =	 jun,
  annote =	 {Part of the big DARPA-sponsored SPIRAL project at UIUC,
		 CMU, Drexel, and USC, whose goal is "to automate the
		 implementation, optimization, and platform adaptation of
		 signal processing algorithms on different computer
		 architectures (uniprocessors, multiprocessors, hardware)."
		 
		 They started attacking the automatic generation of FFT
		 languages and then moved to something broader.
		 
		 They generate C or FORTRAN code.
		 
		 Pretty high-powered matrix manipulations in the synthesis
		 system. Tensor product of matrices.
		 
		 SPL is matrix operation-based. Simple almost LISP-like
		 syntax.
		 
		 Template-based intermediate code generation: If I see a
		 function of this form, turn it into this.
		 
		 Template bodies are imperative code with loops and abstract
		 variables.
		 
		 All matrix sizes are fixed, so all loop bounds are
		 constants, allowing very precise loop unrolling, etc.
		 
		 Intrinsic function evaluation: if all arguments are
		 constant, function is evaluated and replaced with a
		 constant; if loop indices are used, evaluated once for each
		 index and placed in a table.
		 
		 Complex number type unrolling.
		 
		 Constant folding, copy propagation, common subexpression
		 elimination, and dead code elimination.
		 
		 Some sort of optimization step: testing different
		 factorizations of matrix multiplication (dynamic
		 programming) to find a good implementation.
		 
		 Not clear that they're really using the known semantics of
		 this language subset to improve optimizations beyond fixed
		 loop bounds. }
}

@Article{xu2004case,
  author =	 {J. Xu and W. Wolf and J. Henkel and S. Chakradhar and T.
		 Lv},
  title =	 {A Case Study in Networks-on-Chip Design for Embedded
		 Video},
  journal =	 date,
  year =	 {2004},
  volume =	 {2},
  pages =	 {20770},
  issn =	 {1530-1591},
  oldkey =	 {xu04},
  sedtransform = {s/xu04/xu2004case/}
}

@InProceedings{xue2006spm-conscious,
  author =	 {Liping Xue and Mahmut Kandemir and Guangyu Chen and Taylan
		 Yemliha},
  title =	 {{SPM-conscious} loop scheduling for embedded chip
		 multiprocessors},
  booktitle =	 {Proceedings of the International Conference on Parallel and
		 Distributed Systems (ICPADS)},
  year =	 2006,
  volume =	 1,
  address =	 {Minneapolis, Minnesota},
  month =	 jul,
  annote =	 {Scratchpad Memory}
}

@Book{yaghmour2003building,
  author =	 {Karim Yaghmour},
  title =	 {Building Embedded {Linux} Systems},
  publisher =	 ora,
  year =	 2003,
  annote =	 {How to build a cross-compilation chain, set up the root
		 filesystem, configure the Kernel, etc. There's now a section
		 edition.}
}

@Book{yaghmour2008building,
  author =	 {Karim Yaghmour and Jon Masters and Gilad Ben-Yossef and
		 Philippe Gerum},
  title =	 {Building Embedded {Linux} Systems},
  publisher =	 ora,
  year =	 2008,
  edition =	 {Second},
  annote =	 {How to build a cross-compilation chain, set up the root
		 filesystem, configure the Kernel, etc. Also talks about
		 real-time Linux and newer kernel versions.}
}

@Book{yakovlev2000hardware,
  author =	 {Alex Yakovlev and Luis Gomes and Luciano Lavagno},
  title =	 {Hardware Design and Petri Nets},
  publisher =	 {Kluwer Academic Publishers},
  year =	 2000
}

@Article{yang1991identifying,
  author =	 {Wuu Yang},
  title =	 {Identifying Syntactic Differences Between Two Programs},
  journal =	 spe,
  year =	 {1991},
  volume =	 {21},
  number =	 {7},
  pages =	 {739--755},
  month =	 jul,
  annote =	 {Uses a dynamic-programming approach to compare slightly
		 modified parse trees.}
}

@Book{yang1994global,
  editor =	 {Zhonghua Yang and T. Anthony Marsland},
  title =	 {Global States and Time in Distributed Systems},
  publisher =	 ieeecs,
  year =	 {1994},
  annote =	 {Suggested by Jose -- a collection of papers}
}

@Article{yang1998esp,
  author =	 {Felisa Yang},
  title =	 {{ESP:} A 10-Year Retrospective},
  journal =	 {Embedded Systems Programming},
  year =	 1998,
  pages =	 {97--109},
  month =	 nov,
  annote =	 {Historical survey results: embedded systems sizes.}
}

@InProceedings{yang2000bds,
  author =	 {Congguang Yang and Maciej J. Ciesielski and Vigyan
		 Singhal},
  title =	 {{BDS}: a {BDD}-based logic optimization system},
  booktitle =	 dac00,
  year =	 2000,
  pages =	 {92--97},
  address =	 dac00a,
  month =	 jun,
  annote =	 {SIS based on BDDs},
  url =		 {http://www.ecs.umass.edu/ece/labs/vlsicad/bds/bds.html},
  bdsk-url-1 =	 {http://www.ecs.umass.edu/ece/labs/vlsicad/bds/bds.html}
}

@TechReport{ye1995worst,
  author =	 {Wei Ye and Rolf Ernst and Michael Trawny},
  title =	 {Worst Case Timing Estimation Based on Symbolic Execution},
  institution =	 {Technical University of Braunschweig},
  year =	 1995,
  number =	 {COBRA/WP4-UBR2},
  address =	 {Germany},
  month =	 oct,
  annote =	 {Part of the WCET paper (Symbta/P tool).
		 
		 Bibliography: formal vs. simulation approachs. Formal
		 requires loop bounds.
		 
		 "Symbolic execution will be used to support estimating worst
		 case timing of software."
		 
		 Cite earlier "HTA" paper by the same group.
		 
		 Notes that if there's only one feasible path (i.e., it's not
		 data-dependent), then simulation makes good sense.
		 
		 Approach is based on this: simulate the stuff that has only
		 one choice and estimate the more dynamic stuff.
		 
		 Symbolic simulation tracks variable values.
		 
		 Cites Pa92, MaWo95, PuKo89, YErBeHe93
		 
		 [Pa92] C. Y. Park, Predicting Deterministic Execution Times
		 of Real-Time Programs, PhD Thesis, University of Washington,
		 Seattle 98195, Aug. 1992.
		 
		 [MaWo95] S. Malik, W. Wolf, A. Wolfe, Y. S. Li, T. Yen,
		 Performance Analysis of Embedded Systems, NATO ASI, Workshop
		 on Hardware-Software Co-Design, Tremezzo, Italy, 1995.
		 
		 [PuKo89] P. Puschner Ch. Koza, Calculating the maximum
		 execution time of real-time programs, The Journal of
		 Real-Time Systems, 1(2), 160-176, Sept. 1989.
		 
		 [YErBeHe93] W. Ye, R. Ernst, Th. Benner, J. Henkel, Fast
		 Timing Analysis for Harware-Software Cosynthesis, Proc. of
		 ICCD 1993. IEEE Society Press, pp. 452-457, 1993 }
}

@MastersThesis{yee1994esterel,
  author =	 {Sherman Sou Yin Yee},
  title =	 {Esterel to {SHIFT} Compiler for Hardware Software Codesign
		 Environment},
  school =	 ucb,
  year =	 {1994}
}

@InProceedings{yeh1998design,
  author =	 {Y. C. (Bob) Yeh},
  title =	 {Design considerations in {Boeing} 777 fly-by-wire
		 computers},
  booktitle =	 {Proceedings of the High-Assurance Systems Engineering
		 Symposium},
  year =	 1998,
  pages =	 {64--72},
  address =	 {Washington, DC},
  month =	 nov,
  annote =	 {Random search on 777 information. Decent bibliography.
		 Terrible writing style (Avionics bullets) Describes the bus
		 system (time-multiplexed, ARINC) Lots of block diagrams.
		 Really rather awful.}
}

@InProceedings{yeh2003quality,
  author =	 {Joseph Yeh and John Wawrzynek},
  title =	 {Quality Based Compute-Resource Allocation in Real-time
		 Signal Processing},
  booktitle =	 icassp,
  year =	 2003,
  volume =	 2,
  pages =	 {545--548},
  address =	 {Hong Kong},
  month =	 apr,
  annote =	 {Off Wawrzynek's page. Part of PRET work.}
}

@Article{yelick2008programming,
  author =	 {Katherine Yelick},
  title =	 {Programming models for petascale to exascale},
  journal =	 ipdps,
  year =	 2008,
  pages =	 {1--1},
  month =	 {April},
  doi =		 {10.1109/IPDPS.2008.4536090},
  issn =	 {1530-2075},
  keywords =	 {message passing, software architecture, software
		 toolsexascale, message-passing programming model, multiple
		 petascale systems, partitioned global address space
		 languages, programming models, shared memory models,
		 software tools, software-managed on-chip parallelism},
  bdsk-url-1 =	 {http://dx.doi.org/10.1109/IPDPS.2008.4536090}
}

@Article{yellin1991inc,
  author =	 {Daniel M. Yellin and Robery E. Strom},
  title =	 {{INC}: {A} Language for Incremental Computations},
  journal =	 toplas,
  year =	 {1991},
  volume =	 {13},
  number =	 {2},
  pages =	 {211--236},
  month =	 apr
}

@InProceedings{yeung1995gops,
  author =	 {Alfred K. Yeung and Jan M. Rabaey},
  title =	 {A 2.4 {GOPS} Data-Driven Reconfigurable Multiprocessor {IC}
		 for {DSP}},
  booktitle =	 isscc,
  year =	 1995,
  pages =	 {108--109, 346},
  address =	 {San Francisco, California},
  month =	 feb,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{yi1993auto,
  author =	 {Kwangkeun Yi and Williams Ludwell {Harrison III}},
  title =	 {Automatic generation and management of interprocedural
		 program analyses},
  booktitle =	 popl,
  year =	 1993,
  pages =	 {246--259},
  address =	 {Charleston, South Carolina},
  doi =		 {http://doi.acm.org/10.1145/158511.158642},
  isbn =	 {0-89791-560-7},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/158511.158642}
}

@InProceedings{yiannacouras2005microarchitecture,
  author =	 {Peter Yiannacouras and Jonathan Rose and J. Gregory
		 Steffan},
  title =	 {The Microarchitecture of {FPGA}-Based Soft Processors},
  booktitle =	 cases,
  year =	 2005,
  pages =	 {202--212},
  address =	 {San Francisco, California},
  month =	 sep,
  annote =	 {Simha showed me this. Actually a mechanism for synthesizing
		 soft cores. Talks about the MicroBlaze and the Nios II.}
}

@Article{yoeli1964application,
  author =	 {Michael Yoeli and Shlomo Rinon},
  title =	 {Application of Ternary Algebra to the Study of Static
		 Hazards},
  journal =	 jacm,
  year =	 1964,
  volume =	 11,
  number =	 1,
  pages =	 {84--97},
  month =	 jan,
  annote =	 {Cited by jephson1969three-value. More about three-valued
		 simulation. Cites some very early papers, one in Romanian!
		 Uses 1/2 instead of "X." Cites an Eichelberger TR from
		 Princeton from 1962 talking about hazards.}
}

@Book{yonezawa1987object-oriented,
  editor =	 {A. Yonezawa and M. Tokoro},
  title =	 {Object-Oriented Concurrent Programming},
  publisher =	 mit,
  year =	 {1987},
  series =	 {{MIT} Press Series in Computer Systems},
  address =	 mit_a,
  annote =	 {Describes Act 1, ConcurrentSmalltalk, Orient 84/K}
}

@InProceedings{yong1999pointer,
  author =	 {S.H. Yong and S. Horwitz and T. Reps},
  title =	 {Pointer analysis for programs with structures and casting},
  booktitle =	 pldi,
  year =	 {1999},
  pages =	 {91--103},
  oldkey =	 {yong99},
  sedtransform = {s/yong99/yong1999pointer/}
}

@Book{young1971iterative,
  author =	 {David M. Young},
  title =	 {Iterative Solution of Large Linear Systems},
  publisher =	 ap,
  year =	 {1971},
  annote =	 {Describes traditional matrix approaches. Includes
		 convergence results, successive over relaxation, and many
		 others.}
}

@Article{younger1963minimum,
  author =	 {D. H. Younger},
  title =	 {Minimum Feedback Arc Sets for a Directed Graph},
  journal =	 {IEEE Transactions on Circuit Theory},
  year =	 {1963},
  volume =	 {CT-10},
  pages =	 {238--245},
  month =	 jun,
  annote =	 {More concerned with characterization. Written before
		 NP-Completeness was known. Proposeds a searching algorithm:
		 Choose an ordering on the nodes & count feedback arcs. Early
		 results, not really a good algorithm.}
}

@InProceedings{yuan1999modeling,
  author =	 {Jun Yuan and Kurt Shultz and Carl Pixley and Hillel Miller
		 and Adnan Aziz},
  title =	 {Modeling Design Constraints and Biasing in Simulation using
		 {BDDs}},
  booktitle =	 iccad,
  year =	 1999,
  pages =	 {584--590},
  address =	 iccad_a,
  month =	 nov,
  annote =	 {Technique for building a BDD that respects contraints and
		 weights edges so that biases in test vector generation
		 (e.g., not too many resets) are respected. I used a simple
		 version of it to build test benches for my Esterel
		 compiler.}
}

@InProceedings{yur1999incremental,
  author =	 {Jyh-shiarn Yur and Barbara Ryder and Willim Landi},
  title =	 {An Incremental Flow- and Context-Sensitive Pointer Aliasing
		 Analysis},
  booktitle =	 {Proceedings of the 21st Intl. Conference on Software
		 Engineering},
  year =	 {1999},
  pages =	 {442--451},
  oldkey =	 {yur1},
  sedtransform = {s/yur1/yur1999incremental/}
}

@InProceedings{yusof2000real,
  author =	 {Zulkalnain Mohd Yusof and Zulkifli Mohamad and Zulfakar
		 Aspar and Ishak Suleiman and Mohd. Helmi Mohd. Saad and
		 Sheikh Hussain Sheikh Salleh},
  title =	 {Real time implementation of baseline {JPEG} decoder using
		 floating point {DSP TMS320C31}},
  booktitle =	 {Proceedings of TENCON},
  year =	 2000,
  volume =	 3,
  pages =	 {383--386},
  address =	 {Kuala Lumpur, Malaysia},
  month =	 sep,
  annote =	 {Found by Nalini. Part of JPEG decoder stuff.}
}

@InProceedings{zadok2000fist,
  author =	 {Erez Zadok and Jason Nieh},
  title =	 {{FiST:} A Language for Stackable File Systems},
  booktitle =	 usenix,
  year =	 2000,
  pages =	 {55--70},
  address =	 {San Diego, California},
  month =	 jun,
  annote =	 {I found out about this from Jason's NSF CAREER proposal.
		 
		 FiST is a language for describing file systems. They report
		 code size is 1/10th, 1/7th reduction in development time,
		 and only 1-2% overhead.
		 
		 The language's grammar is modeled after YACC.
		 
		 They tried it out on Linux, Solaris, and FreeBSD, generating
		 file systems that encrypts files, adds different access
		 rules, and merges two file systems.
		 
		 Another nice argument for a specialized language.}
}

@InProceedings{zahiri2003structured,
  author =	 {Behrooz Zahiri},
  title =	 {Structured {ASICs}: Opportunities and Challenges},
  booktitle =	 iccd,
  year =	 2003,
  pages =	 404,
  address =	 {San Jose, California},
  month =	 oct,
  doi =		 {http://doi.ieeecomputersociety.org/10.1109/ICCD.2003.1240929}
		 ,
  annote =	 {Martha found this}
}

@Book{zdonik1990readings,
  editor =	 {S. B. Zdonik and D. Maier},
  title =	 {Readings in Object-Oriented Database Systems},
  publisher =	 mk,
  year =	 {1990},
  address =	 mk_a,
  annote =	 {Collection of papers (Mike Turner's)}
}

@PhDThesis{zellweger1984interactive,
  author =	 {Polle Trescott Zellweger},
  title =	 {Interactive Source-Level Debugging of Optimized Programs},
  school =	 ucb,
  year =	 {1984}
}

@InProceedings{zeng2004generating,
  author =	 {Jia Zeng and Cristian Soviani and Stephen A. Edwards},
  title =	 {Generating Fast Code from Concurrent Program Dependence
		 Graphs},
  booktitle =	 lctes,
  year =	 2004,
  pages =	 {175--181},
  address =	 {Washington, DC},
  month =	 jun,
  annote =	 {My first paper with Jia. Describes an Esterel back-end.},
  selectivity =	 {28/120 = 23\%},
  url =		 {http://doi.acm.org/10.1145/997163.997188},
  bdsk-url-1 =	 {http://doi.acm.org/10.1145/997163.997188}
}

@InProceedings{zeng2005separate,
  author =	 {Jia Zeng and Stephen A. Edwards},
  title =	 {Separate Compilation for Synchronous Modules},
  booktitle =	 {Proceedings of the 2nd International Conference on Embedded
		 Software and Systems (ICESS)},
  year =	 2005,
  series =	 lncs,
  volume =	 3820,
  pages =	 {129--140},
  address =	 {Xi'an, China},
  month =	 dec,
  annote =	 {My second paper with Jia. Performing three-valued analysis
		 on an Esterel program to generate code that works even if
		 not all inputs are known.
		 
		 18% acceptance for full papers like ours.},
  selectivity =	 {140/360 = 39\% overall, 63/360 = 17\% for proceedings},
  url =		 {http://dx.doi.org/10.1007/11599555_15},
  bdsk-url-1 =	 {http://dx.doi.org/10.1007/11599555_15}
}

@InProceedings{zeng2006domain-specific,
  author =	 {Jia Zeng and Chuck Mitchell and Stephen A. Edwards},
  title =	 {A Domain-Specific Language for Generating Dataflow
		 Analyzers},
  booktitle =	 {Proceedings of the Sixth Workshop on Language Descriptions,
		 Tools and Applications},
  year =	 2006,
  address =	 {Vienna, Austria},
  month =	 apr,
  annote =	 {Description of AG, Jia's domain-specific language for the
		 Phoenix compiler framework that she worked on at Microsoft
		 over the summer of 2005.},
  selectivity =	 {7/21 = 33\%}
}

@PhDThesis{zeng2007partial,
  author =	 {Jia Zeng},
  title =	 {Partial Evaluation for Code Generation from Domain-Specific
		 Languages},
  school =	 {Columbia University},
  year =	 2007,
  address =	 nyny,
  month =	 nov,
  note =	 {CUCS--048--07},
  annote =	 {Jia's thesis and my second PhD student to deposit.
		 Describes a variety of things including the PDG-based
		 Esterel code generator and an earlier version of the
		 recursion removal algorithm. She defended in August but
		 delayed depositing because she wanted the health insurance
		 for another term because she was pregnant.}
}

@InProceedings{zhang1996program,
  author =	 {Sean Zhang and Barbara Ryder and William Landi},
  title =	 {Program Decomposition for Pointer Aliasing: A Step Toward
		 Practical Analyses},
  booktitle =	 fse,
  year =	 1996,
  pages =	 {81--92},
  address =	 {San Francisco, California},
  month =	 oct
}

@InProceedings{zhang1998experiments,
  author =	 {S. Zhang and B. Ryder and W. Landi},
  title =	 {Experiments with combined analysis for pointer aliasing},
  booktitle =	 {Proceedings of the Workshop on Program Analysis for
		 Software Tools and Engineering (PASTE)},
  year =	 1998,
  pages =	 {11--18},
  address =	 {Montreal, Quebec, Canada},
  month =	 jun
}

@InProceedings{zhang2000heterogeneous,
  author =	 {Hui Zhang and Vandana Prabhu and Vvarghese George and
		 Marlene Wan and Martin Benes and Arthur Abnous and Jan M.
		 Rabaey},
  title =	 {A 1V heterogeneous reconfigurable processor {IC} for
		 baseband wireless applications},
  booktitle =	 isscc,
  year =	 2000,
  pages =	 {68--69, 448},
  address =	 {San Francisco, California},
  month =	 feb,
  annote =	 {From Jan. Part of the PRET proposal.}
}

@InProceedings{zhang2003validating,
  author =	 {Lintao Zhang and Sharad Malik},
  title =	 {Validating {SAT} Solvers Using and Independent
		 Resolution-Based Checker: Practical Implementations and
		 Other Applications},
  booktitle =	 date,
  year =	 2003,
  pages =	 {880--885},
  address =	 {Munich, Germany},
  month =	 mar,
  annote =	 {Suggested by Lintao: a way to get interpolants from SAT
		 solvers? At least talks about proofs of unsatisfiability.
		 How to produce a sequence of resolutions that show the
		 formula implies the empty clause.
		 
		 Describes how to augment a DPLL-based SAT solver algorithm
		 to produce the resolvents needed to check a proof of
		 unsatisfiability (i.e., the same DAG structured-proof
		 described by McMillan). Describes the Chaff algorithm and
		 how to modify it.
		 
		 Pseudo-code taken almost verbatim from the zChaff source.
		 "Top-level algorithnm" implemented in
		 zchaff_solver.cpp:solve() and zchaff_solver.cpp:real_solve()
		 
		 analyze_conflict() is zchaff_solver.cpp:analyze_conflicts()
		 
		 It looks like the code is already there. There's something
		 called "verify_out" that's being written to at roughly the
		 places the paper describes, and a #define VERIFY_ON
		 declaration.
		 
		 A text file called "resolve_trace" is being generated by
		 default. And there are two source files called "zverify_df"
		 and "zverify_bf" that looks like the verifiers.}
}

@InProceedings{zhao2004tuning,
  author =	 {W. Zhao and P. Kulkarni and D. Whalley and C. Healy and F.
		 Mueller and G. Uh},
  title =	 {Tuning the {WCET} of Embedded Applications},
  booktitle =	 {Proceedings of the IEEE Real-Time and Embedded Technology
		 and Applications Symposium},
  year =	 2004,
  pages =	 {472--481},
  month =	 may,
  annote =	 {WCET paper. Interactive WCET tuning platform.}
}

@Article{zheng2008compositional,
  author =	 {Hao Zheng and Jared Ahrens and Tian Xia},
  title =	 {A compositional method with failure-preserving abstractions
		 for asyn chronous design verification},
  journal =	 transcad,
  year =	 2008,
  volume =	 27,
  number =	 7,
  pages =	 {1343--1347},
  month =	 jul,
  annote =	 {for our Emsoft deadlock paper}
}

@InProceedings{zhu1997syntax,
  author =	 {Jianwen Zhu and Daniel D. Gajski and Rainer Doemer},
  title =	 {Syntax and Semantics of the Spec {C}+ Language},
  booktitle =	 {Proceedings of the Synthesis and System Integration of
		 Mixed Technologies (SASIMI)},
  year =	 1997,
  pages =	 {75--82},
  address =	 {Osaka, Japan},
  month =	 dec,
  annote =	 {Referenced by domer2001specc.}
}

@InProceedings{zhu1999compositional,
  author =	 {Xiaohan Zhu and Bill Lin},
  title =	 {Compositional Software Synthesis of Communicating
		 Processes},
  booktitle =	 iccd,
  year =	 1999,
  pages =	 {646--651},
  address =	 {Austin, Texas},
  month =	 oct,
  annote =	 {A way of splitting Lin's Petri-net based C synthesis into
		 separate state machines to avoid the code explosion problem.
		 Basic idea is to not combine interacting processes but
		 instead to turn inter-process communication points (and
		 possibly also the head of each loop) into places where the
		 machine can suspend and resume (save state in a variable and
		 restore it with a multiway branch). The outer loop simply
		 invokes each FSM in sequence (no scheduling technique). Are
		 these little more than coroutines?},
  url =		 {http://www.computer.org/proceedings/iccd/0406/04060646abs.htm}
		 ,
  bdsk-url-1 =	 {http://www.computer.org/proceedings/iccd/0406/04060646abs.htm}
		 
}

@PhDThesis{zimmermann1998binary,
  author =	 {Reto Zimmermann},
  title =	 {Binary Adder Architectures for Cell-Based {VLSI} and their
		 Synthesis},
  school =	 {Swiss Federal Institute of Technology (ETH)},
  year =	 1998,
  address =	 {Zurich, Switzerland},
  annote =	 {Suggested by Tom Shiple. "Runtime-efficient generation of
		 area-optimal adders for given timing constraints"
		 
		 Fantastic: he's done the experiments for us! (page 54/110)}
}

@InProceedings{zippel1983expert,
  author =	 {R. Zippel},
  title =	 {An Expert System for {VLSI} Design},
  booktitle =	 {Proceedings of the {IEEE} International Symposium on
		 Circuits and Systems},
  year =	 1983,
  pages =	 {191--193},
  address =	 {Newport Beach, {CA}},
  month =	 may,
  annote =	 {Vague, but goes in the right direction. Speaks of being
		 able to specify things such as output current instead of
		 width and length}
}

@inproceedings{bocchino2009type,
   author =	 {Bocchino,Jr., Robert L. and Adve, Vikram S. and Dig, Danny and Adve, Sarita V. and Heumann, Stephen and Komuravelli, Rakesh and Overbey, Jeffrey and Simmons, Patrick and Sung, Hyojin and Vakilian, Mohsen},
   title = 	{A type and effect system for deterministic parallel Java},
   booktitle = 	{OOPSLA '09: Proceeding of the 24th ACM SIGPLAN conference on Object oriented programming systems languages and applications},
   year = 	{2009},
   isbn = 	{978-1-60558-766-0},
   pages = 	{97--116},
   location = 	{Orlando, Florida, USA},
   doi = 	{http://doi.acm.org/10.1145/1640089.1640097},
   publisher = 	{ACM},
   address = 	{New York, NY, USA},
 }

@article{chandy1983distributed,
   author = 	{Chandy, K. Mani and Misra, Jayadev and Haas, Laura M.},
   title = 	{Distributed deadlock detection},
   journal = 	{ACM Trans. Comput. Syst.},
   volume = 	{1},
   number = 	{2},
   year = 	{1983},
   issn = 	{0734-2071},
   pages = 	{144--156},
   doi = 	{http://doi.acm.org/10.1145/357360.357365},
   publisher = 	{ACM},
   address = 	{New York, NY, USA},
 }

@Article{girard2005intelligent,
  author = 	 {Anouck R. Girard and Stephen Spry and J. Karl Hedrick},
  title = 	 {Intelligent cruise control applications: real-time
                  embedded hybrid control software},
  journal = 	 {IEEE Robotics \& Automation Magazine},
  year = 	 2005,
  volume = 	 12,
  number = 	 1,
  pages = 	 {22--28},
  month = 	 mar,
  doi =          {http://dx.doi.org/10.1109/MRA.2005.1411415},
  annote = 	 {Another of Anouck's papers on hybrid control for
                  automobiles.}
}

@Article{girard2005selection,
  author = 	 {Anouck R. Girard and J. Borges {de Sousa} and
                  J. Karl Hedrick},
  title = 	 {A selection of recent advances in networked
                  multivehicle systems},
  journal = 	 {Proceedings of the Institution of Mechanical
                  Engineers, Part I: Journal of Systems and Control
                  Engineering},
  year = 	 2005,
  volume = 	 219,
  number = 	 1,
  pages = 	 {1--14},
  month = 	 feb,
  doi =          {http://dx.doi.org/10.1243/095440705X9425},
  annote = 	 {Another of Anouck's papers on hybrid control for
                  automobiles, etc.  Part of a special issue.}
}

@Article{murray2007recent,
  author = 	 {Richard M. Murray},
  title = 	 {Recent Research in Cooperative Control of
                  Multivehicle Systems},
  journal = 	 {ASME Journal of Dynamic Systems, Measurement, and Control},
  year = 	 2007,
  volume = 	 129,
  number = 	 5,
  pages = 	 {571--583},
  month = 	 sep,
  doi =          {http://dx.doi.org/10.1115/1.2766721},
  annote = 	 {Related to CPS stuff?  Very control-theoretic
                  ("the vehicles are defined by a vector function on
                  space coordinates").  Then enumerates applications
                  (military systems, mobile sensor networks,
                  transportation systems, testbeds (e.g., robocup))
                  Mentions PATH extensively.

                  Citations from the ASME page:

Robust formation control of multi-robot systems subject to interconnection time-delays using minimum dynamic communication
Junjie Zhang et al., Proc. SPIE 7332, 73320I (2009)

Coordinated Path-Following in the Presence of Communication Losses and Time Delays
R. Ghabcheloo et al., SIAM J. Control Optim. 48, 234 (2009)

Cooperative Control and Potential Games
J.R. Marden et al., IEEE Transactions on Systems Man and Cybernetics Part B (Cybernetics) 39, 1393 (2009)

A model predictive controller for robots to follow a virtual leader
Dongbing Gu et al., Robotica 27, 905 (2009)

Cooperative control of multiple surface vessels in the presence of ocean currents and parametric model uncertainty
J. Almeida et al., International Journal of Robust and Nonlinear Control, n/a (2009)

Distributed Formation Flight Control Using Constraint Forces
Yunfei Zou et al., Journal of Guidance Control and Dynamics 32, 112 (2009)

Multi-vehicle coordination for double-integrator dynamics under fixed undirected/directed interaction in a sampled-data setting
Yongcan Cao et al., International Journal of Robust and Nonlinear Control, n/a (2009)

Optimalsteuerung kooperierender Mehrfahrzeugsysteme Optimal Control of Cooperative Multi-Vehicle Systems
Christian Reinl et al., at - Automatisierungstechnik 57, 296 (2009)

Safe and Distributed Kinodynamic Replanning for Vehicular Networks
Kostas E. Bekris et al., Mobile Networks and Applications 14, 292 (2009)

Semiautonomous control of multiple networked Lagrangian systems
Peter F. Hokayem et al., International Journal of Robust and Nonlinear
                  Control 19, 2040 (2009)

Its bibliography:

[1] Parker, L. E., 2000, “Current State of the Art in Distributed Autonomous
Mobile Robotics,” International Symposium on Distributed Autonomous Robotic
Systems (DARS).
[2] California Partners for Advanced Transit and Highways, 2006, http://
www.path.berkeley.edu
[3] Department of Transportation, 2007, National Transportation Library—
Intelligent Transporatation Systems. http://ntl.bts.gov/ref/biblio/its/itsreferences.
html
[4] Intelligent Transportation Society of America, 2007, http://www.itsa.org
[5] Chandler, P. R., Pachter, M., and Rasmussen, S., “UAV Cooperative Control,”
Proc. of Am. Control Conference, IEEE, New York, pp. 50–55, 2001.
[6] Klavins, E., and Murray, R. M., 2003, “Distributed Computation for Cooperative
Control,” IEEE Pervasive Comput., 3(1), pp. 56–65.
[7] Parker, L. E., 1993, “Designing Control Laws for Cooperative Agent Teams,”
Proc. of IEEE International Conference on Robotics and Automation, pp. 582–
587.
[8] Murray, R. M., ed., 2003, “Control in an Information Rich World: Report of
the Panel on Future Directions in Control, Dynamics and Systems,” http://
www.cds.caltech.edu/~murray/cdspanel
[9] U.S. Department of Defense, 2001, “Network Centric Warfare,” Report to
Congress, July, http://www.dod.mil/nii/NCW
[10] Lavretsky, E., 2002, “F/a-18 Autonomous Formation Flight Control Systems
Design,” AIAA Conference on Guidance, Navigation, and Control, AIAA paper
No. 2002–4757.
[11] Gill, F. B., 1994, Ornithology, 2nd ed., Freeman, San Francisco.
[12] Monterey Bay Aquarium Research Institute, 2006, “Autonomous Ocean Sampling
Network,” http://www.mbari.org/aosn
[13] Leonard, N. E., Paley, D., Lekien, F., Sepulchre, R., Fratantoni, D. M., and
Davis, R., 2007, “Collective Motion, Sensor Networks and Ocean Sampling,”
Proc. IEEE, 95(1), pp. 48–74.
[14] Jet Propulsion Laboratory, 2007, “Terrestrial planet finder,” http://
tpf.jpl.nasa.gov
[15] Tomlin, C., Pappas, G. J., and Sastry, S., 1998, “Conflict Resolution for Air
Traffic Management: A Study in Multiagent Hybrid Systems,” IEEE Trans.
Autom. Control, 43(4), pp. 509–521.
[16] Kitano, H., Asada, M., Kuniyoshi, Y., Noda, I., and Osawa, E., 1997, “Robocup:
The Robot World Cup Initiative,” Autonomous Agents 97, Association
for Computing Machinery, New York, pp. 340–347.
[17] D’Andrea, R., 2005, Cornell RoboCup. http://robocup.mae.cornell.edu
[18] D’Andrea, R., and Murray, R. M., 2003, “The RoboFlag Competition,” Proc.
of American Control Conference, IEEE, New York.
[19] Cremean, L., Dunbar, W., van Gogh, D., Hickey, J., Klavins, E., Meltzer, J.,
and Murray, R. M., 2002, “The Caltech Multi-Vehicle Wireless Testbed,”
Proc. of IEEE Control and Decision Conference, IEEE, New York, pp. 86–88.
[20] Vladimerou, V., Stubbs, A., Rubel, J., Fulford, A., and Dullerud, G. E., 2004,
“A Hovercraft Testbed for Decentralized and Cooperative Control,” Proc. of
American Control Conference, IEEE, New York.
[21] Hoffmann, G., Rajnarayan, D. G., Waslander, S. L., Dostal, D., Jang, J. S., and
Tomlin, C. J., 2004, “The Stanford Testbed of Autonomous Rotorcraft for
Multi-Agent Control (STARMAC),” AIAA Digital Avionics Systems Conference.
[22] King, E., Kuwata, Y., Alighanbari, M., and How, J., 2004, “Coordination and
Control Experiments for UAV Teams,” Adv. Astronaut. Sci., 118, pp. 145–
155.
[23] Schrage, D., and Vachtsevanos, G., 1999, “Software Enabled Control for Intelligent
UAVs,” Proc. of IEEE International Conference on Control and Applications,
IEEE, New York, pp. 528–532.
[24] Shim, D. H., Kim, H. J., and Sastry, S., 2003, “A Flight Control System for
Aerial Robots: Algorithms and Experiments,” Control Eng. Pract., 11, pp.
1389–1400.
[25] Dunbar, W. B., and Murray, R. M., 2004, “Receding Horizon Control of Multi-
Vehicle Formations: A Distributed Implementation,” Proc. of IEEE Control
and Decision Conference, IEEE, New York, pp. 1995–2002.
[26] Dunbar, W. B., and Murray, R. M., 2006, “Distributed Receding Horizon
Control for Multi-Vehicle Formation Stabilization,” Automatica, 42(4), pp.
549–558.
[27] Leonard, N. E., and Fiorelli, E., 2001, “Virtual Leaders, Artificial Potentials
and Coordinated Control of Groups,” Proc. of IEEE Control and Decision
Conference, IEEE, New York, pp. 2968–2973.
[28] Ogren, P., Fiorelli, E., and Leonard, N. E., 2004, “Cooperative Control of
Mobile Sensor Networks: Adaptive Gradient Climbing in a Distributed Environment,”
IEEE Trans. Autom. Control, 49(8), pp. 1292–1302.
[29] Olfati-Saber, R., and Murray, R. M., 2002, “Distributed Cooperative Control
of Multiple Vehicle Formations Using Structural Potential Functions,” Proc. of
IFAC World Congress, Elsevier.
[30] Swaroop, D., and Hedrick, J. K., 1996, “String Stability of Interconnected
Systems,” IEEE Trans. Autom. Control, 41(3), pp. 349–357.
[31] Jin, Z., and Murray, R. M., 2004, “Double-Graph Control Strategy of Multi-
Vehicle Formations,” Proc. of IEEE Control and Decision Conference, IEEE,
New York, pp. 1988–1994.
[32] Jin, Z., 2006, “Coordinated Control of Networked Multi-Agent Systems,”
Ph.D. thesis, California Institute of Technology, Electrical Engineering.
[33] Jin, Z., and Murray, R. M., 2003, “Stability and Performance Analysis With
Double-Graph Model of Vehicle Formations,” Proc. of American Control ConferenceIEEE,
New York, pp. 2223–2228.
[34] Reynolds, C. W., 1987, “Herds, and Schools: A Distributed Behavioral
Model,” Comput. Graph., 21(4), pp. 25–34.
[35] Jadbabaie, A., Lin, J., and Morse, A. S., 2003, “Coordination of Grups of
Mobile Autonomous Agents Using Nearest Neighbor Rules,” IEEE Trans. Autom.
Control, 48(6), pp. 988–1001.
[36] Olfatti Saber, R., 2006, “Flocking for Multi-Agent Dynamic Systems: Algorithms
and Theory,” IEEE Trans. Autom. Control, 51(3), pp. 401–420.
[37] Earl, M. G., and D’Andrea, R., 2005, “Multi-Vehicle Cooperative Control
Using Mixed Integer Linear Programming,” Technical Report, arXiv:cs.RO/
0501092, http://arXiv.org
[38] Richards, A., Bellingham, J., Tillerson, M., and How, J., 2002, “Co-ordination
and Control of Multiple UAVs,” AIAA Conference on Guidance, Navigation,
and Control.
[39] Schumacher, C., Chandler, P., Pachter, M., and Pachter, L., 2003, “UAV Task
Assignment With Timing Constraint,” AIAA Conference on Guidance, Navigation,
and Control.
[40] Parker, L. E., 1998, “ALLIANCE: An Architecture for Fault Tolerant Multirobot
Cooperation,” IEEE Trans. Rob. Autom., 14(2), pp. 220–240.
[41] Klavins, E., 2003, “A Formal Model of a Multi-Robot Control and Communication
Task,” Proc. of IEEE Control and Decision Conference, IEEE, New
York.
[42] Del Vecchio, D., 2006, “Discrete Dynamic Feedback for a Class of Hybrid
Systems on a Lattice,” IEEE International Symposium on Computer-Aided
Control Systems Design.
[43] Del Vecchio, D., Murray, R. M., and Klavins, E., 2006, “Discrete State Estimators
for Systems on a Lattice,” Automatica, 42(2), pp. 271–285.
[44] Shima, T., Rasmussen, S., Sparks, A., and Passino, K., 2006, “Multiple Task
Assignments for Cooperating Uninhabited Aerial Vehicles Using Genetic Algorithms,”
Comput. Oper. Res., 33(11), pp. 3252–3269.
[45] Rasmussen, S., and Shima, T., 2006, “Branch and Bound Tree Search for
Assigning Cooperating UAVS to Multiple Task,” Proc. of American Control
Conference, IEEE, New York.
[46] Bhattacharya, R., Tiwari, A., Fung, J., and Murray, R. M., 2006, “Cone Invariance
and Rendezvous of Multiple Agents,” IEEE Trans. Autom. Control,
submitted.
[47] Tiwari, A., Fung, J., Carson III, J. M., Bhattacharya, R., and Murray, R. M.,
2004, “A Framework for Lyapunov Certificates for Multi-Vehicle Rendezvous
Problems,” Proc. of American Control Conference, IEEE, New York, pp.
5582–5587.
[48] Cortés, J., Martínez, S., Karatas, T., and Bullo, F., 2004, “Coverage Control for
Mobile Sensing Networks,” IEEE Trans. Rob. Autom., 20(2), pp. 243–255.
[49] Gupta, V., Chung, T. H., Hassibi, B., and Murray, R. M., 2006, “On a Stochastic
Sensor Selection Algorithm With Applications in Sensor Scheduling and
Sensor Coverage,” Automatica, 42, pp. 251–260.
[50] Ousingsawat, J., and Campbell, M. E., 2004, “Establishing Trajectories for
Multi-Vehicle Reconnaissance,” AIAA Conference on Guidance, Navigation,
and Control, AIAA Paper No: 2004–5224.
[51] Tiwari, A., Jun, M., Jeffcoat, D. E., and Murray, R. M., 2005, “The Dynamic
Sensor Coverage Problem,” Proc. of IFAC World Congress, Elsevier.
[52] Fax, J. A., and Murray, R. M., 2004, “Information Flow and Cooperative
Control of Vehicle Formations,” IEEE Trans. Autom. Control, 49(9), pp.
1465–1476.
[53] Olfati-Saber, R., and Murray, R. M., 2004 “Consensus Problems in Networks
of Agents With Switching Topology and Time-Delays,” IEEE Trans. Autom.
Control, 49(9), pp. 1520–1533.
[54] Gupta, V., Murray, R. M., and Hassibi, B., 2003, “Stability Analysis of Stochastically
Varying Formations of Dynamic Agents,” Proc. of IEEE Control
and Decision Conference, IEEE, New York, pp. 504–509.
}
}

@Article{klavins2004distributed,
  author = 	 {Eric Klavins and Richard M. Murray},
  title = 	 {Distributed Computation for Cooperative Control},
  journal = 	 {IEEE Pervasive Computing},
  year = 	 2004,
  volume = 	 3,
  number = 	 1,
  pages = 	 {56--65},
  month = 	 jan,
  doi =          {http://dx.doi.org/10.1109/MPRV.2004.1269132},
  annote = 	 {cited by murray2007recent.

                  Really nice discussion of why control in a
                  distributed environment is tricky.  Talks about
                  various distributed programming models and how they
                  might clash with control.  Talks about the RoboFlag
                  game as a motivating example.

                  Compares hybrid automata, I/O automata, temporal
                  logic, or a guarded command language (their CCL?
                  derived from the Unity language)  Actually
                  distributes an implementation of the language:

                  http://sveiks.ee.washington.edu/cc

                  http://soslab.ee.washington.edu/

                  CCL: "Computation and Control Language"  Temporal
                  logic abounds.  This is their real contribution: a
                  guarded-command language designed to allow them to
                  describe and later analyze distributed algorithms.
                  
                  Klavins is a biggie in this world (self-organizing
                  systems).

                  E. Klavins, A Language for Modeling and Programming Cooperative Control Systems, Proceedings of the International Conference on Robotics and Automation. May 2004, pp. 3403- 3410}
}

@techreport{forbes2009c-code,
    Author = {Forbes, Shanna-Shaye and Lickly, Ben and Leung, Man-Kit},
    Title = {C Code Generation from the Giotto Model of Computation to the PRET Architecture},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2009},
    Month = {May},
    URL = {http://www.eecs.berkeley.edu/Pubs/TechRpts/2009/EECS-2009-86.html},
    Number = {UCB/EECS-2009-86},
    Note = {This was a class project for the Spring 2009 section of EECS 290N-02 ("Concurrent Models of Computation") with Edward A. Lee.},
    Abstract = {We present code generation from the Giotto model of computation in Ptolemy II to the Precision Timed (PRET)
Architecture. Giotto is a time-triggered programming model that provides the user with methods to specify timing at a high level, and PRET is a processor architecture that emphasizes predictable timing. The goal of code generation is to automatically generate code that correctly implements the semantics of the model as the designer has specified. We use the ISA-level timing controls of PRET in the C code we generate to fulfill the timing constraints of the Giotto model. We run the generated code on the cycle accurate PRET simulator to verify that our designs meet their
deadlines.}
}

@Book{ite2008traffic,
  author = 	 {{Institute of Transportation Engineers}},
  title = 	 {Traffic Signal Timing Manual},
  publisher = 	 {ITE},
  year = 	 2008,
  url =          {http://www.signaltiming.com/},
  note =         {Online at www.signaltiming.com},
  annote = 	 {Federal highway administration.  Freely available
                  online.  Authorship complicated.}
}

@Article{greenman1998choreographing,
  author = 	 {Catherine Greenman},
  title = 	 {Choreographing the Dance of Traffic Lights},
  journal = 	 {The New York Times},
  year = 	 1998,
  month = 	 {September 17},
  url =          {http://www.nytimes.com/1998/09/17/technology/choreographing-the-dance-of-traffic-lights.html},
  annote = 	 {Some nice statistics.}
}

% NSF CPS stuff begins

@Book{daganzo1997fundamentals,
  author = 	 {Carlos F. Daganzo},
  title = 	 {Fundamentals of Transportation and Traffic Operations},
  publisher = 	 {Peragamon},
  year = 	 1997,
  annote = 	 {NSF CPS with Ben}
}

@Misc{dot2008advanced,
  title = 	 {Advanced Wireless Communication for the
                  Transportation Sector---A Roundtable Discussion},
  year = 	 2008,
  month = 	 {May 22},
  key =          {DOT},
  howpublished = {US Department of Transportation},
  url =          {http://www.resourceguide.its.dot.gov/default.asp?SID=3&SSID=9},
  annote = 	 {NSF CPS with Ben}}

@TechReport{booz-allen2006vehicle,
  author = 	 {{Booz Allen Hamilton}},
  title = 	 {Vehicle Infrastructure Integration {(VII)} Concept
                  of Operations},
  institution =  {US Department of Transportation---Federal Highway
                  Administration},
  year = 	 2006,
  address = 	 {McLean, Virginia},
  month = 	 {sep},
  note = 	 {Version 1.2},
  annote = 	 {NSF CPS with Ben}
}

@TechReport{parkany2006vii-strawman,
  author = 	 {Emily Parkany and Philip J. Tarnoff},
  title = 	 {{VII} Data Characteristics for Traffic Management and
                  Traveler Information: Strawman Measures Explanation Memo},
  institution =  {Mitretek Systems},
  year = 	 2006,
  address = 	 {Falls Church, Virginia},
  month = 	 jul,
  note =         {Version 2.0 (Final)},
  annote = 	 {NSF CPS with Ben}
}

@TechReport{parkany2006vii-data,
  author = 	 {Emily Parkany and Philip J. Tarnoff},
  title = 	 {{VII} Data Characteristics Task: Data Needs Assessment},
  institution =  {Mitretek Systems},
  year = 	 2006,
  address = 	 {Falls Church, Virginia},
  month = 	 jun,
  note =         {Version 2.0 (Final)},
  url =          {http://www.intellidriveusa.org/508/Library/Library%20-%20RRs%20-%20Tech%20-%20Apps%20-%20Traffic%20Management/DataNeedsWhitePaper6_22.htm},
  annote = 	 {NSF CPS with Ben}
}

@Manual{ntoc2007national,
  title = 	 {National Traffic Signal Report Card (Technical Report)},
  organization = {The National Transportation Operations Coalition},
  year = 	 2007,
  url =          {http://www.ite.org/reportcard/},
  annote = 	 {NSF CPS with Ben}
}

@Article{varhelyi2001effects,
  author = 	 {Andr\'as V\'arhelyi and Tapani M\"akinen},
  title = 	 {The effects of in-car speed limiters---field studies},
  journal = 	 {Transportation Research Part C: Emerging Technologies},
  year = 	 2001,
  volume = 	 9,
  number = 	 3,
  pages = 	 {191--211},
  month = 	 jun,
  annote = 	 {NSF CPS with Ben}
}

@Article{carsten2005intelligent,
  author = 	 {O. M. J. Carsten and F. N. Tate},
  title = 	 {Intelligent speed adaptation: accident savings and
                  cost-benefit analysis},
  journal = 	 {Accident Analysis \& Prevention},
  year = 	 2005,
  volume = 	 37,
  number = 	 3,
  pages = 	 {407--416},
  month = 	 may,
  annote = 	 {NSF CPS with Ben}
}

@Article{barth2009energy,
  author = 	 {Matthew Barth and Kanok Boriboonsomsin},
  title = 	 {Energy and emissions impacts of a freeway-based dynamic eco-driving system},
  journal = 	 {Transportation Research Part D: Transport and Environment},
  year = 	 2009,
  volume = 	 14,
  number = 	 6,
  pages = 	 {400--410},
  month = 	 aug,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{baskar2008intelligent,
  author = 	 {L. Baskar and B. De Schutter and and H. Hellendoorn},
  title = 	 {Intelligent speed adaptation in intelligent vehicle
                  highway systems---A model predictive control
                  approach},
  booktitle = {Proceedings of the 10th TRAIL Congress 2008---TRAIL
                  in Perspective},
  pages = 	 13,
  year = 	 2008,
  address = 	 {Rotterdam, The Netherlands},
  month = 	 oct,
  url =          {http://pub.deschutter.info/abs/08_021.html},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{li2009intelligent,
  author = 	 {Jiuxi Li and Chunshan Wang and Qiang Li and Bin Wang1},
  title = 	 {Intelligent Speed Adaptation Impact of Fuel
                  Consumption and Emission},
  booktitle = {Proceedings of the Second International Conference
                  on Transportation Engineering (ICTE)},
  pages = 	 {1311--1316},
  year = 	 2009,
  address = 	 {Chengdu, China},
  month = 	 jul,
  publisher = {ASCE},
  note = 	 {Volume 2},
  doi =          {http://dx.doi.org/10.1061/41039(345)217},
  annote = 	 {NSF CPS with Ben}
}

@Article{popov2008distributed,
  author = 	 {A. Popov and A. Hegyi and R. Babu\v{s}ka and H. Werne},
  title = 	 {Distributed Controller Design Approach to Dynamic
                  Speed Limit Control Against Shockwaves on Freeways},
  journal = 	 trr,
  year = 	 2008,
  volume = 	 2086,
  pages = 	 {93--99},
  publisher =    {Transportation Research Board of the National Academies},
  annote = 	 {NSF CPS with Ben}
}

@Article{vlassenroot2007driving,
  author = 	 {Sven Vlassenroot and Steven Broekx and Johan {De
                  Mol} and Luc {Int Panis} and Tom Brijs and Geert Wets},
  title = 	 {Driving with intelligent speed adaptation: Final
                  results of the {Belgian} {ISA}-trial },
  journal = 	 {Transportation Research Part A: Policy and Practice},
  year = 	 2007,
  volume = 	 41,
  number = 	 3,
  pages = 	 {267--279},
  month = 	 mar,
  doi =          {http://dx.doi.org/10.1016/j.tra.2006.05.009},
  annote = 	 {NSF CPS with Ben}
}

@Article{unal2003effect,
  author = 	 {Alper Unal and Nagui M. Rouphail and H. Christopher Frey},
  title = 	 {Effect of Arterial Signalization and Level of
                  Service on Measured Vehicle Emissions},
  journal = 	 trr,
  year = 	 2003,
  volume = 	 1842,
  pages = 	 {47--56},
  doi =          {http://dx.doi.org/10.3141/1842-06},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{trayford1988demonstration,
  author = 	 {R. S. Trayford},
  title = 	 {Demonstration Experiment of Dynamic Advisory
                  Information Under Adaptive Signals},
  booktitle = {Proceedings of the International Road and Traffic
                  Conference. Roads and Traffic 2000},
  pages = 	 {31--34},
  year = 	 1988,
  volume = 	 {4:2},
  annote = 	 {NSF CPS with Ben.  In the TRB/TRIS system, but hard to find}, 
}

@Article{abu-lebdeh2002integrated,
  author = 	 {Ghassan Abu-Lebdeh},
  title = 	 {Integrated Adaptive-Signal Dynamic-Speed Control of
                  Signalized Arterials},
  journal = 	 {Journal of Transportation Engineering},
  year = 	 2002,
  volume = 	 128,
  number = 	 5,
  pages = 	 {447--451},
  month = 	 {September/October},
  annote = 	 {NSF CPS with Ben}
}

@Article{greenshields1935study,
  author = 	 {Bruce D. Greenshields},
  title = 	 {A Study of Traffic Capacity},
  journal =      {Proceedings of the Annual Meeting of the Highway
                  Research Board},
  pages = 	 {448--477},
  year = 	 1935,
  volume = 	 14,
  url =          {http://www.tft.pdx.edu/greenshields/greenshields.htm},
  annote = 	 {NSF CPS with Ben.  Seminal.}
}

@Article{lighthill1955kinematic,
  author = 	 {M. J. Lighthill and G. B. Whitham},
  title = 	 {On Kinematic Waves: {II}. A Theory of Traffic Flow on
                  Long Crowded Roads},
  journal = 	 {Proceedings of the Royal Society of London. Series
                  A, Mathematical and Physical Sciences},
  year = 	 1955,
  volume = 	 229,
  number = 	 1178,
  pages = 	 {317--345},
  month = 	 {May 10},
  url =          {http://www.jstor.org/stable/99769},
  annote = 	 {NSF CPS with Ben}
}

@Article{richards1956shock,
  author = 	 {Paul I. Richards},
  title = 	 {Shock Waves on the Highway},
  journal = 	 {Operations Research},
  year = 	 1956,
  volume = 	 4,
  number = 	 1,
  pages = 	 {52--51},
  month = 	 feb,
  url =          {http://www.jstor.org/stable/167515},
  annote = 	 {NSF CPS with Ben}
}

@TechReport{liu2004large-scale,
  author = 	 {Henry X. Liu and Wenteng Ma and R. Jayakrishnan and
                  Will Recker},
  title = 	 {Large-Scale Traffic Simulation Through Distributed
                  Computing of {Paramics}},
  institution =  {California PATH Research Report},
  year = 	 2004,
  number = 	 {UCB--ITS--PRR--2004--42},
  annote = 	 {NSF CPS with Ben}
}

@Article{barth2008real-world,
  author = 	 {Matthew Barth and Kanok Boriboonsomsin},
  title = 	 {Real-World Carbon Dioxide Impacts of Traffic Congestion},
  journal = 	 trr,
  year = 	 2008,
  volume = 	 2058,
  pages = 	 {163--171},
  annote = 	 {NSF CPS with Ben}
}

@Article{barth1996modal,
  author = 	 {Matthew Barth and Feng An and Joseph Norbeck and Marc Ross},
  title = 	 {Modal Emissions Modeling: A Physical Approach},
  journal = 	 trr,
  year = 	 1996,
  volume = 	 1520,
  pages = 	 {81--88},
  url =          {http://www.cert.ucr.edu/cmem/docs/TRR1996-Physical-Approach.pdf},
  annote = 	 {NSF CPS with Ben}
}

@Article{schulz2000statistical,
  author = 	 {Daniel Schulz and Theodore Younglove and Matthew Barth},
  title = 	 {Statistical Analysis and Model Validation of
                  Automobile Emissions},
  journal = 	 {Journal of Transportation and Statistics},
  year = 	 2000,
  volume = 	 3,
  number = 	 2,
  pages = 	 {29--38},
  month = 	 sep,
  annote = 	 {NSF CPS with Ben}
}

@Article{ahn2002estimating,
  author = 	 {Kyoungho Ahn and Hesham Rakha and Antonio Trani and
                  Michel {Van Aerde}},
  title = 	 {Estimating Vehicle Fuel Consumption and Emissions
                  Based on Instantaneous Speed and Acceleration Levels},
  journal = 	 {ASCE Journal of Transportation Engineering},
  year = 	 2002,
  volume = 	 128,
  number = 	 2,
  pages = 	 {182--190},
  month = 	 {March/April},
  doi =          {http://dx.doi.org/10.1061/(ASCE)0733-947X(2002)128:2(182)},
  annote = 	 {NSF CPS with Ben}
}

@Article{rakha2003comparison,
  author = 	 {Hesham Rakha and Kyoungho Ahn and Antonio Trani},
  title = 	 {Comparison of {MOBILE5a}, {MOBILE6}, {VT-MICRO}, and
                  {CMEM} models for estimating hot-stabilized
                  light-duty gasoline vehicle emissions },
  journal = 	 {Canadian Journal of Civil Engineering},
  year = 	 2003,
  volume = 	 30,
  number = 	 6,
  pages = 	 {1010--1021},
  month = 	 dec,
  annote = 	 {NSF CPS with Ben}
}

@TechReport{west1999development,
  author = 	 {Brian H. West and R. N. McGill and C. S. Sluder and
                  D. E. Smith},
  title = 	 {Development and Validation of Light-Duty Vehicle
                  Modal Emissions and Fuel Consumption Values for
                  Traffic Models},
  institution =  {US Department of Transportation---Federal Highway
                  Administration},
  year = 	 1999,
  number = 	 {FHWA--RD--99--068},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{gao2006vehicle,
  author = 	 {Bin Gao and Benjamin Coifman},
  title = 	 {Vehicle Identification and {GPS} Error Detection
                  from a {LIDAR} Equipped Probe Vehicle},
  booktitle = {Proceedings of the Intelligent Transportation
                  Systems Conference (ITSC)},
  pages = 	 {1537--1542},
  year = 	 2006,
  address = 	 {Toronto, Canada},
  month = 	 sep,
  publisher = {IEEE},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{gao2005extracting,
  author = 	 {Bin Gao and Benjamin Coifman},
  title = 	 {Extracting traffic flow characteristics with an
                  instrumented probe vehicle},
  booktitle = {Proceedings of Traffic and Granular Flow (TGF)},
  pages = 	 {675--685},
  year = 	 2005,
  address = 	 {Berlin, Germany},
  month = 	 oct,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{jhaveri2003scoot,
  author = 	 {Chintan S. Jhaveri and Joseph {Perrin, Jr.} and
                  Peter T. Martin},
  title = 	 {{SCOOT} Adaptive Signal Control: An Evaluation of
                  its Effectiveness over a Range of Congestion Intensities},
  booktitle = {Proceedings of the Transportation Research Board
                  Annual Meeting},
  year = 	 2003,
  address = 	 {Washington, DC},
  month = 	 jan,
  annote = 	 {NSF CPS with Ben.  I don't trust this reference.}
}

@TechReport{hunt1981scoot,
  author = 	 {P. B. Hunt and D.I. Robertson and R.D. Bretherton
                  and R.I. Winton},
  title = 	 {SCOOT---A Traffic Responsive Method of Coordinating Signals},
  institution =  {Transport and Road Research Laboratory},
  year = 	 1981,
  number = 	 {LR-1014},
  address = 	 {Crawthorne, Berkshire, England}
}

@Article{sim1980sydney,
  author = 	 {A. Sim and K. Dobinson},
  title = 	 {Sydney Coordinated Adaptive Traffic (SCAT) System
                  Philosophy and Benefits},
  journal = 	 tvt,
  year = 	 1980,
  volume = 	 {VT-2},
  number = 	 2,
  pages = 	 {130--137},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{lowrie2001scats,
  author = 	 {P. R. Lowrie},
  title = 	 {SCATS---the History of its Development,},
  booktitle = {Proceedings of the 8th World Congress on Intelligent
                  Transport Systems},
  year = 	 2001,
  address = 	 {Sydney, Australia},
  month = 	 sep,
  publisher = {ITS America},
  annote = 	 {NSF CPS with Ben}
}

@TechReport{treiterer1975investigation,
  author = 	 {J. Treiterer},
  title = 	 {Investigation of Traffic Dynamics by Aerial
                  Photogrammetry Techniques},
  institution =  {Ohio Department of Transportation and FHWA},
  year = 	 1975,
  number = 	 {EES-278},
  note = 	 {OHIO-DOT-09-75 FCP 40T2-052},
  annote = 	 {NSF CPS with Ben}
}

@TechReport{smith1985freeway,
  author = 	 {S. Smith},
  title = 	 {Freeway Data Collection for Studying Vehicle Interactions},
  institution =  {Federal Highway Administration},
  year = 	 1985,
  number = 	 {FHWA/RD-85/108},
  annote = 	 {NSF CPS with Ben}
}

@Article{kappen2007introduction,
  author = 	 {Hilbert J. Kappen},
  title = 	 {An introduction to stochastic control theory, path
                  integrals and reinforcement learning},
  journal = 	 {AIP Conference Proceedings},
  year = 	 2007,
  volume = 	 887,
  number = 	 1,
  pages = 	 {149--181},
  month = 	 feb,
  url =          {http://link.aip.org/link/?APCPCS/887/149/1},
  doi =          {http://dx.doi.org/10.1063/1.2709596},
  note =         {COOPERATIVE BEHAVIOR IN NEURAL SYSTEMS: Ninth
                  Granada Lectures},
  annote = 	 {NSF CPS with Ben.

                  Starts with biological learning theory.  Too
                  biologically-focused for our work.  But bibliography
                  might be interesting:
}
}

@Book{sun2006stochastic,
  author = 	 {Jian-Qiao Sun},
  title = 	 {Stochastic Dynamics and Control},
  publisher = 	 {Elsevier},
  year = 	 2006,
  annote = 	 {Online through Knovel.  Highly (purely?)
                  mathematical.  Not clear what of it we could use.}
}

@Book{soederstroem2002discrete-time,
  author = 	 {Torstem S\"oderstr\"om},
  title = 	 {Discrete-time stochastic systems: estimation and control},
  publisher = 	 sv,
  year = 	 2002,
  edition = 	 {Second},
  address =      {New York},
  annote = 	 {NSF CPS stuff with Ben.  A reasonal stochastic
                  control book.}
}

@Article{li2006cooperative,
  author = 	 {Li Li and Fei-Yue Wang},
  title = 	 {Cooperative Driving at Blind Crossings Using
                  Intervehicle Communication},
  journal = 	 tvt,
  year = 	 2006,
  volume = 	 55,
  number = 	 6,
  pages = 	 {1712--1724},
  month = 	 nov,
  annote = 	 {NSF CPS stuff with Ben}
}

@Article{van-arem2006impact,
  author = 	 {Bart {van Arem} and J. G. {van Driel} and Ruben Visser},
  title = 	 {The Impact of Cooperative Adaptive Cruise Control on
                  Traffic-Flow Characteristics},
  journal = 	 {IEEE Transactions on Intelligent Transportation Systems},
  year = 	 2006,
  volume = 	 7,
  number = 	 4,
  pages = 	 {429--436},
  month = 	 dec,
  annote = 	 {NSF CPS stuff with Ben}
}

@Article{santa2009sharing,
  author = 	 {J. Santa and A. F. Gomez-Skarmeta},
  title = 	 {Sharing Context-Aware Road and Safety Information},
  journal = 	 {IEEE Pervasive Computing},
  year = 	 2009,
  volume = 	 8,
  number = 	 3,
  pages = 	 {58--65},
  month = 	 {July-September},
  annote = 	 {NSF CPS stuff with Ben}
}

@Article{vander-werf2002effects,
  author = 	 {Joel {Vander Werf} and Steven E. Shladover and Mark
                  A. Miller and Natalia Kourjanskaia},
  title = 	 {Effects of Adaptive Cruise Control Systems on
                  Highway Traffic Flow Capacity},
  journal = 	 trr,
  year = 	 2002,
  volume = 	 1800,
  pages = 	 {78--84},
  doi =          {10.3141/1800-10},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{jung2009uml,
  author = 	 {SungDac Jung and SnagSun Lee and KycongSoo Han and
                  HvunSco Oh and DongYoung Kwak},
  title = 	 {{UML} design of vehicular communication service},
  booktitle = {Proceedings of the 11th International Conference on
                  Advanced Communication Technology (ICACT)},
  pages = 	 {870--872},
  year = 	 2009,
  volume = 	 1,
  address = 	 {Phoenix Park, Korea},
  month = 	 feb,
  annote = 	 {NSF CPS with Ben}
}

@Article{namboodiri2007prediction-based,
  author = 	 {Vinod Namboodiri and Lixin Gao},
  title = 	 {Prediction-Based Routing for Vehicular Ad Hoc Networks},
  journal = 	 tvt,
  year = 	 2007,
  volume = 	 56,
  number = 	 4,
  pages = 	 {2332--2345},
  month = 	 jul,
  doi =          {10.1109/TVT.2007.897656},
  annote = 	 {NSF CPS with Ben}
}

@Article{dikaiakos2007location-aware,
  author = 	 {Marios D. Dikaiakos and Andreas Florides and Tamer
                  Nadeem and Liviu Iftode},
  title = 	 {Location-Aware Services Over Vehicular Ad-Hoc
                  Networks Using Car-to-Car Communication},
  journal = 	 {IEEE Journal on Selected Areas in Communications},
  year = 	 2007,
  volume = 	 25,
  number = 	 8,
  pages = 	 {1590--1602},
  month = 	 oct,
  annote = 	 {NSF CPS with Ben}
}

@Article{su2007clustering-based,
  author = 	 {Hang Su and Xi Zhang},
  title = 	 {Clustering-Based Multichannel {MAC} Protocols for
                  {QoS} Provisionings Over Vehicular Ad Hoc Networks},
  journal = 	 tvt,
  year = 	 2007,
  volume = 	 56,
  number = 	 6,
  pages = 	 {3309--3323},
  month =        nov,
  annote = 	 {NSF CPS with Ben}
}

@Article{du2009optimization,
  author = 	 {Lili Du and Satish Ukkusuri and Wilfredo F Yushimito Del Valle and ShivKumar Kalyanaraman},
  title = 	 {Optimization models to characterize the broadcast capacity of vehicular ad hoc networks},
  journal = 	 {Transportation Research Part C: Emerging Technologies},
  year = 	 2009,
  volume = 	 17,
  number = 	 6,
  pages = 	 {571--585},
  month = 	 dec,
  annote = 	 {NSF CPS with Ben}
}

@Article{lang2006identifying,
  author = 	 {Lixin Lang and Benjamin Coifman},
  title = 	 {Identifying lane-mapping errors at freeway detector stations},
  journal = 	 trr,
  year = 	 2006,
  volume = 	 1945,
  pages = 	 {89--99},
  doi =          {http://dx.doi.org/10.3141/1945-11},
  annote = 	 {NSF CPS with Ben}
}

@Article{coifman2004event,
  author = 	 {Benjamin Coifman and Sudha Dhoorjaty},
  title = 	 {Event Data Based Traffic Detector Validation Tests},
  journal = 	 {ACSE Journal of Transportation Engineering},
  year = 	 2004,
  volume = 	 130,
  number = 	 3,
  pages = 	 {313--321},
  annote = 	 {NSF CPS with Ben}
}

@Article{jain2005improved,
  author = 	 {Manish Jain and Benjamin Coifman},
  title = 	 {Improved Speed Estimates from Freeway Traffic Detectors},
  journal = 	 {ACSE Journal of Transportation Engineering},
  year = 	 2005,
  volume = 	 131,
  number = 	 7,
  pages = 	 {483--495},
  annote = 	 {NSF CPS with Ben}
}

@Article{coifman2007distributed,
  author = 	 {Benjamin Coifman and Ramachandran Mallika},
  title = 	 {Distributed Surveillance on Freeways Emphasizing
                  Incident Detection and Verification},
  journal = 	 {Transportation Research Part A: Policy and Practice},
  year = 	 2007,
  volume = 	 41,
  number = 	 8,
  pages = 	 {750--767},
  annote = 	 {NSF CPS with Ben}
}

@Article{wang2008effect,
  author = 	 {Chao Wang and Benjamin Coifman},
  title = 	 {The Effect of Lane Change Maneuvers on a Simplified
                  Car-following Theory},
  journal = 	 {IEEE Transactions on Intelligent Transportation Systems},
  year = 	 2008,
  volume = 	 9,
  number = 	 3,
  pages = 	 {523--535},
  annote = 	 {NSF CPS with Ben}
}

@Article{coifman2006pilot,
  author = 	 {Benjamin Coifman and Rabi Mishalani and Chao Wang
                  and Sivaraman Krishnamurthy},
  title = 	 {A Pilot Study into the Impacts of Lane Change
                  Maneuvers on Congested Freeway Segment Delays},
  journal = 	 trr,
  year = 	 2006,
  volume = 	 1965,
  pages = 	 {152--159},
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{wang2004measuring,
  author = 	 {Yun Wang and Diane Foster and Benjamin Coifman},
  title = 	 {Measuring Wave Velocities on Highways during
                  Congestion using Cross Spectral Analysis},
  booktitle = {Proceedings of the 7th IEEE International Conference
                  on Intelligent Transportation Systems},
  year = 	 2004,
  address = 	 {Washington, DC},
  month = 	 oct,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{wang2005study,
  author = 	 {Chao Wang and Benjamin Coifman},
  title = 	 {The Study on the Effect of Lane Change Maneuvers on
                  a Simplified Car-following Theory},
  booktitle = {Proceedings of the 8th IEEE International Conference
                  on Intelligent Transportation Systems},
  year = 	 2005,
  address = 	 {Vienna, Austria},
  month = 	 sep,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{wang2005verification,
  author = 	 {Chao Wang and Benjamin Coifman},
  title = 	 {Verification of a simplified car-following theory
                  using vehicle trajectory data},
  booktitle = {Proceedings of the 33nd Annual Canadian Society for Civil
                  Engineering Conference},
  year = 	 2005,
  address = 	 {Toronto, Canada},
  month = 	 jun,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{xuan2006lane,
  author = 	 {Yiguang Xuan and Benjamin Coifman},
  title = 	 {Lane Change Maneuver Detection from Probe Vehicle
                  {DGPS} Data},
  booktitle = {Proceedings of the 9th IEEE International Conference
                  on Intelligent Transportation Systems},
  year = 	 2006,
  address = 	 {Toronto, Canada},
  month = 	 sep,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{wang2007estimating,
  author = 	 {Chao Wang and Benjamin Coifman},
  title = 	 {Estimating the Number of Lane Change Maneuvers on
                  Congested Freeway Segments},
  booktitle = {Proceedings of the 11th World Conference on
                  Transport Research},
  year = 	 2007,
  address = 	 {Berkeley, California},
  month = 	 jun,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{coifman2003lane,
  author = 	 {Benjamin Coifman and Sivaraman Krishnamurthy and Xin Wang},
  title = 	 {Lane Change Maneuvers Consuming Freeway Capacity},
  booktitle = {Proc. of the Traffic and Granular Flow Conference},
  pages = 	 {3--14},
  year = 	 2003,
  address = 	 {Delft, The Netherlands},
  month = 	 oct,
  annote = 	 {NSF CPS with Ben}
}

@InProceedings{coifman2005average,
  author = 	 {Benjamin Coifman and Yun Wang},
  title = 	 {Average Velocity of Waves Propagating Through
                  Congested Freeway Traffic},
  booktitle = 	 {Proceedings of The 16th International Symposium on
                  Transportation and Traffic Theory},
  pages = 	 {165--179},
  year = 	 2005,
  address = 	 {College Park, Maryland},
  month = 	 jul,
  annote = 	 {NSF CPS with Ben}
}

@Article{pietrek1994peering,
  author = 	 {Matt Pietrek},
  title = 	 {Peering Inside the {PE}: A Tour of the {Win32}
                  Portable Executable File Format},
  journal = 	 {Microsoft Systems Journal},
  year = 	 1994,
  volume = 	 9,
  number = 	 3,
  month = 	 mar,
  url =          {http://msdn.microsoft.com/en-us/library/ms809762.aspx},
  annote = 	 {Describes the file format and a program to decode it.}
}

@Article{pietrek2002in-depth,
  author = 	 {Matt Pietrek},
  title = 	 {An In-Depth Look into the {Win32} {Portable}
                  {Executable} File Format (Parts~1 and~2)},
  journal = 	 {MSDN Magazine},
  year = 	 2002,
  month = 	 {February and March},
  annote = 	 {Follow-up to pietrek1994peering.  Includes a
                  "PE.exe" executable that displays information about
                  a PE file.}
}

@PhdThesis{percival2006matching,
  author = 	 {Colin Percival},
  title = 	 {Matching with Mismatches and Assorted Applications},
  school = 	 {University of Oxford},
  year = 	 2006,
  annote = 	 {Part of the Courgette stuff.  A more complicated
                  attack than bsdiff.}
}

@InProceedings{brebner2009packets,
  author = 	 {Gordon Brebner},
  title = 	 {Packets Everywhere: The Great Opportunity for Field
                  Programmable Technology},
  booktitle = fpt,
  pages = 	 {1--10},
  year = 	 2009,
  address = 	 {Sydney, Australia},
  month = 	 dec,
  doi =          {10.1109/FPT.2009.5377604 },
  annote = 	 {Ilija points out this describes G, the high-level
                  language starting point that Cristian used in his
                  thesis.  Actually the keynote at the conference.}
}

@InProceedings{vasudevan2010ensuring,
  author =       {Nalini Vasudevan and Stephen A. Edwards},
  title =        {Ensuring Deterministic Concurrency through
		  Compilation},
  booktitle = 	{Proceedings of the IEEE International Parallel and Distributed Processing Symposium Workshops},
  year =         2010,
  address =      {Atlanta, USA},
  month =        apr,
  annote =       {Nalini's thesis proposal in short}
}

@inproceedings{choi1998deterministic,
 author = 	{Choi, Jong-Deok and Srinivasan, Harini},
 title = 	{Deterministic replay of Java multithreaded applications},
 booktitle = 	{SPDT '98: Proceedings of the SIGMETRICS symposium on Parallel and distributed tools},
 year = 	{1998},
 isbn = 	{1-58113-001-5},
 pages = 	{48--59},
 location = 	{Welches, Oregon, United States},
 doi = 	{http://doi.acm.org/10.1145/281035.281041},
 publisher = 	{ACM},
 address = 	{New York, NY, USA},
 }

@inproceedings{altekar2009odr,
 author = 	{Altekar, Gautam and Stoica, Ion},
 title = 	{ODR: output-deterministic replay for multicore debugging},
 booktitle = 	{SOSP '09: Proceedings of the ACM SIGOPS 22nd symposium on Operating systems principles},
 year = 	{2009},
 isbn = 	{978-1-60558-752-3},
 pages = 	{193--206},
 location = 	{Big Sky, Montana, USA},
 doi = 		{http://doi.acm.org/10.1145/1629575.1629594},
 publisher = 	{ACM},
 address = 	{New York, NY, USA},
 }

@inproceedings{berger2009grace,
 author = 	{Berger, Emery D. and Yang, Ting and Liu, 
		Tongping and Novark, Gene},
 title = 	{Grace: safe multithreaded programming for C/C++},
 booktitle = 	{OOPSLA '09: Proceeding of the 24th ACM SIGPLAN
		 conference on Object oriented programming
		 systems languages and applications},
 year = 	{2009},
 isbn = 	{978-1-60558-766-0},
 pages = 	{81--96},
 location = 	{Orlando, Florida, USA},
 doi = 		{http://doi.acm.org/10.1145/1640089.1640096},
 publisher =	 {ACM},
 address = 	{New York, NY, USA},
 }

@inproceedings{shavit1995software,
 author = 	{Shavit, Nir and Touitou, Dan},
 title = 	{Software transactional memory},
 booktitle = 	{PODC '95: Proceedings of the fourteenth annual 
		ACM symposium on Principles of distributed computing},
 year = 	{1995},
 isbn = 	{0-89791-710-3},
 pages = 	{204--213},
 location = 	{Ottowa, Ontario, Canada},
 doi = 		{http://doi.acm.org/10.1145/224964.224987},
 publisher = 	{ACM},
 address = 	{New York, NY, USA},
 }

@InProceedings{vasudevan2010determinism,
  author = 	 {Nalini Vasudevan and Stephen A. Edwards},
  title = 	 {Determinism Should Ensure Deadlock-Freedom},
  booktitle = {Proceedings of the 2nd USENIX Workshop on Hot Topics
                  in Parallelism (HotPar)},
  OPTpages = 	 {FIXME},
  year = 	 2010,
  address = 	 {Berkeley, California},
  month = 	 jun,
  annote = 	 {Nalini's idea, really.  A poster and short paper.}
}

@InProceedings{keppel2009transmeta,
  author = 	 {David Keppel},
  title = 	 {Transmeta Crusoe Hardware, Software, and Development},
  booktitle = {Proceedings of the 2nd Workshop on Architectural and
                  Microarchitectural Support for Binary Translation
                  (AMAS-BT)},
  year = 	 2009,
  address = 	 {Austin, Texas},
  month = 	 jun,
  annote = 	 {Martha and I plan to submit a paper to this workshop.}
}

@InProceedings{skaletsky2010dynamic,
  author = 	 {Alex Skaletsky and Tevi Devor and Nadav Chachmon and
                  Robert Cohn and Kim Hazelwood and Vladimir
                  Vladimirov and Moshe Bach},
  title = 	 {Dynamic Program Analysis of {Microsoft} {Windows} Applications},
  booktitle = {Proceedings of the International Symposium on
                  Performance Analysis of Software and Systems
                  (ISPASS)},
  pages = 	 {2--12},
  year = 	 2010,
  address = 	 {White Plains, New York},
  month = 	 mar,
  annote = 	 {Recommended by Martha.  PIN on Windows}
}

@inproceedings{luk2005pin,
    author =     {Chi-Keung Luk and Robert Cohn and Robert Muth and
                  Harish Patil and Artur Klauser and Geoff Lowney and
                  Steven Wallace and Vijay Janapa Reddi and Kim
                  Hazelwood},
    title =      {Pin: Building Customized Program Analysis Tools with Dynamic Instrumentation},
    booktitle =  pldi,
    address =    {Chicago, Illinois},
    pages =      {190--200},
    month =      jun,
    year =       {2005},
    annote =     {A canonical reference for the Pin dynamic binary instrumenter?}
}

@INPROCEEDINGS{clause2007dytan,
    author = {James Clause and Wanchun Li and Ro Orso},
    title = {Dytan: A Generic Dynamic Taint Analysis Framework},
    booktitle = {Proceedings of the International Symposium on
                  Software Testing and Analysis (ISSTA)},
    year = {2007},
    address = {London, England},
    month = jul,
    pages = {196--206},
    annote = {Uses Pin to do taint analysis}
}

@INPROCEEDINGS{olszewski2007judostm,
    author = {Marek Olszewski and Jeremy Cutler and J. Gregory Steffan},
    title = {{JudoSTM}: A Dynamic Binary-Rewriting Approach to
                  Software Transactional Memory},
    booktitle = pact,
    address = {Brasov, Romania},
    pages = {365--375},
    month = sep,
    year = 2007,
    annote = {Uses their Judo (which is JIT-like binary instrumenter
                  like Pin) for STM.  Similar ideas: watch and track
                  the memory operations.  Hash tables for reads and
                  writes.  Points out that stack operations rarely
                  need to be tracked.  Dynamically inserts code that
                  checks memory contents looking for conflicts with
                  other procedures, then "commit" code that actually
                  writes data to memory (a bunch of constant moves!)  Crazy.},
}

@InProceedings{nethercote2007how,
  author = 	 {Nicholas Nethercote and Julian Seward},
  title = 	 {How to Shadow Every Byte of Memory Used by a Program},
  booktitle = {Proceedings of the 3rd international conference on
                  Virtual Execution Environments (VEE)},
  pages = 	 {65--74},
  year = 	 2007,
  address = 	 {San Diego, California},
  month = 	 jun,
  annote = 	 {Something like Pin but not quite}
}

@article{nethercote2003redux,
author = "Nicholas Nethercote and Alan Mycroft",
title = "Redux: A Dynamic Dataflow Tracer",
journal = "Electronic Notes in Theoretical Computer Science",
volume = 89,
number = 2,
pages = "149--170",
year = 2003,
note = "RV '2003, Run-time Verification (Satellite Workshop of CAV '03)",
issn = "1571-0661",
doi = "DOI: 10.1016/S1571-0661(04)81047-8",
url =
                  "http://www.sciencedirect.com/science/article/B75H1-4DDWKTJ-PN/2/c52b80355187c6fb842f5b2f2ac32b8e",
annote = {Very aggressive data behavior extraction -- registers, not
                  just memory.  Part of the binary instrumentation
                  work with Martha.}
}

@InProceedings{asano2007in-place,
  author = 	 {Tetsuo Asano and Shinnya Bitou and Mitsuo Motoki
                  and Nobuaki Usui},
  title = 	 {In-Place Algorithm for Image Rotation},
  booktitle = {Proceedings of the Interational Symposium on
                  Algorithms and Computation (ISAAC)},
  pages = 	 {704--715},
  year = 	 2007,
  volume = 	 4835,
  series = 	 lncs,
  address = 	 {Sendai, Japan},
  month = 	 dec,
  note = 	 {For rotating scanned images in-place by a few degrees}}

@InProceedings{vasudevan2010simple,
  author =       {Nalini Vasudevan  and Kedar Namjoshi and Stephen A. Edwards
},
  title =        {Simple and Fast Biased Locks},
  booktitle =	 pact,
  address =      {Vienna, Austria},
  pages =        {65--74},
  url = {http://www.pactconf.org/},
  doi =          {http://dx.doi.org/10.1145/1854273.1854287},
  month =	 sep,
  year =         2010,
}

@ARTICLE{vasudevan2010buffer,
author=		{Nalini Vasudevan and Stephen A. Edwards},
title=		{Buffer Sharing in Rendezvous Programs},
journal=	transcad,
year=		2010,
month=		oct,
volume=		29,
number=		10,
pages=		{1471--1480},
doi=		{10.1109/TCAD.2010.2052840},
url=		{http://dx.doi.org/10.1109/TCAD.2010.2052840},
ISSN=		{0278-0070}
}


@Book{barendregt1984lambda,
  author = 	 {Hendrik Pieter Barendregt},
  title = 	 {The Lambda Calculus: Its Syntax and Semantics},
  publisher = 	 nh,
  year = 	 1984,
  volume = 	 103,
  series = 	 {Studies in Logic and the Foundations of Mathematics},
  edition = 	 {Revised},
  isbn =         0444875085,
  annote = 	 {Recommended by Simon Peyton-Jones as a much-too-big
                  reference on the Lambda calculus.  Can be found on
                  Wikipedia's Lambda Calculus page.
                  Out of print.
     
                  ftp://ftp.cs.ru.nl/pub/CompMath.Found/lambda.pdf}
}

@InProceedings{augustsson2008strongly,
  author = 	 {Lennart Augustsson},
  title = 	 {Strongly Typed Domain Specific Embedded Languages},
  booktitle = {QCon},
  year = 	 2008,
  address = 	 {San Francisco, California},
  month = 	 nov,
  note = 	 {Presentation},
  url =          {http://qconsf.com/sf2008/file?path=/qcon-sanfran-2008/slides//LennartAugustsson_strongly_typed.pdf},
  annote = 	 {Nice description on how to use Haskell's type system
                  to build robust embedded languages}
}

@InProceedings{lee2009gpu,
  author = 	 {Sean Lee and Manuel M. T. Chakravarty and Vinod Grover and Gabriele Keller},
  title = 	 {{GPU} Kernels as Data-Parallel Array Computations in {Haskell}}, 
  booktitle = {Workshop on Exploiting Parallelism using GPUs and other Hardware-Assisted Methods (EPAHM)},
  year = 	 2009,
  address = 	 {Seattle, Washington},
  month = 	 mar,
  url = {http://www.cse.unsw.edu.au/~chak/papers/gpugen.pdf},
  annote = 	 {Recommended by Satnam}
}

@InProceedings{mainland2010nikola,
  author = 	 {Geoffrey Mainland and Greg Morrisett},
  title = 	 {{Nikola}: Embedding Compiled {GPU} Functions in {Haskell}},
  booktitle = {Proceedings of the ACM SIGPLAN Symposium on Haskell},
  year = 	 2010,
  address = 	 {Baltimore, Maryland},
  month = 	 sep,
  url =          {http://www.eecs.harvard.edu/~mainland/projects/nikola/},  
  annote = 	 {Suggested by Satnam.  Nice discussion of shallow
                  vs. deep embeddings of domain-specific languages
                  (they do a deep one)}
}

@Book{jones1987implementation,
  author = 	 {Simon Peyton Jones},
  title = 	 {The Implementation of Functional Programming Languages},
  publisher = 	 ph,
  year = 	 1987,
  url =          {http://research.microsoft.com/en-us/um/people/simonpj/papers/slpj-book-1987/},
  annote = 	 {Very lengthy book on the topic.}
}

@InProceedings{naylor2010reduceron,
  author = 	 {Matthew Naylor and Colin Runciman},
  title = 	 {The {Reduceron} Reconfigured},
  booktitle =    icfp,
  year = 	 2010,
  address = 	 {Baltimore, Maryland},
  month = 	 sep,
  annote = 	 {Graph reduction in hardware.

                  Disappointing results (still slower than a P4), but
                  interesting.  At least split memory into many
                  regions:  program, heap, reduction stack, update
                  stack, case-table stack, and copy space, each with
                  wide ports and other tricks.

                  Makes unfortunate, unrealistic assumptions about
                  memory latency: assumes everything's on chip with
                  single-cycle latency.

                  "Simple two-space stop-and-copy garbage collector"
                  [Jones and Lins 1996: Algorithms for Automatic
                  Dynamic Memory Management, Wiley 1996.]

                  Uses "template instantiation" instead of the
                  "G-machine" of Peyton Jones 1987.}
}

@Article{douence1998systematic,
  author = 	 {R\'emi Douence and Pascal Fradet},
  title = 	 {A systematic study of functional language implementations},
  journal = 	 toplas,
  year = 	 1998,
  volume = 	 20,
  number = 	 2,
  pages = 	 {344--387},
  month = 	 mar,
  annote = 	 {Mentions jones1992implementing.

                  Describes all functional language implementations as
                  a series of transformations between a sequence of
                  intermediate languages that include sequencing,
                  stacks, heap acces, and so forth.

                  Very sophisticated mathematically.  More technical
                  than practical.  Does not appear to answer questions
                  about specific compilers.}
}

@Book{jones1992implementing,
  author = 	 {Simon Peyton Jones and David Lester},
  title = 	 {Implementing Functional Languages: A tutorial},
  publisher = 	 ph,
  year = 	 1992,
  url =          {http://research.microsoft.com/en-us/um/people/simonpj/papers/pj-lester-book/student.pdf.gz},
  annote = 	 {Out-of-print.  Template instantiation, the
                  G-machine, TIM: the three instruction machine,
                  parallel G-machine, Lambda lifting.

                  Focuses on non-strict languages.}
}

@Article{jones1992implementing-lazy,
  author = 	 {Simon Peyton Jones},
  title = 	 {Implementing lazy functional languages on stock
                  hardware: the Spineless Tagless {G-machine}},
  journal = 	 jfp,
  year = 	 1992,
  volume = 	 2,
  number = 	 2,
  pages = 	 {127--202},
  month = 	 apr,
  annote = 	 {Describes the low-level language that GHC uses (STG) and how it
                  is translated into an imperative language.}
}

@Book{okasaki1999purely,
  author = 	 {Chris Okasaki},
  title = 	 {Purely Functional Data Structures},
  publisher = 	 cup,
  year = 	 1999,
  annote = 	 {He was at Columbia just before I was}
}

@InProceedings{anderson1990compilation,
  author = 	 {Steven Anderson and Paul Hudak},
  title = 	 {Compilation of {Haskell} array comprehensions for
                  scientific computing},
  booktitle = pldi,
  pages = 	 {137--149},
  year = 	 1990,
  address = 	 {White Plains, New York},
  month = 	 jun,
  annote = 	 {FIXME}
}

@Article{launchbury1995state,
  author = 	 {John Launchbury and Simon L. Peyton Jones},
  title = 	 {State in {Haskell}},
  journal = 	 {Lisp and Symbolic Computation},
  year = 	 1995,
  volume = 	 8,
  number = 	 4,
  pages = 	 {293--341},
  month = 	 dec,
  annote = 	 {Part of the trick about arrays in Haskell.  How to describe
                  mutable objects and a terribly clever trick to use the
                  type system to make sure things don't escape.
                  Builds a monad.

                  Underlying implementation uses state-modifying primitives
                  that are encapsulated in higher-level things in Haskell.
                  One allocates an array, another maps a list into it, the
                  last renders it immutable.  So immutable arrays are actually
                  built on mutable ones that use monads to ensure safety.}
}

@InProceedings{gill1993short,
  author = 	 {Andrew Gill and John Launchbury and Simon L. Peyton Jones},
  title = 	 {A Short Cut to Deforestation},
  booktitle = {Proceedings of Functional Programming Languages and
                  Computer Architecture (FPCA)},
  pages = 	 {223--232},
  year = 	 1993,
  address = 	 {Copenhagen, Denmark},
  month = 	 jun,
  annote = 	 {Another part of the trick about arrays in Haskell.
                  This is how to compile away intermediate lists.

                  Basic idea is to look for list producer-consumer pairs and
                  then interleave their code to avoid creating intermediate
                  elements (CONS cells).  Explicitly mentions how list
                  comprehensions are connected to initialize arrays.

                  Seems to have problems with zip, which consumes two lists in
                  parallel.}
}

@Book{osullivan2009real,
  author = 	 {Bryan O'Sullivan and Don Stewart and John Goerzen},
  title = 	 {Real World {Haskell}},
  publisher = 	 ora,
  year = 	 2009,
  url =          {http://book.realworldhaskell.org/},
  annote = 	 {Recommended by Satnam.  Nice profiling and optimization chapter.}
}

@InProceedings{kennedy2007compiling,
  author = 	 {Andrew Kennedy},
  title = 	 {Compiling with continuations, continued},
  booktitle = icfp,
  pages = 	 {177--190},
  year = 	 2007,
  address = 	 {Freiburg, Germany},
  organization = oct,
  annote = 	 {At MSR Cambridge.  His compiler uses a restricted
                  form of CPS, which he advocates because inlining
                  preserves the form.  He isn't doing full lambda
                  lifting, preferring instead to keep free variables
                  around and use the activation records accordingly.

                  "Continuations are named and mandatory (just as
                  every intermediate value is named, so is every
                  control point), are second-class (they're not
                  general lambdas), can represent basic blocks and
                  loops, can be shared (typically, through common
                  continuations of branches), represent exceptional
                  control flow (using double-barrelled CPS), and are
                  typeable (but can be used in untyped form too)."

                  letval x = V in K  binds a value to x.  Function application
                  is only done on variables, so literals are bound like this.

                  let x = #i y in K  selects the ith component of y
                  and binds it to to x.

                  letcont k x = K in L  introduces the local continuation k
                  that can be used within L.

                  Discusses "contification," in which calling a continuation
                  can be reduced to a simple jump.  This occurs, say,
                  when control flow joins at the end of an if
                  statement.  "Functions can be contified when they
                  always return to the same place."

                  
                  }
}

@Article{flanagan2004essence,
  author = 	 {Cormac Flanagan and Amr Sabry and Bruce F. Duba and
                  Matthias Felleisen},
  title = 	 {The Essence of Compiling with Continuations},
  journal = 	 {ACM SIGPLAN Notices},
  year = 	 2004,
  volume = 	 39,
  number = 	 4,
  pages = 	 {502--514},
  month = 	 apr,
  note = 	 {Retrospective; Best of PLDI 1979--1999 special issue},
  annote = 	 {Mentioned in kennedy2007compiling.  How A-normal
                  form compares to continuating passing style (CPS)}
}

@Article{sagiv2002parametric,
  author = 	 {Mooly Sagiv and Thomas Reps and Reinhard Wilhelm},
  title = 	 {Parametric shape analysis via 3-valued logic},
  journal = 	 toplas,
  year = 	 2002,
  volume = 	 24,
  number = 	 3,
  pages = 	 {217--298},
  month = 	 may,
  annote = 	 {"Shape analysis concerns the problem of determining
                  shape invariants for programs that perform
                  destructive updating on dynamically allocated
                  storage."}
}

@Article{hannan1998type-based,
  author = 	 {John Hannan},
  title = 	 {A type-based escape analysis for functional languages},
  journal = 	 jfp,
  year = 	 1998,
  volume = 	 8,
  number = 	 3,
  pages = 	 {239--273},
  month = 	 may,
  annote = 	 {"we believe that implementations can profit from an
                  analysis that detects cases in which stack
                  allocation of a variable is safe"  "We develop a
                  static analysis via a type system to perform an
                  escape analysis in which the type of an expression
                  indicates which variable bindings can safely be
                  allocated on a stack"

	          Distiguishs himself from banerjee1994stackability
                  in that they allow a mixture of stacked and
                  heap-allocated variables in the same program.

                  Target language distinguishes variables that can be
                  stacked from those that cannot be as well as
                  function application in which argument bindings do
                  not escape their scopes.

                  Very detailed deduction rules (with vague
                  explanation) for figuring this out.  Done in an
                  abstract mathematical setting, not obviously
                  possible in the setting of, say, Haskell's types.

                  I had hoped this might give some insight into how
                  variables that *behave* in a stack-like manner could
                  be identified, but I think it's far enough removed
                  to not be very interesting.
                  }
}

@InProceedings{banerjee1994stackability,
  author = 	 {Anindya Banerjee and David A. Schmidt},
  title = 	 {Stackability in the simply-typed call-by-value
                  lambda calculus},
  booktitle = sas,
  pages = 	 {131--146},
  year = 	 1994,
  volume = 	 864,
  series = 	 lncs,
  address = 	 {Namur, Belgium},
  month = 	 sep,
  annote = 	 {A 1998 version in scp?  Appear to be looking for a
                  language that can be executed completely on a stack
                  (i.e., no heap necessary), not what variables can be
                  stacked in a heap setting.

                  His criterion is that at every point in an
                  evaluation tree, the current environment is a
                  superset of an ancestor.}
}

@InProceedings{coutts2007stream,
  author = 	 {Duncan Coutts and Roman Leshchinskiy and Don Stewart},
  title = 	 {Stream fusion: from lists to streams to nothing at all},
  booktitle = icfp,
  pages = 	 {315--326},
  year = 	 2007,
  address = 	 {Freiburg, Germany},
  month = 	 oct,
  url =          {http://www.cse.unsw.edu.au/~dons/streams.html},
  annote = 	 {Suggested by Simon Peyton-Jones

                  For streams, they just define a Stream type, stream
                  and unstream operations, and define

                  map f = unstream . map f . stream

                  Very, very nice abstraction of a pipeline: data type
                  is either Done, Skip, or Yield.  Then there's an
                  easy way to optimize: (stream . unstream) can be
                  optimized away.  Skip is useful for handling
                  multi-rate streams (update state, but don't generate
                  a result).  Almost exactly what you'd do in hardware
                  (valid data, bubble, or an end-of-stream condition).

                  Their stream transformers look like little state
                  machines: usually tail-recursive calls to update
                  state and pass input streams to output streams.

                  Beautiful paper, and well-written.  Looks like it
                  would be an excellent way to describe things in
                  hardware and generate decent code from it.
                    }
}

@InProceedings{hogen1992automatic,
  author = 	 {Guido Hogen and Andrea Kindler and Rita Loogen},
  title = 	 {Automatic parallelization of lazy functional programs},
  booktitle = esop,
  pages = 	 {254--268},
  year = 	 1992,
  volume = 	 582,
  series = 	 lncs,
  address = 	 {Rennes, France},
  month = 	 feb,
  publisher = sv,
  annote = 	 {Uses strictness analysis as part of the compilation
                  process  (lambda lifting, strictness analysis,
                  letpar-based intermediate representation)  Targets
                  an IR like that in loogen1989distributed.}
}

@InProceedings{loogen1989distributed,
  author = 	 {Rita Loogen and Herbert Kuchen and Klaus Indermark
                  and Werner Damm},
  title = 	 {Distributed implementation of programmed graph reduction},
  booktitle = {Proceedings of Parallel Architectures and Languages
                  Europe (PARLE)},
  pages = 	 {136--157},
  year = 	 1989,
  volume = 	 365,
  series = 	 lncs,
  address = 	 {Eindhoven, The Netherlands},
  month = 	 jun,
  url =          {http://dx.doi.org/10.1007/3540512845_37},
  annote = 	 {referenced by hogen1992automatic

                  PAM -- parallel abstract machine.  Implemented it on
                  OCCAM/Transputer system.

                  The usual functional basic (combinators, structured
                  data types, case for pattern matching) and explicit
                  parallelism with "letpar."

                  "Parallel subtasks always correspond to combinator
                  applications," i.e., you only call functions in
                  parallel, not perform arithmetic.

                  Their PAM consists of a bunch of processing elemencts
                  running in parallel connected through some sort of
                  message passing system.  Each processing element
                  consists of a communications processor and the
                  actual graph reducer.  Idea is that the
                  communication processor receives and sends messages
                  while the graph reducer acts on those messages.

                  Basically, you send a function call request to an
                  element.  It eventually returns a result message.

                  The status of each task is a tuple that includes an
                  instruction pointer and a "pending count," which is
                  the number of results for which a spended task is
                  waiting.

                  }
}

@InProceedings{mycroft2000flash,
  author = 	 {Alan Mycroft and Richard W. Sharp},
  title = 	 {The {FLaSH} Project: Resource-aware Synthesis of
                  Declarative Specifications},
  booktitle = iwls,
  year = 	 2000,
  address = 	 {Dana Point, California},
  month = 	 may,
  annote = 	 {Mentioned by Alan.  Basically, they rail first
                  against inlining every function (e.g., ELLA's
                  semantics) and instead say every call accesses an arbiter
                  that controls access to the shared (function) resource.   They
                  have additional machinery to see when a clever arbiter is
                  not necessary due to sequential constraints that ensure
                  one one call site may ever be active at once.}
}

@InProceedings{mycroft2001hardware,
  author = 	 {Alan Mycroft and Richard W. Sharp},
  title = 	 {Hardware Synthesis using {SAFL} and Application to
                  Processor Design},
  booktitle = charme,
  pages = 	 {13--39},
  year = 	 2001,
  number = 	 2144,
  series = 	 lncs,
  address = 	 {Livingston, Scotland},
  month = 	 sep,
  annote = 	 {Mentioned by Alan}
}

@Article{jones2001expressive,
  author = 	 {Neil D. Jones},
  title = 	 {The expressive power of higher-order types or, life
                  without {CONS}},
  journal = 	 jfp,
  year = 	 2001,
  volume = 	 11,
  number = 	 1,
  pages = 	 {55-94},
  month = 	 jan,
  doi =          {10.1017/S0956796800003889},
  annote = 	 {Mentioned in one of Mycroft's papers.  Theoretical
                  complexity results.}
}

@InProceedings{wadler1990linear,
  author = 	 {Phil Wadler},
  title = 	 {Linear Types Can Change the World!},
  booktitle = {Proceedings of IFIP TC 2 Working Conference on
                  Programming Concepts and Methods},
  year = 	 1990,
  editor = 	 {M. Broy and C. Jones},
  address = 	 {Sea of Galiee, Isreal},
  month = 	 apr,
  publisher = nh,
  annote = 	 {Linear types correspond to state that can't be
                  duplicated or destroyed accidentally.}
}

@InProceedings{marlow2010seq,
  author = 	 {Simon Marlow and Patrick Maier and Hans-Wolfgang
                  Loidl and Mustafa K Aswad and Phil Trinder},
  title = 	 {Seq no more: Better Strategies for {Parallel} {Haskell}},
  booktitle = {Proceedings of the Haskell Symposium},
  year = 	 2010,
  address = 	 {Baltimore, Maryland},
  month = 	 sep,
  annote = 	 {Accepted?  Satnam & Simon recommended this as a good
                  reference on parallel strategies.

                  Haskell's lazy nature makes it possible for these strategies
                  control to what degree expressions are evaluated and in
                  what order.  This is how they've cast the "parallelism in
                  Haskell" problem: how to control evaluation order and
                  avoiding space leaks.

                  Problem is that "throwing the expression to the winds" makes
                  it unclear what to garbage collect.

                  So they introduce a new mecahnism in which expressions
                  are kept around for evaluation.

                  type Strategy a = a -> Eval a

                  There's a really interesting idea here: how to separate
                  an evaluation strategy from the function.  Functional things
                  like map, etc. are a step in this direction in a sequential
                  setting; this is a proposal for one in a parallel setting.

                  Have a "rolling buffer" strategy that evaluates n
                  things in parallel.  Generates a list whose elements
                  have this property.

                  x `par` y is implemented by just putting a thunk for
                  x on the "can be evaluated" heap

                  x `pseq` y is just "case x of _ -> y," which forces
                  the (lazy) evaluation of x before starting the
                  evaluation of y.
                  }
}

@InProceedings{williamson1996synthesis,
  author = 	 {Michael C. Williamson and Edward A. Lee},
  title = 	 {Synthesis of parallel hardware implementations from
                  synchronous dataflow graph specifications},
  booktitle = {Proceedings of the Asilomar Conference
		 on Signals, Systems \& Computers},
  pages = 	 {1340--1343 vol.\ 2},
  year = 	 1996,
  address = 	 {Pacific Grove, California},
  month = 	 nov,
  annote = 	 {Mike's stuff that eventually turned into his thesis.
                  Specifically deals with multirate SDF.  Rather
                  vague.  Seems to construct a static schedule then
                  execute it.  Places registers between blocks and
                  schedules their loading.}
}

@Article{jung2002efficient,
  author = 	 {Hyunuk Jung and Kangnyoung Lee and Soonhoi Ha},
  title = 	 {Efficient hardware controller synthesis for
                  synchronous dataflow graph in system level design},
  journal = 	 transvlsi,
  year = 	 2002,
  volume = 	 10,
  number = 	 4,
  pages = 	 {423--428},
  month = 	 aug,
  annote = 	 {Cites williamson1996synthesis.  Doesn't seem to be
                  cited by anybody else.  Mentions the GRAPE stuff
                  from Lauwereins et al.  Central trick in their work
                  is to use counters for part of the control mechanism
                  but also allow handshaking signals.  Not clear that
                  they handle all graph structures.}  
}

@Article{janneck2009synthesizing,
  author = 	 {J\"orn W. Janneck and Ian D. Miller and David
                  B. Parlour and Ghislain Roquier and Matthieu Wipliez
                  Micka\"el Raulet},
  title = 	 {Synthesizing Hardware from Dataflow Programs:
		  An {MPEG-4} Simple Profile Decoder Case Study},
  journal = 	 {Journal of Signal Processing Systems},
  year = 	 2009,
  doi =          {10.1007/s11265-009-0397-5},
  month = 	 jul,
  note = 	 {Online},
  annote = 	 {Translating his Cal actor language into hardware on
                  FPGAs.  Starting from the functional description,
                  they instantiate everything, propagate constants,
                  then try to statically schedule as much as they can,
                  then optimize memory access by looking at
                  parallelism, etc. (trying to use multi-port
                  memories), then pipeline and retime things.

                  Doesn't include main details about all of this;
                  mostly about what they did in the MPEG decoder system.}
}

@InProceedings{boulytchev2001empirical,
  author = 	 {Dmitry Boulytchev and Dmitry Lomov},
  title = 	 {An Empirical Study of Retargetable Compilers},
  booktitle = {Perspectives of System Informatics},
  pages = 	 {238--335},
  year = 	 2001,
  volume = 	 2244,
  series = 	 lncs,
  address = 	 {Akademgorodok, Novosibirsk, Russia},
  month = 	 jul,
  annote = 	 {Found randomly.  Unimpressive, but useful bibliography?}
}

@InProceedings{leupers1997retargetable,
  author = 	 {Rainer Leupers and Peter Marwedel},
  title = 	 {Retargetable Generation of Code Selectors from {HDL}
                  Processor Models},
  booktitle = {Proceedings of the European Design and Test
                  Conference (ED\&TC)},
  pages = 	 {140--144},
  year = 	 1997,
  address = 	 {Paris, France},
  month = 	 mar,
  annote = 	 {Cited by boulytchev2001empirical.  Nice
                  bibliography, although rather old.}
}

@Misc{nilsson2000porting,
  author = 	 {Hans-Peter Nilsson},
  title = 	 {Porting {GCC} for Dunces},
  howpublished = {Online: http://ftp.axis.se/pub/users/hp/pgccfd/},
  month = 	 may,
  year = 	 2000,
  annote = 	 {Was a Master's thesis, but got the FSF stamp of approval.}
}

@InProceedings{azizi2010energy-performance,
  author = 	 {Omid Azizi and Aqeel Mahesri and Benjamin C. Lee and
                  Sanjay J. Patel and Mark Horowitz},
  title = 	 {Energy-performance tradeoffs in processor
                  architecture and circuit design: a marginal cost
                  analysis},
  booktitle = {Proceedings of the International Symposium on
                  Computer Architecture (ISCA)},
  pages = 	 {26--36},
  year = 	 2010,
  address = 	 {Saint-Malo, France},
  month = 	 jun,
  annote =       {Martha mentioned this for our TSIP proposal},
}

@InProceedings{tuck2004deterministic,
  author = 	 {Nathan Tuck and Timothy Sherwood and Brad Calder and
                  George Varghese},
  title = 	 {Deterministic memory-efficient string matching
                  algorithms for intrusion detection},
  booktitle = infocom,
  pages = 	 {2628--2639},
  year = 	 2004,
  volume = 	 4,
  address = 	 {Hong Kong, China},
  month = 	 nov,
  doi =          {http://dx.doi.org/10.1109/INFCOM.2004.1354682},
  annote = 	 {From Jia: DPI stuff.  Talks about Snort and better
                  data structures for the search tree (variations on
                  Aho-Corasick)}
}

@InProceedings{sidhu2001fast,
  author = 	 {Reetinder Sidhu and Viktor K. Prasanna},
  title = 	 {Fast Regular Expression Matching using {FPGAs}},
  booktitle = fccm,
  pages = 	 {227--238},
  year = 	 2001,
  address = 	 {Rohnert Park, California},
  month = 	 apr,
  doi =          {10.1109/FPGM.2001.184266},
  annote = 	 {From Jia: DPI stuff.  NFAs directly in hardware.
                  Very FPGA-specific.}
}

@Article{dharmapurikar2004deep,
author = {Sarang Dharmapurikar and Praveen Krishnamurthy and Todd
                  S. Sproull and John W. Lockwood},
title = {Deep Packet Inspection using Parallel Bloom Filters},   
  journal = 	 ieeemicro,
  year = 	 2004,
  volume = 	 24,
  number = 	 1,
  pages = 	 {52--61},
  month = 	 {January/February},
  doi =          {http://doi.ieeecomputersociety.org/10.1109/MM.2004.1268997},
  annote = 	 {From Jia: DPI stuff.  Multiple hash functions
                  applied to strings.  Nice parallel algorithm.}
}

@InProceedings{sourdis2004pre-decoded,
  author = 	 {Ioannis Sourdis and Dionisios Pnevmatikatos},
  title = 	 {Pre-decoded {CAMs} for efficient and high-speed
                  {NIDS} pattern matching},
  booktitle = fccm,
  pages = 	 {258--267},
  year = 	 2004,
  address = 	 {Napa, California},
  month = 	 apr,
  doi =          {http://dx.doi.org/10.1109/FCCM.2004.46},
  annote = 	 {From Jia: DPI stuff.  Explicit comparators on FPGAs.
                  Using Xilinx 16-bit shift registers (implemented
                  using the lookup tables; probably the FPGA's loading
                  mechanism).  Interesting, provocative use of FPGA hardware.}
}

@InProceedings{tan2005high,
  author = 	 {Lin Tan and Timothy Sherwood},
  title = 	 {A High Throughput String Matching Architecture for
                  Intrusion Detection and Prevention},
  booktitle = isca,
  pages = 	 {112--122},
  year = 	 2005,
  address = 	 {Madison, Wisconsin},
  month = 	 jun,
  doi = {10.1109/ISCA.2005.5},
  annote = 	 {From Jia: DPI stuff.  Partitioning Aho-Corasick into
                  multiple, parallel state machines.  Nicely written paper.}
}

@InProceedings{kumar2006algorithms,
  author = 	 {Sailesh Kumar and Sarang Dharmapurikar and Fang Yu
                  and Patrick Crowley and Jonathan S. Turner},
  title = 	 {Algorithms to accelerate multiple regular
                  expressions matching for deep packet inspection},
  booktitle =  sigcomm,
  pages = 	 {339--350},
  year = 	 2006,
  address = 	 {Pisa, Italy},
  month = 	 sep,
  doi =          {http://doi.acm.org/10.1145/1159913.1159952},
  annote = 	 {From Jia: DPI stuff.  Uses "Delayed input DFAs"
                  Basically, if you don't match a transition, follow a
                  default arc to another state and then try again.
                  Not FPGA-specific, but relevant.}
}

@InProceedings{kumar2007curing,
  author = 	 {Sailesh Kumar and Balakrishnan Chandrasekaran and
                  Jonathan S. Turner and George Varghese},
  title = 	 {Curing regular expressions matching algorithms from
                  insomnia, amnesia, and acalculia},
  booktitle = ancs,
  pages = 	 {155--164},
  year = 	 2007,
  address = 	 {Orlando, Florida},
  month = 	 dec,
  doi =          {http://doi.acm.org/10.1145/1323548.1323574},
  annote = 	 {From Jia: DPI stuff.  Proposes something richer than
                  a DFA.  Adds some form of history and counting.}
}

@InProceedings{becchi2007memory-efficient,
  author = 	 {Michela Becchi and Srihari Cadambi},
  title = 	 {Memory-efficient regular expression search using
                  state merging},
  booktitle = infocom,
  pages = 	 {1064--1072},
  year = 	 2007,
  address = 	 {Anchorage, Alaska},
  month = 	 may,
  doi =          {http://dx.doi.org/10.1109/INFCOM.2007.128},
  annote = 	 {From Jia: DPI stuff.  Merging states to compact
                  DFAs, but not in the usual way.  Adds much more
                  complex transition labels.  Also does bitmaps, etc.}
}

@InProceedings{smith2008deflating,
  author = 	 {Randy Smith and Cristian Estan and Somesh Jha and
                  Shijin Kong},
  title = 	 {Deflating the big bang: Fast and scalable deep
                  packet inspection with extended finite automata},
  booktitle = sigcomm,
  pages = 	 {207--218},
  year = 	 2008,
  address = 	 {Seattle, Washington},
  doi =          {http://doi.acm.org/10.1145/1402958.1402983},
  annote = 	 {From Jia: DPI stuff.  Adding extra variables, then
                  simplifying the logic to mantain them.}
}

@InProceedings{song2008memory,
  author = 	 {Tian Song and Wei Zhang and Dongsheng Wang and Yibo Xue},
  title = 	 {A Memory Efficient Multiple Pattern Matching
                  Architecture for Network Security},
  booktitle = infocom,
  pages = 	 {673--681},
  year = 	 2008,
  address = 	 {Phoenix, Arizona},
  month = 	 apr,
  annote = 	 {From Jia: DPI stuff.  "Cached deterministic finite
                  automata"  Another way of introducing extra
                  variables that are updates as the DFA is traversed.}
}

@Article{baeza-yates1992new,
  author = 	 {Ricardo Baeza-Yates and Gaston H. Gonnet},
  title = 	 {A new approach to text searching},
  journal = 	 cacm,
  year = 	 1992,
  volume = 	 35,
  number = 	 10,
  pages = 	 {74--82},
  month = 	 oct,
  doi =          {http://doi.acm.org/10.1145/135239.135243},
  annote = 	 {From Jia: DPI stuff.  Shift-and-add algorithm; a
                  sort of hash function.  Accommodates don't-care
                  characters, too.  Cute little algorithm.}
}

@inproceedings{kiyokuni2002lock,
 author = {Kawachiya, Kiyokuni and Koseki, Akira and Onodera, Tamiya},
 title = {Lock reservation: Java locks can mostly do without atomic operations},
 booktitle = {OOPSLA '02: Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
 year = {2002},
 isbn = {1-58113-471-1},
 pages = {130--141},
 location = {Seattle, Washington, USA},
 doi = {http://doi.acm.org/10.1145/582419.582433},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{onodera2004lock,
  author    = {Tamiya Onodera and
               Kiyokuni Kawachiya and
               Akira Koseki},
  title     = {Lock Reservation for {Java} Reconsidered},
  booktitle = ecoop,
  year      = {2004},
  pages     = {559-583},
  ee        = {http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=3086{\&}spage=559},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{holzmann1997model,
    author = "Gerard J. Holzmann",
    title = "The Model Checker {SPIN}",
    journal = "Software Engineering",
    volume = "23",
    number = "5",
    pages = "279-295",
    year = "1997",
    url = "citeseer.ist.psu.edu/holzmann97model.html" 
}

@article{russell2006eliminating,
 author = {Russell, Kenneth and Detlefs, David},
 title = {Eliminating synchronization-related atomic operations with biased locking and bulk rebiasing},
 journal = {SIGPLAN Not.},
 volume = {41},
 number = {10},
 year = {2006},
 issn = {0362-1340},
 pages = {263--272},
 doi = {http://doi.acm.org/10.1145/1167515.1167496},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{bacon1998thin,
 author = {Bacon, David F. and Konuru, Ravi and Murthy, Chet and Serrano, Mauricio},
 title = {Thin locks: featherweight synchronization for Java},
 booktitle = {PLDI '98: Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation},
 year = {1998},
 isbn = {0-89791-987-4},
 pages = {258--268},
 location = {Montreal, Quebec, Canada},
 doi = {http://doi.acm.org/10.1145/277650.277734},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{bacon2004thin,
 author = {Bacon, David F. and Konuru, Ravi and Murthy, Chet and Serrano, Mauricio J.},
 title = {Thin locks: featherweight Synchronization for Java},
 journal = {SIGPLAN Not.},
 volume = {39},
 number = {4},
 year = {2004},
 issn = {0362-1340},
 pages = {583--595},
 doi = {http://doi.acm.org/10.1145/989393.989452},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@Misc{bacon2000method,
 author = {David Bacon and Stephen Fink},
 title =  {Method and Apparatus to Provide Concurrency Control Over Objects Without Atomic Operations on Non-Shared Objects},
 howpublished = {US Patent Docket No. YO999-614},
 mon = {August},
 year = {2000},
}

@article{mellor-crummey1991algorithms,
 author = {Mellor-Crummey, John M. and Scott, Michael L.},
 title = {Algorithms for scalable synchronization on shared-memory multiprocessors},
 journal = {ACM Trans. Comput. Syst.},
 volume = {9},
 number = {1},
 year = {1991},
 issn = {0734-2071},
 pages = {21--65},
 doi = {http://doi.acm.org/10.1145/103727.103729},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{lamport1987fast,
 author = {Lamport, Leslie},
 title = {A fast mutual exclusion algorithm},
 journal = {ACM Trans. Comput. Syst.},
 volume = {5},
 number = {1},
 year = {1987},
 issn = {0734-2071},
 pages = {1--11},
 doi = {http://doi.acm.org/10.1145/7351.7352},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{peterson1981myths,
author = {G. L. Peterson},
title = {Myths About the Mutual Exclusion Problem},
journal = {IPL 12(3)},
year = {1981},
pages = {115--116}
}

@article{dekker,
 author = {Dijkstra, Edsger W.},
 title = {Cooperating sequential processes},
 year = {1965},
 journal = {Technological University, Eindhoven, The Netherlands, September 1965. Reprinted in Programming Languages, F. Genuys, Ed., Academic Press, New York, 1968, 43-112}, 
}


@Misc{intelmanual,
    title = {{Intel IA-32 Architecture Software Developer's Manual, vol. 3A}},
    year = {2009},
    annote = {\texttt{http://www.intel.com/products/processor/manuals/}}
}

@inproceedings{1995woosplash,
 author = {Woo, Steven Cameron and Ohara, Moriyoshi and Torrie, Evan and Singh, Jaswinder Pal and Gupta, Anoop},
 title = {The {SPLASH-2} programs: characterization and methodological considerations},
 booktitle = {ISCA '95: Proceedings of the 22nd Annual International Symposium on Computer architecture},
 year = {1995},
 isbn = {0-89791-698-0},
 pages = {24--36},
 location = {S. Margherita Ligure, Italy},
 doi = {http://doi.acm.org/10.1145/223982.223990},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{burckhardt2007checkfence,
 author = {Burckhardt, Sebastian and Alur, Rajeev and Martin, Milo M. K.},
 title = {CheckFence: checking consistency of concurrent data types on relaxed memory models},
 booktitle = {PLDI '07: Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation},
 year = {2007},
 isbn = {978-1-59593-633-2},
 pages = {12--21},
 location = {San Diego, California, USA},
 doi = {http://doi.acm.org/10.1145/1250734.1250737},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@TechReport{dice-asymmetric-dekker-2001,
  author = 		 {Dave Dice and Hui Huang and Mingyao Yang},   
  title = 		 {Asymmetric Dekker Synchronization},
  institution =  {Sun Microsystems},
  note = {http://home.comcast.net/~pjbishop/Dave},
  year = 		 2001}



@TechReport{dice-moir-scherer-2006,
  author = 		 {Dave Dice and Mark Moir and William Scherer},
  title = 		 {Quickly Reacquirable Locks},
  institution =  {Sun Microsystems},
  note = 	 {http://home.comcast.net/~pjbishop/Dave},
  year = 		 2003}

@Article{aho1975efficient,
  author = 	 {Alfred V. Aho and Margaret J. Corasick},
  title = 	 {Efficient string matching: an aid to bibliographic search},
  journal = 	 cacm,
  year = 	 1975,
  volume = 	 18,
  number = 	 6,
  pages = 	 {333--340},
  month = 	 jun,
  annote = 	 {Aho-Corasick algorithm for pattern matching;
                  well-known.  Build an FSM that walks forward through
                  the text.  Main trick: limited "backtracking": when
                  a non-matching character is encoutered, don't always
                  return to the initial state.}
}

@Book{jurafsky2008speech,
  author = 	 {Daniel Jurafsky and James H. Martin},
  title = 	 {Speech and Language Processing},
  publisher = 	 ph,
  year = 	 2008,
  edition = 	 {Second},
  annote = 	 {Used by Kathy and others in NLP classes.}
}

@Book{koopman1989stack,
  author = 	 {Phil Koopman},
  title = 	 {Stack Computers: The New Wave},
  publisher = 	 {Halsted Press},
  year = 	 1989,
  annote =       {Read years ago at Caltech while working on the FORTH chip},
  url =          {http://www.ece.cmu.edu/~koopman/stack_computers/index.html},
}

@Article{patterson2010trouble,
  author = 	 {David Patterson},
  title = 	 {The Trouble with Multi-core},
  journal = 	 {IEEE Spectrum},
  year = 	 2010,
  volume = 	 47,
  number = 	 7,
  pages = 	 {28--32,52--53},
  month = 	 jul,
  annote = 	 {Nice story on how the architecture community gave up
                  and gave us unprogrammable multicore processors.}
}

@inproceedings{olivier2006uts,
  author    = {Stephen Olivier and
               Jun Huan and
               Jinze Liu and
               Jan Prins and
               James Dinan and
               P. Sadayappan and
               Chau-Wen Tseng},
  title     = {UTS: An Unbalanced Tree Search Benchmark},
  booktitle = {LCPC},
  year      = {2006},
  pages     = {235-250},
  ee        = {http://dx.doi.org/10.1007/978-3-540-72521-3_18},
  crossref  = {DBLP:conf/lcpc/2006},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@Article{adl-tabatabai1998fast,
  author = 	 {Ali-Reza Adl-Tabatabai and Micha\l{} Cierniak and
                  Guei-Yuan Lueh and Vishesh M. Parikh and James M. Stichnoth},
  title = 	 {Fast, effective code generation in a just-in-time
                  {Java} compiler},
  journal = 	 {SIGPLAN Notices},
  year = 	 1998,
  volume = 	 33,
  number = 	 5,
  pages = 	 {280--290},
  month = 	 may,
  annote = 	 {JIT stuff.  Intel's JIT compiler for Java.  Shipped
                  with VTune for Java 2.5.  Nice discussion of
                  architecture, but only comparisons with other JITs.}
}

@Article{reinholtz2000java,
  author = 	 {Kirk Reinholtz},
  title = 	 {Java will be faster than {C++}},
  journal = 	 {SIGPLAN Notices},
  year = 	 2000,
  volume = 	 35,
  number = 	 2,
  pages = 	 {25--28},
  month = 	 feb,
  annote = 	 {Arguing for fast JITs because of the availability of
                  dynamic information.  No bibliography!  Not cited much.}
}

@InProceedings{bull2001benchmarking,
  author = 	 {J. M. Bull and L. A. Smith and L. Pottage and R. Freeman},
  title = 	 {Benchmarking {Java} against {C} and {Fortran} for
                  scientific applications},
  booktitle = {Proceedings of the Java Grande Conferece},
  pages = 	 {97--105},
  year = 	 2001,
  address = 	 {Palo Alto, California},
  month = 	 jun,
  annote = 	 {Quite a range of numbers, but pretty small overall:
                  1.2 - 5, with most in the 1.5 - 2 range.  All micro
                  scientific benchmarks (FFT, LU decomposition,
                  etc.).  Well-cited.}
}

@TechReport{fitzgerald1999marmot,
  author = 	 {Robert Fitzgerald and Todd B. Knoblock and Erik Ruf
                  and Bjarne Steensgaard and and David Tarditi},
  title = 	 {{Marmot}: An Optimizing Compiler for {Java}},
  institution =  {Microsoft Research},
  year = 	 1999,
  number = 	 {MSR--TR--99--33},
  address = 	 {Redmond, Washington},
  month = 	 jun,
  annote = 	 {Ahead-of-time compiler for Java, compared to C++
                  compiler, JIT, etc.  Does not implement dynamic
                  class loading.

                  "The C++ versions are 1.03 to 1.38 times the speed
                  of the Marmot versions with a median of 1.13"

                  Comparison with the MS JVM (JIT) -- ranges from 10%
                  (1/10th the speed) to 80% (20% slower)}
}

@Article{dasilva2005experimental,
  author = 	 {Anderson Faustino {da Silva} and Vitor Santos Costa},
  title = 	 {An Experimental Evaluation of {JAVA} {JIT} Technology},
  journal = 	 {Jornal of Universal Computer Science},
  year = 	 2005,
  volume = 	 11,
  number = 	 7,
  pages = 	 {1291--1309},
  month = 	 jul,
  doi =          {http://dx.doi.org/10.3217/jucs-011-07-1291},
  annote = 	 {Questionable journal, but suggests Sun's HotSpot
                  generates code of comparable speed as gcj.}
}

@InProceedings{duval2005writing,
  author = 	 {Philip Duval and Josef Wilgen},
  title = 	 {Writing {TINE} Servers in {Java}},
  booktitle = {Proceedings of the International Workshop on
                  Personal Computer and Particle Accelator Controls (PCaPAC)},
  year = 	 2005,
  address = 	 {Hayama, Japan},
  month = 	 mar,
  url =          {http://conference.kek.jp/pcapac2005/},
  annote = 	 {Questionable: a paper at a workshop, but JVM vs gcj}
}

@InProceedings{dennis1997parallel,
  author = 	 {Jack B. Dennis},
  title = 	 {A parallel program execution model supporting modular software construction},
  booktitle = {Proceedings of the Third Working Conference on
                  Massively Parallel Programming Models (MPPM)},
  pages = 	 {50--60},
  year = 	 1997,
  address = 	 {London, UK},
  month = 	 nov,
  doi = {http://dx.doi.org/10.1109/MPPM.1997.715961},
  annote = 	 {Part of the Fresh Breeze project.

                  http://csg.csail.mit.edu/Users/dennis/csg-dennis.htm
                  On his webpage, "Recognizing that the functional
                  programming style provides a medium for expressing
                  parallelism without violating principles of modular
                  software construction, the group has focused on
                  computer architecture concepts and principles that
                  offer the ability to execute efficiently programs
                  expressed in the functional style."
          
                  Employs simultaneous multithreading (Eggers et al.,
                  ISCA 1995), a 64-bit global shared address space,
                  and no memory update; cycle-free heap to get rid of
                  cache coherence problems.



                 }
}

@INPROCEEDINGS{dennis2008fresh,
author={Jack B. Dennis},
booktitle= ipdps,
title={The {Fresh Breeze} project: A multi-core chip supporting
                  composable parallel programming},
year=2008,
month=apr,
address = {Miami, Florida},
pages={1--5},
doi={10.1109/IPDPS.2008.4536391},
ISSN={1530-2075},
annote = {Part of the Fresh Breeze project.}
}

@InProceedings{papadopoulos1990monsoon,
  author = 	 {Gregory M. Papadopoulos and David E. Culler},
  title = 	 {Monsoon: an explicit token-store architecture},
  booktitle = isca,
  pages = 	 {82--91},
  year = 	 1990,
  address = 	 {Seattle, Washington},
  month = 	 jun,
  doi = {http://doi.acm.org/10.1145/325164.325117},
  annote = 	 {Monsoon}
}

@InProceedings{dennis1998general,
  author = 	 {Jack B. Dennis},
  title = 	 {General Parallel Computation can be Performed with a
                  Cycle-Free Heap},
  booktitle = pact,
  pages = 	 {96--103},
  year = 	 1998,
  address = 	 {Paris, France},
  month = 	 oct,
  doi =          {http://dx.doi.org/10.1109/PACT.1998.727177},
  annote = 	 {Part of the Fresh Breeze work}
}

@Article{dennis2003fresh,
  author = 	 {Jack B. Dennis},
  title = 	 {{Fresh Breeze}: a multiprocessor chip architecture
                  guided by modular programming principles},
  journal = 	 {ACM SIGARCH Computer Architecture News},
  year = 	 2003,
  volume = 	 31,
  number = 	 1,
  pages = 	 {7--15},
  month = 	 mar,
  annote = 	 {Part of the Fresh Breeze project.}
}

@Article{denning2010resurgence,
  author = 	 {Peter J. Denning and Jack B. Dennis},
  title = 	 {The Resurgence of Parallelism},
  journal = 	 cacm,
  year = 	 2010,
  volume = 	 53,
  number = 	 6,
  pages = 	 {30--32},
  month = 	 jun,
  doi =          {10.1145/1743546.1743560},
  annote = 	 {Fantastic summary of how things have gone in
                  parallelism.  Starts with the Burroughs B5000 (a
                  stack-based processor), talks
                  about how assembly-style minicomputer, then
                  microcomputers, essentially took over the mainframe
                  world, leaving parallelism on the side.  Arvind's Monsoon
                  project was based on Haskel; Lawrence Livermore
                  worked with Sisal, derived from Val.

                  Distinguishes determinate computation (in the Kahn
                  sense) from deterministic, in which tasks would be
                  performed in the same order.  SHIM's central point
                  is determinacy, not determinism.

                  Argues for write-once memory to solve the cache
                  coherence problem.

                  Nice old bibliography.
                  },
}

@InProceedings{mishra2006tartan,
  author = 	 {Mahim Mishra and Timothy J. Callahan and Tiberiu
                  Chelcea and Girish Venkataramani and Mihai Budiu and
                  Seth C. Goldstein},
  title = 	 {Tartan: Evaluating Spatial Computation for Whole
                  Program Execution},
  booktitle = asplos,
  pages = 	 {163--174},
  year = 	 2006,
  address = 	 {San Jose, California},
  month = 	 oct,
  annote = 	 {Part of Seth's Phoenix project.  Cites their 2004
                  ASPLOS paper on Spatial Computing.

                  Architecture consisting of a general-purpose
                  processor and a reconfigurable fabric communicating
                  through a shared L1 D-cache backed by L2 and main
                  memory.

                  Lots of experiments on a simulator.

                  Extensive bibliography.}
}

@InProceedings{budiu2004spatial,
  author = 	 {Mihai Budiu and Girish Venkataramani and Tiberiu
                  Chelcea and Seth Copen Goldstein},
  title = 	 {Spatial Computation},
  booktitle = asplos,
  pages = 	 {14--26},
  year = 	 2004,
  address = 	 {Boston, Massachusetts},
  month = 	 oct,
  annote = 	 {Part of Seth's Phoenix project.

                  There's a large, complicated network for streaming
                  memory requests to and from the memory system, but
                  they essentially assume a large, monolithic memory
                  hierarchy.}
}

@InProceedings{venkataramani2005hls,
  author = 	 {Girish Venkataramani and Tiberiu Chelcea and Seth Copen Goldstein},
  title = 	 {{HLS} Support for Unconstrained Memory Accesses},
  booktitle = iwls,
  year = 	 2005,
  address = 	 {Lake Arrowhead, California},
  month = 	 jun,
  annote = 	 {Part of Seth's Phoenix project.  Starts from C,
                  guarantees something like sequential memory
                  consistency.  Objective is to avoid having to do
                  completely static disambiguation, assuming that
                  pointer analysis can't do the job completely.

                  Nice, relevant related work section, e.g., on Memory
                  size estimation and mapping.

                  P. G. Kjeldsberg, F. Catthoor, et al. Storage
                  requirement estimation for optimized design of data
                  intensive applications. ACM
                  Trans. Des. Autom. Electron. Syst., 9(2):133-158,
                  2004.

                  S. Y. Ohm, F. J. Kurdahi, et al. A comprehensive
                  estimation technique for high-level synthesis. In
                  ISSS '95: Proceedings of the 8th international
                  symposium on System synthesis, pages 122-127. ACM
                  Press, 1995

                  I. M. Verbauwhede, C. J. Scheers, et al. Memory
                  estimation for high level synthesis. In DAC '94:
                  Proceedings of the 31st annual conference on Design
                  automation, pages 143-148. ACM Press, 1994.

                 Y. Zhao and S. Malik. Exact memory size estimation
                  for array computations without loop unrolling. In
                  DAC '99: Proceedings of the 36th ACM/IEEE conference
                  on Design automation, pages 811-816. ACM Press,
                  1999.}
}

@Article{venkataramani2006hardware,
  author = 	 {Girish Venkataramani and Tobias Bjerregaard and
                  Tiberiu Chelcea and Seth Copen Goldstein},
  title = 	 {Hardware Compilation of Application-Specific Memory Access Interconnect},
  journal = 	 transcad,
  year = 	 2006,
  volume = 	 25,
  number = 	 5,
  pages = 	 {756--771},
  month = 	 may,
  annote = 	 {Part of Seth's Phoenix project}
}

@Article{kjeldsberg2004storage,
  author = 	 {Per Gunnar Kjeldsberg and Francky Catthoor and Einar
                  J. Aas},
  title = 	 {Storage requirement estimation for optimized design
                  of data intensive applications},
  journal = 	 todaes,
  year = 	 2004,
  volume = 	 9,
  number = 	 2,
  pages = 	 {133--158},
  month = 	 apr,
  annote = 	 {Cited by Goldstein et al.  ACM won't let me download
                  it!}
}

@InProceedings{thomas2007domain,
  author = 	 {David B. Thomas and Wayne Luk},
  title = 	 {A Domain Specific Language for Reconfigurable
                  Path-based {Monte} {Carlo} Simulations},
  booktitle = fpt,
  pages = 	 {97--104},
  year = 	 2007,
  address = 	 {Kitakyushu, Japan},
  month = 	 dec,
  annote = 	 {Satnam found this: Describes Contessa, a hardware
                  synthesis language that generates deeply pipelined
                  Monte Carlo simulator.}
}

@Article{sklyarov2004fpga,
  author = 	 {Valery Sklyarov},
  title = 	 {{FPGA}-based implementation of recursive algorithms},
  journal = 	 {Microprocessors and Microsystems},
  year = 	 2004,
  volume = 	 28,
  number = 	 {5--6},
  pages = 	 {197--211},
  month = 	 aug,
  doi =          {http://dx.doi.org/10.1016/j.micpro.2004.03.008},
  annote = 	 {Satnam found this.}
}

@InProceedings{ferizis2006mapping,
  author = 	 {George Ferizis and Hossam El Gindy},
  title = 	 {Mapping Recursive Functions to Reconfigurable Hardware},
  booktitle = fpl,
  pages = 	 {1--6},
  year = 	 2006,
  address = 	 {Madrid, Spain},
  month = 	 aug,
  doi =          {http://dx.doi.org/10.1109/FPL.2006.311226},
  annote = 	 {Satnam found this.  Unrolling recursive functions on
                  an FPGA without using a stack.}
}

@InProceedings{ohm1995comprehensive,
  author = 	 {Seong Y. Ohm and Fadi J. Kurdahi and Nikil Dutt and Min Xu},
  title = 	 {A comprehensive estimation technique for high-level synthesis},
  booktitle = isss,
  pages = 	 {122--127},
  year = 	 1995,
  address = 	 {Cannes, France},
  doi =          {http://dx.doi.org/10.1145/224486.224528},
  annote = 	 {Referenced}
}

@InProceedings{verbauwhede1995memory,
  author = 	 {Ingrid M. Verbauwhede and Chris J. Scheers and Jan M. Rabaey},
  title = 	 {Memory Estimation for High Level Synthesis},
  booktitle = dac95,
  pages = 	 {143--148},
  year = 	 1995,
  address = 	 dac95a,
  month = 	 jun,
  doi =          {http://dx.doi.org/10.1109/DAC.1994.204087},
  annote = 	 {For DSP algorithms only}
}

@InProceedings{zhao1999exact,
  author = 	 {Yinh Zhao and Sharad Malik},
  title = 	 {Exact memory size estimation for array computations
                  without loop unrolling},
  booktitle = dac99,
  pages = 	 {811--816},
  year = 	 1999,
  address = 	 dac99a,
  month = 	 jun,
  annote = 	 {Exact estimation?}
}

@Misc{dubey2005platform,
  author = 	 {Pradeep Dubey},
  title = 	 {A Platform 2015 Workload Model: Recognition, Mining
                  and Synthesis Moves Computers to the Era of Tera},
  howpublished = {Intel White Paper},
  month =        feb,
  year = 	 2005,
  note = 	 {Online \\ ftp://download.intel.com/technology/computing/archinnov/platform2015/download/RMS.pdf},
  annote = 	 {Recognition, Mining, and Synthesis}
}

@InProceedings{vasudevan2010d2c,
  author =       {Nalini Vasudevan and Stephen A. Edwards and Julian Dolby 
		  and Vijay Saraswat
},
  title =        {$D^2$C: Deterministic, Deadlock-free Concurrency},
  booktitle =	 {High Performance Computing - Student Research Symposium},
  month =	 dec,
  year =         2010,
}

@Article{dennis1994machines,
  author = 	 {Jack B. Dennis},
  title = 	 {Machines and models for parallel computing},
  journal = 	 {International Journal of Parallel Programming},
  year = 	 1994,
  volume = 	 22,
  number = 	 1,
  pages = 	 {47--77},
  doi =          {10.1007/BF02577792},
  month = 	 feb,
  annote = 	 {Another of the Fresh Breeze things, sort of.

                  "fails to answer the two fundamental issues of
                  memory latency and synchronization"

                 A broad argument for the utility of parallel
                  computers.  Mentions Monsoon, Sisal,}
}

@InCollection{dennis1995stream,
  author = 	 {Jack B. Dennis},
  title = 	 {Stream data types for signal processing},
  booktitle = 	 {Advances in Dataflow Architecture and Multithreading},
  publisher = {IEEE Computer Society},
  year = 	 1995,
  editor = 	 {J.-L. Gaudiot and L. Bic},
  note = 	 {Also MIT Computation Structures Group Memo 362, October
                  27, 1994},
  annote = 	 {Sisal, mostly.  Nice examples written in a
                  functional, recursive style.  Might be interesting
                  to look at how this could be expressed in hardware.
                  Fresh Breeze stuff.}
}

@Article{balfour2008energy,
  author = 	 {James Balfour and William J. Dally and David
                  Black-Schaffer and Vishal Parikh and JongSoo Park},
  title = 	 {An Energy-Efficient Processor Architecture for Embedded Systems},
  journal = 	 {IEEE Computer Architecture Letters},
  year = 	 2008,
  volume = 	 7,
  number = 	 1,
  pages = 	 {29--32},
  month = 	 {January-June},
  annote = 	 {Martha's find.  A processor that has a
                  software-managed instruction cache and elaborate
                  data delivery system.

                  "Energy consumption in modern processors is
                  dominated by the supplying of instructions and data
                  to functional units."}
}

@Article{dally2008efficient,
  author = 	 {William J. Dally and James Balfour and David
                  Black-Shaffer and James Chen and R. Curtis Harting
                  and Vishal Parikh and Jongsoo Park and David Sheffield},
  title = 	 {Efficient Embedded Computing},
  journal = 	 computer,
  year = 	 2008,
  number = 7,
  volume = 41,
  pages = 	 {27--32},
  month = 	 jul,
  doi = {10.1109/MC.2008.224},
  annote = 	 {From Martha: breakdown of where power is consumed
                  in processors.  
                  },
abstract = {Hardwired ASICs - 50X more efficient than programmable processors - sacrifice programmability to meet the efficiency requirements of demanding embedded systems. Programmable processors use energy mostly to supply instructions and data to the arithmetic units, and several techniques can reduce instruction- and data-supply energy costs. Using these techniques in the Stanford ELM processor closes the gap with ASICs to within 3X.},
}

@InCollection{turner2006churchs,
  author = 	 {David A. Turner},
  title = 	 {Church's Thesis and Functional Programming},
  booktitle = 	 {Church's Thesis after 70 Years},
  pages = 	 {515--544},
  publisher = {Ontos Verlag},
  year = 	 2006,
  editor = 	 {Adam Olszewski and Jan Wolenski and Robert Janusz},
  annote = 	 {Found randomly.  Turner did Miranda.

                  Nice discussion of the lambda calculus, Church
                  numerals, various combinators, including the Y due
                  to Curry.  Discusses types, which actually preclude
                  the Y combinator (can't apply yourself to yourself).

                  Typed lambda calculus usually introduces an explicit
                  fixed point combinator.

                  Discusses Miranda: points out there isn't an
                  explicit lambda, fixed points are derived by
                  noticing call graphs, and it was derived from SASL.

                  Pretty nice summary article.  Credits Strachy with
                  "Syntactic Sugar."  Nice history.

                  The lambda calculus looks like it should be a
                  set-theoretic model, but fixed points, and their
                  absence, causes a problem.  Scott's domain theory,
                  which adds an explicit bottom, solves the problem. }
}

@Article{turner2004total,
  author = 	 {David A. Turner},
  title = 	 {Total Functional Programming},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 2004,
  volume = 	 10,
  number = 	 7,
  pages = 	 {751--768},
  month = 	 jul,
  annote = 	 {Avoiding non-terminating programs.  Distinguishes
                  between finite data and potentially infinite
                  "codata."

                 loop n = 1 + loop n   <= Should be illegal, but type
                  checks in most language.  Wants total functional
                  programming, not partial functional programming.

                  Presence of bottom screws everything up, e.g.,
                  e - e = 0 is false (e may not terminate).

                  Very interesting: only allow recursion in pattern
                  matching meaning you can only recurse over (finite)
                  data structures.  The compiler can also understand
                  that n-1 is less than n, allowing simple recursion
                  on the integers.

                  Very nice line of reasoning.}
}

@Article{larson2009erlang,
  author = 	 {Jim Larson},
  title = 	 {Erlang for concurrent programming},
  journal = 	 cacm,
  year = 	 2009,
  volume = 	 52,
  number = 	 3,
  pages = 	 {48--56},
  month = 	 mar,
  doi = {http://dx.doi.org/10.1145/1467247.1467263},
  annote = 	 {Off Wikipedia functional language page.

                  Dynamically typed functional language.  List
                  comprehensions like Haskell et al.

                  Ada-like processes that respond to events.
                  "pid ! message" syntax for sending messages.

                  Primitives fairly low-level, but higher-order
                  functions make it possible to express a standard
                  client-server pattern.}
}

@Book{nikil2001implicit,
  author = 	 {Rishiyur S. Nikil and Arvind},
  title = 	 {Implicit Parallel Programming in {pH}},
  publisher = 	 mk,
  year = 	 2001,
  annote = 	 {Parallel Haskell}
}

@InCollection{edwards2010compiling,
  author = 	 {Stephen A. Edwards and Nalini Vasudevan},
  title = 	 {Compiling {SHIM}},
  booktitle = 	 {Synthesis of Embedded Software: Frameworks and
                  Methodologies for Correctness by Construction},
  pages = 	 {121--146},
  publisher = {Springer},
  year = 	 2010,
  editor = 	 {Sandeep K. Shukla and Jean-Pierre Talpin},
  chapter = 	 4,
  url =          {http://dx.doi.org/10.1007/978-1-4419-6400-7_4},
  doi =          {10.1007/978-1-4419-6400-7_4},
  annote = 	 {Work with Nalini; a bit like edwards2009concurrency,
                  but more technical}
}

@InProceedings{kim2010computation,
  author = 	 {Martha A. Kim and Stephen A. Edwards},
  title = 	 {Computation vs. Memory Systems: Pinning Down
                  Accelerator Bottlenecks},
  booktitle = {Proceedings of the Workshop on Architectural and
                  Microarchitectural Support for Binary Translation (AMAS-BT)},
  FIXMEpages = 	 {FIXME},
  year = 	 2010,
  address = 	 {Saint-Malo, France},
  month = 	 jun,
  url =          {http://amas-bt.cs.virginia.edu/},
  annote = 	 {Martha and my work on accelerator measurements.
                  Should be in an LNCS volume at some point.}
}



@InProceedings{chen2009hardware-assisted,
  author = 	 {Yu-Yuan Chen and Ruby B. Lee},
  title = 	 {Hardware-Assisted Application-Level Access Control},
  booktitle =    isc,
  year = 	 2009,
  address = 	 {Pisa, Italy},
  month = 	 sep,
  annote = 	 {Ruby Lee pointed me to this.  Splitting vi into
                  trusted and untrusted pieces.  Basically, there's a
                  region of memory that can be made trusted (secured
                  when it leaves the chip; checked when it's entered)
                  and user-level programs can be put in there and
                  operate on secure data.},
  abstract = {Applications typically rely on the operating system to
                  en- force access control policies such as MAC, DAC,
                  or other policies. However, in the face of a
                  compromised operating system, such protection
                  mechanisms may be ineffective. Since
                  security-sensitive applications are most motivated
                  to maintain access control to their secret or
                  sensitive in- formation, and have no control over
                  the operating system, it is desirable to provide
                  mechanisms to enable applications to protect
                  information with application-specific policies, in
                  spite of a compromised operating system. In this
                  paper, we enable application-level access control
                  and information sharing with direct hardware support
                  and protection, bypassing the de- pendency on the
                  operating system. We analyze an
                  originator-controlled information sharing policy
                  (ORCON), where the content creator specifies who has
                  access to the file created and maintains this
                  control after the fie has been distributed. We show
                  that this policy can be enforced by the
                  software-hardware mechanisms provided by the Secret
                  Protection (SP) architecture, where a Trusted
                  Software Module (TSM) is directly protected by SP's
                  hardware features. We develop a proof-of-concept
                  text editor application which contains such a
                  TSM. This TSM can imple- ment many different
                  policies, not just the originator-controlled policy
                  that we have defined. We also propose a general
                  methodology for trust- partitioning an application
                  into security-critical and non-critical parts.}
}

@Book{chapman2008using,
  author = 	 {Barabara Chapman and Gabriele Jost and Ruud {van der Pas}},
  title = 	 {Using {OpenMP}},
  publisher = 	 mit,
  year = 	 2008,
  annote = 	 {OpenMP and motivations therefore.}
}

@inproceedings{cheng1998detecting,
 author = 	{Cheng, Guang-Ien and Feng, Mingdong and Leiserson, Charles E. and Randall, Keith H. and Stark, Andrew F.},
 title = 	{Detecting data races in Cilk programs that use locks},
 booktitle = 	{Proceedings of the tenth annual ACM symposium on Parallel algorithms and architectures},
 series = 	{SPAA '98},
 year = 	{1998},
 isbn = 	{0-89791-989-0},
 location = 	{Puerto Vallarta, Mexico},
 pages = 	{298--309},
 numpages = 	{12},
 url = 		{http://doi.acm.org/10.1145/277651.277696},
 doi = 		{http://doi.acm.org/10.1145/277651.277696},
 acmid = 	{277696},
 publisher = 	{ACM},
 address = 	{New York, NY, USA},
 keywords = 	{Cilk, algorithm, data race, debugging, multithreading, parallel programming, race detection},
}


@InProceedings{vasudevan2010d2c,
  author =       {Nalini Vasudevan and Stephen A. Edwards and Julian Dolby 
		  and Vijay Saraswat},
  title =        {$D^2$C: Deterministic, Deadlock-free Concurrency},
  booktitle =	 {High Performance Computing - Student Research Symposium},
  month =	 dec,
  year =         2010,
}

@article{bergan2010coreDet,
 author = 	{Bergan, Tom and Anderson, Owen and Devietti, Joseph and Ceze, Luis and Grossman, Dan},
 title =	 {CoreDet: a compiler and runtime system for deterministic multithreaded execution},
 journal =	 {SIGARCH Comput. Archit. News},
 volume =	 {38},
 issue =	 {1},
 month =	 {March},
 year =		 {2010},
 issn =		 {0163-5964},
 pages =	 {53--64},
 numpages =	 {12},
 url =		 {http://doi.acm.org/10.1145/1735970.1736029},
 doi =		 {http://doi.acm.org/10.1145/1735970.1736029},
 acmid =	 {1736029},
 publisher =	 {ACM},
 address =	 {New York, NY, USA},
 keywords =	 {compilers, determinism, multicore, multithreading},
}

@InProceedings{borkar2007thousand,
  author = 	 {Shekhar Borkar},
  title = 	 {Thousand Core Chips---A Technology Perspective},
  booktitle = dac07,
  pages = 	 {746--749},
  year = 	 2007,
  address = 	 dac07a,
  month = 	 jun,
  annote = 	 {Mention's Pollack's Rule: Performance grows as the
                  square root of complexity.}
}

@Article{backus1978programming,
  author = 	 {John Backus},
  title = 	 {Can Programming Be Liberated from the von {Neumann}
                  Style?  A Functional Style and Its Algebra of Programs},
  journal = 	 cacm,
  year = 	 1978,
  volume = 	 21,
  number = 	 8,
  pages = 	 {613--641},
  note = 	 aug,
  annote = 	 {Arguments for functional programming; a variant of
                  his Turing award lecture.}
}

@Book{iverson1962programming,
  author = 	 {Kenneth E. Iverson},
  title = 	 {A Programming Language},
  publisher = 	 jw,
  year = 	 1962,
  annote = 	 {The book on APL}
}

@Book{mattson2005patterns,
  author = 	 {Timothy G. Mattson and Beverly A. Sanders and Berna
                  L. Massingill},
  title = 	 {Patterns for Parallel Programming},
  publisher = 	 aw,
  year = 	 2005,
  annote = 	 {Some neat ideas.  My favorite: Algorithm structures

                  Task-division
                    Task Parallelism
                    Divide-and-conquer

                 Data decomposition
                    Geometric decomposition
                    Recursion (and speculation?)

                 Data flow decomposition
                    Pipeline
                    Event-driven}
}

@InProceedings{collins2010recursion-driven,
  author = 	 {Rebecca L. Collins and Bharadwaj Vellore and Luca
                  P. Carloni},
  title = 	 {Recursion-Driven Parallel Code Generation for
                  Multi-Core Platforms},
  booktitle = date,
  pages = 	 {190--195},
  year = 	 2010,
  address = 	 {Dresden, Germany},
  month = 	 mar,
  annote = 	 {Huckleberry}
}

@InProceedings{miranda2010erbium,
  author = 	 {Cupertino Miranda and	Antoniu Pop and	Philippe
                  Dumont and Albert Cohen and Marc Duranton},
  title = 	 {Erbium: a deterministic, concurrent intermediate
                  representation to map data-flow tasks to scalable,
                  persistent streaming processes},
  booktitle = cases,
  pages = 	 {11--20},
  year = 	 2010,
  address = 	 {Scottsdale, Arizona},
  month = 	 oct,
  annote = 	 {Erbium is a neat datastructure/runtime system for
                  streams.  Kind of Kahn-like, but a bit more flexible.}
}

@Article{regehr2005eliminating,
  author = 	 {John Regehr and Alastair Reid and Kirk Webb},
  title = 	 {Eliminating stack overflow by abstract interpretation},
  journal = 	 tecs,
  year = 	 2005,
  volume = 	 4,
  number = 	 4,
  pages = 	 {751--778},
  month = 	 nov,
  annote = 	 {Stack size}
}

@Book{zwolinski2004digital,
  author = 	 {Mark Zwolinski},
  title = 	 {Digital System Design with {VHDL}},
  publisher = 	 ph,
  year = 	 2004,
  edition = 	 {Second},
  annote = 	 {A nice book on using VHDL for logic synthesis}
}

@Book{coussy2008high-level,
  editor = 	 {Philippe Coussy and Adam Morawiec},
  title = 	 {High-Level Synthesis: From Algorithm to Digital Circuit},
  publisher = 	 sv,
  year = 	 2008,
  doi =  {10.1007/978-1-4020-8588-8},
  annote = 	 {Edited collection from all the big players.  Interesting.}
}

@InCollection{gupta2008high-level,
  author = 	 {Rajesh Gupta and Forrest Brewer},
  title = 	 {High-Level Synthesis: A Retrospective},
  booktitle = 	 {High-Level Synthesis: From Algorithm to Digital Circuit},
  pages = 	 {13--28},
  publisher = sv,
  year = 	 2008,
  annote = 	 {History of their work}
}

@InProceedings{devietti2008hardbound,
  author = 	 {Joe Devietti and Colin Blundell and Milo M. K. Martin
                  and Steve Zdancewic},
  title = 	 {{HardBound}: Architectural Support for Spatial
                  Safety of the {C} Programming Language},
  booktitle = asplos,
  pages = 	 {103--114},
  year = 	 2008,
  address = 	 {Seattle, Washington},
  month = 	 mar,
  annote = 	 {Saw him present this: basic idea is to keep a hash
                  table with object bound information for pointer
                  values, then track those values in shadow
                  registers.  Basically, pointers become augmented
                  with bound information, but the hardware makes this
                  (almost completely) transparent.}
}

@Article{huffman1952method,
  author = 	 {David A. Huffman},
  title = 	 {A Method for the Construction of Minumum-Redundancy Codes},
  journal = 	 {Proceedings of the I.R.E.},
  year = 	 1952,
  volume = 	 40,
  number = 	 9,
  pages = 	 {1098--1101},
  month = 	 sep,
  annote = 	 {The original publication on Huffman codes}
}

@Article{chung1997efficient,
  author = 	 {Kuo-Liang Chung},
  title = 	 {Efficient {Huffman} Decoding},
  journal = 	 ipl,
  year = 	 1997,
  volume = 	 61,
  number = 	 2,
  pages = 	 {97--99},
  month = 	 jan,
  doi =          {http://dx.doi.org/10.1016/S0020-0190(96)00204-9},
  annote = 	 {Found at random.  Arrange the tree as a series of
                  pointers in memory.  Not very interesting, and very
                  non-parallel.}
}

@InProceedings{wadler1984listlessness,
  author = 	 {Philip Wadler},
  title = 	 {Listlessness is better than laziness: Lazy
                  evaluation and garbage collection at compile-time},
  booktitle = lfp,
  pages = 	 {45--52},
  year = 	 1984,
  address = 	 {Austin, Texas},
  month = 	 aug,
  doi =          {http://dx.doi.org/10.1145/800055.802020},
  annote = 	 {A classic, according to Satnam}
}

@Article{jones2002secrets,
  author = 	 {Simon Peyton Jones and Simon Marlow},
  title = 	 {Secrets of the {Glasgow} {Haskell} {Compiler} inliner},
  journal = 	 jfp,
  year = 	 2002,
  volume = 	 12,
  pages = 	 {393--434},
  month = 	 sep,
  annote = 	 {A lot of what's going inside the GHC}
}

@Article{klein2000skeleton,
   author = {Shmuel T. Klein},
   title = {Skeleton Trees for the Efficient Decoding of {Huffman}
                  Encoded Texts},
   journal = {Information Retrieval},
   publisher = sv,
   issn = {1386-4564},
   pages = {7--23},
   volume = 3,
   issue = 1,
   doi = {http://dx.doi.org/10.1023/A:1009910017828},
   year = 2000,
   annote = {Focus seems more on what it takes to reduce the size of
                  the representation of the tree.  Points out there
                  are different ways to assign the codewords and still
                  achieve the same compression ratio.  Interesting
                  ideas about looking for complete subtrees},
}

@inproceedings{choueka1985efficient,
 author = {Y. Choueka and S. T. Klein and Y. Perl},
 title = {Efficient variants of {Huffman} codes in high level languages},
 booktitle = {Proceedings of the 8th annual international ACM SIGIR conference on Research and development in information retrieval},
 series = {SIGIR '85},
 year = 1985,
 isbn = {0-89791-159-8},
 location = {Montreal, Quebec, Canada},
 pages = {122--130},
 numpages = 9,
 url = {http://doi.acm.org/10.1145/253495.342777},
 doi = {http://doi.acm.org/10.1145/253495.342777},
 acmid = 342777,
 publisher = {ACM},
 address = {New York, NY, USA},
 annote = {Worried about bit-level operations; uses tables instead.
                  Sort of a byte-packed version of Huffman to ensure
                  alignment, not true Huffman.} 
} 

@Article{sieminski1988fast,
  author = 	 {Andrzej Siemi\'nski},
  title = 	 {Fast decoding of the {Huffman} codes },
  journal = 	 ipl,
  year = 	 1988,
  volume = 	 26,
  number = 	 5,
  pages = 	 {237--241},
  month = 	 jan,
  annote = 	 {Again, using tables.}
}

@inproceedings{hanson1995vhdl,
 author = {Donald F. Hanson},
 title = {A {VHDL} conversion tool for logic equations with embedded
                  {D} latches},
 booktitle = {Proceedings of the Workshop on Computer Architecture
                  Education (WCAE)},
 series = {WCAE-1 '95},
 year = 1995,
 articleno = 8,
 url = {http://doi.acm.org/10.1145/1275143.1275151},
 doi = {http://doi.acm.org/10.1145/1275143.1275151},
 acmid = 1275151,
 publisher = {ACM},
 address = {New York, NY, USA},
 annote = {Contains a 6502 block diagram and details about
                  reverse-engineering it.  Hanson has done a lot of
                  reverse engineering stuff on the 6502.},
}

@Article{hanson1981improved,
  author = 	 {Donald F. Hanson},
  title = 	 {An Improved Model for a Microcomputer
                  Component---The 6520 {PIA}},
  journal = 	 ieeemicro,
  year = 	 1981,
  volume = 	 1,
  number = 	 4,
  pages = 	 {17--25},
  month = 	 nov,
  annote = 	 {6502-related stuff.  Detailed discussion of how to
                  model the chip.  Nice block diagrams.}
}

@InProceedings{putnam2009performance,
  author = 	 {Andrew Putnam and Susan Eggers and Dave Bennett and
                  Eric Dellinger and Jeff Mason and Henry Styles and
                  Prasanna Sundararajan and Ralph Wittig},
  title = 	 {Performance and power of cache-based reconfigurable
                  computing},
  booktitle = isca,
  pages = 	 {395--405},
  year = 	 2009,
  address = 	 {Austin, Texas},
  month = 	 jun,
  doi = {http://dx.doi.org/10.1145/1555754.1555804},
  annote = 	 {Martha mentioned this.  Xilinx's CHiMPS compiler:
                  multiple caches for C programs.}
}

@InProceedings{huang2008liquid,
  author = 	 {Shan Shan Huang and Amir Hormati and David F. Bacon
                  and Rodric Rabbah},
  title = 	 {{Liquid} {Metal}: Object-Oriented Programming Across
                  the Hardware/Software Boundary},
  booktitle = ecoop,
  pages = 	 {76--103},
  year = 	 2008,
  volume = 	 5142,
  series = 	 lncs,
  address = 	 {Paphos, Cyprus},
  month = 	 jul,
  annote = 	 {Describes their Lime language, an extension of Java
                  designed for compiling (JITing) to FPGAs.

                  Disciplined enums designed to be represented in just
                  a few bits; can be used in for loops, array indexes.

                  Takes DES as an example.

                  Uses SDF as an intermediate representation for the
                  hardware stuff.

                  Useful bibliography on C-to-hardware stuff.}
}

@InProceedings{auerbach2010lime,
  author = 	 {Joshua Auerbach and David F. Bacon and Perry Cheng
                  and Rodric Rabbah},
  title = 	 {{Lime}: a {Java}-Compatible and Synthesizable
                  Language for Heterogeneous Architectures},
  booktitle = oopsla,
  pages = 	 {89--108},
  year = 	 2010,
  address = 	 {Reno, Nevada},
  month = 	 oct,
  doi =          {http://dx.doi.org/10.1145/1869459.1869469},
  annote = 	 {Part of the Liquid Metal project at IBM.  More about
                  the language.}
}

@InProceedings{kulkarni2007optimistic,
  author = 	 {Milind Kulkarni and Keshav Pingali and Bruce Walter
                  and Ganesh Ramanarayanan and Kavita Bala and L. Paul Chew},
  title = 	 {Optimistic Parallelism Requires Abstractions},
  booktitle = pldi,
  pages = 	 {211--222},
  year = 	 2007,
  address = 	 {San Diego, California},
  month = 	 jun,
  doi = {http://dx.doi.org/10.1145/1250734.1250759},
  annote =       {Going after things other than embarassingly parallel
                  applications}
}

@InProceedings{shao1994unrolling,
  author = 	 {Zhong Shao and John H. Reppy and Andrew W. Appel},
  title = 	 {Unrolling lists},
  booktitle = lfp,
  pages = 	 {185--195},
  year = 	 1994,
  address = 	 {Orlando, Florida},
  month = 	 jun,
  doi =          {http://dx.doi.org/10.1145/182409.182453},
  annote = 	 {Like my data structure unrolling idea, but just for
                  lists.  Did in in SML/NJ.}
}

@InProceedings{hall1994using,
  author = 	 {Cordelia V. Hall},
  title = 	 {Using {Hidley}-{Milner} Type Inference to Optimise
                  List Representation},
  booktitle = lfp,
  pages = 	 {162--172},
  year = 	 1994,
  address = 	 {Orlando, Florida},
  month = 	 jun,
  annote = 	 {Like my data structure unrolling idea.  More general
                  than shao1994unrolling}
}

@InProceedings{bailey1997electronic,
  author = 	 {Donald Bailey and Andrew Norman and Giovanni Moretti},
  title = 	 {Electronic Schematic Recognition},
  booktitle = {Proceedings of the 4th Electronics New Zealand
                  Conference (ENZCON)},
  pages = 	 {147--151},
  year = 	 1997,
  address = 	 {Auckland, New Zealand},
  month = 	 sep,
  url =          {http://sprg.massey.ac.nz/Proj_applications.html},
  annote = 	 {Converting scanned images of schematics into
                  netlists.  A complement to the Visual6502 stuff?}
}

@InProceedings{kulkarni2009lonestar,
  author = 	 {Milind Kulkarni and Martin Burstcher and C\u{a}lin
                  Ca\c{s}caval and Keshav Pingali},
  title =  	 {Lonestar: A suite of parallel irregular programs},
  booktitle = {Proceedings of the International Symposium on
                  Performance Analysis of Systems and
                  Software (ISPASS) },
  pages = 	 {65--76},
  year = 	 2009,
  address = 	 {Boston, Massachusetts},
  month = 	 apr,
  annote = 	 {Part of the Galois stuff from Pingali et al.}
}

@InProceedings{cook2009finding,
  author = 	 {Byron Cook and Ashutosh Gupta and Stephen Magill and
                  Andrey Rybalchenko and Ji\v{r}\'i \v{S}im\v{s}a and
                  Satnam Singh and Viktor Vafeiadis},
  title = 	 {Finding heap-bounds for hardware synthesis},
  booktitle = fmcad,
  pages = 	 {205--212},
  year = 	 2009,
  address = 	 {Austin, TX},
  month = 	 nov,
  annote = 	 {Satnam et al. working on hardware stuff.  Looking
                  for symbolic bound information.  Very relevant.}
}

@InProceedings{gill2006loop,
  author = 	 {Gennette Gill and John Hansen and Montek Singh},
  title = 	 {Loop Pipelining For High-Throughput Stream
                  Computation Using Self-Timed Rings},
  booktitle = iccad,
  year = 	 2006,
  address = 	 iccad_a,
  month = 	 nov,
  annote = 	 {Nifty asynchronous pipelining.  Idea is to pipeline
                  loops so that multiple input values may be going
                  around them simultaneously, increasing overall
                  throughput when a function is called multiple times.}
}

@InProceedings{aiken1988perfect,
  author = 	 {Alexander Aiken and Alexandru Nicolau},
  title = 	 {Perfect pipelining: A new loop parallelization technique},
  booktitle = esop,
  pages = 	 {221--235},
  year = 	 1988,
  volume = 	 300,
  series = 	 lncs,
  address = 	 {Nancy, France},
  month = 	 mar,
  doi =          {10.1007/3-540-19027-9_15},
  annote = 	 {Cited by gill2006loop.  Looks a lot like software
                  pipelining: making tight loops that actually perform
                  part of the work of multiple iterations each time.}
}

@InProceedings{lam1988software,
  author = 	 {Monica S. Lam},
  title = 	 {Software pipelining: An effective scheduling
                  technique for {VLIW} machines},
  booktitle = pldi,
  pages = 	 {318--328},
  year = 	 1988,
  address = 	 {Atlanta, Georgia},
  month = 	 jun,
  annote = 	 {The fundamental paper on software pipelining}
}

@inProceedings{vechev2011automatic,
   author = 	{Vechev, Martin and Yahav, Eran and Raman, Raghavan and Sarkar, Vivek},
   title = 	{Automatic Verification of Determinism for Structured Parallel Programs},
   booktitle = 	{Static Analysis},
   series = 	{Lecture Notes in Computer Science},
   editor = 	{Cousot, Radhia and Martel, Matthieu},
   publisher = 	{Springer Berlin / Heidelberg},
   isbn =	 {},
   pages = 	{455-471},
   volume = 	{6337},
   year = 	{2011}
}

@inProceedings{aviram2010efficient,
  author    = 		{Amittai Aviram and
               		Shu-Chun Weng and
               		Sen Hu and
              	 	Bryan Ford},
  title     =	 	{Efficient System-Enforced Deterministic Parallelism},
  booktitle   =  	osdi,
  year      = 		{2010},
  ee        = 		{http://arxiv.org/abs/1005.3450},
  bibsource = 		{DBLP, http://dblp.uni-trier.de}
}

@inproceedings{aleen2009commutativity,
 author = {Aleen, Farhana and Clark, Nathan},
 title = {Commutativity analysis for software parallelization: letting program transformations see the big picture},
 booktitle = {Proceeding of the 14th international conference on Architectural support for programming languages and operating systems},
 series = {ASPLOS '09},
 year = {2009},
 isbn = {978-1-60558-406-5},
 location = {Washington, DC, USA},
 pages = {241--252},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1508244.1508273},
 doi = {http://doi.acm.org/10.1145/1508244.1508273},
 acmid = {1508273},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automatic software parallelization, commutative functions, random interpretation},
} 

