\BOOKMARK [0][-]{chapter.1}{Introduction}{}
\BOOKMARK [0][-]{chapter.2}{Overview of X10}{}
\BOOKMARK [1][-]{section.2.1}{Object-oriented features}{chapter.2}
\BOOKMARK [1][-]{section.2.2}{The sequential core of X10}{chapter.2}
\BOOKMARK [1][-]{section.2.3}{Places and activities}{chapter.2}
\BOOKMARK [1][-]{section.2.4}{Clocks}{chapter.2}
\BOOKMARK [1][-]{section.2.5}{Arrays, regions and distributions}{chapter.2}
\BOOKMARK [1][-]{section.2.6}{Annotations}{chapter.2}
\BOOKMARK [1][-]{section.2.7}{Translating MPI programs to X10}{chapter.2}
\BOOKMARK [1][-]{section.2.8}{Summary and future work}{chapter.2}
\BOOKMARK [2][-]{subsection.2.8.1}{Design for scalability}{section.2.8}
\BOOKMARK [2][-]{subsection.2.8.2}{Design for productivity}{section.2.8}
\BOOKMARK [2][-]{subsection.2.8.3}{Conclusion}{section.2.8}
\BOOKMARK [0][-]{chapter.3}{Lexical structure}{}
\BOOKMARK [0][-]{chapter.4}{Types}{}
\BOOKMARK [1][-]{section.4.1}{Classes and interfaces}{chapter.4}
\BOOKMARK [2][-]{subsection.4.1.1}{Class types}{section.4.1}
\BOOKMARK [2][-]{subsection.4.1.2}{Interface types}{section.4.1}
\BOOKMARK [2][-]{subsection.4.1.3}{Properties}{section.4.1}
\BOOKMARK [1][-]{section.4.2}{Type parameters and Generic Types}{chapter.4}
\BOOKMARK [2][-]{subsection.4.2.1}{Variance of Type Parameters}{section.4.2}
\BOOKMARK [1][-]{section.4.3}{Function Types}{chapter.4}
\BOOKMARK [1][-]{section.4.4}{Type definitions}{chapter.4}
\BOOKMARK [1][-]{section.4.5}{Constrained types}{chapter.4}
\BOOKMARK [2][-]{subsection.4.5.1}{Constraint Expressions}{section.4.5}
\BOOKMARK [2][-]{subsection.4.5.2}{Place constraints}{section.4.5}
\BOOKMARK [2][-]{subsection.4.5.3}{Variables in Constraints}{section.4.5}
\BOOKMARK [2][-]{subsection.4.5.4}{Operations on Constrained Types}{section.4.5}
\BOOKMARK [2][-]{subsection.4.5.5}{Example of Constraints}{section.4.5}
\BOOKMARK [1][-]{section.4.6}{Function types}{chapter.4}
\BOOKMARK [1][-]{section.4.7}{Annotated types}{chapter.4}
\BOOKMARK [1][-]{section.4.8}{Subtyping and type equivalence}{chapter.4}
\BOOKMARK [1][-]{section.4.9}{Common ancestors of types}{chapter.4}
\BOOKMARK [1][-]{section.4.10}{Fundamental types}{chapter.4}
\BOOKMARK [2][-]{subsection.4.10.1}{The interface `Any`}{section.4.10}
\BOOKMARK [2][-]{subsection.4.10.2}{The class "Object"}{section.4.10}
\BOOKMARK [1][-]{section.4.11}{Type inference}{chapter.4}
\BOOKMARK [2][-]{subsection.4.11.1}{Variable declarations}{section.4.11}
\BOOKMARK [2][-]{subsection.4.11.2}{Return types}{section.4.11}
\BOOKMARK [2][-]{subsection.4.11.3}{Type arguments}{section.4.11}
\BOOKMARK [0][-]{chapter.5}{Variables}{}
\BOOKMARK [1][-]{section.5.1}{Immutable variables}{chapter.5}
\BOOKMARK [1][-]{section.5.2}{Initial values of variables}{chapter.5}
\BOOKMARK [1][-]{section.5.3}{Destructuring syntax}{chapter.5}
\BOOKMARK [1][-]{section.5.4}{Formal parameters}{chapter.5}
\BOOKMARK [1][-]{section.5.5}{Local variables}{chapter.5}
\BOOKMARK [1][-]{section.5.6}{Fields}{chapter.5}
\BOOKMARK [0][-]{chapter.6}{Names and packages}{}
\BOOKMARK [1][-]{section.6.1}{Packages}{chapter.6}
\BOOKMARK [2][-]{subsection.6.1.1}{Name Collisions}{section.6.1}
\BOOKMARK [1][-]{section.6.2}{`import` Declarations}{chapter.6}
\BOOKMARK [2][-]{subsection.6.2.1}{Single-Type Import}{section.6.2}
\BOOKMARK [2][-]{subsection.6.2.2}{Automatic Import}{section.6.2}
\BOOKMARK [2][-]{subsection.6.2.3}{Implicit Imports}{section.6.2}
\BOOKMARK [1][-]{section.6.3}{Conventions on Type Names}{chapter.6}
\BOOKMARK [0][-]{chapter.7}{Interfaces}{}
\BOOKMARK [1][-]{section.7.1}{Field Definitions}{chapter.7}
\BOOKMARK [2][-]{subsection.7.1.1}{Fine Points of Fields}{section.7.1}
\BOOKMARK [1][-]{section.7.2}{Interfaces Specifying Properties}{chapter.7}
\BOOKMARK [0][-]{chapter.8}{Classes}{}
\BOOKMARK [1][-]{section.8.1}{Principles of X10 Objects}{chapter.8}
\BOOKMARK [2][-]{subsection.8.1.1}{Basic Design}{section.8.1}
\BOOKMARK [2][-]{subsection.8.1.2}{Distributed Object Model}{section.8.1}
\BOOKMARK [2][-]{subsection.8.1.3}{Examples of Local and Remote References}{section.8.1}
\BOOKMARK [2][-]{subsection.8.1.4}{Class Declaration Syntax}{section.8.1}
\BOOKMARK [1][-]{section.8.2}{Fields}{chapter.8}
\BOOKMARK [2][-]{subsection.8.2.1}{Field Initialization}{section.8.2}
\BOOKMARK [2][-]{subsection.8.2.2}{Field hiding}{section.8.2}
\BOOKMARK [2][-]{subsection.8.2.3}{Field qualifiers}{section.8.2}
\BOOKMARK [1][-]{section.8.3}{Properties}{chapter.8}
\BOOKMARK [1][-]{section.8.4}{Methods}{chapter.8}
\BOOKMARK [2][-]{subsection.8.4.1}{Method Guards}{section.8.4}
\BOOKMARK [2][-]{subsection.8.4.2}{Property methods}{section.8.4}
\BOOKMARK [2][-]{subsection.8.4.3}{Method overloading, overriding, hiding, shadowing and obscuring}{section.8.4}
\BOOKMARK [2][-]{subsection.8.4.4}{Method qualifiers}{section.8.4}
\BOOKMARK [1][-]{section.8.5}{Instance Initialization}{chapter.8}
\BOOKMARK [1][-]{section.8.6}{Constructors}{chapter.8}
\BOOKMARK [2][-]{subsection.8.6.1}{Constructor Return Types}{section.8.6}
\BOOKMARK [2][-]{subsection.8.6.2}{Constructor Bodies}{section.8.6}
\BOOKMARK [2][-]{subsection.8.6.3}{" proto" qualifier on types}{section.8.6}
\BOOKMARK [1][-]{section.8.7}{Static initialization}{chapter.8}
\BOOKMARK [1][-]{section.8.8}{User-Defined Operators}{chapter.8}
\BOOKMARK [2][-]{subsection.8.8.1}{Binary Operators}{section.8.8}
\BOOKMARK [2][-]{subsection.8.8.2}{Unary Operators}{section.8.8}
\BOOKMARK [2][-]{subsection.8.8.3}{Type Conversions}{section.8.8}
\BOOKMARK [2][-]{subsection.8.8.4}{Implicit Type Coercions}{section.8.8}
\BOOKMARK [2][-]{subsection.8.8.5}{`set` and `apply`}{section.8.8}
\BOOKMARK [1][-]{section.8.9}{Class Guards and Invariants}{chapter.8}
\BOOKMARK [2][-]{subsection.8.9.1}{Invariants for "implements" and "extends" clauses}{section.8.9}
\BOOKMARK [2][-]{subsection.8.9.2}{Invariants and constructor definitions}{section.8.9}
\BOOKMARK [0][-]{chapter.9}{Structs}{}
\BOOKMARK [1][-]{section.9.1}{Struct declaration}{chapter.9}
\BOOKMARK [1][-]{section.9.2}{Boxing of structs}{chapter.9}
\BOOKMARK [1][-]{section.9.3}{Optional Implementation of "Any" methods}{chapter.9}
\BOOKMARK [1][-]{section.9.4}{Primitive Types}{chapter.9}
\BOOKMARK [1][-]{section.9.5}{Generic programming with structs}{chapter.9}
\BOOKMARK [1][-]{section.9.6}{Example structs}{chapter.9}
\BOOKMARK [0][-]{chapter.10}{Functions}{}
\BOOKMARK [1][-]{section.10.1}{Overview}{chapter.10}
\BOOKMARK [1][-]{section.10.2}{Function Literals}{chapter.10}
\BOOKMARK [2][-]{subsection.10.2.1}{Outer variable access}{section.10.2}
\BOOKMARK [1][-]{section.10.3}{Method selectors}{chapter.10}
\BOOKMARK [1][-]{section.10.4}{Operator functions}{chapter.10}
\BOOKMARK [1][-]{section.10.5}{Functions as objects of type "Any"}{chapter.10}
\BOOKMARK [0][-]{chapter.11}{Expressions}{}
\BOOKMARK [1][-]{section.11.1}{Literals}{chapter.11}
\BOOKMARK [1][-]{section.11.2}{"this"}{chapter.11}
\BOOKMARK [1][-]{section.11.3}{Local variables}{chapter.11}
\BOOKMARK [1][-]{section.11.4}{Field access}{chapter.11}
\BOOKMARK [1][-]{section.11.5}{Function Literals}{chapter.11}
\BOOKMARK [1][-]{section.11.6}{Calls}{chapter.11}
\BOOKMARK [1][-]{section.11.7}{Assignment}{chapter.11}
\BOOKMARK [1][-]{section.11.8}{Increment and decrement}{chapter.11}
\BOOKMARK [1][-]{section.11.9}{Numeric Operations}{chapter.11}
\BOOKMARK [2][-]{subsection.11.9.1}{Conversions and coercions}{section.11.9}
\BOOKMARK [2][-]{subsection.11.9.2}{Unary plus and unary minus}{section.11.9}
\BOOKMARK [1][-]{section.11.10}{Bitwise complement}{chapter.11}
\BOOKMARK [1][-]{section.11.11}{Binary arithmetic operations}{chapter.11}
\BOOKMARK [1][-]{section.11.12}{Binary shift operations}{chapter.11}
\BOOKMARK [1][-]{section.11.13}{Binary bitwise operations}{chapter.11}
\BOOKMARK [1][-]{section.11.14}{String concatenation}{chapter.11}
\BOOKMARK [1][-]{section.11.15}{Logical negation}{chapter.11}
\BOOKMARK [1][-]{section.11.16}{Boolean logical operations}{chapter.11}
\BOOKMARK [1][-]{section.11.17}{Boolean conditional operations}{chapter.11}
\BOOKMARK [1][-]{section.11.18}{Relational operations}{chapter.11}
\BOOKMARK [1][-]{section.11.19}{Conditional expressions}{chapter.11}
\BOOKMARK [1][-]{section.11.20}{Stable equality}{chapter.11}
\BOOKMARK [1][-]{section.11.21}{Allocation}{chapter.11}
\BOOKMARK [1][-]{section.11.22}{Casts}{chapter.11}
\BOOKMARK [1][-]{section.11.23}{"instanceof"}{chapter.11}
\BOOKMARK [1][-]{section.11.24}{Subtyping expressions}{chapter.11}
\BOOKMARK [1][-]{section.11.25}{Contains expressions}{chapter.11}
\BOOKMARK [1][-]{section.11.26}{Rail constructors}{chapter.11}
\BOOKMARK [1][-]{section.11.27}{Coercions and conversions}{chapter.11}
\BOOKMARK [2][-]{subsection.11.27.1}{Coercions}{section.11.27}
\BOOKMARK [2][-]{subsection.11.27.2}{Conversions}{section.11.27}
\BOOKMARK [0][-]{chapter.12}{Statements}{}
\BOOKMARK [1][-]{section.12.1}{Empty statement}{chapter.12}
\BOOKMARK [1][-]{section.12.2}{Local variable declaration}{chapter.12}
\BOOKMARK [1][-]{section.12.3}{Block statement}{chapter.12}
\BOOKMARK [1][-]{section.12.4}{Expression statement}{chapter.12}
\BOOKMARK [1][-]{section.12.5}{Labeled statement}{chapter.12}
\BOOKMARK [1][-]{section.12.6}{Break statement}{chapter.12}
\BOOKMARK [1][-]{section.12.7}{Continue statement}{chapter.12}
\BOOKMARK [1][-]{section.12.8}{If statement}{chapter.12}
\BOOKMARK [1][-]{section.12.9}{Switch statement}{chapter.12}
\BOOKMARK [1][-]{section.12.10}{While statement}{chapter.12}
\BOOKMARK [1][-]{section.12.11}{Do\205while statement}{chapter.12}
\BOOKMARK [1][-]{section.12.12}{For statement}{chapter.12}
\BOOKMARK [1][-]{section.12.13}{Throw statement}{chapter.12}
\BOOKMARK [1][-]{section.12.14}{Try\205catch statement}{chapter.12}
\BOOKMARK [1][-]{section.12.15}{Return statement}{chapter.12}
\BOOKMARK [0][-]{chapter.13}{Places}{}
\BOOKMARK [1][-]{section.13.1}{The Structure of Places}{chapter.13}
\BOOKMARK [1][-]{section.13.2}{"here"}{chapter.13}
\BOOKMARK [0][-]{chapter.14}{Activities}{}
\BOOKMARK [1][-]{section.14.1}{The X10 rooted exception model}{chapter.14}
\BOOKMARK [1][-]{section.14.2}{`at`: Place changing}{chapter.14}
\BOOKMARK [1][-]{section.14.3}{`async`: Spawning an activity}{chapter.14}
\BOOKMARK [1][-]{section.14.4}{Finish}{chapter.14}
\BOOKMARK [2][-]{subsection.14.4.1}{Collecting "finish"}{section.14.4}
\BOOKMARK [2][-]{subsection.14.4.2}{Semantics of Collecting Finish}{section.14.4}
\BOOKMARK [2][-]{subsection.14.4.3}{Exceptions in Collecting Finish}{section.14.4}
\BOOKMARK [1][-]{section.14.5}{Initial activity}{chapter.14}
\BOOKMARK [1][-]{section.14.6}{Foreach statements}{chapter.14}
\BOOKMARK [1][-]{section.14.7}{Ateach statements}{chapter.14}
\BOOKMARK [1][-]{section.14.8}{At expressions}{chapter.14}
\BOOKMARK [1][-]{section.14.9}{Shared variables}{chapter.14}
\BOOKMARK [1][-]{section.14.10}{Atomic blocks}{chapter.14}
\BOOKMARK [2][-]{subsection.14.10.1}{Unconditional atomic blocks}{section.14.10}
\BOOKMARK [2][-]{subsection.14.10.2}{Conditional atomic blocks}{section.14.10}
\BOOKMARK [0][-]{chapter.15}{Clocks}{}
\BOOKMARK [1][-]{section.15.1}{Clock operations}{chapter.15}
\BOOKMARK [2][-]{subsection.15.1.1}{Creating new clocks}{section.15.1}
\BOOKMARK [2][-]{subsection.15.1.2}{Registering new activities on clocks}{section.15.1}
\BOOKMARK [2][-]{subsection.15.1.3}{Resuming clocks}{section.15.1}
\BOOKMARK [2][-]{subsection.15.1.4}{Advancing clocks}{section.15.1}
\BOOKMARK [2][-]{subsection.15.1.5}{Dropping clocks}{section.15.1}
\BOOKMARK [1][-]{section.15.2}{Deadlock Freedom}{chapter.15}
\BOOKMARK [1][-]{section.15.3}{Program equivalences}{chapter.15}
\BOOKMARK [0][-]{chapter.16}{Local and Distributed Arrays}{}
\BOOKMARK [1][-]{section.16.1}{Points}{chapter.16}
\BOOKMARK [1][-]{section.16.2}{Regions}{chapter.16}
\BOOKMARK [2][-]{subsection.16.2.1}{Operations on regions}{section.16.2}
\BOOKMARK [1][-]{section.16.3}{Arrays}{chapter.16}
\BOOKMARK [2][-]{subsection.16.3.1}{Array Constructors}{section.16.3}
\BOOKMARK [2][-]{subsection.16.3.2}{Array Operations}{section.16.3}
\BOOKMARK [2][-]{subsection.16.3.3}{Higher-Order Array Operations}{section.16.3}
\BOOKMARK [1][-]{section.16.4}{Distributions}{chapter.16}
\BOOKMARK [2][-]{subsection.16.4.1}{Operations returning distributions}{section.16.4}
\BOOKMARK [1][-]{section.16.5}{Array initializer}{chapter.16}
\BOOKMARK [1][-]{section.16.6}{Operations on arrays}{chapter.16}
\BOOKMARK [2][-]{subsection.16.6.1}{Element operations}{section.16.6}
\BOOKMARK [2][-]{subsection.16.6.2}{Constant promotion}{section.16.6}
\BOOKMARK [2][-]{subsection.16.6.3}{Restriction of an array}{section.16.6}
\BOOKMARK [2][-]{subsection.16.6.4}{Assembling an array}{section.16.6}
\BOOKMARK [2][-]{subsection.16.6.5}{Global operations }{section.16.6}
\BOOKMARK [0][-]{chapter.17}{Annotations and compiler plugins}{}
\BOOKMARK [1][-]{section.17.1}{Annotation syntax}{chapter.17}
\BOOKMARK [1][-]{section.17.2}{Annotation declarations}{chapter.17}
\BOOKMARK [1][-]{section.17.3}{Compiler plugins}{chapter.17}
\BOOKMARK [0][-]{chapter.18}{Native Code Integration}{}
\BOOKMARK [1][-]{section.18.1}{Native `static` Methods}{chapter.18}
\BOOKMARK [1][-]{section.18.2}{Native Blocks}{chapter.18}
\BOOKMARK [1][-]{section.18.3}{External Java Code}{chapter.18}
\BOOKMARK [1][-]{section.18.4}{External C++ Code}{chapter.18}
\BOOKMARK [2][-]{subsection.18.4.1}{Auxiliary C++ Files}{section.18.4}
\BOOKMARK [2][-]{subsection.18.4.2}{C++ System Libraries}{section.18.4}
\BOOKMARK [0][-]{chapter.19}{Lost Bits}{}
\BOOKMARK [1][-]{section.19.1}{Visibility of Local Variables and Formals}{chapter.19}
\BOOKMARK [0][-]{chapter*.53}{Alphabetic index of definitions of concepts, keywords, and procedures}{}
\BOOKMARK [0][-]{appendix.A}{Change Log}{}
\BOOKMARK [1][-]{section.A.1}{Changes from X10 v2.0}{appendix.A}
\BOOKMARK [1][-]{section.A.2}{Changes from X10 v1.7}{appendix.A}
