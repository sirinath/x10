Release 1.7.6

This release includes both the C++ and Java code generation backends.

There were no language changes since the 1.7.5 release of X10.

The following features described in the 1.7 language manual do not
currently work with the Java backend and will be fixed in the subsequent
releases:

- Type parameters on closures
- Non-static type definitions as class or interface members
  (static type defs do work)
- Type definitions as package members (i.e., in the outermost scope of
  a compilation unit)
- AST externalization to XML
- Shared local variables
- Extern methods

Additionally, the following features described in the 1.7 language
manual do not currently work with the C++ backend and will be fixed in
the subsequent releases:

- Garbage collection on Cygwin and AIX
- Generic virtual methods
- Exception stack traces on Cygwin

Here's a list of known issues with the C++ backend:

- Default values are not assigned to some value types
- Static initialization is sometimes incorrectly ordered (at the moment
  it's very brittle, though somewhat controllable by the link order of
  files)
- Operator overloading does not work correctly sometimes
- Hash codes are not computed correctly for some classes

Below is a summary of JIRA issues addressed for the X10 1.7.6 release.

** Bug
    * [XTENLANG-372] -  Static intialization of Distribution throws NPE with x10c++ 
    * [XTENLANG-423] - static initialisers appear not to call parents
    * [XTENLANG-454] - Package names are not mangled when translating to C++
    * [XTENLANG-455] - Incorrect method resolution when overloading an inherited generic instance method with a non-generic method
    * [XTENLANG-456] - Compilation errors when class name clashes with a class in a library namespace
    * [XTENLANG-457] - Performance problems due to changes to the Throwable implementation
    * [XTENLANG-458] - Extending a generic class with a non-trivial parameter causes a compilation error
    * [XTENLANG-459] - Using Console.OUT in places other than place 0 throws NullPointerException
    * [XTENLANG-461] - g++ 4.1 internal compiler error
    * [XTENLANG-462] - Calls to parenthesized closure literals are not inlined
    * [XTENLANG-464] - Overriding _type() and calling className() causes post-compilation errors.
    * [XTENLANG-468] - Apparently straight forward HashMap usage 'hangs' x10 code
    * [XTENLANG-472] - do { ... } while(true) does not typecheck
    * [XTENLANG-473] - Invalid code generated for unboxing Box[T] in the Java backend (where T is a generic type parameter)
    * [XTENLANG-477] - Double.parseDouble() always returns 0 with C++ backend
    * [XTENLANG-488] - isWhitespace() method creates compile error in C++ backend
    * [XTENLANG-493] - Non-integer const values are not initialized on all active places
    * [XTENLANG-503] - x10.io.FileReader.close() and x10.io.FileWriter.close() are unimplemented in the C++ backend.
    * [XTENLANG-506] - problem compiling classes with overloaded constructors via c++ backend
    * [XTENLANG-509] - Control characters in AIX stack traces

** Improvement
    * [XTENLANG-443] - Implement all standard functions in x10.lang.Math
    * [XTENLANG-502] - indexOf(String) not currently implemented in String API


For the details of JIRA issues fixed in this release, see
http://jira.codehaus.org/browse/XTENLANG/fixforversion/15422

Additional bug fixes have been made throughout the system.

Please use the X10 JIRA to report bugs, after ensuring the problem is
not already reported:
http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&pid=11812&resolution=-1

