How to become an X10 developer
==============================

* Read the howto pages on http://delhi.watson.ibm.com/howto. 
* Send mail to Jan Vitek <jv@cs.purdue.edu> (copy Bin Xin<xinb@cs.purdue.edu
  and Vijay Saraswat <vsaraswa@us.ibm.com> asking for a CVS account.
  Please include ur proposed userids (a few choices would be good),
  and also ur public ssh keys. (See ssh_keygen.txt.) 
  
* Join x10-dev, introduce yourself, discuss your project. (See
  subscribe_majordomo_purdue.txt.)
  
* Create an account for Mantis, the bug-tracking system we are using
  for X10 development, by going to the webpage:
  http://www.ovmj.org/~mantis/login_page.php
  
  Please let Vijay Saraswat <vsaraswa@us.ibm.com> know your user-id
  so u can be given the appropriate privileges.
  
* Be aware of the various developers working on different parts
  of the codebase. Discuss proposed design changes that will affect
  others before you go ahead and implement them. Definitely discuss
  any major changes on x10-dev@cs.purdue.edu before making them.
  
* Ensure that you run Kemal's script (x10/bin/testScript) before checking in code changes.
  (Let us know if you are having problems running these scripts. 
   These are currently bash scripts known to run on cygwin, aix, linux.
   See running_testScript_on_AIX_Linux_cygwin.txt.)
   
   Note that regression tests are run by an automated script nightly. So if your
   commits break regression tests, u are likely to get urgent mail in the morning...
   regardless of whether the previous night was a week-end, holiday, party night celebrating
   a paper, ... :-)
  
* The current X10 implementation can roughly be broken into the components listed below.
  I also list developers working on the code (as of 8/24/2005). 

  X10 parser -- Philippe Charles
  X10 front-end -- Vijay Saraswat, Christoph von Praun, Christian Grothoff, Philippe Charles
  X10 singleVM reference runtime  -- Christoph von Praun, Christian Grothoff, Vijay Saraswat, Christopher Donawa
  X10 multiVM LAPI runtime -- Allan Kielstra, Christopher Donawa
  X10 multiVM reference runtime -- Bin Xin, Vijay Saraswat
  Testing scripts -- Kemal Ebcgioglu

  Please feel free to talk to these folks as you need to. 
  
* The current packages of interest on the CVS repository at Purdue:

  x10          -- the X10 implementation.
  x10apps      -- applications in X10
  x10web       -- pages mapped to http://delhi.watson.ibm.com/
  NPB3.0-JAV   -- The Java implementation of the NAS Parallel Benchmarks.
  NPB3.0-X10   -- The X10 implementation of the NAS Parallel Benchmarks.

* Building X10.
  Do use Eclipse if at all possible. Just checking out x10 as an Eclipse
  project should result in your Eclipse client being set up to compile,
  link and run X10 code.
  
  We also use the ant script in x10/build.xml, primarily to create
  x10/bin/x10 and x10/bin/x10c command line arguments, and to build x10 for
  use with x10/bin/testScript. (These scripts need to be drastically revamped.
  Currently they are a small modification of the original Polyglot ant scripts
  and use CUP for building a parser for jl that we dont need. So there are a 
  lot of annoying things it does that need to be taken care of.)
  
DO's

* Do use Eclipse if you possibly can. (Eclipse will automatically
  build your system for instance.)
* Do read the code, send comments, make suggestions for improvement.
  (Use Eclipse's Team -> Show in Resource History to get a list of who
  changed the file when.)
* Do write code ... there's a *lot* to be done.
* Do discuss with other developers major changes that might affect what they do.
* Do document your code!
* Do document bugs you discover through test cases so we can make sure that
  they stay fixed!
* Do add a short comment when committing code.
* Do create your own developer log in x10/doc/dev-logs, and use them
  to document the work you are doing.


Don't

* Don't commit without running scripts.
* Don't commit changes that break interfaces being worked on by other people
  without discussing with them first.
