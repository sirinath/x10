Hi All,

Attached is an Eclipse "Team Project Set" for X10 analysis, that includes
everything you need to get started with the X10 analysis infrastructure. Just
import it into your workspace using "File" -> "Import" -> "Team Project Set".
You'll be prompted for a password for each of the servers if this is the first
time you're connecting to them from this workspace.

You also need EMF; I'm using version 2.0.3. I presume that any 2.0.x will
also work, but don't know for sure. [That version may only be compatible
with Eclipse 3.1.x.]

For Eclipsers, you can obtain EMF using the Update Manager from the
following update site:

  http://download.eclipse.org/tools/emf/updates

[I.e., "Help" -> "Software Updates" -> "Find and Install..." -> "Search for
new features to install" -> "Next" -> "New Remote Site", and paste the
URL above into the "URL" field. Use anything you like in the "Name" field.]

Non-Eclipsers can download EMF from here:

  http://fullmoon.torolab.ibm.com/tools/emf/scripts/downloads.php

The code is spread across projects on two different CVS servers:

 - orquesta.watson.ibm.com (which I own; you should already have an
   account/password which I sent you in a note some weeks ago).

   The repository path is /usr/src/cvs/safari. You need the following projects:

    - com.ibm.capa.ast
    - com.ibm.capa.core
    - com.ibm.capa.java
    - com.ibm.capa.util
    - com.ibm.domo.ast
    - com.ibm.domo.core
    - com.ibm.domo.core.tests
    - com.ibm.shrike

 - deagol.watson.ibm.com (ask Julian or Steve Fink for access if you don't
   already have it)

   The repository path is /home/domo/cvsroot. You'll need the following:

    - com.ibm.domo.ast.java
    - com.ibm.domo.ast.java.test
    - com.ibm.domo.ast.x10
    - com.ibm.domo.ast.x10.tests

==================================
The key players in the X10 analysis framework:

 - CAst data types live in the package "com.ibm.capa.ast" in the project of
   the same name. Most notable are CAstNode, CAstEntity and CAst (the
   node factory).

 - The X10 translation-related Polyglot goals/passes (i.e. for translation to
   CAst and DOMO IR) are located in the package

      com.ibm.domo.ast.x10.translator.polyglot

   in the project "com.ibm.domo.ast.x10".

 - The analysis-related Polyglot goals/passes are located in the package

       com.ibm.domo.ast.x10.analysis

   The only (stub) analysis that currently exists is represented by the classes
   AsyncAnalysisGoal and AsyncAnalysisPass in that package.

 - The class com.ibm.domo.ast.x10.analysis.AnalysisJobExt is essentially a
   HashMap that can be used to pass analysis information from one job/pass
   to subsequent jobs/passes.

 - The "Hello, Vijay" demo program is the test driver

       com.ibm.domo.ast.x10.tests.AnalysisTests

   in project com.ibm.domo.ast.x10.tests.

   From the user's perspective, this is a trivial JUnit test that simply dumps out
   the CAst structures for a trivial X10 program "Foo.x10". This test input source
   file lives in the "testSrc" folder at the top level of that project.

   From the compiler writer's perspective, the test harness just invokes the
   Polyglot compiler using the X10AnalysisExtension, which in turn specifies its
   "compile goal" as an AsyncAnalysisGoal.

Anyone wishing to actually write the "analyze asyncs" code would add it to the
AsyncAnalysisPass.run(), or call said code from there.

A more detailed "How-To" note for X10 analysis and the "Hello World" program
will follow somewhat later (early next week).

Cheers,
  -- Bob
  Attatchment name: X10-Analysis.psf
