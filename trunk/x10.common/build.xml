<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [<!ENTITY buildfile SYSTEM "file:./build-user.xml">]>
<!-- WARNING: Eclipse autogenerated file. 
              Any modifications will be overwritten.
              Please edit build-user.xml instead.
-->
<project name="x10.common" default="build" basedir=".">
    &buildfile;

	<property name="bin"  location="${basedir}/bin"/>
	<property name="etc"  location="${basedir}/etc"/>
	<property name="testdir"  location="${basedir}/examples"/>	
    <path id="project.classpath"/>
	<!-- vj: get the environment variables. -->
	<!-- vj: This works on Windows/cygwin. -->
	<property environment="env" />
	
    <target name="init"/>
	
	<target name="clean">
		<delete>
			<fileset dir="${etc}">
				<include name="standard.cfg"/>
				<include name="multivm.cfg"/>
			</fileset>
		</delete>
		<delete>
			<fileset dir="${bin}">
				<include name="x10"/>
				<include name="x10c"/>
				<include name="mvmx10c"/>
				<include name="junit"/>
				<include name="defs"/>
				<include name="multivm-defs"/>
				<include name="dotest"/>
				<include name="dounittest"/>
			</fileset>
		</delete>
 		<delete>
			<fileset dir="${testdir}">
				<include name="**/*.class"/>
				<include name="**/*.java"/>
				<include name="**/*.pem"/>
				<include name="**/*_x10stub.c"/>
				<include name="**/log*"/>
				<include name="**/javacore*"/>
				<include name="**/heapdump*"/>
				<include name="**/ErrorsLog"/>
			</fileset>
		</delete>
	</target>
	
	<target name="build" depends="init,bin,etc,miscexec">
        <echo message="${ant.project.name}: ${ant.file}"/>
    </target>
	
	<target name="bin" 
          description="configure bin directory" 
          depends="bin-deps"
          unless="bin.up-to-date">
		<antcall target="x10"/>
		<antcall target="x10c"/>
		<antcall target="mvmx10c"/>
		<antcall target="junit"/>
		<antcall target="dotest"/>
		<antcall target="dounittest"/>
	</target>

	<target name="etc" 
	 description="configure etc directory" 
	 depends="etc-deps"
	 unless="etc.up-to-date">
		<antcall target="config"/>
	</target>

	<target name="etc-deps">
		<condition property="etc.up-to-date">
			<and>
				<available file="${etc}/standard.cfg"/>
				<available file="${etc}/multivm.cfg"/>
			</and>
		</condition>
	</target>

	<target name="bin-deps">
		<dependset>
			<srcfileset dir="${bin}" includes="x10c.in"/>
			<targetfileset dir="${bin}" includes="x10c"/>
			<targetfileset dir="${bin}" includes="mvmx10c"/>
		</dependset>
		<condition property="bin.up-to-date">
			<and>
				<available file="${bin}/standard.cfg"/>
				<available file="${bin}/multivm.cfg"/>
				<available file="${bin}/x10"/>
				<available file="${bin}/x10c"/>
				<available file="${bin}/mvmx10c"/>
				<available file="${bin}/junit"/>
				<available file="${bin}/dotest"/>
				<available file="${bin}/dounittest"/>
			</and>
		</condition>
	</target>

	<target name="config-deps">
		<condition property="config.up-to-date">
			<available file="${bin}/config"/>
		</condition>
	</target>


	<target name="config" depends="config-deps" unless="config.up-to-date"
	          description="creates the default and multi-vm config files">
		<echo message="Creating ${etc}/standard.cfg"/>
		<echo file="${etc}/standard.cfg" append="no"># This file was automatically generated during the configure process of this x10 installation.

COMPILER_FRAGMENT_DATA_DIRECTORY=${basedir}${file.separator}..${file.separator}x10.compiler${file.separator}data${file.separator}
SAMPLING_FREQUENCY_MS=50
STATISTICS_DISABLE=none</echo>

		<echo message="Creating ${etc}/multivm.cfg"/>
		<echo file="${etc}/multivm.cfg" append="no"># This file was automatically generated during the configure process of this x10 installation.

COMPILER_FRAGMENT_DATA_DIRECTORY=${basedir}${file.separator}..${file.separator}x10.compiler${file.separator}data${file.separator}
#Comment to compile for single node(reference) VM
COMPILER_FRAGMENT_DATA_EXT_DIRECTORY=${basedir}${file.separator}..${file.separator}x10.compiler${file.separator}dataext${file.separator}
SAMPLING_FREQUENCY_MS=50
STATISTICS_DISABLE=none</echo>
	</target>

	<target name="defs-deps">
		<condition property="defs.up-to-date">
			<available file="${bin}/defs"/>
		</condition>
	</target>

	<target name="executable-defs" depends="defs-deps" unless="defs.up-to-date"
          description="creates a file containing common environment variable definitions">
		<echo message="Creating ${bin}/defs"/>
		<echo message="Javahome is ${env.JAVA_HOME}" />
		<echo message="FILE_SEP = '${file.separator}'" />
		<echo message="PATH_SEP = '${path.separator}'" />
		<echo message="X10_PLATFORM = '${env.X10_PLATFORM}'" />
		<echo message="TOP = '${basedir}'" />
		<echo file="${bin}/defs" append="no">#!/bin/sh
# DO NOT EDIT - This file was automatically generated.

JAVA='${env.JAVA_HOME}${file.separator}bin${file.separator}java'
FILE_SEP='${file.separator}'
PATH_SEP='${path.separator}'
TOP='${basedir}'
X10_PLATFORM='${env.X10_PLATFORM}'
CONFIG_FILE='standard.cfg'
    </echo>
		<echo file="${bin}/multivm-defs" append="no">#!/bin/sh
# DO NOT EDIT - This file was automatically generated.

JAVA='${env.JAVA_HOME}${file.separator}bin${file.separator}java'
FILE_SEP='${file.separator}'
PATH_SEP='${path.separator}'
TOP='${basedir}'
X10_PLATFORM='${env.X10_PLATFORM}'
CONFIG_FILE='multivm.cfg'
    </echo>
	</target>

	<target name="mvmx10c" 
          depends="executable-defs" 
          description="creates the executable script mvmx10c">
		<echo message="Creating ${bin}/mvmx10c"/>
		<concat destfile="${bin}/mvmx10c" append="no">
			<filelist dir="${bin}" files="multivm-defs"/>
		</concat>
		<echo file="${bin}/mvmx10c" append="yes">
ext=""

</echo>
		<concat destfile="${bin}/mvmx10c" append="yes">
			<filelist dir="${bin}" files="x10c.in"/>
		</concat>

		<chmod perm="+x" file="${bin}/mvmx10c"/>

		<delete file="${bin}/multivm-defs"/>
	</target>

	<target name="x10c" 
          depends="executable-defs" 
          description="creates the executable script x10c">
		<echo message="Creating ${bin}/x10c"/>
		<concat destfile="${bin}/x10c" append="no">
			<filelist dir="${bin}" files="defs"/>
		</concat>
		<echo file="${bin}/x10c" append="yes">
ext=""

</echo>
		<concat destfile="${bin}/x10c" append="yes">
			<filelist dir="${bin}" files="x10c.in"/>
		</concat>

		<chmod perm="+x" file="${bin}/x10c"/>

		<delete file="${bin}/defs"/>
	</target>

	<target name="x10" 
	          depends="executable-defs" 
	          description="creates the executable script x10">
		<echo message="Creating ${bin}/x10"/>
		<concat destfile="${bin}/x10" append="no">
			<filelist dir="${bin}" files="defs"/>
		</concat>
		<echo file="${bin}/x10" append="yes">
	ext=""

	</echo>
		<concat destfile="${bin}/x10" append="yes">
			<filelist dir="${bin}" files="x10.in"/>
		</concat>

		<chmod perm="+x" file="${bin}/x10"/>

		<delete file="${bin}/defs"/>
		<delete file="${bin}/multivm-defs"/>
	</target>
	
	<target name="miscexec"
		description="makes .dll and .so files in testdir and misc files in bin executable">
 		<chmod perm="ugo+rx">
			<fileset dir="${testdir}">
				<include name="**/*.dll"/>
				<include name="**/*.so"/>
			</fileset>
		</chmod>
		<chmod perm="+x" file="${bin}/doit"/>
		<chmod perm="+x" file="${bin}/testScript"/>
		<chmod perm="+x" file="${bin}/testScript0"/>
		<chmod perm="+x" file="${bin}/newpgrp"/>
		<chmod perm="+x" file="${bin}/makeTestCompiler"/>
		<chmod perm="+x" file="${bin}/cvsDelete"/>
		<chmod perm="+x" file="${bin}/cvsCopy"/>
	</target>
	
	<target name="junit" 
	          depends="executable-defs" 
	          description="creates the executable script junit">
		<echo message="Creating ${bin}/junit"/>
		<concat destfile="${bin}/junit" append="no">
			<filelist dir="${bin}" files="defs"/>
		</concat>
		<echo file="${bin}/junit" append="yes"> 
ext="" 

</echo>
		<concat destfile="${bin}/junit" append="yes">
			<filelist dir="${bin}" files="junit.in"/>
		</concat>

		<chmod perm="+x" file="${bin}/junit"/>

		<delete file="${bin}/defs"/>
	</target>

	<target name="dotest" 
          depends="executable-defs" 
          description="creates the executable script dotest">
		<echo message="Creating ${bin}/dotest"/>
		<concat destfile="${bin}/dotest" append="no">
			<filelist dir="${bin}" files="defs"/>
		</concat>
		<echo file="${bin}/dotest" append="yes">
ext=""

</echo>
		<concat destfile="${bin}/dotest" append="yes">
			<filelist dir="${bin}" files="dotest.in"/>
		</concat>

		<chmod perm="+x" file="${bin}/dotest"/>

		<delete file="${bin}/defs"/>
	</target>

	<target name="dounittest" 
          depends="executable-defs" 
          description="creates the executable script dounittest">
		<echo message="Creating ${bin}/dounittest"/>
		<concat destfile="${bin}/dounittest" append="no">
			<filelist dir="${bin}" files="defs"/>
		</concat>
		<echo file="${bin}/dounittest" append="yes">
ext=""

</echo>
		<concat destfile="${bin}/dounittest" append="yes">
			<filelist dir="${bin}" files="dounittest.in"/>
		</concat>

		<chmod perm="+x" file="${bin}/dounittest"/>

		<delete file="${bin}/defs"/>
	</target>	

	<!-- the following lines have only ever been tested on AIX -->
	<!-- they build the LAPI support library -->
	<target name="buildLAPISupportTask">
	        <javac srcdir="${src}/lapi_support" destdir="${src}/lapi_support"/>
	</target>

	<target name="declareLAPISupportTask" depends="buildLAPISupportTask">
	    <taskdef name="buildLAPISupport"
		 classname="LAPISupportantTask"
		 classpath="${src}/lapi_support"/>
	</target>
	
	<target name="lapi-support" depends="declareLAPISupportTask">
	<buildLAPISupport srcdir="${src}/lapi_support" classes="${classes}" bindir="${bin}">
	</buildLAPISupport>
	</target>
	<!-- the preceding lines have only ever been tested on AIX -->

</project>
