Release 2.0.2

This release includes both the C++ and Java code generation backends.

The following significant language changes were made since the 2.0.1 release:
- x10.lang.System.exit was removed (XTENLANG-874)
- the >>> operators on numeric types have been deprecated 
  in favor of using >> on unsigned numeric types.
- On Linux and MacOS we have switched to building and distributing X10
  as a shared library instead of a static archive. 
- A number of clarifications and errors were corrected in the language 
  specification.
For details on these and other more minor changes, please consult the
language specification included in the X10 release.

The following features described in the 2.0 language manual do not
currently work and will be fixed in the subsequent releases:

- Non-static type definitions as class or interface members
  (static type defs do work)
- Type definitions as package members (i.e., in the outermost scope of
  a compilation unit)
- AST externalization to XML
- Shared local variables
- Extern methods

Additionally, the following features described in the language
manual do not currently work with the C++ backend and will be fixed in
the subsequent releases:

- Garbage collection on AIX
- Generic virtual methods
- Exception stack traces on Cygwin and AIX

The generated C++ code requires g++ 4.2 or better to be compiled; 
we do almost all of our testing against g++ 4.3.2.  On AIX, you
may either use g++ 4.2 or better or xlC 10.01.0000.0004 or better.

Below is a summary of JIRA issues addressed for the X10 2.0.2 release.

Release Notes - X10 - Version X10 2.0.2

** New Features and Improvements
    * [XTENLANG-446] - Support for Solaris 10 platforms sunos_sparc
    * [XTENLANG-619] - 'new' for classes but not structs?
    * [XTENLANG-818] - Support printf on x10.io.Printer and general formatting in x10.lang.String.format
    * [XTENLANG-845] - A set of issues we found at UCLA compilers group
    * [XTENLANG-848] - Complex Math functions
    * [XTENLANG-930] - Rail.toString() should be something useful
    * [XTENLANG-981] - Build shared libraries for x10rt and x10 on Linux
    * [XTENLANG-984] - Build shared libraries for x10rt and x10 on Mac OS
    * [XTENLANG-996] - Build and use manifest of XRX classes in Java backend
    * [XTENLANG-1002] - Support for Solaris 10 platform sunos_x86
    * [XTENLANG-1115] - Define a Range type that is a 1-dimensional contiguous Region

** Tasks and Sub-tasks
    * [XTENLANG-444] - Uniform copyright and license header in all files
    * [XTENLANG-902] - Remove remnants of 1.7 autoboxing from front-end (and backends/runtimes)
    * [XTENLANG-926] - Front-end is inferring the type of [int,double] to be ValRail[Object] instead of ValRail[Any]
    * [XTENLANG-939] - Upgrade to ecj 3.5 as the post-compiler
    * [XTENLANG-997] - x10.dist/samples/KMeans.x10 doesn't compile

** Bug
    * [XTENLANG-27] - "()=>0 to T" should fail in typechecking instead of in generated code
    * [XTENLANG-127] - Bad code generated for NativeRep constructor of generic class
    * [XTENLANG-231] - Bad generated Java code invoking methods on "primitives"
    * [XTENLANG-255] - Bad generated Java code with inferred null type
    * [XTENLANG-276] - Long compile times
    * [XTENLANG-294] - Performance of primitive conversions
    * [XTENLANG-301] - Assigning types with covariant type parameter generates bad Java code
    * [XTENLANG-308] - Need to specify Char
    * [XTENLANG-479] - Local class names are not mangled properly
    * [XTENLANG-551] - EmptyRegion constructor throws (and swallows) exception
    * [XTENLANG-590] - Codegen problem with "HeatTransfer" example and java backend:  Appears to be boxing/generic related
    * [XTENLANG-598] - 'to' type casts in manual but not in language
    * [XTENLANG-608] - Manual's description of 'global' is confusing
    * [XTENLANG-610] - Nested rail constructors don't work
    * [XTENLANG-623] - Mangling of 'short' in java backend
    * [XTENLANG-627] - Example 9.5.1 from spec doesn't even parse
    * [XTENLANG-637] - Covariantly-allowed casts don't compile (Java implementation)
    * [XTENLANG-642] - Interfaces don't seem to count for parameters 
    * [XTENLANG-655] - Constrained generic type doesn't compile in Java.
    * [XTENLANG-656] - ValRail[ValRail[Byte]] doesn't compile
    * [XTENLANG-663] - Least common ancestor of structs is sometimes specified to be Object
    * [XTENLANG-664] - Manual refers to "value class" in section 4.11.2
    * [XTENLANG-665] - "Rooted Cc" in 6.2 not explained
    * [XTENLANG-667] - Type inference example (section 4.13) doesn't work 
    * [XTENLANG-675] - 'boolean' or 'Boolean' in 10.0.2 "Primitives" p.77
    * [XTENLANG-676] - Order of files in x10c++ command line can change results of typechecking
    * [XTENLANG-682] - Manual's description of constraints doesn't include "property methods"
    * [XTENLANG-690] - 'this' can appear in a type constraint on superclass, contra spec... I think.
    * [XTENLANG-693] - "!=" works in type constraints, but the spec doesn't say so.
    * [XTENLANG-694] - Triangle example (example 4.5.3, page 36) doesn't compile -- Null Pointer Exception in compiler.
    * [XTENLANG-704] - Please complete this paragraph
    * [XTENLANG-707] - Chapter 6 manual comments
    * [XTENLANG-714] - "reference classes"?
    * [XTENLANG-727] - Global var fields compile
    * [XTENLANG-734] - Example 9.6.1 uses > in constraints
    * [XTENLANG-735] - property methods are global, aren't they?
    * [XTENLANG-749] - Spec: clairfy explanation of static steate
    * [XTENLANG-750] - Example 9.6.2 uses obsolete stuff
    * [XTENLANG-751] - Spec says that structs aren't implemented as objects, but in Java they are
    * [XTENLANG-757] - False Dichotomy in 10.0.2
    * [XTENLANG-760] - Typechecking errors reported twice
    * [XTENLANG-763] - Top?
    * [XTENLANG-764] - 'Complex' example in section 10 is pretty long
    * [XTENLANG-766] - Function Type description in the manual needs improvement or something
    * [XTENLANG-773] - Method selector expressions need type info in the spec
    * [XTENLANG-775] - Nat can't be defined as Int{self >= 0}
    * [XTENLANG-777] - "const" removeable?
    * [XTENLANG-791] - No <<, >>, and >>> on many integral types
    * [XTENLANG-792] - Compiler out of memory on a surprisingly small program
    * [XTENLANG-794] - Bad Java code generation for operator functions of non-Int integral types
    * [XTENLANG-801] - UInt subtraction is bizarre
    * [XTENLANG-804] - v++ doesn't work nicely at Byte (and Short, I think)
    * [XTENLANG-809] - Remote validation fails with "No such file"
    * [XTENLANG-813] - 'to' cast is gone
    * [XTENLANG-816] - Bad definition of "instanceof"
    * [XTENLANG-825] - X10->Java doesn't do exceptions in asyncs the X10 way 
    * [XTENLANG-827] - future + await + forced() = diverge
    * [XTENLANG-828] - Typechecking of futures is too harsh
    * [XTENLANG-838] - new Clock()?
    * [XTENLANG-839] - Clock pseudo-variables
    * [XTENLANG-869] - Obnoxious error message
    * [XTENLANG-874] - exit is not consistent
    * [XTENLANG-876] - min max error
    * [XTENLANG-881] - Exception error message is confusing
    * [XTENLANG-888] - no place checking for body of ateach
    * [XTENLANG-891] - Place constraints in method guards are not checked
    * [XTENLANG-899] - Problems with overriding abstract methods
    * [XTENLANG-900] - Statically overloading the equals method in a Class causes StackOverflow (seg fault) when compiled with C++ backend.
    * [XTENLANG-903] - Serialization of structs stored in variables/fields of interface type
    * [XTENLANG-904] - NullPointerException when creating a new Java project in X10DT
    * [XTENLANG-907] - Complex methods and operators should be safe
    * [XTENLANG-917] - Resource Manager Id switching in X10 Platform Configuration and X10 Target Environment page
    * [XTENLANG-923] - ValRail literals of mixed struct types don't work in C++ backend (compilation problem in rail_alloc)
    * [XTENLANG-927] - Long.operator>>> should return Long rather than Int
    * [XTENLANG-942] - class x10::lang::Rail<double>' has no member named 'length'
    * [XTENLANG-951] - Failure of instance initialization 
    * [XTENLANG-956] - Does 'this' in a closure imply recursive calls to that closure itself?
    * [XTENLANG-961] - Example 14.2.1 (in language specification) code needs minor updates to run correctly.
    * [XTENLANG-964] - "null as Any as Int" works differently in Java backend
    * [XTENLANG-973] - Is 'property' required to set a property?
    * [XTENLANG-977] - A generic T with  constraint {T==String} gives bad Java code
    * [XTENLANG-985] - Confusing compilation error messages
    * [XTENLANG-987] - Using a struct as a type parameter
    * [XTENLANG-988] - The constructor of a struct calling a proto method
    * [XTENLANG-992] - Bug in C++ code generation causes calls to overloaded methods that are actually distinct to appear ambiguous
    * [XTENLANG-993] - Method not found: either compiler is in error in matching argument types, or the error message is unhelpful
    * [XTENLANG-994] - java-backend generates invalid java code for "(()=>1.0)() as Float"
    * [XTENLANG-995] - Assigning constant value to parameter types is error in Java-backend
    * [XTENLANG-998] - Calling typeName() on a value of type Any causes C++ compilation errors
    * [XTENLANG-999] - Bad Java code generation for cast a type parameter type to primitive.
    * [XTENLANG-1010] - local copyTo/From nolonger work
    * [XTENLANG-1047] - Error constructing distributed array
    * [XTENLANG-1052] - Null Pointer Exception in typechecker 


For the details of JIRA issues fixed in this release, see
http://jira.codehaus.org/browse/XTENLANG/fixforversion/16023

Please use the X10 JIRA to report bugs, after ensuring the problem is
not already reported:
http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&pid=11812&resolution=-1

