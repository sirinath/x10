<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [<!ENTITY buildfile SYSTEM "file:./build-user.xml">]>
<project name="x10.compiler" default="dist" basedir=".">
    &buildfile;
    <property name="x10.home" value=".."/>
    <property name="lpg.location" value="${x10.home}/lpg"/>
    <property name="x10.common.location" value="${x10.home}/x10.common"/>
    <property name="x10.runtime.location" value="${x10.home}/x10.runtime"/>
    <property name="build" location="${basedir}/classes"/>
    <property name="src" location="${basedir}/src"/>
    <property name="lib" location="${x10.common.location}/lib"/>
    <property name="jar" value="x10c.jar"/>
    <property name="etc" location="${x10.common.location}/etc"/>
    <property name="config" value="*.cfg"/>
    <property name="lpg.jar" value="lpg.jar"/>
    <property name="polyglot.jar" value="polyglot2.jar"/>
    <property name="runtime.jar" value="x10.jar"/>
    <path id="project.classpath">
        <path refid="mainproject.classpath"/>
        <path refid="lpg.classpath"/>
        <path refid="polyglot.classpath"/>
        <path refid="x10.common.classpath"/>
        <path refid="x10.runtime.classpath"/>
    </path>
    <path id="mainproject.classpath">
        <pathelement location="${build}"/>
    </path>
    <path id="lpg.classpath">
        <pathelement location="${lib}/${lpg.jar}"/>
    </path>
    <path id="polyglot.classpath">
        <pathelement location="${lib}/${polyglot.jar}"/>
    </path>
    <path id="x10.common.classpath"/>
    <path id="x10.runtime.classpath">
        <pathelement location="${lib}/${runtime.jar}"/>
    </path>
    <!-- vj: get the environment variables. -->
    <!-- vj: This works on Windows/cygwin. -->
    <property environment="env"/>
    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
        <condition property="local.polyglot.jar" value="${env.LOCAL_POLYGLOT_JAR}">
            <isset property="env.LOCAL_POLYGLOT_JAR"/>
        </condition>
        <condition property="local.lpg.jar" value="${env.LOCAL_LPG_JAR}">
            <isset property="env.LOCAL_LPG_JAR"/>
        </condition>
    </target>
    <target name="cleanall" depends="clean">
        <ant antfile="${x10.runtime.location}/build.xml" target="clean" inheritAll="false" dir="${x10.runtime.location}"/>
    </target>
    <target name="clean">
        <delete dir="${build}"/>
    </target>
    <target name="dist" depends="jar" description="generate part of the distribution">
        <mkdir dir="${lib}"/>
        <copy todir="${lib}">
            <fileset dir="${build}" includes="${jar}"/>
        </copy>
        <mkdir dir="${etc}"/>
        <copy todir="${etc}">
            <fileset dir="${basedir}/etc" includes="${config}"/>
        </copy>
    </target>
    <target name="jar" depends="build">
        <jar jarfile="${build}/${jar}">
            <fileset dir="${build}" includes="org/**,polyglot/ext/x10/**,x10/parser/**,data/**" excludes="${jar}"/>
        </jar>
    </target>
    <target name="buildall" depends="init">
        <ant antfile="${lpg.location}/build.xml" target="build" inheritAll="false" dir="${lpg.location}"/>
        <ant antfile="${x10.common.location}/build.xml" target="build" inheritAll="false" dir="${x10.common.location}"/>
        <ant antfile="${x10.runtime.location}/build.xml" target="build" inheritAll="false" dir="${x10.runtime.location}"/>
    </target>
    <target name="lpg-jar" depends="init,lpg-local-jar" unless="local.lpg.jar">
        <!-- TODO: move this into x10.common -->
	<property name="lpg.url" value="http://easynews.dl.sourceforge.net/sourceforge/lpg"/>
        <property name="lpg.jar.url" value="${lpg.url}/lpg2.jar"/>
        <get usetimestamp="true" ignoreerrors="true" src="${lpg.jar.url}" dest="${lib}/${lpg.jar}"/>
        <available property="lpg.jar.present" file="${lib}/${lpg.jar}"/>
        <fail message="Unable to get ${lpg.jar}" unless="lpg.jar.present"/>
    </target>
    <target name="lpg-local-jar" depends="init" if="local.lpg.jar">
        <!-- TODO: move this into x10.common -->
        <copy file="${local.lpg.jar}" tofile="${lib}/${lpg.jar}"/>
        <available property="lpg.jar.present" file="${lib}/${lpg.jar}"/>
        <fail message="Unable to find ${lpg.jar}" unless="lpg.jar.present"/>
    </target>
    <target name="polyglot-jar" depends="init,polyglot-local-jar" unless="local.polyglot.jar">
        <!-- TODO: move this into x10.common -->
        <property name="polyglot.url" value="http://www.cs.cornell.edu/Projects/polyglot/eclipseUpdates/plugins"/>
        <!--<property name="polyglot.jar.url" value="${polyglot.url}/polyglot2_2.0.1.jar"/>-->
        <!--<property name="polyglot.jar.url" value="${polyglot.url}/polyglot2_nightly.jar"/>-->
        <property name="polyglot.jar.url" value="${polyglot.url}/polyglot2_latest.jar"/>
        <get usetimestamp="true" ignoreerrors="true" src="${polyglot.jar.url}" dest="${lib}/${polyglot.jar}"/>
        <available property="polyglot.jar.present" file="${lib}/${polyglot.jar}"/>
        <fail message="Unable to get ${polyglot.jar}" unless="polyglot.jar.present"/>
    </target>
    <target name="polyglot-local-jar" depends="init" if="local.polyglot.jar">
        <!-- TODO: move this into x10.common -->
        <copy file="${local.polyglot.jar}" tofile="${lib}/${polyglot.jar}"/>
        <available property="polyglot.jar.present" file="${lib}/${polyglot.jar}"/>
        <fail message="Unable to find ${polyglot.jar}" unless="polyglot.jar.present"/>
    </target>
    <target name="runtime-jar" depends="init">
        <ant antfile="${x10.runtime.location}/build.xml" target="dist" inheritAll="false" dir="${x10.runtime.location}"/>
    </target>
    <target name="build" depends="init,lpg-jar,polyglot-jar,runtime-jar">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <!-- <javac destdir="${build}" source="1.4" target="1.4" debug="on"> -->
        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
        <!-- <javac destdir="${build}" debug="on"> -->
            <src path="${src}"/>
            <classpath refid="project.classpath"/>
        </javac>
        <copy todir="${build}">
            <fileset dir="." includes="data/**"/>
        </copy>
    </target>
    <target name="grammar" depends="init">
        <property name="grammar.file" location="${src}/x10/parser/x10.g"/>
        <property name="include.dir" location="${lpg.location}/templates"/>
        <condition property="platform" value="win32"><os family="windows"/></condition>
        <condition property="platform" value="linux"><os name="Linux"/></condition>
        <property name="lpg.executable" location="${lpg.location}/bin/lpg-${platform}_${os.arch}"/>
        <!--
        <echo message="OS: ${os.name} ${os.arch}"/>
        <echo message="Platform: ${platform}"/>
        <echo message="LPG: ${lpg.executable}"/>
        <echo>
            dir="${src}/x10/parser" executable="${lpg.executable}"
            "-include-directory=${include.dir}"
            "${grammar.file}"
        </echo>
        -->
        <exec dir="${src}/x10/parser" executable="${lpg.executable}"
              failonerror="true">
            <arg value="-include-directory=${include.dir}"/>
            <arg value="${grammar.file}"/>
        </exec>
    </target>
    <target name="rebuild" depends="grammar,build"/>
    <target name="set-version" depends="init" unless="zip.version">
        <property name="zip.version" value="${DSTAMP}-${TSTAMP}"/>
    </target>
    <target name="zip" depends="set-version,dist">
        <zip destfile="${x10.home}/x10-${zip.version}.zip">
            <zipfileset prefix="" dir="${x10.common.location}" includes="epl-v10.html"/>
            <zipfileset prefix="bin" dir="${x10.common.location}/bin" includes="newpgrp,x10,x10c,testScript*"/>
            <zipfileset prefix="etc" dir="${etc}" includes="${config}"/>
            <zipfileset prefix="examples" dir="${x10.common.location}/examples" includes="README,**/*.x10,**/.ThisIsAnX10TestDirectory"/>
            <zipfileset prefix="lib" dir="${lib}" includes="*.jar" excludes="polyglot2.jar"/>
        </zip>
    </target>
    <target name="src-zip" depends="srczip"/>
    <target name="srczip" depends="set-version,build">
        <zip destfile="${x10.home}/x10-${zip.version}-src.zip">
            <zipfileset prefix="" dir="${x10.common.location}" includes="epl-v10.html"/>
            <zipfileset prefix="lpg" dir="${lpg.location}" excludes="**/CVS/**,classes/**"/>
            <zipfileset prefix="x10.common" dir="${x10.common.location}" excludes="**/CVS/**,lib/**,etc/**" includes="build*,bin/*.in,bin/testScript*,bin/newpgrp,examples/README,**/*.x10,**/.ThisIsAnX10TestDirectory"/>
            <zipfileset prefix="x10.compiler" dir="${basedir}" excludes="**/CVS/**,classes/**"/>
            <zipfileset prefix="x10.runtime" dir="${x10.runtime.location}" excludes="**/CVS/**,classes/**"/>
        </zip>
    </target>
    <!--
      To build a zip with a specific version (VER), invoke the target below as
         ant -Dzip.version=VER zips
    -->
    <target name="zips" depends="zip,srczip"/>
    <target name="tags" depends="init">
      <!-- create a blank tags file -->
      <exec dir="${x10.home}" executable="ctags" failonerror="true">
        <arg value="-ftags"/>
        <arg value="."/>
      </exec>
      <exec dir="${x10.home}" executable="ctags" failonerror="true">
        <arg value="-f-"/>
        <arg value="--langdef=xcd"/>
        <arg value="--langmap=xcd:.xcd"/>
        <arg value="--languages=xcd"/>
        <arg value="--extra=+f"/>
        <arg value="-R"/>
        <arg value="--exclude=classes"/>
        <arg value="x10.compiler"/>
        <redirector output="${x10.home}/tags" logError="true" append="true">
          <outputfilterchain>
            <replaceregex pattern="^(\S+)\.xcd" replace="\1"/>
            <replaceregex pattern="(;.\t)F$" replace="\1t"/>
            <replaceregex pattern="(;.\t)file$" replace="\1template"/>
          </outputfilterchain>
        </redirector>
      </exec>
      <exec dir="${x10.home}" executable="ctags" failonerror="true">
        <arg value="-ftags"/>
        <arg value="--append=yes"/>
        <arg value="--languages=java"/>
        <arg value="-R"/>
        <arg value="--exclude=classes"/>
        <arg value="lpg"/>
        <arg value="polyglot2"/>
        <arg value="x10.compiler"/>
        <arg value="x10.runtime"/>
      </exec>
    </target>
</project>
