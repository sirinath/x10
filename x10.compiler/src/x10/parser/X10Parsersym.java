
//
// This is the grammar specification from the Final Draft of the generic spec.
// It has been modified by Philippe Charles and Vijay Saraswat for use with 
// X10. 
// (1) Removed TypeParameters from class/interface/method declarations
// (2) Removed TypeParameters from types.
// (3) Removed Annotations -- cause conflicts with @ used in places.
// (4) Removed EnumDeclarations.
// 12/28/2004// 12/25/2004
// This is the basic X10 grammar specification without support for generic types.
// Intended for the Feb 2005 X10 release.
//
package x10.parser;

interface X10Parsersym {
    public final static int
      TK_IntegerLiteral = 35,
      TK_LongLiteral = 36,
      TK_FloatingPointLiteral = 37,
      TK_DoubleLiteral = 38,
      TK_CharacterLiteral = 39,
      TK_StringLiteral = 40,
      TK_MINUS_MINUS = 30,
      TK_OR = 58,
      TK_MINUS = 25,
      TK_MINUS_EQUAL = 103,
      TK_NOT = 41,
      TK_NOT_EQUAL = 65,
      TK_REMAINDER = 74,
      TK_REMAINDER_EQUAL = 104,
      TK_AND = 63,
      TK_AND_AND = 55,
      TK_AND_EQUAL = 105,
      TK_LPAREN = 1,
      TK_RPAREN = 6,
      TK_MULTIPLY = 73,
      TK_MULTIPLY_EQUAL = 106,
      TK_COMMA = 64,
      TK_DOT = 59,
      TK_DIVIDE = 75,
      TK_DIVIDE_EQUAL = 107,
      TK_COLON = 2,
      TK_SEMICOLON = 28,
      TK_QUESTION = 56,
      TK_AT = 78,
      TK_LBRACKET = 7,
      TK_RBRACKET = 72,
      TK_XOR = 60,
      TK_XOR_EQUAL = 108,
      TK_LBRACE = 61,
      TK_OR_OR = 57,
      TK_OR_EQUAL = 109,
      TK_RBRACE = 79,
      TK_TWIDDLE = 42,
      TK_PLUS = 26,
      TK_PLUS_PLUS = 31,
      TK_PLUS_EQUAL = 110,
      TK_LESS = 62,
      TK_LEFT_SHIFT = 69,
      TK_LEFT_SHIFT_EQUAL = 111,
      TK_LESS_EQUAL = 67,
      TK_EQUAL = 96,
      TK_EQUAL_EQUAL = 66,
      TK_GREATER = 47,
      TK_ELLIPSIS = 114,
      TK_RANGE = 128,
      TK_ARROW = 5,
      TK_abstract = 53,
      TK_assert = 81,
      TK_boolean = 9,
      TK_break = 82,
      TK_byte = 10,
      TK_case = 101,
      TK_catch = 118,
      TK_char = 11,
      TK_class = 70,
      TK_const = 97,
      TK_continue = 83,
      TK_default = 102,
      TK_do = 84,
      TK_double = 12,
      TK_enum = 129,
      TK_else = 112,
      TK_extends = 119,
      TK_false = 43,
      TK_final = 49,
      TK_finally = 120,
      TK_float = 13,
      TK_for = 85,
      TK_goto = 130,
      TK_if = 86,
      TK_implements = 123,
      TK_import = 121,
      TK_instanceof = 68,
      TK_int = 14,
      TK_interface = 71,
      TK_long = 15,
      TK_native = 115,
      TK_new = 32,
      TK_null = 44,
      TK_package = 124,
      TK_private = 50,
      TK_protected = 51,
      TK_public = 48,
      TK_return = 87,
      TK_short = 16,
      TK_static = 52,
      TK_strictfp = 54,
      TK_super = 33,
      TK_switch = 88,
      TK_synchronized = 76,
      TK_this = 34,
      TK_throw = 89,
      TK_throws = 122,
      TK_transient = 98,
      TK_true = 45,
      TK_try = 90,
      TK_void = 29,
      TK_volatile = 99,
      TK_while = 80,
      TK_activitylocal = 125,
      TK_async = 91,
      TK_ateach = 92,
      TK_atomic = 77,
      TK_await = 93,
      TK_boxed = 131,
      TK_clocked = 126,
      TK_current = 22,
      TK_extern = 116,
      TK_finish = 94,
      TK_foreach = 95,
      TK_fun = 132,
      TK_future = 27,
      TK_here = 46,
      TK_local = 23,
      TK_method = 24,
      TK_mutable = 100,
      TK_next = 17,
      TK_now = 18,
      TK_nullable = 19,
      TK_or = 8,
      TK_placelocal = 127,
      TK_reference = 4,
      TK_unsafe = 113,
      TK_value = 3,
      TK_when = 20,
      TK_IDENTIFIER = 21,
      TK_Comment = 133,
      TK_GREATER_EQUAL = 134,
      TK_RIGHT_SHIFT = 135,
      TK_UNSIGNED_RIGHT_SHIFT = 136,
      TK_RIGHT_SHIFT_EQUAL = 137,
      TK_UNSIGNED_RIGHT_SHIFT_EQUAL = 138,
      TK_EOF_TOKEN = 117,
      TK_$error = 139;

      public final static String orderedTerminalSymbols[] = {
                 "",
                 "LPAREN",
                 "COLON",
                 "value",
                 "reference",
                 "ARROW",
                 "RPAREN",
                 "LBRACKET",
                 "or",
                 "boolean",
                 "byte",
                 "char",
                 "double",
                 "float",
                 "int",
                 "long",
                 "short",
                 "next",
                 "now",
                 "nullable",
                 "when",
                 "IDENTIFIER",
                 "current",
                 "local",
                 "method",
                 "MINUS",
                 "PLUS",
                 "future",
                 "SEMICOLON",
                 "void",
                 "MINUS_MINUS",
                 "PLUS_PLUS",
                 "new",
                 "super",
                 "this",
                 "IntegerLiteral",
                 "LongLiteral",
                 "FloatingPointLiteral",
                 "DoubleLiteral",
                 "CharacterLiteral",
                 "StringLiteral",
                 "NOT",
                 "TWIDDLE",
                 "false",
                 "null",
                 "true",
                 "here",
                 "GREATER",
                 "public",
                 "final",
                 "private",
                 "protected",
                 "static",
                 "abstract",
                 "strictfp",
                 "AND_AND",
                 "QUESTION",
                 "OR_OR",
                 "OR",
                 "DOT",
                 "XOR",
                 "LBRACE",
                 "LESS",
                 "AND",
                 "COMMA",
                 "NOT_EQUAL",
                 "EQUAL_EQUAL",
                 "LESS_EQUAL",
                 "instanceof",
                 "LEFT_SHIFT",
                 "class",
                 "interface",
                 "RBRACKET",
                 "MULTIPLY",
                 "REMAINDER",
                 "DIVIDE",
                 "synchronized",
                 "atomic",
                 "AT",
                 "RBRACE",
                 "while",
                 "assert",
                 "break",
                 "continue",
                 "do",
                 "for",
                 "if",
                 "return",
                 "switch",
                 "throw",
                 "try",
                 "async",
                 "ateach",
                 "await",
                 "finish",
                 "foreach",
                 "EQUAL",
                 "const",
                 "transient",
                 "volatile",
                 "mutable",
                 "case",
                 "default",
                 "MINUS_EQUAL",
                 "REMAINDER_EQUAL",
                 "AND_EQUAL",
                 "MULTIPLY_EQUAL",
                 "DIVIDE_EQUAL",
                 "XOR_EQUAL",
                 "OR_EQUAL",
                 "PLUS_EQUAL",
                 "LEFT_SHIFT_EQUAL",
                 "else",
                 "unsafe",
                 "ELLIPSIS",
                 "native",
                 "extern",
                 "EOF_TOKEN",
                 "catch",
                 "extends",
                 "finally",
                 "import",
                 "throws",
                 "implements",
                 "package",
                 "activitylocal",
                 "clocked",
                 "placelocal",
                 "RANGE",
                 "enum",
                 "goto",
                 "boxed",
                 "fun",
                 "Comment",
                 "GREATER_EQUAL",
                 "RIGHT_SHIFT",
                 "UNSIGNED_RIGHT_SHIFT",
                 "RIGHT_SHIFT_EQUAL",
                 "UNSIGNED_RIGHT_SHIFT_EQUAL",
                 "$error"
             };

    public final static boolean isValidForParser = true;
}
