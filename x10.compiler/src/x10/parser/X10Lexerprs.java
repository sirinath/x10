
//
// Licensed Material 
// (C) Copyright IBM Corp, 2006
//

package x10.parser;

public class X10Lexerprs implements lpg.lpgjavaruntime.ParseTable, X10Lexersym {

    public interface IsNullable {
        public final static byte isNullable[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            1,0,0,0,0,0,0,0,0,0,
            0,0,0,1,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte isNullable[] = IsNullable.isNullable;
    public final boolean isNullable(int index) { return isNullable[index] != 0; }

    public interface ProsthesesIndex {
        public final static byte prosthesesIndex[] = {0,
            27,28,35,31,32,33,13,18,20,30,
            34,19,23,29,38,42,2,3,4,5,
            6,7,8,9,10,11,12,14,15,16,
            17,21,22,24,25,26,36,37,39,40,
            1,41
        };
    };
    public final static byte prosthesesIndex[] = ProsthesesIndex.prosthesesIndex;
    public final int prosthesesIndex(int index) { return prosthesesIndex[index]; }

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static byte baseCheck[] = {0,
            1,3,3,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,3,
            2,2,3,1,3,2,2,3,3,2,
            1,2,2,2,3,3,2,5,3,2,
            2,0,1,2,1,2,2,0,2,1,
            2,1,2,2,2,3,2,3,3,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2,3,1,1,1,1,
            1,1,1,1,1,1,1,2,1,2,
            2,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,6,2,1,1,1,
            1,1,1,1,6,2,2,2,2,2,
            2,2,2,2,2
        };
    };
    public final static byte baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static byte rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,17,17,17,17,17,17,
            17,17,17,17,21,21,22,23,23,23,
            23,24,24,24,24,24,24,24,25,32,
            32,32,32,33,33,26,34,34,19,19,
            7,7,29,29,31,31,31,12,12,12,
            10,10,10,10,10,4,4,4,4,4,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,5,5,5,5,
            5,5,5,5,5,5,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,6,6,6,6,6,6,6,6,
            6,6,1,1,1,1,1,1,1,1,
            1,1,11,11,11,11,11,11,11,11,
            3,3,3,3,3,3,3,3,3,3,
            3,3,2,2,37,37,37,8,8,9,
            9,30,30,14,14,28,28,27,27,18,
            18,18,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,38,38,38,
            38,15,15,15,15,15,15,15,15,15,
            15,15,15,15,15,15,15,15,15,15,
            15,15,15,15,15,15,15,15,15,39,
            39,39,39,39,39,39,39,39,39,39,
            39,39,39,39,39,39,39,39,39,39,
            39,39,39,39,39,39,39,40,40,40,
            40,40,40,40,40,40,40,40,40,40,
            40,40,40,40,40,40,40,40,40,40,
            40,40,40,40,40,13,13,13,13,42,
            42,35,35,35,35,35,35,35,35,36,
            36,36,36,36,36,36,36,36,20,20,
            20,20,20,20,20,20,20,16,16,16,
            16,16,16,16,16,17,408,537,1067,81,
            536,536,536,445,205,77,538,634,77,77,
            77,607,1165,371,467,58,65,419,5,6,
            7,8,9,516,1035,358,944,452,1,71,
            364,358,71,71,71,98,992,458,71,77,
            474,71,77,71,510,534,1024,518,534,534,
            534,308,79,518,411,79,79,79,1166,989,
            534,425,1171,346,534,103,69,79,988,69,
            69,69,1078,520,1168,69,59,66,69,520,
            69,1089,523,998,534,926,81,79,523,56,
            79,1004,953,60,67,1100,529,428,1046,406,
            57,64,529,1170,367,1174,406,610,201,522,
            200,200,200,200,686,482,482,482,710,486,
            486,486,734,83,83,83,758,494,494,494,
            782,498,498,498,806,504,504,504,830,508,
            508,508,388,482,854,345,345,345,878,512,
            512,512,902,336,336,336,1164,979,1111,81,
            1122,81,1155,1133,81,1167,198,958,337,1144,
            81,977,1175,186,728,960,920,1169,1172,776,
            824,872,996,1176,1180,1181,1182,549,549
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,0,98,99,
            100,101,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,74,75,76,77,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,0,
            98,99,100,101,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,68,69,70,71,72,73,74,75,
            76,77,78,79,80,81,82,83,84,85,
            86,87,88,89,90,91,92,93,94,95,
            96,0,98,99,0,0,102,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,74,75,76,77,78,79,80,81,82,
            83,84,85,86,87,88,89,90,91,92,
            93,94,95,96,0,98,99,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,74,75,76,0,78,79,80,81,82,
            83,84,85,86,87,88,89,90,91,92,
            93,94,95,96,0,0,0,100,101,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,62,63,64,65,66,67,68,69,70,
            71,72,73,74,75,76,77,78,79,80,
            81,82,83,84,85,86,87,88,89,90,
            91,92,93,94,95,96,0,98,99,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,0,19,20,
            21,22,23,0,25,26,27,28,29,30,
            0,32,33,0,11,12,13,14,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,62,63,64,65,66,67,68,69,70,
            71,72,0,0,75,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,97,19,20,21,22,23,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,0,19,20,
            21,22,23,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,24,19,20,21,22,23,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,0,19,20,21,22,
            23,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,24,
            19,20,21,22,23,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,0,19,20,21,22,23,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,24,19,20,
            21,22,23,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,0,19,20,21,22,23,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,24,19,20,21,22,
            23,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,0,
            19,20,21,22,23,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            0,16,17,0,1,2,3,4,5,6,
            7,8,0,0,11,0,31,0,15,0,
            0,0,0,11,12,13,14,24,16,17,
            27,28,29,30,0,18,0,34,0,1,
            2,3,4,5,6,7,8,0,0,11,
            31,0,35,15,18,0,0,0,11,12,
            13,14,24,0,0,27,28,29,30,18,
            0,0,34,25,26,18,97,0,0,24,
            77,18,97,0,1,2,3,4,5,6,
            7,8,9,10,0,1,2,3,4,5,
            6,7,8,9,10,0,1,2,3,4,
            5,6,7,8,0,77,80,81,35,36,
            0,0,0,0,0,31,0,1,2,3,
            4,5,6,7,8,9,10,0,1,2,
            3,4,5,6,7,8,9,10,0,1,
            2,3,4,5,6,7,8,9,10,0,
            1,2,3,4,5,6,7,8,9,10,
            0,1,2,3,4,5,6,7,8,9,
            10,0,1,2,3,4,5,6,7,8,
            9,10,0,1,2,3,4,5,6,7,
            8,9,10,0,1,2,3,4,5,6,
            7,8,9,10,0,1,2,3,4,5,
            6,7,8,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,18,18,18,0,18,18,25,
            26,18,18,25,26,0,32,33,0,24,
            37,38,36,24,24,24,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,73,0,0,0,
            0,74,0,78,0,79,76,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,97,0,100,101,97,0,0,97,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            549,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,620,620,620,
            619,425,620,620,620,620,620,620,620,620,
            620,620,620,620,620,620,620,78,620,620,
            620,620,549,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,618,
            618,618,617,623,618,618,618,618,618,618,
            618,618,618,618,618,618,618,618,618,72,
            618,618,618,618,75,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,626,626,626,626,626,626,626,626,626,
            626,549,626,626,549,549,626,549,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,551,628,628,628,628,628,628,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,628,628,628,517,628,628,628,628,628,
            628,628,628,628,628,628,628,628,628,628,
            628,628,628,628,549,628,628,549,372,537,
            537,537,537,537,537,537,537,537,536,536,
            536,536,536,536,536,463,536,536,536,536,
            536,404,536,536,536,536,536,536,384,536,
            536,395,527,525,538,538,536,536,536,536,
            536,536,536,536,536,536,536,536,536,536,
            536,536,536,536,536,536,536,536,536,536,
            536,536,536,536,536,536,536,536,536,536,
            538,434,536,422,549,418,576,531,465,443,
            396,584,572,451,568,569,581,582,579,580,
            583,567,564,565,549,549,549,538,538,549,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,549,534,534,534,534,534,534,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,534,534,534,386,534,534,534,
            534,534,534,534,534,534,534,534,534,534,
            534,534,534,534,534,534,549,534,534,1,
            750,750,750,750,750,750,750,750,750,750,
            749,749,749,749,749,749,749,549,749,749,
            749,749,749,62,749,749,749,749,749,749,
            549,749,749,549,607,614,614,607,749,749,
            749,749,749,749,749,749,749,749,749,749,
            749,749,749,749,749,749,749,749,749,749,
            749,749,749,749,749,749,749,749,749,749,
            749,749,549,549,749,549,482,482,482,482,
            482,482,482,482,482,482,482,482,482,482,
            482,482,482,548,482,482,482,482,482,549,
            486,486,486,486,486,486,486,486,486,486,
            486,486,486,486,486,486,486,549,486,486,
            486,486,486,55,632,632,632,632,632,632,
            632,632,632,632,632,632,632,632,632,632,
            632,552,632,632,632,632,632,549,494,494,
            494,494,494,494,494,494,494,494,494,494,
            494,494,494,494,494,162,494,494,494,494,
            494,549,498,498,498,498,498,498,498,498,
            498,498,498,498,498,498,498,498,498,184,
            498,498,498,498,498,549,504,504,504,504,
            504,504,504,504,504,504,504,504,504,504,
            504,504,504,163,504,504,504,504,504,549,
            508,508,508,508,508,508,508,508,508,508,
            508,508,508,508,508,508,508,184,508,508,
            508,508,508,549,894,894,894,894,894,894,
            894,894,894,894,894,894,894,894,894,894,
            894,164,894,894,894,894,894,549,512,512,
            512,512,512,512,512,512,512,512,512,512,
            512,512,512,512,512,184,512,512,512,512,
            512,549,885,885,885,885,885,885,885,885,
            885,885,885,885,885,885,885,885,885,199,
            885,885,885,885,885,54,630,630,630,630,
            630,630,630,630,630,630,609,616,616,609,
            549,406,406,549,539,540,541,542,543,544,
            545,546,7,549,899,549,432,11,896,549,
            549,549,549,606,613,613,606,902,406,406,
            898,900,897,478,549,591,14,901,549,886,
            886,886,886,886,886,886,886,63,4,899,
            602,29,585,896,594,165,549,22,608,615,
            615,608,902,21,549,898,900,897,490,589,
            549,549,901,605,605,598,1,549,549,184,
            903,597,4,549,518,518,518,518,518,518,
            518,518,518,518,28,358,358,358,358,358,
            358,358,358,358,358,184,522,522,522,522,
            522,522,522,522,549,903,625,470,455,441,
            549,549,549,549,549,535,84,630,630,630,
            630,630,630,630,630,630,630,85,520,520,
            520,520,520,520,520,520,520,520,549,523,
            523,523,523,523,523,523,523,523,523,549,
            529,529,529,529,529,529,529,529,529,529,
            87,630,630,630,630,630,630,630,630,630,
            630,86,630,630,630,630,630,630,630,630,
            630,630,89,630,630,630,630,630,630,630,
            630,630,630,88,630,630,630,630,630,630,
            630,630,630,630,185,735,735,735,735,735,
            735,735,735,10,80,26,12,24,80,17,
            25,197,549,13,41,166,549,549,549,167,
            168,169,549,588,592,596,549,587,595,54,
            54,593,599,54,54,549,474,474,549,184,
            747,747,586,184,184,184,549,549,549,549,
            549,549,549,549,549,549,549,549,549,549,
            549,549,549,549,549,549,549,549,549,549,
            549,549,549,549,549,549,747,549,549,549,
            549,600,549,532,549,904,601,549,549,549,
            549,549,549,549,549,549,549,549,549,549,
            549,4,549,747,747,4,549,549,10
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }
    public final int asb(int index) { return 0; }
    public final int asr(int index) { return 0; }
    public final int nasb(int index) { return 0; }
    public final int nasr(int index) { return 0; }
    public final int terminalIndex(int index) { return 0; }
    public final int nonterminalIndex(int index) { return 0; }
    public final int scopePrefix(int index) { return 0;}
    public final int scopeSuffix(int index) { return 0;}
    public final int scopeLhs(int index) { return 0;}
    public final int scopeLa(int index) { return 0;}
    public final int scopeStateSet(int index) { return 0;}
    public final int scopeRhs(int index) { return 0;}
    public final int scopeState(int index) { return 0;}
    public final int inSymb(int index) { return 0;}
    public final String name(int index) { return null; }
    public final int getErrorSymbol() { return 0; }
    public final int getScopeUbound() { return 0; }
    public final int getScopeSize() { return 0; }
    public final int getMaxNameLength() { return 0; }

    public final static int
           NUM_STATES        = 66,
           NT_OFFSET         = 102,
           LA_STATE_OFFSET   = 904,
           MAX_LA            = 1,
           NUM_RULES         = 355,
           NUM_NONTERMINALS  = 42,
           NUM_SYMBOLS       = 144,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 356,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 97,
           EOLT_SYMBOL       = 103,
           ACCEPT_ACTION     = 548,
           ERROR_ACTION      = 549;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) { return 0; }
    public final int asi(int state) { return 0; }
    public final int nasi(int state) { return 0; }
    public final int inSymbol(int state) { return 0; }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
