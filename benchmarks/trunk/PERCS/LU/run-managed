#!/usr/bin/env bash

X10FLAGS="-libpath ."
HEAP=3072m
X10FLAGS="-ms$HEAP -mx$HEAP $X10FLAGS"
#DRYRUN=true
#FULLRUN=true

BK=20


if [ -z "$FULLRUN" ]; then
# Note: overwrite to reduce time
BK=3
#
# test run
#
B=$((18*$BK))
M0=$((48*$B))
M1=$((20*$B))
for i in 0 2
do
j=$((2**$i))
p=$(($j*$j))
command="x10 $X10FLAGS $X10RTTRANSPORT -np $p -cp lu.jar LU $(($M0*$j)) $B $j $j $BK"
[ -n "$DRYRUN" ] && echo "$command"
[ -z "$DRYRUN" ] && $command 2>&1 | tee -a log.lu.managed.bk$BK.$(printf "%05d" $p)
done

exit 0
fi


#
# full run for measurement
#
B=$((18*$BK))
M0=$((48*$B))
M1=$((20*$B))
for i in $(seq 7 -1 0)
do
j=$((2**$i))
p=$(($j*$j))
command="x10 $X10FLAGS $X10RTTRANSPORT -np $((2*$p)) -cp lu.jar LU $((($M0+$M1)*$j)) $B $((2*$j)) $j $BK"
[ -n "$DRYRUN" ] && echo "$command"
[ -z "$DRYRUN" ] && $command 2>&1 | tee -a log.lu.managed.bk$BK.$(printf "%05d" $((2*$p)))
command="x10 $X10FLAGS $X10RTTRANSPORT -np $p -cp lu.jar LU $(($M0*$j)) $B $j $j $BK"
[ -n "$DRYRUN" ] && echo "$command"
[ -z "$DRYRUN" ] && $command 2>&1 | tee -a log.lu.managed.bk$BK.$(printf "%05d" $p)
done
