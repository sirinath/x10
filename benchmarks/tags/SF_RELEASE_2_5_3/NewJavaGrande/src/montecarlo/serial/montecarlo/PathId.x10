/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
package montecarlo.serial.montecarlo;

import x10.compiler.*;

/**
 * X10 port of montecarlo benchmark from Section 2 of Java Grande Forum Benchmark Suite (Version 2.0).
 *
 * @author Vivek Sarkar (vsarkar@us.ibm.com)
 *
 * Porting issues identified:
 * 4) Declare name as non-nullable (default), and remove null check on name
 * 5) No need to extend x10.lang.Object because Universal already does that.
 */
public class PathId extends Universal {

	//------------------------------------------------------------------------
	// Class variables.
	//------------------------------------------------------------------------

	/**
	 * A class variable.
	 */
	public static val debug: boolean = true;

	/**
	 * The prompt to write before any debug messages.
	 */
	protected static val prompt: String = "PathId> ";

	//------------------------------------------------------------------------
	// Instance variables.
	//------------------------------------------------------------------------

	/**
	 * Simple string name.
	 */
	private var name: String;

	/**
	 * The start date for the path, in YYYYMMDD format.
	 */
	private var startDate: int = 0;

	/**
	 * The end date for the path, in YYYYMMDD format.
	 */
	private var endDate: int = 0;

	/**
	 * The change in time between two successive data values.
	 */
	private var dTime: double = Double.NaN;

	//------------------------------------------------------------------------
	// Constructors.
	//------------------------------------------------------------------------

	/**
	 * Default constructor.
	 */
	public def this(): PathId {
		super();
		set_prompt(prompt);
		set_DEBUG(debug);
	}

	/**
	 * Another constructor.
	 *
	 * @param name The name for the security to record.
	 */
	public def this(var name: String): PathId {
		set_prompt(prompt);
		set_DEBUG(debug);
		this.name = name;
	}

	//------------------------------------------------------------------------
	// Methods.
	//------------------------------------------------------------------------
	//------------------------------------------------------------------------
	// Accessor methods for class PathId.
	// Generated by 'makeJavaAccessor.pl' script.  HWY.  20th January 1999.
	//------------------------------------------------------------------------

	/**
	 * Accessor method for private instance variable <code>name</code>.
	 * @return Value of instance variable <code>name</code>.
	 * @exception DemoException thrown if instance variable <code>name</code> is undefined.
	 */
	public def get_name(): String {
		// (VIVEK) The following test is no longer necessary because name is not nullable
		//if (this.name == null)
		//	throw new DemoException("Variable name is undefined!");
		return (this.name);
	}

	/**
	 * Set method for private instance variable <code>name</code>.
	 * @param name the value to set for the instance variable <code>name</code>.
	 */
	@NonEscaping final public def set_name(var name: String): void {
		this.name = name;
	}

	/**
	 * Accessor method for private instance variable <code>startDate</code>.
	 * @return Value of instance variable <code>startDate</code>.
	 * @exception DemoException thrown if instance variable <code>startDate</code> is undefined.
	 */
	public def get_startDate(): int {
		if (this.startDate == 0)
			throw new DemoException("Variable startDate is undefined!");
		return (this.startDate);
	}

	/**
	 * Set method for private instance variable <code>startDate</code>.
	 * @param startDate the value to set for the instance variable <code>startDate</code>.
	 */
	@NonEscaping final public def set_startDate(var startDate: int): void {
		this.startDate = startDate;
	}

	/**
	 * Accessor method for private instance variable <code>endDate</code>.
	 * @return Value of instance variable <code>endDate</code>.
	 * @exception DemoException thrown if instance variable <code>endDate</code> is undefined.
	 */
	public def get_endDate(): int {
		if (this.endDate == 0)
			throw new DemoException("Variable endDate is undefined!");
		return (this.endDate);
	}

	/**
	 * Set method for private instance variable <code>endDate</code>.
	 * @param endDate the value to set for the instance variable <code>endDate</code>.
	 */
	@NonEscaping final public def set_endDate(var endDate: int): void {
		this.endDate = endDate;
	}

	/**
	 * Accessor method for private instance variable <code>dTime</code>.
	 * @return Value of instance variable <code>dTime</code>.
	 * @exception DemoException thrown if instance variable <code>dTime</code> is undefined.
	 */
	public def get_dTime(): double {
		if (this.dTime == Double.NaN)
			throw new DemoException("Variable dTime is undefined!");
		return (this.dTime);
	}

	/**
	 * Set method for private instance variable <code>dTime</code>.
	 * @param dTime the value to set for the instance variable <code>dTime</code>.
	 */
	@NonEscaping final public def set_dTime(var dTime: double): void {
		this.dTime = dTime;
	}

	//------------------------------------------------------------------------

	/**
	 * Clone the instance variables in this class, from another instance
	 * of this class.
	 *
	 * @param obj the PathId object from which to copy.
	 * @exception DemoException thrown if the values to be copied contain
	 *                          any undefined objects.
	 */
	@NonEscaping final public def copyInstanceVariables(var obj: PathId): void {
		this.name      = obj.get_name();
		this.startDate = obj.get_startDate();
		this.endDate   = obj.get_endDate();
		this.dTime     = obj.get_dTime();
	}

	/**
	 * Dumps the contents of the fields, to standard-out, for debugging.
	 */
	public def dbgDumpFields(): void {
		//dbgPrintln("name = "     +this.name);
		//dbgPrintln("startDate = "+this.startDate);
		//dbgPrintln("endDate = "  +this.endDate);
		//dbgPrintln("dTime = "    +this.dTime);
	}
}
