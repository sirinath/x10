define(`Now',
`async(here) clocked$1 finish async(here) $2')
// Automatically generated by the command
// m4 ClockTest2.m4 > ClockTest2.x10
// Do not edit
import harness.x10Test;

/**
 * Test for 'now'.  Very likely to fail if now is not translated
 * properly (but depends theoretically on the scheduler).
 */
public class ClockTest2 extends x10Test {

	val val:int = 0;
	const N = 10;

	public def run():boolean = {
		varl c = clock.make();
		for (var i:Int = 0; i < N; i++) {
			Now((c), {
				async(here) {
					atomic {
						val++;
					}
				}
			})
			next;
			var temp:Int;
			atomic { temp = val; }
			if (temp != i+1) return false;
		}
		if (c.dropped())
			return false;
		c.drop();
		if (!c.dropped())
			return false;

		return true;
	}

	public static def main(args: Rail[String]):Void {
		new ClockTest2().executeAsync();
	}
}

