// ateach (0 1 2 : 3) clocked(5) 4
{
	x10.lang.dist #2__distCopy = #3; // make copy to avoid recomputation
	for (java.util.Iterator #2__ = #2__distCopy.iterator();
		 #2__.hasNext(); )
	{
		#0 #1 #2 = (#1) #2__.next();
		((x10.runtime.Place) #2__distCopy.get(#2)).runAsyncLater
			(new x10.runtime.Activity(new x10.runtime.List() {
				public java.util.List run() {
					java.util.LinkedList clocks = new java.util.LinkedList();
					#5
					return clocks;
				}
			}.run()) {
				public void run() {
					#4
				}
			});
	}
}
