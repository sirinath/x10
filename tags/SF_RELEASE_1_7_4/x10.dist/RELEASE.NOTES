Release 1.7.4

This release includes both the C++ and Java code generation backends.

No language changes were made since the 1.7.3 release of X10:

The following features described in the 1.7 language manual do not
currently work with the Java backend and will be fixed in the subsequent
releases:

- Type parameters on closures
- Non-static type definitions as class or interface members
  (static type defs do work)
- Type definitions as package members (i.e., in the outermost scope of
  a compilation unit)
- AST externalization to XML
- Shared local variables
- Extern methods

Additionally, the following features described in the 1.7 language
manual do not currently work with the C++ backend and will be fixed in
the subsequent releases:

- Garbage collection on Cygwin and AIX
- Generic virtual methods
- Exception stack traces on Cygwin and AIX

Here's a list of known issues with the C++ backend:

- Default values are not assigned to some value types
- Static initialization is sometimes incorrectly ordered (at the moment
  it's very brittle, though somewhat controllable by the link order of
  files)
- Operator overloading does not work correctly sometimes
- Hash codes are not computed correctly for some classes
- use of xlC as a postcompiler is not recommended.

Below is a summary of JIRA issues addressed for the X10 1.7.4 release.

** New Feature
    * [XTENLANG-357] - Build pre-compiled Java version of XRX
    * [XTENLANG-360] - -O flag for x10c++
    * [XTENLANG-362] - Remove conditional fields

** Improvement
    * [XTENLANG-400] - Redundant generation of "Boxed" classes for boxing operations

** Bug
    * [XTENLANG-16] - "interface methods cannot have body" for interfaces with properties
    * [XTENLANG-21] - Can't determine type of ternary expression involving  (int)=>int
    * [XTENLANG-29] - "Unknown value type class java.lang.String" with value class
    * [XTENLANG-33] - ClassCastException at runtime when casting null
    * [XTENLANG-45] - runtime ClassCastException in s+=x for s:String
    * [XTENLANG-56] - "point.java: class Point should be declared in Point.java" if Point.x10 does not have a java NativeRep
    * [XTENLANG-130] - Conversions ($convert) are not applied for ==.
    * [XTENLANG-136] - Generic methods
    * [XTENLANG-147] - "Cannot return value from void method" when passing method selector as function argument
    * [XTENLANG-175] - val z = z
    * [XTENLANG-271] - Property fields do not have the PROPERTY flag set
    * [XTENLANG-285] - =>{} binds less tightly than ()
    * [XTENLANG-300] - Use of {T<:C} constraint in simple generic class definition generates bad Java code
    * [XTENLANG-358] - The X10 compiler ignores access restriction modifiers on classes
    * [XTENLANG-365] - Provide 32 and 64 bit intel/linux versions of C++ code
    * [XTENLANG-366] - displayed help contains duplicate OPTIMIZE entry
    * [XTENLANG-367] - throw from finally block
    * [XTENLANG-370] - readFloat() from a binary file returns NaN
    * [XTENLANG-371] - Array.Make leads to hang
    * [XTENLANG-388] - Parser does not deal well with missing val in field declaration
    * [XTENLANG-390] - c++ deadclock
    * [XTENLANG-392] - x10c++ post-compiler not invoked by default
    * [XTENLANG-397] - No default "val" for fields
    * [XTENLANG-399] - update build.xml,. nightly test scripts, etc for polyglot move
    * [XTENLANG-410] - Overloaded type definition fails to compile

** Task
    * [XTENLANG-385] - Remove annotations from code in x10.dist/samples

** Sub-task
    * [XTENLANG-250] - Need specification for Object.className() in lang spec.
    * [XTENLANG-261] - Allow break/continue/return in finally blocks in C++

For the details of JIRA issues fixed in this release, see
http://jira.codehaus.org/browse/XTENLANG/fixforversion/14804

Additional bug fixes have been made throughout the system.

Please use the X10 JIRA to report bugs, after ensuring the problem is
not already reported:
http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&pid=11812&resolution=-1

