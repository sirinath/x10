/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a free variable in DepType that is not parametrically consistent 
 * causes compilation failure.
 *@author pvarma
 *
 */

import harness.x10Test;;

public class DepTypeConsistency1_MustFailCompile extends x10Test { 

/* free variable i is not parametrically consistent */
    class Tester(public val i: int{i == 2}, , public const i == 3: Tester{i == 3} = i == 3)Tester{i == 3} /*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a free variable in DepType that is not parametrically consistent 
 * causes compilation failure.
 *@author pvarma
 *
 */

import harness.x10Test;

public class DepTypeConsistency1_MustFailCompile extends x10Test { 

/* free variable i is not parametrically consistent */
    class Tester(int(:i == 2) i : i == 3 ) {
      public def this(var arg: int): Tester = { property(arg);}/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a free variable in DepType that is not parametrically consistent 
 * causes compilation failure.
 *@author pvarma
 *
 */

import harness.x10Test;

public class DepTypeConsistency1_MustFailCompile extends x10Test { 

/* free variable i is not parametrically consistent */
    class Tester(int(:i == 2) iint{i == 2}*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a free variable in DepType that is not parametrically consistent 
 * causes compilation failure.
 *@author pvarma
 *
 */

import harness.x10Test;

public class DepTypeConsistency1_MustFailCompile extends x10Test { 

/* free variable i is not parametrically consistent */
    class Tester(int(:i == 2) i : i == 3 ) {
      public Tester(int arg) { property(arg);}
    }
	
 
    public def run(): boolean = { 
	 return true;
    }
	
    public static def main(var args: Rail[String]): void = {
        new DepTypeConsistency1_MustFailCompile().execute();
    }
   

		
}
