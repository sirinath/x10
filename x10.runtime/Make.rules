#########################
# User-servicable Parts #
#########################

CXX ?= g++
AR ?= ar

__m_have_abspath:=$(abspath /)
ifndef __m_have_abspath
  abspath=$(shell cd $1 && /bin/pwd)
else
  abspath=$(abspath $1)
endif

CXXFLAGS += -g

#avoid specifying -NDEBUG twice
ifdef OPTIMIZE
  USE_NDEBUG := -DNDEBUG
  X10CPPFLAGS += -optimize
endif
ifdef NO_CHECKS
  USE_NDEBUG := -DNDEBUG
  CXXFLAGS += -DNO_CHECKS
  X10CPPFLAGS += -NO_CHECKS
endif
CXXFLAGS += $(USE_NDEBUG)

ifdef USE_BFD
  CXXFLAGS += -DUSE_BFD
endif

ifdef JAVA_HOME
  ifeq ($(shell uname -s),AIX)
      JNI_INCLUDES = -I$(JAVA_HOME)/include -I$(JAVA_HOME)/inclue/aix
  else 
    ifeq ($(shell uname -s),Linux)
      JNI_INCLUDES = -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/linux
    else
      ifeq ($(firstword $(subst _, ,$(shell uname -s))),CYGWIN)
        JNI_INCLUDES = -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/win32
      else
        ifeq ($(shell uname -s),Darwin)
        # TODO!!
        endif
      endif
    endif
  endif
endif

ifndef NO_VAR_OVERRIDE

ifdef ENABLE_CROSS_COMPILE_BGP
  override MPICXX = /bgsys/drivers/ppcfloor/comm/bin/mpicxx
  #override CXX = /bgsys/ibm_compilers/gcc-4.3.2/gnu-linux/bin/powerpc-bgp-linux-g++
  #override CC =/bgsys/ibm_compilers/gcc-4.3.2/gnu-linux/bin/powerpc-bgp-linux-gcc
  override CXX = /bgsys/drivers/ppcfloor/gnu-linux/bin/powerpc-bgp-linux-g++
  override CC =/bgsys/drivers/ppcfloor/gnu-linux/bin/powerpc-bgp-linux-gcc
  export X10RT_PLATFORM=bgp
else

  ifeq ($(shell uname -s),AIX)


    ifdef USE_GCC
      export X10RT_PLATFORM=aix_gcc
      ifdef OPTIMIZE
        override CXXFLAGS += -O2 -finline-functions
      endif
      override CXXFLAGS += -maix64
      MPICXX ?= mpicxx
    else	
      export X10RT_PLATFORM=aix_xlc
      CXX = mpCC_r
      MPICXX ?= mpCC_r
      override CXXFLAGS -= -g
      ifndef USE_32BIT
        override CXXFLAGS += -q64
      else
        override CXXFLAGS += -q32
      endif
      ifdef OPTIMIZE
        override CXXFLAGS += -O3 -qinline -qarch=pwr5 -qtune=pwr5 -qhot
      endif
      override CXXFLAGS += -qrtti=all
      override CXXFLAGS += -qsuppress=1540-0809:1500-029:1540-1101
      override CXXFLAGS += $(XLC_EXTRA_FLAGS)
      ifeq ($(AR),ar) # use AIX default ar
        AR = /usr/bin/ar
      endif
    endif

    # FIXME
    ifndef USE_32BIT
      ARFLAGS := -X64 $(ARFLAGS)
    else
      ARFLAGS := -X32 $(ARFLAGS)
    endif

  else

    MPICXX ?= mpicxx

    ifdef OPTIMIZE
      override CXXFLAGS += -O2 -finline-functions
    endif

    override CXXFLAGS += -ansi -pedantic -Wall -Wextra -Wno-long-long -Wno-unused-parameter
    ifeq ($(shell uname -s),Linux)
      override CXXFLAGS += -pthread
      ifeq ($(shell uname -m),x86_64)
        export X10RT_PLATFORM=linux_x86_64
      else
        ifeq ($(shell uname -m),ppc64)
          export X10RT_PLATFORM=linux_ppc_64
        else
          export X10RT_PLATFORM=linux_x86_32
        endif
      endif
    else
      ifeq ($(firstword $(subst _, ,$(shell uname -s))),CYGWIN)
        export X10RT_PLATFORM=cygwin
      else
        ifeq ($(shell uname -s),Darwin)
          export X10RT_PLATFORM=$(shell echo | gcc -E -dM - | grep -q x86_64 && echo darwin64 || echo darwin)
	  export LIBTOOL=glibtool
        else
          ifeq ($(shell uname -s),SunOS)
            export X10RT_PLATFORM=sunos
          endif
        endif
      endif
    endif
  endif
endif

endif




