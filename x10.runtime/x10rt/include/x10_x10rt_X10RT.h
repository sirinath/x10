/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class x10_x10rt_X10RT */

#ifndef _Included_x10_x10rt_X10RT
#define _Included_x10_x10rt_X10RT
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: state */
/* Inaccessible static: places */
/* Inaccessible static: here */
/* Inaccessible static: numProgressThreads */
#undef x10_x10rt_X10RT_REPORT_UNCAUGHT_USER_EXCEPTIONS
#define x10_x10rt_X10RT_REPORT_UNCAUGHT_USER_EXCEPTIONS 1L
/* Inaccessible static: _00024assertionsDisabled */
/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_init
 * Signature: (I[Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1init
  (JNIEnv *, jclass, jint, jobjectArray);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_finalize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1finalize
  (JNIEnv *, jclass);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_nplaces
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1nplaces
  (JNIEnv *, jclass);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_nhosts
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1nhosts
  (JNIEnv *, jclass);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_here
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1here
  (JNIEnv *, jclass);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_is_host
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_x10_x10rt_X10RT_x10rt_1is_1host
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_is_cuda
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_x10_x10rt_X10RT_x10rt_1is_1cuda
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_is_spe
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_x10_x10rt_X10RT_x10rt_1is_1spe
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_parent
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1parent
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_nchildren
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1nchildren
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_child
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1child
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_child_index
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_x10_x10rt_X10RT_x10rt_1child_1index
  (JNIEnv *, jclass, jint);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_probe
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10_x10rt_X10RT_x10rt_1probe
  (JNIEnv *, jclass);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_remote_op_fence
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10_x10rt_X10RT_x10rt_1remote_1op_1fence
  (JNIEnv *, jclass);

/*
 * Class:     x10_x10rt_X10RT
 * Method:    x10rt_barrier
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_x10_x10rt_X10RT_x10rt_1barrier
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
