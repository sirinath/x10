TOP="$(cd "$(dirname $0)/.." && pwd)"
if [[ `uname -s` = CYGWIN* ]]; then TOP="$(cygpath -aw "$TOP")"; fi

help=""
time="" 
verbose=""
ext_cp=""
extra_cp=""
ext=""
java_args=""
args=""

parse=true
while [ -n "$1" ]; do
    if [ -z "$parse" ]; then
        args="$args '$1'"
        shift
        continue
    fi
    case "$1" in
        -h|-help|--help) help="1";;
        -v|-verbose|--verbose) verbose="1";;
        -t|-time) time="time ";;
        -classpath|-cp) shift; extra_cp="$1";;
        -profile) profile="-Xrunhprof:cpu=samples";;
        -config) shift; config="$1.cfg";;
        -ext) shift; ext=$1;;
        -J*) java_args="${java_args} '${1##-J}'";;
        --) parse=;;
        *) args="$args '$1'";;
    esac
    shift
done

if [ -n "$help" -o -z "$args" ]; then
    cat << EOF
Usage: x10c [options] <source-file>.x10 ...
where [options] includes:
    -sourcepath <path>       source path
    -classpath <path>        search path for class files
    -config <conf>           read configuration <conf> from etc${FILE_SEP}<conf>.cfg
    -version                 print version info
    -t -time                 display execution time
    -v -verbose --verbose    print verbose debugging information
    -h -help --help          print this message
    -disable <pass>          disable compiler pass <pass>
                             valid passes are: async-elimination
EOF
    exit 1
fi

if [ -n "$JAVA_HOME" -a -e "$JAVA_HOME/bin/java" ]; then
    JAVA="`cygpath -aw "$JAVA_HOME/bin/java"`"
elif [ -n "$JRE_HOME" -a -e "$JRE_HOME/bin/java" ]; then
    JAVA="`cygpath -aw "$JRE_HOME/bin/java"`"
else
    echo "JAVA_HOME ($JAVA_HOME) is not pointing to a JRE or a JDK"
    exit 1
fi

CONFIG_DIR="${TOP}${FILE_SEP}etc"
LIB_DIR="${TOP}${FILE_SEP}lib"

if [ -z "$config" ]; then
    config="${CONFIG_FILE}"
fi
config="-Dx10.configuration=${CONFIG_DIR}${FILE_SEP}${config}"

if [ -n "$extra_cp" ]; then
    extra_cp="${PATH_SEP}${extra_cp}"
fi

if [ -z "$ext" ]; then
    ext="x10"
else
    ext_cp="${PATH_SEP}${LIB_DIR}${FILE_SEP}${ext}.jar"
fi
extargs="-ext ${ext}"

#classpath="${TOP}${FILE_SEP}..${FILE_SEP}x10.compiler${FILE_SEP}classes${PATH_SEP}${TOP}${FILE_SEP}..${FILE_SEP}x10.runtime${FILE_SEP}classes${PATH_SEP}${TOP}${FILE_SEP}..${FILE_SEP}polyglot2${FILE_SEP}bin${PATH_SEP}${TOP}${FILE_SEP}classes${PATH_SEP}${TOP}${FILE_SEP}..${FILE_SEP}lpg${FILE_SEP}lib${FILE_SEP}lpg.jar${ext_cp}${extra_cp}"
classpath="${LIB_DIR}${FILE_SEP}x10c.jar${PATH_SEP}${LIB_DIR}${FILE_SEP}x10.jar${PATH_SEP}${LIB_DIR}${FILE_SEP}polyglot2.jar${PATH_SEP}${LIB_DIR}${FILE_SEP}lpg.jar${ext_cp}${extra_cp}"

command="\"$JAVA\" -Xmx128m \"$config\" $profile -classpath \"$classpath\" ${java_args} polyglot.main.Main $extargs $args"

[ -n "$verbose" ] && echo "$command"

eval "$time$command"
exit $?

