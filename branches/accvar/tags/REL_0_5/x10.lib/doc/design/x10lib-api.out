\BOOKMARK [1][]{section.1}{1 Introduction}{}
\BOOKMARK [1][]{section.2}{2 API}{}
\BOOKMARK [1][]{section.3}{3 X10 RTS API Definition}{}
\BOOKMARK [2][]{subsection.3.1}{3.1 Scenario}{section.3}
\BOOKMARK [2][]{subsection.3.2}{3.2 Declaration and Initialization}{section.3}
\BOOKMARK [3][]{subsubsection.3.2.1}{3.2.1 Activity Spawn}{subsection.3.2}
\BOOKMARK [3][]{subsubsection.3.2.2}{3.2.2 Activity Block}{subsection.3.2}
\BOOKMARK [3][]{subsubsection.3.2.3}{3.2.3 Activity Completes}{subsection.3.2}
\BOOKMARK [3][]{subsubsection.3.2.4}{3.2.4 Clock Registration}{subsection.3.2}
\BOOKMARK [3][]{subsubsection.3.2.5}{3.2.5 Clock Deregistration}{subsection.3.2}
\BOOKMARK [3][]{subsubsection.3.2.6}{3.2.6 Clock Resume}{subsection.3.2}
\BOOKMARK [3][]{subsubsection.3.2.7}{3.2.7 Clock quiescence}{subsection.3.2}
\BOOKMARK [2][]{subsection.3.3}{3.3 API for PGAS and Active Messages}{section.3}
\BOOKMARK [3][]{subsubsection.3.3.1}{3.3.1 GAS Initialization and Management}{subsection.3.3}
\BOOKMARK [3][]{subsubsection.3.3.2}{3.3.2 Active Messages}{subsection.3.3}
\BOOKMARK [3][]{subsubsection.3.3.3}{3.3.3 Memory transfer operations}{subsection.3.3}
\BOOKMARK [3][]{subsubsection.3.3.4}{3.3.4 Read-Modify-Write Operatons}{subsection.3.3}
\BOOKMARK [3][]{subsubsection.3.3.5}{3.3.5 Collective Operations}{subsection.3.3}
\BOOKMARK [2][]{subsection.3.4}{3.4 Array}{section.3}
