/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
import java.util.Random;
import harness.x10Test;;

/**
 * User defined type array bounds test - 3D.
 *
 * Randomly generate 3D arrays and indices.
 *
 * See if the array index out of bounds exception occurs
 * in the right conditions.
 *
 * @author kemal 11/2005
 */
public class UserArrayBounds3D extends x10Test {

	public def run(): boolean = {
		final val COUNT: int = 100;
		final val L: int = 3;
		final val K: int = 1;
		for(var n: int = 0; n < COUNT; n++) {
			var i: int = ranInt(-L-K, L+K);
			var j: int = ranInt(-L-K, L+K);
			var k: int = ranInt(-L-K, L+K);
			var lb1: int = ranInt(-L, L);
			var lb2: int = ranInt(-L, L);
			var lb3: int = ranInt(-L, L);
			var ub1: int = ranInt(lb1, L);
			var ub2: int = ranInt(lb2, L);
			var ub3: int = ranInt(lb3, L);
			var withinBounds: boolean = arrayAccess(lb1, ub1, lb2, ub2, lb3, ub3, i, j, k);
			chk(iff(withinBounds,
						i>=lb1 && i<=ub1 &&
						j>=lb2 && j<=ub2 &&
						k>=lb3 && k<=ub3));
		}
		return true;
	}

	/**
	 * create a[lb1..ub1,lb2..ub2,lb3..ub3] then access a[i,j,k],
	 * return true iff
	 * no array bounds exception occurred
	 */
	private static def arrayAccess(var lb1: int, var ub1: int, var lb2: int, var ub2: int, var lb3: int, var ub3: int, var i: int, var j: int, var k: int): boolean = {
		//pr(lb1+" "+ub1+" "+lb2+" "+ub2+" "+lb3+" "+ub3+" "+i+" "+j+" "+k);

		var a: Array[boxedInt] = new Array[boxedInt](Dist.makeConstant([lb1..ub1, lb2..ub2, lb3..ub3], here), (var point [i,j,k]: point): boxedInt => { return new boxedInt(0); });

		var withinBounds: boolean = true;
		try {
			a(i, j, k) = new boxedInt((int) 0xabcdef07L);
			chk(a(i, j, k).equals(new boxedInt((int) 0xabcdef07L)));
		} catch (var e: ArrayIndexOutOfBoundsException) {
			withinBounds = false;
		}
		//pr(lb1+" "+ub1+" "+lb2+" "+ub2+" "+lb3+" "+ub3+" "+i+" "+j+" "+k+" "+withinBounds);

		return withinBounds;
	}

	// utility methods after this point

	/**
	 * print a string
	 */
	private static def pr(var s: String): void = {
		System.out.println(s);
	}

	/**
	 * true iff (x if and only if y)
	 */
	private static def iff(var x: boolean, var y: boolean): boolean = {
		return x == y;
	}

	public static def main(var args: Rail[String]): void = {
		new UserArrayBounds3D().execute();
	}

	static class boxedInt {
		var val: int;
		public def this(var x: int): boxedInt = { val = x; }
		public def equals(var other: boxedInt): boolean = {
			return this.val == other.val;
		}
	}
}
