/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a nullable type can have a  dep clause.
 *@author vj
 *
 */

import harness.x10Test;;

public class DepClauseForNullableType extends x10Test { 
    class Test(public val k: int, ) /*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a nullable type can have a  dep clause.
 *@author vj
 *
 */

import harness.x10Test;

public class DepClauseForNullableType extends x10Test { 
    class Test(int k) { 
        def this(var kk: int): Test = {
            super();
	    property(kk);
        }/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a nullable type can have a  dep clause.
 *@author vj
 *
 */

import harness.x10Test;

public class DepClauseForNullableType extends x10Test { 
    class Test(int kint*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
/** Tests that a nullable type can have a  dep clause.
 *@author vj
 *
 */

import harness.x10Test;

public class DepClauseForNullableType extends x10Test { 
    class Test(int k) { 
        Test(int kk) {
            super();
	    property(kk);
        }
    }
    
    var n: nullable < Test> ({self == null});
    
    
    public def run(): boolean = {
	
	return true;
    }
	
    public static def main(var args: Rail[String]): void = {
        new DepClauseForNullableType().execute();
    }
   

		
}
