/*
 *
 * (C) Copyright IBM Corporation 2006
 *
 *  This file is part of X10 Test.
 *
 */
//LIMITATION:
//This test case will not meet expectations. It is a limitation of the current release.
import harness.x10Test;;

/**
 * Test to check that unsafe is being parsed correctly.
 */
public class AllArrayExternUnsafe extends x10Test {

	native public static def howdy(var yyi: Array[int], var yys: Array[short], var yyl: Array[long], var yyc: Array[char], var yyb: Array[byte], var yyf: Array[float], var yyd: Array[double], var yybool: Array[boolean]): void;

	static { System.loadLibrary("AllArrayExternUnsafe"); }

	public def run(): boolean = {
		var high: int = 10;
		var verified: boolean = false;
		var d: dist = Dist.makeConstant([0..high], here);
		var yint: Array[int] = new Array[int](d);
		var yshort: Array[short] = new Array[short](d);
		var ydouble: Array[double] = new Array[double](d);
		var yfloat: Array[float] = new Array[float](d);
		var ychar: Array[char] = new Array[char](d);
		var ybyte: Array[byte] = new Array[byte](d);
		var yboolean: Array[boolean] = new Array[boolean](d);
		var ylong: Array[long] = new Array[long](d);

		for (var j: int = 0; j < 10; ++j) {
			yint(j) = j;
			yshort(j) = (short)j;
			ybyte(j) = (byte)j;
			ychar(j) = (char)j;
			yfloat(j) = (float)j;
			ydouble(j) = (double)j;
			ylong(j) = (long)j;
			yboolean(j) = false;
		}
		

		howdy(yint,yshort,ylong,ychar,ybyte,yfloat,ydouble,yboolean);

		for (var j: int = 0; j < 10; ++j) {
			if(!compare(j,(int)yint(j),"int")) return false;
			if(!compare(j,(int)yshort(j),"short")) return false;
			if(!compare(j,(int)yfloat(j),"float")) return false;
			if(!compare(j,(int)ydouble(j),"double")) return false;
			if(!compare(j,(int)ybyte(j),"byte")) return false;
			if(!compare(j,(int)ychar(j),"char")) return false;
			if(!compare(j,(int)ylong(j),"long")) return false;
			if(!yboolean(j)){
			   System.out.println("yboolean["+j+"] is false");
			   return false;
			}
			//System.out.println("y["+j+"]:"+(y[j]));
		}
		return true;
	}
	private static def compare(var j: int, var value: int, var name: String): boolean = {
		var expected: int = j + 100;
		if (value != expected) {
			System.out.println("y"+name+"["+j+"] = "+value+" != "+expected);
			return false;
		}
		return true;
	}

	public static def main(var args: Rail[String]): void = {
		new AllArrayExternUnsafe().execute();
	}
}
