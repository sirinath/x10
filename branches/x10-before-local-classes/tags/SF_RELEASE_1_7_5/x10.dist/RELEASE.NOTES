Release 1.7.5

This release includes both the C++ and Java code generation backends.

The default implementation of X10's async construct has been changed
to use dynamic load balancing based on an implementation of a
fork-join library. For many programs, this yields a significant
performance and scalability improvement over X10 1.7.4.  However, as
currently implemented the framework does not fully support the use of
futures or conditional atomic statements.  Dynamic load balancing can
be disabled by giving the -NO_STEALS=true argument to x10 (for the
Java backend) or by setting the environment variable X10_NO_STEALS to
true (for the C++ backend).

There were no language changes since the 1.7.4 release of X10.

The following features described in the 1.7 language manual do not
currently work with the Java backend and will be fixed in the subsequent
releases:

- Type parameters on closures
- Non-static type definitions as class or interface members
  (static type defs do work)
- Type definitions as package members (i.e., in the outermost scope of
  a compilation unit)
- AST externalization to XML
- Shared local variables
- Extern methods

Additionally, the following features described in the 1.7 language
manual do not currently work with the C++ backend and will be fixed in
the subsequent releases:

- Garbage collection on Cygwin and AIX
- Generic virtual methods
- Exception stack traces on Cygwin

Here's a list of known issues with the C++ backend:

- Default values are not assigned to some value types
- Static initialization is sometimes incorrectly ordered (at the moment
  it's very brittle, though somewhat controllable by the link order of
  files)
- Operator overloading does not work correctly sometimes
- Hash codes are not computed correctly for some classes

Below is a summary of JIRA issues addressed for the X10 1.7.5 release.
** New Feature
    * [XTENLANG-227] - Fix the C++ runtime to build with xlC on AIX
    * [XTENLANG-291] - Implement asyncs using Fork-Join library

** Improvement
    * [XTENLANG-245] - Reduce binary size w/ C++ back-end
    * [XTENLANG-443] - Implement all standard functions in x10.lang.Math
    * [XTENLANG-120] - Native layer implementation of java.util.concurrent.atomic.Fence

** Bug
    * [XTENLANG-238] - Atomic primitive types are not implemented for C++
    * [XTENLANG-393] - FastArray g++ incomplete type error
    * [XTENLANG-419] - Rail/ValRal implementation dependent on implementation-specific details of C++ object model
    * [XTENLANG-420] - Unused variable warnings

For the details of JIRA issues fixed in this release, see
http://jira.codehaus.org/browse/XTENLANG/fixforversion/15283

Additional bug fixes have been made throughout the system.

Please use the X10 JIRA to report bugs, after ensuring the problem is
not already reported:
http://jira.codehaus.org/secure/IssueNavigator.jspa?reset=true&&pid=11812&resolution=-1

