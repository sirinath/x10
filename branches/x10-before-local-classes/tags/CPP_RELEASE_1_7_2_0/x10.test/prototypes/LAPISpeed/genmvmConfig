#!/bin/ksh 

UsageError()
{
    	echo "Usage: `basename $0`: -o <config-filename> -vm <num vms> [ -port <starting port addr>]"
	echo "                   -place <num places>"
	echo "                   -host <hostname>"
	exit 1
}
checkUsage()
{
    set -x
    if [[ $# -lt 8 ]]; then
	UsageError
    fi
    
    while [[ $# -gt 0 ]]; do
	    case $1 in
		(-o) OUTFILE=$2 ; shift 2;;
		(-vm) VM_COUNT=$2 ; shift 2;;
		(-port) STARTING_PORT=$2; shift 2;;
		(-place) NUM_PLACES=$2; shift 2;;
		(-host) HOSTNAME=$2; shift 2;;
		(-*) UsageError ;;
	    esac
    done

    if [[ $VM_COUNT -lt 1 ]]; then
	echo "Invalid VM count: $VM_COUNT"
	exit 1
    fi
    if [[ $NUM_PLACES -lt $VM_COUNT ]]; then
	echo "Number places ($NUM_PLACES) < number of VMs ($VM_COUNT)"
	exit 1
    fi
    touch $OUTFILE
    if [[ ! -w $OUTFILE ]]; then
	echo "Config file $OUTFILE cannot be created"
	exit 1
    fi


 
    echo "VM Count:$VM_COUNT Starting Port:$STARTING_PORT ConfigFile:$OUTFILE"
}
#-------------------------------------------
	STARTING_PORT=62650
	checkUsage $*
	

	

cat <<EOF > $OUTFILE
# This file was automatically generated by `basename $0` on `date`

LOAD=LAPISupport
STATISTICS_DISABLE=none
NUMBER_OF_LOCAL_PLACES=$NUM_PLACES

NUMBER_OF_VMS=$VM_COUNT
SAMPLING_FREQUENCY_MS=0
EOF

count=0
portNum=$STARTING_PORT
averagePlacePerVM=$(( $NUM_PLACES / $VM_COUNT ))
placeCount=$NUM_PLACES
while [[ $count -ne $VM_COUNT ]]; do
    echo "VM_[$count].hostName=$HOSTNAME" >> $OUTFILE
    echo "VM_[$count].portNumber=$portNum" >> $OUTFILE
   
    if [[ $count -eq $(( VM_COUNT - 1 )) ]]; then
	echo "VM_[$count].numberOfPlaces=$placeCount" >> $OUTFILE
    else
	echo "VM_[$count].numberOfPlaces=$averagePlacePerVM" >> $OUTFILE
    fi
    placeCount=$(( placeCount - averagePlacePerVM ))
    portNum=$(( portNum + 1 ))
    count=$(( count + 1 ))
done


