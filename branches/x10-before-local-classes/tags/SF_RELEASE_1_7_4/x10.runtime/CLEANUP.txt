This file lists clean-up items in x10.runtime that need to be completed:

1) 
Change package name from com.ibm.torolab to x10.runtime.JITinterface
Needs documentation.
Document three files as convention that can be used by any JIT compiler.


2) x10.annotations.NoSideEffects
a) is this checked?
b) does this help performance

3) x10.array (Christoph, Igor)
ArbitraryRegion.java - add documentation
  Add RankMismatchException to X10 language spec
  Use generic version of TreeSet
ArrayFactory.java 
  Fix comments about /*value*/ etc.

4) x10.runtime
General: add motivation for JUC

Activity.java
  Get rid of place from PoolRunner and use PoolRunner.getActivity().getPlace() instead.
  Issue: how to treat array initializer?
  Extend Stack to Stack of FinishState
  Watch out for setting place for BootRunner
  Line 216: check overhead of this.wait()? Ask Allan
Clock.java
  Replace Set by Set of clocks
  Line 366:
  /* vj: Needs to be implemented completely. Cf x10.compilergenerated.ClockedFinal
  Also see registerAdvanceListener() method
  Replace by FIXME?
  What about modified cyclic barrier? (Raj)
Configuration.java
  Rename to RuntimeConfiguration and CompilerCOnfiguration
  See TODO's
  Extract parseCommandLineForMainClass() from parseCommandLine() as a separate method
DefaultRuntime_c.java
  Rename to DefaultRuntime.java or DefaultRruntimeImpl.java
  Line 291: replace result set by set of places
  dumpStatistics(): support option for generating file
  Also consider generating runtime log (use log4j?) -- relate to report
ElementType.java
  Remove?  Check with Chris Donawa
FinishState.java
  ReplaceFinishStac by stack of Finish
  Add documentation to source for Sync class from JUC
Future_c.java
  Share abstract execution stats code with FinishState.java?
  Add comment that future has an implicit finish
InvocationStrategy.java
  Needs comments
  See AsyncInFinishStrategy -- need to add instrumentation to activityToInvoke.stopFinish()
List.java
  Can be removed
Localplace_c.java
  Line 68: activity.joinm
  Remove method longName()
  Line 158: check policy for increasing number of threads

** CONTINUE AT ModCOuntDownLatch.java **

X10ThreadPoolExecutor
  Currently, thread pool never decreases
  CorePoolSize, MaximumPoolSize (JUC counters)
  TODO: restrict number of activities







